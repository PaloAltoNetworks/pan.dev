/*! For license information please see 624.f3e62106.js.LICENSE.txt */
(self.webpackChunkpan_dev = self.webpackChunkpan_dev || []).push([
  [624],
  {
    40110: function (e, t, n) {
      var r;
      (r = function (e) {
        return (function (e) {
          var t = {};
          function n(r) {
            if (t[r]) return t[r].exports;
            var i = (t[r] = { i: r, l: !1, exports: {} });
            return e[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports;
          }
          return (
            (n.m = e),
            (n.c = t),
            (n.i = function (e) {
              return e;
            }),
            (n.d = function (e, t, r) {
              n.o(e, t) ||
                Object.defineProperty(e, t, {
                  configurable: !1,
                  enumerable: !0,
                  get: r,
                });
            }),
            (n.n = function (e) {
              var t =
                e && e.__esModule
                  ? function () {
                      return e.default;
                    }
                  : function () {
                      return e;
                    };
              return n.d(t, "a", t), t;
            }),
            (n.o = function (e, t) {
              return Object.prototype.hasOwnProperty.call(e, t);
            }),
            (n.p = ""),
            n((n.s = 7))
          );
        })([
          function (t, n) {
            t.exports = e;
          },
          function (e, t, n) {
            "use strict";
            var r = n(0).FDLayoutConstants;
            function i() {}
            for (var a in r) i[a] = r[a];
            (i.DEFAULT_USE_MULTI_LEVEL_SCALING = !1),
              (i.DEFAULT_RADIAL_SEPARATION = r.DEFAULT_EDGE_LENGTH),
              (i.DEFAULT_COMPONENT_SEPERATION = 60),
              (i.TILE = !0),
              (i.TILING_PADDING_VERTICAL = 10),
              (i.TILING_PADDING_HORIZONTAL = 10),
              (i.TREE_REDUCTION_ON_INCREMENTAL = !1),
              (e.exports = i);
          },
          function (e, t, n) {
            "use strict";
            var r = n(0).FDLayoutEdge;
            function i(e, t, n) {
              r.call(this, e, t, n);
            }
            for (var a in ((i.prototype = Object.create(r.prototype)), r))
              i[a] = r[a];
            e.exports = i;
          },
          function (e, t, n) {
            "use strict";
            var r = n(0).LGraph;
            function i(e, t, n) {
              r.call(this, e, t, n);
            }
            for (var a in ((i.prototype = Object.create(r.prototype)), r))
              i[a] = r[a];
            e.exports = i;
          },
          function (e, t, n) {
            "use strict";
            var r = n(0).LGraphManager;
            function i(e) {
              r.call(this, e);
            }
            for (var a in ((i.prototype = Object.create(r.prototype)), r))
              i[a] = r[a];
            e.exports = i;
          },
          function (e, t, n) {
            "use strict";
            var r = n(0).FDLayoutNode,
              i = n(0).IMath;
            function a(e, t, n, i) {
              r.call(this, e, t, n, i);
            }
            for (var o in ((a.prototype = Object.create(r.prototype)), r))
              a[o] = r[o];
            (a.prototype.move = function () {
              var e = this.graphManager.getLayout();
              (this.displacementX =
                (e.coolingFactor *
                  (this.springForceX +
                    this.repulsionForceX +
                    this.gravitationForceX)) /
                this.noOfChildren),
                (this.displacementY =
                  (e.coolingFactor *
                    (this.springForceY +
                      this.repulsionForceY +
                      this.gravitationForceY)) /
                  this.noOfChildren),
                Math.abs(this.displacementX) >
                  e.coolingFactor * e.maxNodeDisplacement &&
                  (this.displacementX =
                    e.coolingFactor *
                    e.maxNodeDisplacement *
                    i.sign(this.displacementX)),
                Math.abs(this.displacementY) >
                  e.coolingFactor * e.maxNodeDisplacement &&
                  (this.displacementY =
                    e.coolingFactor *
                    e.maxNodeDisplacement *
                    i.sign(this.displacementY)),
                null == this.child || 0 == this.child.getNodes().length
                  ? this.moveBy(this.displacementX, this.displacementY)
                  : this.propogateDisplacementToChildren(
                      this.displacementX,
                      this.displacementY
                    ),
                (e.totalDisplacement +=
                  Math.abs(this.displacementX) + Math.abs(this.displacementY)),
                (this.springForceX = 0),
                (this.springForceY = 0),
                (this.repulsionForceX = 0),
                (this.repulsionForceY = 0),
                (this.gravitationForceX = 0),
                (this.gravitationForceY = 0),
                (this.displacementX = 0),
                (this.displacementY = 0);
            }),
              (a.prototype.propogateDisplacementToChildren = function (e, t) {
                for (
                  var n, r = this.getChild().getNodes(), i = 0;
                  i < r.length;
                  i++
                )
                  null == (n = r[i]).getChild()
                    ? (n.moveBy(e, t),
                      (n.displacementX += e),
                      (n.displacementY += t))
                    : n.propogateDisplacementToChildren(e, t);
              }),
              (a.prototype.setPred1 = function (e) {
                this.pred1 = e;
              }),
              (a.prototype.getPred1 = function () {
                return pred1;
              }),
              (a.prototype.getPred2 = function () {
                return pred2;
              }),
              (a.prototype.setNext = function (e) {
                this.next = e;
              }),
              (a.prototype.getNext = function () {
                return next;
              }),
              (a.prototype.setProcessed = function (e) {
                this.processed = e;
              }),
              (a.prototype.isProcessed = function () {
                return processed;
              }),
              (e.exports = a);
          },
          function (e, t, n) {
            "use strict";
            var r = n(0).FDLayout,
              i = n(4),
              a = n(3),
              o = n(5),
              s = n(2),
              l = n(1),
              u = n(0).FDLayoutConstants,
              c = n(0).LayoutConstants,
              h = n(0).Point,
              d = n(0).PointD,
              p = n(0).Layout,
              g = n(0).Integer,
              f = n(0).IGeometry,
              v = n(0).LGraph,
              y = n(0).Transform;
            function m() {
              r.call(this), (this.toBeTiled = {});
            }
            for (var b in ((m.prototype = Object.create(r.prototype)), r))
              m[b] = r[b];
            (m.prototype.newGraphManager = function () {
              var e = new i(this);
              return (this.graphManager = e), e;
            }),
              (m.prototype.newGraph = function (e) {
                return new a(null, this.graphManager, e);
              }),
              (m.prototype.newNode = function (e) {
                return new o(this.graphManager, e);
              }),
              (m.prototype.newEdge = function (e) {
                return new s(null, null, e);
              }),
              (m.prototype.initParameters = function () {
                r.prototype.initParameters.call(this, arguments),
                  this.isSubLayout ||
                    (l.DEFAULT_EDGE_LENGTH < 10
                      ? (this.idealEdgeLength = 10)
                      : (this.idealEdgeLength = l.DEFAULT_EDGE_LENGTH),
                    (this.useSmartIdealEdgeLengthCalculation =
                      l.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION),
                    (this.springConstant = u.DEFAULT_SPRING_STRENGTH),
                    (this.repulsionConstant = u.DEFAULT_REPULSION_STRENGTH),
                    (this.gravityConstant = u.DEFAULT_GRAVITY_STRENGTH),
                    (this.compoundGravityConstant =
                      u.DEFAULT_COMPOUND_GRAVITY_STRENGTH),
                    (this.gravityRangeFactor = u.DEFAULT_GRAVITY_RANGE_FACTOR),
                    (this.compoundGravityRangeFactor =
                      u.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR),
                    (this.prunedNodesAll = []),
                    (this.growTreeIterations = 0),
                    (this.afterGrowthIterations = 0),
                    (this.isTreeGrowing = !1),
                    (this.isGrowthFinished = !1),
                    (this.coolingCycle = 0),
                    (this.maxCoolingCycle =
                      this.maxIterations / u.CONVERGENCE_CHECK_PERIOD),
                    (this.finalTemperature =
                      u.CONVERGENCE_CHECK_PERIOD / this.maxIterations),
                    (this.coolingAdjuster = 1));
              }),
              (m.prototype.layout = function () {
                return (
                  c.DEFAULT_CREATE_BENDS_AS_NEEDED &&
                    (this.createBendpoints(),
                    this.graphManager.resetAllEdges()),
                  (this.level = 0),
                  this.classicLayout()
                );
              }),
              (m.prototype.classicLayout = function () {
                if (
                  ((this.nodesWithGravity =
                    this.calculateNodesToApplyGravitationTo()),
                  this.graphManager.setAllNodesToApplyGravitation(
                    this.nodesWithGravity
                  ),
                  this.calcNoOfChildrenForAllNodes(),
                  this.graphManager.calcLowestCommonAncestors(),
                  this.graphManager.calcInclusionTreeDepths(),
                  this.graphManager.getRoot().calcEstimatedSize(),
                  this.calcIdealEdgeLengths(),
                  this.incremental)
                )
                  l.TREE_REDUCTION_ON_INCREMENTAL &&
                    (this.reduceTrees(),
                    this.graphManager.resetAllNodesToApplyGravitation(),
                    (t = new Set(this.getAllNodes())),
                    (n = this.nodesWithGravity.filter(function (e) {
                      return t.has(e);
                    })),
                    this.graphManager.setAllNodesToApplyGravitation(n));
                else {
                  var e = this.getFlatForest();
                  if (e.length > 0) this.positionNodesRadially(e);
                  else {
                    this.reduceTrees(),
                      this.graphManager.resetAllNodesToApplyGravitation();
                    var t = new Set(this.getAllNodes()),
                      n = this.nodesWithGravity.filter(function (e) {
                        return t.has(e);
                      });
                    this.graphManager.setAllNodesToApplyGravitation(n),
                      this.positionNodesRandomly();
                  }
                }
                return this.initSpringEmbedder(), this.runSpringEmbedder(), !0;
              }),
              (m.prototype.tick = function () {
                if (
                  (this.totalIterations++,
                  this.totalIterations === this.maxIterations &&
                    !this.isTreeGrowing &&
                    !this.isGrowthFinished)
                ) {
                  if (!(this.prunedNodesAll.length > 0)) return !0;
                  this.isTreeGrowing = !0;
                }
                if (
                  this.totalIterations % u.CONVERGENCE_CHECK_PERIOD == 0 &&
                  !this.isTreeGrowing &&
                  !this.isGrowthFinished
                ) {
                  if (this.isConverged()) {
                    if (!(this.prunedNodesAll.length > 0)) return !0;
                    this.isTreeGrowing = !0;
                  }
                  this.coolingCycle++,
                    0 == this.layoutQuality
                      ? (this.coolingAdjuster = this.coolingCycle)
                      : 1 == this.layoutQuality &&
                        (this.coolingAdjuster = this.coolingCycle / 3),
                    (this.coolingFactor = Math.max(
                      this.initialCoolingFactor -
                        (Math.pow(
                          this.coolingCycle,
                          Math.log(
                            100 *
                              (this.initialCoolingFactor -
                                this.finalTemperature)
                          ) / Math.log(this.maxCoolingCycle)
                        ) /
                          100) *
                          this.coolingAdjuster,
                      this.finalTemperature
                    )),
                    (this.animationPeriod = Math.ceil(
                      this.initialAnimationPeriod *
                        Math.sqrt(this.coolingFactor)
                    ));
                }
                if (this.isTreeGrowing) {
                  if (this.growTreeIterations % 10 == 0)
                    if (this.prunedNodesAll.length > 0) {
                      this.graphManager.updateBounds(),
                        this.updateGrid(),
                        this.growTree(this.prunedNodesAll),
                        this.graphManager.resetAllNodesToApplyGravitation();
                      var e = new Set(this.getAllNodes()),
                        t = this.nodesWithGravity.filter(function (t) {
                          return e.has(t);
                        });
                      this.graphManager.setAllNodesToApplyGravitation(t),
                        this.graphManager.updateBounds(),
                        this.updateGrid(),
                        (this.coolingFactor =
                          u.DEFAULT_COOLING_FACTOR_INCREMENTAL);
                    } else
                      (this.isTreeGrowing = !1), (this.isGrowthFinished = !0);
                  this.growTreeIterations++;
                }
                if (this.isGrowthFinished) {
                  if (this.isConverged()) return !0;
                  this.afterGrowthIterations % 10 == 0 &&
                    (this.graphManager.updateBounds(), this.updateGrid()),
                    (this.coolingFactor =
                      u.DEFAULT_COOLING_FACTOR_INCREMENTAL *
                      ((100 - this.afterGrowthIterations) / 100)),
                    this.afterGrowthIterations++;
                }
                var n = !this.isTreeGrowing && !this.isGrowthFinished,
                  r =
                    (this.growTreeIterations % 10 == 1 && this.isTreeGrowing) ||
                    (this.afterGrowthIterations % 10 == 1 &&
                      this.isGrowthFinished);
                return (
                  (this.totalDisplacement = 0),
                  this.graphManager.updateBounds(),
                  this.calcSpringForces(),
                  this.calcRepulsionForces(n, r),
                  this.calcGravitationalForces(),
                  this.moveNodes(),
                  this.animate(),
                  !1
                );
              }),
              (m.prototype.getPositionsData = function () {
                for (
                  var e = this.graphManager.getAllNodes(), t = {}, n = 0;
                  n < e.length;
                  n++
                ) {
                  var r = e[n].rect,
                    i = e[n].id;
                  t[i] = {
                    id: i,
                    x: r.getCenterX(),
                    y: r.getCenterY(),
                    w: r.width,
                    h: r.height,
                  };
                }
                return t;
              }),
              (m.prototype.runSpringEmbedder = function () {
                (this.initialAnimationPeriod = 25),
                  (this.animationPeriod = this.initialAnimationPeriod);
                var e = !1;
                if ("during" === u.ANIMATE) this.emit("layoutstarted");
                else {
                  for (; !e; ) e = this.tick();
                  this.graphManager.updateBounds();
                }
              }),
              (m.prototype.calculateNodesToApplyGravitationTo = function () {
                var e,
                  t,
                  n = [],
                  r = this.graphManager.getGraphs(),
                  i = r.length;
                for (t = 0; t < i; t++)
                  (e = r[t]).updateConnected(),
                    e.isConnected || (n = n.concat(e.getNodes()));
                return n;
              }),
              (m.prototype.createBendpoints = function () {
                var e = [];
                e = e.concat(this.graphManager.getAllEdges());
                var t,
                  n = new Set();
                for (t = 0; t < e.length; t++) {
                  var r = e[t];
                  if (!n.has(r)) {
                    var i = r.getSource(),
                      a = r.getTarget();
                    if (i == a)
                      r.getBendpoints().push(new d()),
                        r.getBendpoints().push(new d()),
                        this.createDummyNodesForBendpoints(r),
                        n.add(r);
                    else {
                      var o = [];
                      if (
                        ((o = (o = o.concat(i.getEdgeListToNode(a))).concat(
                          a.getEdgeListToNode(i)
                        )),
                        !n.has(o[0]))
                      ) {
                        var s;
                        if (o.length > 1)
                          for (s = 0; s < o.length; s++) {
                            var l = o[s];
                            l.getBendpoints().push(new d()),
                              this.createDummyNodesForBendpoints(l);
                          }
                        o.forEach(function (e) {
                          n.add(e);
                        });
                      }
                    }
                  }
                  if (n.size == e.length) break;
                }
              }),
              (m.prototype.positionNodesRadially = function (e) {
                for (
                  var t = new h(0, 0),
                    n = Math.ceil(Math.sqrt(e.length)),
                    r = 0,
                    i = 0,
                    a = 0,
                    o = new d(0, 0),
                    s = 0;
                  s < e.length;
                  s++
                ) {
                  s % n == 0 &&
                    ((a = 0),
                    (i = r),
                    0 != s && (i += l.DEFAULT_COMPONENT_SEPERATION),
                    (r = 0));
                  var u = e[s],
                    g = p.findCenterOfTree(u);
                  (t.x = a),
                    (t.y = i),
                    (o = m.radialLayout(u, g, t)).y > r &&
                      (r = Math.floor(o.y)),
                    (a = Math.floor(o.x + l.DEFAULT_COMPONENT_SEPERATION));
                }
                this.transform(
                  new d(c.WORLD_CENTER_X - o.x / 2, c.WORLD_CENTER_Y - o.y / 2)
                );
              }),
              (m.radialLayout = function (e, t, n) {
                var r = Math.max(
                  this.maxDiagonalInTree(e),
                  l.DEFAULT_RADIAL_SEPARATION
                );
                m.branchRadialLayout(t, null, 0, 359, 0, r);
                var i = v.calculateBounds(e),
                  a = new y();
                a.setDeviceOrgX(i.getMinX()),
                  a.setDeviceOrgY(i.getMinY()),
                  a.setWorldOrgX(n.x),
                  a.setWorldOrgY(n.y);
                for (var o = 0; o < e.length; o++) e[o].transform(a);
                var s = new d(i.getMaxX(), i.getMaxY());
                return a.inverseTransformPoint(s);
              }),
              (m.branchRadialLayout = function (e, t, n, r, i, a) {
                var o = (r - n + 1) / 2;
                o < 0 && (o += 180);
                var s = (((o + n) % 360) * f.TWO_PI) / 360,
                  l = (Math.cos(s), i * Math.cos(s)),
                  u = i * Math.sin(s);
                e.setCenter(l, u);
                var c = [],
                  h = (c = c.concat(e.getEdges())).length;
                null != t && h--;
                for (
                  var d, p = 0, g = c.length, v = e.getEdgesBetween(t);
                  v.length > 1;

                ) {
                  var y = v[0];
                  v.splice(0, 1);
                  var b = c.indexOf(y);
                  b >= 0 && c.splice(b, 1), g--, h--;
                }
                d = null != t ? (c.indexOf(v[0]) + 1) % g : 0;
                for (var x = Math.abs(r - n) / h, w = d; p != h; w = ++w % g) {
                  var E = c[w].getOtherEnd(e);
                  if (E != t) {
                    var T = (n + p * x) % 360,
                      _ = (T + x) % 360;
                    m.branchRadialLayout(E, e, T, _, i + a, a), p++;
                  }
                }
              }),
              (m.maxDiagonalInTree = function (e) {
                for (var t = g.MIN_VALUE, n = 0; n < e.length; n++) {
                  var r = e[n].getDiagonal();
                  r > t && (t = r);
                }
                return t;
              }),
              (m.prototype.calcRepulsionRange = function () {
                return 2 * (this.level + 1) * this.idealEdgeLength;
              }),
              (m.prototype.groupZeroDegreeMembers = function () {
                var e = this,
                  t = {};
                (this.memberGroups = {}), (this.idToDummyNode = {});
                for (
                  var n = [], r = this.graphManager.getAllNodes(), i = 0;
                  i < r.length;
                  i++
                ) {
                  var a = (s = r[i]).getParent();
                  0 !== this.getNodeDegreeWithChildren(s) ||
                    (null != a.id && this.getToBeTiled(a)) ||
                    n.push(s);
                }
                for (i = 0; i < n.length; i++) {
                  var s,
                    l = (s = n[i]).getParent().id;
                  void 0 === t[l] && (t[l] = []), (t[l] = t[l].concat(s));
                }
                Object.keys(t).forEach(function (n) {
                  if (t[n].length > 1) {
                    var r = "DummyCompound_" + n;
                    e.memberGroups[r] = t[n];
                    var i = t[n][0].getParent(),
                      a = new o(e.graphManager);
                    (a.id = r),
                      (a.paddingLeft = i.paddingLeft || 0),
                      (a.paddingRight = i.paddingRight || 0),
                      (a.paddingBottom = i.paddingBottom || 0),
                      (a.paddingTop = i.paddingTop || 0),
                      (e.idToDummyNode[r] = a);
                    var s = e.getGraphManager().add(e.newGraph(), a),
                      l = i.getChild();
                    l.add(a);
                    for (var u = 0; u < t[n].length; u++) {
                      var c = t[n][u];
                      l.remove(c), s.add(c);
                    }
                  }
                });
              }),
              (m.prototype.clearCompounds = function () {
                var e = {},
                  t = {};
                this.performDFSOnCompounds();
                for (var n = 0; n < this.compoundOrder.length; n++)
                  (t[this.compoundOrder[n].id] = this.compoundOrder[n]),
                    (e[this.compoundOrder[n].id] = [].concat(
                      this.compoundOrder[n].getChild().getNodes()
                    )),
                    this.graphManager.remove(this.compoundOrder[n].getChild()),
                    (this.compoundOrder[n].child = null);
                this.graphManager.resetAllNodes(),
                  this.tileCompoundMembers(e, t);
              }),
              (m.prototype.clearZeroDegreeMembers = function () {
                var e = this,
                  t = (this.tiledZeroDegreePack = []);
                Object.keys(this.memberGroups).forEach(function (n) {
                  var r = e.idToDummyNode[n];
                  (t[n] = e.tileNodes(
                    e.memberGroups[n],
                    r.paddingLeft + r.paddingRight
                  )),
                    (r.rect.width = t[n].width),
                    (r.rect.height = t[n].height);
                });
              }),
              (m.prototype.repopulateCompounds = function () {
                for (var e = this.compoundOrder.length - 1; e >= 0; e--) {
                  var t = this.compoundOrder[e],
                    n = t.id,
                    r = t.paddingLeft,
                    i = t.paddingTop;
                  this.adjustLocations(
                    this.tiledMemberPack[n],
                    t.rect.x,
                    t.rect.y,
                    r,
                    i
                  );
                }
              }),
              (m.prototype.repopulateZeroDegreeMembers = function () {
                var e = this,
                  t = this.tiledZeroDegreePack;
                Object.keys(t).forEach(function (n) {
                  var r = e.idToDummyNode[n],
                    i = r.paddingLeft,
                    a = r.paddingTop;
                  e.adjustLocations(t[n], r.rect.x, r.rect.y, i, a);
                });
              }),
              (m.prototype.getToBeTiled = function (e) {
                var t = e.id;
                if (null != this.toBeTiled[t]) return this.toBeTiled[t];
                var n = e.getChild();
                if (null == n) return (this.toBeTiled[t] = !1), !1;
                for (var r = n.getNodes(), i = 0; i < r.length; i++) {
                  var a = r[i];
                  if (this.getNodeDegree(a) > 0)
                    return (this.toBeTiled[t] = !1), !1;
                  if (null != a.getChild()) {
                    if (!this.getToBeTiled(a))
                      return (this.toBeTiled[t] = !1), !1;
                  } else this.toBeTiled[a.id] = !1;
                }
                return (this.toBeTiled[t] = !0), !0;
              }),
              (m.prototype.getNodeDegree = function (e) {
                e.id;
                for (var t = e.getEdges(), n = 0, r = 0; r < t.length; r++) {
                  var i = t[r];
                  i.getSource().id !== i.getTarget().id && (n += 1);
                }
                return n;
              }),
              (m.prototype.getNodeDegreeWithChildren = function (e) {
                var t = this.getNodeDegree(e);
                if (null == e.getChild()) return t;
                for (
                  var n = e.getChild().getNodes(), r = 0;
                  r < n.length;
                  r++
                ) {
                  var i = n[r];
                  t += this.getNodeDegreeWithChildren(i);
                }
                return t;
              }),
              (m.prototype.performDFSOnCompounds = function () {
                (this.compoundOrder = []),
                  this.fillCompexOrderByDFS(
                    this.graphManager.getRoot().getNodes()
                  );
              }),
              (m.prototype.fillCompexOrderByDFS = function (e) {
                for (var t = 0; t < e.length; t++) {
                  var n = e[t];
                  null != n.getChild() &&
                    this.fillCompexOrderByDFS(n.getChild().getNodes()),
                    this.getToBeTiled(n) && this.compoundOrder.push(n);
                }
              }),
              (m.prototype.adjustLocations = function (e, t, n, r, i) {
                n += i;
                for (var a = (t += r), o = 0; o < e.rows.length; o++) {
                  var s = e.rows[o];
                  t = a;
                  for (var l = 0, u = 0; u < s.length; u++) {
                    var c = s[u];
                    (c.rect.x = t),
                      (c.rect.y = n),
                      (t += c.rect.width + e.horizontalPadding),
                      c.rect.height > l && (l = c.rect.height);
                  }
                  n += l + e.verticalPadding;
                }
              }),
              (m.prototype.tileCompoundMembers = function (e, t) {
                var n = this;
                (this.tiledMemberPack = []),
                  Object.keys(e).forEach(function (r) {
                    var i = t[r];
                    (n.tiledMemberPack[r] = n.tileNodes(
                      e[r],
                      i.paddingLeft + i.paddingRight
                    )),
                      (i.rect.width = n.tiledMemberPack[r].width),
                      (i.rect.height = n.tiledMemberPack[r].height);
                  });
              }),
              (m.prototype.tileNodes = function (e, t) {
                var n = {
                  rows: [],
                  rowWidth: [],
                  rowHeight: [],
                  width: 0,
                  height: t,
                  verticalPadding: l.TILING_PADDING_VERTICAL,
                  horizontalPadding: l.TILING_PADDING_HORIZONTAL,
                };
                e.sort(function (e, t) {
                  return e.rect.width * e.rect.height >
                    t.rect.width * t.rect.height
                    ? -1
                    : e.rect.width * e.rect.height <
                      t.rect.width * t.rect.height
                    ? 1
                    : 0;
                });
                for (var r = 0; r < e.length; r++) {
                  var i = e[r];
                  0 == n.rows.length
                    ? this.insertNodeToRow(n, i, 0, t)
                    : this.canAddHorizontal(n, i.rect.width, i.rect.height)
                    ? this.insertNodeToRow(n, i, this.getShortestRowIndex(n), t)
                    : this.insertNodeToRow(n, i, n.rows.length, t),
                    this.shiftToLastRow(n);
                }
                return n;
              }),
              (m.prototype.insertNodeToRow = function (e, t, n, r) {
                var i = r;
                n == e.rows.length &&
                  (e.rows.push([]), e.rowWidth.push(i), e.rowHeight.push(0));
                var a = e.rowWidth[n] + t.rect.width;
                e.rows[n].length > 0 && (a += e.horizontalPadding),
                  (e.rowWidth[n] = a),
                  e.width < a && (e.width = a);
                var o = t.rect.height;
                n > 0 && (o += e.verticalPadding);
                var s = 0;
                o > e.rowHeight[n] &&
                  ((s = e.rowHeight[n]),
                  (e.rowHeight[n] = o),
                  (s = e.rowHeight[n] - s)),
                  (e.height += s),
                  e.rows[n].push(t);
              }),
              (m.prototype.getShortestRowIndex = function (e) {
                for (
                  var t = -1, n = Number.MAX_VALUE, r = 0;
                  r < e.rows.length;
                  r++
                )
                  e.rowWidth[r] < n && ((t = r), (n = e.rowWidth[r]));
                return t;
              }),
              (m.prototype.getLongestRowIndex = function (e) {
                for (
                  var t = -1, n = Number.MIN_VALUE, r = 0;
                  r < e.rows.length;
                  r++
                )
                  e.rowWidth[r] > n && ((t = r), (n = e.rowWidth[r]));
                return t;
              }),
              (m.prototype.canAddHorizontal = function (e, t, n) {
                var r = this.getShortestRowIndex(e);
                if (r < 0) return !0;
                var i = e.rowWidth[r];
                if (i + e.horizontalPadding + t <= e.width) return !0;
                var a,
                  o,
                  s = 0;
                return (
                  e.rowHeight[r] < n &&
                    r > 0 &&
                    (s = n + e.verticalPadding - e.rowHeight[r]),
                  (a =
                    e.width - i >= t + e.horizontalPadding
                      ? (e.height + s) / (i + t + e.horizontalPadding)
                      : (e.height + s) / e.width),
                  (s = n + e.verticalPadding),
                  (o =
                    e.width < t
                      ? (e.height + s) / t
                      : (e.height + s) / e.width) < 1 && (o = 1 / o),
                  a < 1 && (a = 1 / a),
                  a < o
                );
              }),
              (m.prototype.shiftToLastRow = function (e) {
                var t = this.getLongestRowIndex(e),
                  n = e.rowWidth.length - 1,
                  r = e.rows[t],
                  i = r[r.length - 1],
                  a = i.width + e.horizontalPadding;
                if (e.width - e.rowWidth[n] > a && t != n) {
                  r.splice(-1, 1),
                    e.rows[n].push(i),
                    (e.rowWidth[t] = e.rowWidth[t] - a),
                    (e.rowWidth[n] = e.rowWidth[n] + a),
                    (e.width = e.rowWidth[instance.getLongestRowIndex(e)]);
                  for (var o = Number.MIN_VALUE, s = 0; s < r.length; s++)
                    r[s].height > o && (o = r[s].height);
                  t > 0 && (o += e.verticalPadding);
                  var l = e.rowHeight[t] + e.rowHeight[n];
                  (e.rowHeight[t] = o),
                    e.rowHeight[n] < i.height + e.verticalPadding &&
                      (e.rowHeight[n] = i.height + e.verticalPadding);
                  var u = e.rowHeight[t] + e.rowHeight[n];
                  (e.height += u - l), this.shiftToLastRow(e);
                }
              }),
              (m.prototype.tilingPreLayout = function () {
                l.TILE &&
                  (this.groupZeroDegreeMembers(),
                  this.clearCompounds(),
                  this.clearZeroDegreeMembers());
              }),
              (m.prototype.tilingPostLayout = function () {
                l.TILE &&
                  (this.repopulateZeroDegreeMembers(),
                  this.repopulateCompounds());
              }),
              (m.prototype.reduceTrees = function () {
                for (var e, t = [], n = !0; n; ) {
                  var r = this.graphManager.getAllNodes(),
                    i = [];
                  n = !1;
                  for (var a = 0; a < r.length; a++)
                    1 != (e = r[a]).getEdges().length ||
                      e.getEdges()[0].isInterGraph ||
                      null != e.getChild() ||
                      (i.push([e, e.getEdges()[0], e.getOwner()]), (n = !0));
                  if (1 == n) {
                    for (var o = [], s = 0; s < i.length; s++)
                      1 == i[s][0].getEdges().length &&
                        (o.push(i[s]), i[s][0].getOwner().remove(i[s][0]));
                    t.push(o),
                      this.graphManager.resetAllNodes(),
                      this.graphManager.resetAllEdges();
                  }
                }
                this.prunedNodesAll = t;
              }),
              (m.prototype.growTree = function (e) {
                for (var t, n = e[e.length - 1], r = 0; r < n.length; r++)
                  (t = n[r]),
                    this.findPlaceforPrunedNode(t),
                    t[2].add(t[0]),
                    t[2].add(t[1], t[1].source, t[1].target);
                e.splice(e.length - 1, 1),
                  this.graphManager.resetAllNodes(),
                  this.graphManager.resetAllEdges();
              }),
              (m.prototype.findPlaceforPrunedNode = function (e) {
                var t,
                  n,
                  r = e[0],
                  i = (n = r == e[1].source ? e[1].target : e[1].source).startX,
                  a = n.finishX,
                  o = n.startY,
                  s = n.finishY,
                  l = [0, 0, 0, 0];
                if (o > 0)
                  for (var c = i; c <= a; c++)
                    l[0] +=
                      this.grid[c][o - 1].length + this.grid[c][o].length - 1;
                if (a < this.grid.length - 1)
                  for (c = o; c <= s; c++)
                    l[1] +=
                      this.grid[a + 1][c].length + this.grid[a][c].length - 1;
                if (s < this.grid[0].length - 1)
                  for (c = i; c <= a; c++)
                    l[2] +=
                      this.grid[c][s + 1].length + this.grid[c][s].length - 1;
                if (i > 0)
                  for (c = o; c <= s; c++)
                    l[3] +=
                      this.grid[i - 1][c].length + this.grid[i][c].length - 1;
                for (var h, d, p = g.MAX_VALUE, f = 0; f < l.length; f++)
                  l[f] < p ? ((p = l[f]), (h = 1), (d = f)) : l[f] == p && h++;
                if (3 == h && 0 == p)
                  0 == l[0] && 0 == l[1] && 0 == l[2]
                    ? (t = 1)
                    : 0 == l[0] && 0 == l[1] && 0 == l[3]
                    ? (t = 0)
                    : 0 == l[0] && 0 == l[2] && 0 == l[3]
                    ? (t = 3)
                    : 0 == l[1] && 0 == l[2] && 0 == l[3] && (t = 2);
                else if (2 == h && 0 == p) {
                  var v = Math.floor(2 * Math.random());
                  t =
                    0 == l[0] && 0 == l[1]
                      ? 0 == v
                        ? 0
                        : 1
                      : 0 == l[0] && 0 == l[2]
                      ? 0 == v
                        ? 0
                        : 2
                      : 0 == l[0] && 0 == l[3]
                      ? 0 == v
                        ? 0
                        : 3
                      : 0 == l[1] && 0 == l[2]
                      ? 0 == v
                        ? 1
                        : 2
                      : 0 == l[1] && 0 == l[3]
                      ? 0 == v
                        ? 1
                        : 3
                      : 0 == v
                      ? 2
                      : 3;
                } else
                  t =
                    4 == h && 0 == p ? (v = Math.floor(4 * Math.random())) : d;
                0 == t
                  ? r.setCenter(
                      n.getCenterX(),
                      n.getCenterY() -
                        n.getHeight() / 2 -
                        u.DEFAULT_EDGE_LENGTH -
                        r.getHeight() / 2
                    )
                  : 1 == t
                  ? r.setCenter(
                      n.getCenterX() +
                        n.getWidth() / 2 +
                        u.DEFAULT_EDGE_LENGTH +
                        r.getWidth() / 2,
                      n.getCenterY()
                    )
                  : 2 == t
                  ? r.setCenter(
                      n.getCenterX(),
                      n.getCenterY() +
                        n.getHeight() / 2 +
                        u.DEFAULT_EDGE_LENGTH +
                        r.getHeight() / 2
                    )
                  : r.setCenter(
                      n.getCenterX() -
                        n.getWidth() / 2 -
                        u.DEFAULT_EDGE_LENGTH -
                        r.getWidth() / 2,
                      n.getCenterY()
                    );
              }),
              (e.exports = m);
          },
          function (e, t, n) {
            "use strict";
            var r = {};
            (r.layoutBase = n(0)),
              (r.CoSEConstants = n(1)),
              (r.CoSEEdge = n(2)),
              (r.CoSEGraph = n(3)),
              (r.CoSEGraphManager = n(4)),
              (r.CoSELayout = n(6)),
              (r.CoSENode = n(5)),
              (e.exports = r);
          },
        ]);
      }),
        (e.exports = r(n(14894)));
    },
    99704: function (e, t, n) {
      var r;
      (r = function (e) {
        return (function (e) {
          var t = {};
          function n(r) {
            if (t[r]) return t[r].exports;
            var i = (t[r] = { i: r, l: !1, exports: {} });
            return e[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports;
          }
          return (
            (n.m = e),
            (n.c = t),
            (n.i = function (e) {
              return e;
            }),
            (n.d = function (e, t, r) {
              n.o(e, t) ||
                Object.defineProperty(e, t, {
                  configurable: !1,
                  enumerable: !0,
                  get: r,
                });
            }),
            (n.n = function (e) {
              var t =
                e && e.__esModule
                  ? function () {
                      return e.default;
                    }
                  : function () {
                      return e;
                    };
              return n.d(t, "a", t), t;
            }),
            (n.o = function (e, t) {
              return Object.prototype.hasOwnProperty.call(e, t);
            }),
            (n.p = ""),
            n((n.s = 1))
          );
        })([
          function (t, n) {
            t.exports = e;
          },
          function (e, t, n) {
            "use strict";
            var r = n(0).layoutBase.LayoutConstants,
              i = n(0).layoutBase.FDLayoutConstants,
              a = n(0).CoSEConstants,
              o = n(0).CoSELayout,
              s = n(0).CoSENode,
              l = n(0).layoutBase.PointD,
              u = n(0).layoutBase.DimensionD,
              c = {
                ready: function () {},
                stop: function () {},
                quality: "default",
                nodeDimensionsIncludeLabels: !1,
                refresh: 30,
                fit: !0,
                padding: 10,
                randomize: !0,
                nodeRepulsion: 4500,
                idealEdgeLength: 50,
                edgeElasticity: 0.45,
                nestingFactor: 0.1,
                gravity: 0.25,
                numIter: 2500,
                tile: !0,
                animate: "end",
                animationDuration: 500,
                tilingPaddingVertical: 10,
                tilingPaddingHorizontal: 10,
                gravityRangeCompound: 1.5,
                gravityCompound: 1,
                gravityRange: 3.8,
                initialEnergyOnIncremental: 0.5,
              };
            function h(e) {
              (this.options = (function (e, t) {
                var n = {};
                for (var r in e) n[r] = e[r];
                for (var r in t) n[r] = t[r];
                return n;
              })(c, e)),
                d(this.options);
            }
            var d = function (e) {
              null != e.nodeRepulsion &&
                (a.DEFAULT_REPULSION_STRENGTH = i.DEFAULT_REPULSION_STRENGTH =
                  e.nodeRepulsion),
                null != e.idealEdgeLength &&
                  (a.DEFAULT_EDGE_LENGTH = i.DEFAULT_EDGE_LENGTH =
                    e.idealEdgeLength),
                null != e.edgeElasticity &&
                  (a.DEFAULT_SPRING_STRENGTH = i.DEFAULT_SPRING_STRENGTH =
                    e.edgeElasticity),
                null != e.nestingFactor &&
                  (a.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR =
                    i.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR =
                      e.nestingFactor),
                null != e.gravity &&
                  (a.DEFAULT_GRAVITY_STRENGTH = i.DEFAULT_GRAVITY_STRENGTH =
                    e.gravity),
                null != e.numIter &&
                  (a.MAX_ITERATIONS = i.MAX_ITERATIONS = e.numIter),
                null != e.gravityRange &&
                  (a.DEFAULT_GRAVITY_RANGE_FACTOR =
                    i.DEFAULT_GRAVITY_RANGE_FACTOR =
                      e.gravityRange),
                null != e.gravityCompound &&
                  (a.DEFAULT_COMPOUND_GRAVITY_STRENGTH =
                    i.DEFAULT_COMPOUND_GRAVITY_STRENGTH =
                      e.gravityCompound),
                null != e.gravityRangeCompound &&
                  (a.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR =
                    i.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR =
                      e.gravityRangeCompound),
                null != e.initialEnergyOnIncremental &&
                  (a.DEFAULT_COOLING_FACTOR_INCREMENTAL =
                    i.DEFAULT_COOLING_FACTOR_INCREMENTAL =
                      e.initialEnergyOnIncremental),
                "draft" == e.quality
                  ? (r.QUALITY = 0)
                  : "proof" == e.quality
                  ? (r.QUALITY = 2)
                  : (r.QUALITY = 1),
                (a.NODE_DIMENSIONS_INCLUDE_LABELS =
                  i.NODE_DIMENSIONS_INCLUDE_LABELS =
                  r.NODE_DIMENSIONS_INCLUDE_LABELS =
                    e.nodeDimensionsIncludeLabels),
                (a.DEFAULT_INCREMENTAL =
                  i.DEFAULT_INCREMENTAL =
                  r.DEFAULT_INCREMENTAL =
                    !e.randomize),
                (a.ANIMATE = i.ANIMATE = r.ANIMATE = e.animate),
                (a.TILE = e.tile),
                (a.TILING_PADDING_VERTICAL =
                  "function" == typeof e.tilingPaddingVertical
                    ? e.tilingPaddingVertical.call()
                    : e.tilingPaddingVertical),
                (a.TILING_PADDING_HORIZONTAL =
                  "function" == typeof e.tilingPaddingHorizontal
                    ? e.tilingPaddingHorizontal.call()
                    : e.tilingPaddingHorizontal);
            };
            (h.prototype.run = function () {
              var e,
                t,
                n = this.options,
                r = ((this.idToLNode = {}), (this.layout = new o())),
                i = this;
              (i.stopped = !1),
                (this.cy = this.options.cy),
                this.cy.trigger({ type: "layoutstart", layout: this });
              var a = r.newGraphManager();
              this.gm = a;
              var s = this.options.eles.nodes(),
                l = this.options.eles.edges();
              (this.root = a.addRoot()),
                this.processChildrenList(this.root, this.getTopMostNodes(s), r);
              for (var u = 0; u < l.length; u++) {
                var c = l[u],
                  h = this.idToLNode[c.data("source")],
                  d = this.idToLNode[c.data("target")];
                h !== d &&
                  0 == h.getEdgesBetween(d).length &&
                  (a.add(r.newEdge(), h, d).id = c.id());
              }
              var p = function (e, t) {
                  "number" == typeof e && (e = t);
                  var n = e.data("id"),
                    r = i.idToLNode[n];
                  return {
                    x: r.getRect().getCenterX(),
                    y: r.getRect().getCenterY(),
                  };
                },
                g = function a() {
                  for (
                    var o,
                      s = function () {
                        n.fit && n.cy.fit(n.eles, n.padding),
                          e ||
                            ((e = !0),
                            i.cy.one("layoutready", n.ready),
                            i.cy.trigger({ type: "layoutready", layout: i }));
                      },
                      l = i.options.refresh,
                      u = 0;
                    u < l && !o;
                    u++
                  )
                    o = i.stopped || i.layout.tick();
                  if (o)
                    return (
                      r.checkLayoutSuccess() &&
                        !r.isSubLayout &&
                        r.doPostLayout(),
                      r.tilingPostLayout && r.tilingPostLayout(),
                      (r.isLayoutFinished = !0),
                      i.options.eles.nodes().positions(p),
                      s(),
                      i.cy.one("layoutstop", i.options.stop),
                      i.cy.trigger({ type: "layoutstop", layout: i }),
                      t && cancelAnimationFrame(t),
                      void (e = !1)
                    );
                  var c = i.layout.getPositionsData();
                  n.eles.nodes().positions(function (e, t) {
                    if (("number" == typeof e && (e = t), !e.isParent())) {
                      for (
                        var n = e.id(), r = c[n], i = e;
                        null == r &&
                        ((r =
                          c[i.data("parent")] ||
                          c["DummyCompound_" + i.data("parent")]),
                        (c[n] = r),
                        null != (i = i.parent()[0]));

                      );
                      return null != r
                        ? { x: r.x, y: r.y }
                        : { x: e.position("x"), y: e.position("y") };
                    }
                  }),
                    s(),
                    (t = requestAnimationFrame(a));
                };
              return (
                r.addListener("layoutstarted", function () {
                  "during" === i.options.animate &&
                    (t = requestAnimationFrame(g));
                }),
                r.runLayout(),
                "during" !== this.options.animate &&
                  (i.options.eles
                    .nodes()
                    .not(":parent")
                    .layoutPositions(i, i.options, p),
                  (e = !1)),
                this
              );
            }),
              (h.prototype.getTopMostNodes = function (e) {
                for (var t = {}, n = 0; n < e.length; n++) t[e[n].id()] = !0;
                var r = e.filter(function (e, n) {
                  "number" == typeof e && (e = n);
                  for (var r = e.parent()[0]; null != r; ) {
                    if (t[r.id()]) return !1;
                    r = r.parent()[0];
                  }
                  return !0;
                });
                return r;
              }),
              (h.prototype.processChildrenList = function (e, t, n) {
                for (var r = t.length, i = 0; i < r; i++) {
                  var a,
                    o,
                    c = t[i],
                    h = c.children(),
                    d = c.layoutDimensions({
                      nodeDimensionsIncludeLabels:
                        this.options.nodeDimensionsIncludeLabels,
                    });
                  if (
                    (((a =
                      null != c.outerWidth() && null != c.outerHeight()
                        ? e.add(
                            new s(
                              n.graphManager,
                              new l(
                                c.position("x") - d.w / 2,
                                c.position("y") - d.h / 2
                              ),
                              new u(parseFloat(d.w), parseFloat(d.h))
                            )
                          )
                        : e.add(new s(this.graphManager))).id = c.data("id")),
                    (a.paddingLeft = parseInt(c.css("padding"))),
                    (a.paddingTop = parseInt(c.css("padding"))),
                    (a.paddingRight = parseInt(c.css("padding"))),
                    (a.paddingBottom = parseInt(c.css("padding"))),
                    this.options.nodeDimensionsIncludeLabels && c.isParent())
                  ) {
                    var p = c.boundingBox({
                        includeLabels: !0,
                        includeNodes: !1,
                      }).w,
                      g = c.boundingBox({
                        includeLabels: !0,
                        includeNodes: !1,
                      }).h,
                      f = c.css("text-halign");
                    (a.labelWidth = p), (a.labelHeight = g), (a.labelPos = f);
                  }
                  (this.idToLNode[c.data("id")] = a),
                    isNaN(a.rect.x) && (a.rect.x = 0),
                    isNaN(a.rect.y) && (a.rect.y = 0),
                    null != h &&
                      h.length > 0 &&
                      ((o = n.getGraphManager().add(n.newGraph(), a)),
                      this.processChildrenList(o, h, n));
                }
              }),
              (h.prototype.stop = function () {
                return (this.stopped = !0), this;
              });
            var p = function (e) {
              e("layout", "cose-bilkent", h);
            };
            "undefined" != typeof cytoscape && p(cytoscape), (e.exports = p);
          },
        ]);
      }),
        (e.exports = r(n(40110)));
    },
    88661: function (e, t, n) {
      var r = n(4364);
      e.exports = (function () {
        "use strict";
        function e(t) {
          return (
            (e =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            e(t)
          );
        }
        function t(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function i(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function a(e, t, n) {
          return (
            t && i(e.prototype, t),
            n && i(e, n),
            Object.defineProperty(e, "prototype", { writable: !1 }),
            e
          );
        }
        function o(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function s(e, t) {
          return l(e) || u(e, t) || c(e, t) || d();
        }
        function l(e) {
          if (Array.isArray(e)) return e;
        }
        function u(e, t) {
          var n =
            null == e
              ? null
              : ("undefined" != typeof Symbol && e[Symbol.iterator]) ||
                e["@@iterator"];
          if (null != n) {
            var r,
              i,
              a = [],
              o = !0,
              s = !1;
            try {
              for (
                n = n.call(e);
                !(o = (r = n.next()).done) &&
                (a.push(r.value), !t || a.length !== t);
                o = !0
              );
            } catch (l) {
              (s = !0), (i = l);
            } finally {
              try {
                o || null == n.return || n.return();
              } finally {
                if (s) throw i;
              }
            }
            return a;
          }
        }
        function c(e, t) {
          if (e) {
            if ("string" == typeof e) return h(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              "Object" === n && e.constructor && (n = e.constructor.name),
              "Map" === n || "Set" === n
                ? Array.from(e)
                : "Arguments" === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? h(e, t)
                : void 0
            );
          }
        }
        function h(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        function d() {
          throw new TypeError(
            "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }
        function p(e, t) {
          var n =
            ("undefined" != typeof Symbol && e[Symbol.iterator]) ||
            e["@@iterator"];
          if (!n) {
            if (
              Array.isArray(e) ||
              (n = c(e)) ||
              (t && e && "number" == typeof e.length)
            ) {
              n && (e = n);
              var r = 0,
                i = function () {};
              return {
                s: i,
                n: function () {
                  return r >= e.length
                    ? { done: !0 }
                    : { done: !1, value: e[r++] };
                },
                e: function (e) {
                  throw e;
                },
                f: i,
              };
            }
            throw new TypeError(
              "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
            );
          }
          var a,
            o = !0,
            s = !1;
          return {
            s: function () {
              n = n.call(e);
            },
            n: function () {
              var e = n.next();
              return (o = e.done), e;
            },
            e: function (e) {
              (s = !0), (a = e);
            },
            f: function () {
              try {
                o || null == n.return || n.return();
              } finally {
                if (s) throw a;
              }
            },
          };
        }
        var g = "undefined" == typeof window ? null : window,
          f = g ? g.navigator : null;
        g && g.document;
        var v = e(""),
          y = e({}),
          m = e(function () {}),
          b = "undefined" == typeof HTMLElement ? "undefined" : e(HTMLElement),
          x = function (e) {
            return e && e.instanceString && E(e.instanceString)
              ? e.instanceString()
              : null;
          },
          w = function (t) {
            return null != t && e(t) == v;
          },
          E = function (t) {
            return null != t && e(t) === m;
          },
          T = function (e) {
            return (
              !L(e) &&
              (Array.isArray
                ? Array.isArray(e)
                : null != e && e instanceof Array)
            );
          },
          _ = function (t) {
            return null != t && e(t) === y && !T(t) && t.constructor === Object;
          },
          D = function (t) {
            return null != t && e(t) === y;
          },
          C = function (t) {
            return null != t && e(t) === e(1) && !isNaN(t);
          },
          N = function (e) {
            return C(e) && Math.floor(e) === e;
          },
          A = function (e) {
            return "undefined" === b
              ? void 0
              : null != e && e instanceof HTMLElement;
          },
          L = function (e) {
            return S(e) || O(e);
          },
          S = function (e) {
            return "collection" === x(e) && e._private.single;
          },
          O = function (e) {
            return "collection" === x(e) && !e._private.single;
          },
          k = function (e) {
            return "core" === x(e);
          },
          I = function (e) {
            return "stylesheet" === x(e);
          },
          M = function (e) {
            return "event" === x(e);
          },
          P = function (e) {
            return null == e || !("" !== e && !e.match(/^\s+$/));
          },
          R = function (e) {
            return (
              "undefined" != typeof HTMLElement && e instanceof HTMLElement
            );
          },
          B = function (e) {
            return _(e) && C(e.x1) && C(e.x2) && C(e.y1) && C(e.y2);
          },
          F = function (e) {
            return D(e) && E(e.then);
          },
          z = function () {
            return f && f.userAgent.match(/msie|trident|edge/i);
          },
          G = function (e, t) {
            t ||
              (t = function () {
                if (1 === arguments.length) return arguments[0];
                if (0 === arguments.length) return "undefined";
                for (var e = [], t = 0; t < arguments.length; t++)
                  e.push(arguments[t]);
                return e.join("$");
              });
            var n = function n() {
              var r,
                i = this,
                a = arguments,
                o = t.apply(i, a),
                s = n.cache;
              return (r = s[o]) || (r = s[o] = e.apply(i, a)), r;
            };
            return (n.cache = {}), n;
          },
          Y = G(function (e) {
            return e.replace(/([A-Z])/g, function (e) {
              return "-" + e.toLowerCase();
            });
          }),
          X = G(function (e) {
            return e.replace(/(-\w)/g, function (e) {
              return e[1].toUpperCase();
            });
          }),
          V = G(
            function (e, t) {
              return e + t[0].toUpperCase() + t.substring(1);
            },
            function (e, t) {
              return e + "$" + t;
            }
          ),
          U = function (e) {
            return P(e) ? e : e.charAt(0).toUpperCase() + e.substring(1);
          },
          j = "(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))",
          H =
            "rgb[a]?\\((" +
            j +
            "[%]?)\\s*,\\s*(" +
            j +
            "[%]?)\\s*,\\s*(" +
            j +
            "[%]?)(?:\\s*,\\s*(" +
            j +
            "))?\\)",
          q =
            "rgb[a]?\\((?:" +
            j +
            "[%]?)\\s*,\\s*(?:" +
            j +
            "[%]?)\\s*,\\s*(?:" +
            j +
            "[%]?)(?:\\s*,\\s*(?:" +
            j +
            "))?\\)",
          W =
            "hsl[a]?\\((" +
            j +
            ")\\s*,\\s*(" +
            j +
            "[%])\\s*,\\s*(" +
            j +
            "[%])(?:\\s*,\\s*(" +
            j +
            "))?\\)",
          $ =
            "hsl[a]?\\((?:" +
            j +
            ")\\s*,\\s*(?:" +
            j +
            "[%])\\s*,\\s*(?:" +
            j +
            "[%])(?:\\s*,\\s*(?:" +
            j +
            "))?\\)",
          K = "\\#[0-9a-fA-F]{3}",
          Z = "\\#[0-9a-fA-F]{6}",
          Q = function (e, t) {
            return e < t ? -1 : e > t ? 1 : 0;
          },
          J = function (e, t) {
            return -1 * Q(e, t);
          },
          ee =
            null != Object.assign
              ? Object.assign.bind(Object)
              : function (e) {
                  for (var t = arguments, n = 1; n < t.length; n++) {
                    var r = t[n];
                    if (null != r)
                      for (var i = Object.keys(r), a = 0; a < i.length; a++) {
                        var o = i[a];
                        e[o] = r[o];
                      }
                  }
                  return e;
                },
          te = function (e) {
            if ((4 === e.length || 7 === e.length) && "#" === e[0]) {
              var t,
                n,
                r,
                i = 16;
              return (
                4 === e.length
                  ? ((t = parseInt(e[1] + e[1], i)),
                    (n = parseInt(e[2] + e[2], i)),
                    (r = parseInt(e[3] + e[3], i)))
                  : ((t = parseInt(e[1] + e[2], i)),
                    (n = parseInt(e[3] + e[4], i)),
                    (r = parseInt(e[5] + e[6], i))),
                [t, n, r]
              );
            }
          },
          ne = function (e) {
            var t, n, r, i, a, o, s, l;
            function u(e, t, n) {
              return (
                n < 0 && (n += 1),
                n > 1 && (n -= 1),
                n < 1 / 6
                  ? e + 6 * (t - e) * n
                  : n < 0.5
                  ? t
                  : n < 2 / 3
                  ? e + (t - e) * (2 / 3 - n) * 6
                  : e
              );
            }
            var c = new RegExp("^" + W + "$").exec(e);
            if (c) {
              if (
                ((n = parseInt(c[1])) < 0
                  ? (n = (360 - ((-1 * n) % 360)) % 360)
                  : n > 360 && (n %= 360),
                (n /= 360),
                (r = parseFloat(c[2])) < 0 || r > 100)
              )
                return;
              if (((r /= 100), (i = parseFloat(c[3])) < 0 || i > 100)) return;
              if (
                ((i /= 100),
                void 0 !== (a = c[4]) && ((a = parseFloat(a)) < 0 || a > 1))
              )
                return;
              if (0 === r) o = s = l = Math.round(255 * i);
              else {
                var h = i < 0.5 ? i * (1 + r) : i + r - i * r,
                  d = 2 * i - h;
                (o = Math.round(255 * u(d, h, n + 1 / 3))),
                  (s = Math.round(255 * u(d, h, n))),
                  (l = Math.round(255 * u(d, h, n - 1 / 3)));
              }
              t = [o, s, l, a];
            }
            return t;
          },
          re = function (e) {
            var t,
              n = new RegExp("^" + H + "$").exec(e);
            if (n) {
              t = [];
              for (var r = [], i = 1; i <= 3; i++) {
                var a = n[i];
                if (
                  ("%" === a[a.length - 1] && (r[i] = !0),
                  (a = parseFloat(a)),
                  r[i] && (a = (a / 100) * 255),
                  a < 0 || a > 255)
                )
                  return;
                t.push(Math.floor(a));
              }
              var o = r[1] || r[2] || r[3],
                s = r[1] && r[2] && r[3];
              if (o && !s) return;
              var l = n[4];
              if (void 0 !== l) {
                if ((l = parseFloat(l)) < 0 || l > 1) return;
                t.push(l);
              }
            }
            return t;
          },
          ie = function (e) {
            return oe[e.toLowerCase()];
          },
          ae = function (e) {
            return (T(e) ? e : null) || ie(e) || te(e) || re(e) || ne(e);
          },
          oe = {
            transparent: [0, 0, 0, 0],
            aliceblue: [240, 248, 255],
            antiquewhite: [250, 235, 215],
            aqua: [0, 255, 255],
            aquamarine: [127, 255, 212],
            azure: [240, 255, 255],
            beige: [245, 245, 220],
            bisque: [255, 228, 196],
            black: [0, 0, 0],
            blanchedalmond: [255, 235, 205],
            blue: [0, 0, 255],
            blueviolet: [138, 43, 226],
            brown: [165, 42, 42],
            burlywood: [222, 184, 135],
            cadetblue: [95, 158, 160],
            chartreuse: [127, 255, 0],
            chocolate: [210, 105, 30],
            coral: [255, 127, 80],
            cornflowerblue: [100, 149, 237],
            cornsilk: [255, 248, 220],
            crimson: [220, 20, 60],
            cyan: [0, 255, 255],
            darkblue: [0, 0, 139],
            darkcyan: [0, 139, 139],
            darkgoldenrod: [184, 134, 11],
            darkgray: [169, 169, 169],
            darkgreen: [0, 100, 0],
            darkgrey: [169, 169, 169],
            darkkhaki: [189, 183, 107],
            darkmagenta: [139, 0, 139],
            darkolivegreen: [85, 107, 47],
            darkorange: [255, 140, 0],
            darkorchid: [153, 50, 204],
            darkred: [139, 0, 0],
            darksalmon: [233, 150, 122],
            darkseagreen: [143, 188, 143],
            darkslateblue: [72, 61, 139],
            darkslategray: [47, 79, 79],
            darkslategrey: [47, 79, 79],
            darkturquoise: [0, 206, 209],
            darkviolet: [148, 0, 211],
            deeppink: [255, 20, 147],
            deepskyblue: [0, 191, 255],
            dimgray: [105, 105, 105],
            dimgrey: [105, 105, 105],
            dodgerblue: [30, 144, 255],
            firebrick: [178, 34, 34],
            floralwhite: [255, 250, 240],
            forestgreen: [34, 139, 34],
            fuchsia: [255, 0, 255],
            gainsboro: [220, 220, 220],
            ghostwhite: [248, 248, 255],
            gold: [255, 215, 0],
            goldenrod: [218, 165, 32],
            gray: [128, 128, 128],
            grey: [128, 128, 128],
            green: [0, 128, 0],
            greenyellow: [173, 255, 47],
            honeydew: [240, 255, 240],
            hotpink: [255, 105, 180],
            indianred: [205, 92, 92],
            indigo: [75, 0, 130],
            ivory: [255, 255, 240],
            khaki: [240, 230, 140],
            lavender: [230, 230, 250],
            lavenderblush: [255, 240, 245],
            lawngreen: [124, 252, 0],
            lemonchiffon: [255, 250, 205],
            lightblue: [173, 216, 230],
            lightcoral: [240, 128, 128],
            lightcyan: [224, 255, 255],
            lightgoldenrodyellow: [250, 250, 210],
            lightgray: [211, 211, 211],
            lightgreen: [144, 238, 144],
            lightgrey: [211, 211, 211],
            lightpink: [255, 182, 193],
            lightsalmon: [255, 160, 122],
            lightseagreen: [32, 178, 170],
            lightskyblue: [135, 206, 250],
            lightslategray: [119, 136, 153],
            lightslategrey: [119, 136, 153],
            lightsteelblue: [176, 196, 222],
            lightyellow: [255, 255, 224],
            lime: [0, 255, 0],
            limegreen: [50, 205, 50],
            linen: [250, 240, 230],
            magenta: [255, 0, 255],
            maroon: [128, 0, 0],
            mediumaquamarine: [102, 205, 170],
            mediumblue: [0, 0, 205],
            mediumorchid: [186, 85, 211],
            mediumpurple: [147, 112, 219],
            mediumseagreen: [60, 179, 113],
            mediumslateblue: [123, 104, 238],
            mediumspringgreen: [0, 250, 154],
            mediumturquoise: [72, 209, 204],
            mediumvioletred: [199, 21, 133],
            midnightblue: [25, 25, 112],
            mintcream: [245, 255, 250],
            mistyrose: [255, 228, 225],
            moccasin: [255, 228, 181],
            navajowhite: [255, 222, 173],
            navy: [0, 0, 128],
            oldlace: [253, 245, 230],
            olive: [128, 128, 0],
            olivedrab: [107, 142, 35],
            orange: [255, 165, 0],
            orangered: [255, 69, 0],
            orchid: [218, 112, 214],
            palegoldenrod: [238, 232, 170],
            palegreen: [152, 251, 152],
            paleturquoise: [175, 238, 238],
            palevioletred: [219, 112, 147],
            papayawhip: [255, 239, 213],
            peachpuff: [255, 218, 185],
            peru: [205, 133, 63],
            pink: [255, 192, 203],
            plum: [221, 160, 221],
            powderblue: [176, 224, 230],
            purple: [128, 0, 128],
            red: [255, 0, 0],
            rosybrown: [188, 143, 143],
            royalblue: [65, 105, 225],
            saddlebrown: [139, 69, 19],
            salmon: [250, 128, 114],
            sandybrown: [244, 164, 96],
            seagreen: [46, 139, 87],
            seashell: [255, 245, 238],
            sienna: [160, 82, 45],
            silver: [192, 192, 192],
            skyblue: [135, 206, 235],
            slateblue: [106, 90, 205],
            slategray: [112, 128, 144],
            slategrey: [112, 128, 144],
            snow: [255, 250, 250],
            springgreen: [0, 255, 127],
            steelblue: [70, 130, 180],
            tan: [210, 180, 140],
            teal: [0, 128, 128],
            thistle: [216, 191, 216],
            tomato: [255, 99, 71],
            turquoise: [64, 224, 208],
            violet: [238, 130, 238],
            wheat: [245, 222, 179],
            white: [255, 255, 255],
            whitesmoke: [245, 245, 245],
            yellow: [255, 255, 0],
            yellowgreen: [154, 205, 50],
          },
          se = function (e) {
            for (var t = e.map, n = e.keys, r = n.length, i = 0; i < r; i++) {
              var a = n[i];
              if (_(a)) throw Error("Tried to set map with object key");
              i < n.length - 1
                ? (null == t[a] && (t[a] = {}), (t = t[a]))
                : (t[a] = e.value);
            }
          },
          le = function (e) {
            for (var t = e.map, n = e.keys, r = n.length, i = 0; i < r; i++) {
              var a = n[i];
              if (_(a)) throw Error("Tried to get map with object key");
              if (null == (t = t[a])) return t;
            }
            return t;
          };
        function ue(e) {
          var t = typeof e;
          return null != e && ("object" == t || "function" == t);
        }
        var ce = ue,
          he =
            "undefined" != typeof globalThis
              ? globalThis
              : "undefined" != typeof window
              ? window
              : void 0 !== n.g
              ? n.g
              : "undefined" != typeof self
              ? self
              : {};
        function de(e, t) {
          return e((t = { exports: {} }), t.exports), t.exports;
        }
        var pe = "object" == typeof he && he && he.Object === Object && he,
          ge =
            "object" == typeof self && self && self.Object === Object && self,
          fe = pe || ge || Function("return this")(),
          ve = function () {
            return fe.Date.now();
          },
          ye = /\s/;
        function me(e) {
          for (var t = e.length; t-- && ye.test(e.charAt(t)); );
          return t;
        }
        var be = me,
          xe = /^\s+/;
        function we(e) {
          return e ? e.slice(0, be(e) + 1).replace(xe, "") : e;
        }
        var Ee = we,
          Te = fe.Symbol,
          _e = Object.prototype,
          De = _e.hasOwnProperty,
          Ce = _e.toString,
          Ne = Te ? Te.toStringTag : void 0;
        function Ae(e) {
          var t = De.call(e, Ne),
            n = e[Ne];
          try {
            e[Ne] = void 0;
            var r = !0;
          } catch (a) {}
          var i = Ce.call(e);
          return r && (t ? (e[Ne] = n) : delete e[Ne]), i;
        }
        var Le = Ae,
          Se = Object.prototype.toString;
        function Oe(e) {
          return Se.call(e);
        }
        var ke = Oe,
          Ie = "[object Null]",
          Me = "[object Undefined]",
          Pe = Te ? Te.toStringTag : void 0;
        function Re(e) {
          return null == e
            ? void 0 === e
              ? Me
              : Ie
            : Pe && Pe in Object(e)
            ? Le(e)
            : ke(e);
        }
        var Be = Re;
        function Fe(e) {
          return null != e && "object" == typeof e;
        }
        var ze = Fe,
          Ge = "[object Symbol]";
        function Ye(e) {
          return "symbol" == typeof e || (ze(e) && Be(e) == Ge);
        }
        var Xe = Ye,
          Ve = NaN,
          Ue = /^[-+]0x[0-9a-f]+$/i,
          je = /^0b[01]+$/i,
          He = /^0o[0-7]+$/i,
          qe = parseInt;
        function We(e) {
          if ("number" == typeof e) return e;
          if (Xe(e)) return Ve;
          if (ce(e)) {
            var t = "function" == typeof e.valueOf ? e.valueOf() : e;
            e = ce(t) ? t + "" : t;
          }
          if ("string" != typeof e) return 0 === e ? e : +e;
          e = Ee(e);
          var n = je.test(e);
          return n || He.test(e)
            ? qe(e.slice(2), n ? 2 : 8)
            : Ue.test(e)
            ? Ve
            : +e;
        }
        var $e = We,
          Ke = "Expected a function",
          Ze = Math.max,
          Qe = Math.min;
        function Je(e, t, n) {
          var r,
            i,
            a,
            o,
            s,
            l,
            u = 0,
            c = !1,
            h = !1,
            d = !0;
          if ("function" != typeof e) throw new TypeError(Ke);
          function p(t) {
            var n = r,
              a = i;
            return (r = i = void 0), (u = t), (o = e.apply(a, n));
          }
          function g(e) {
            return (u = e), (s = setTimeout(y, t)), c ? p(e) : o;
          }
          function f(e) {
            var n = t - (e - l);
            return h ? Qe(n, a - (e - u)) : n;
          }
          function v(e) {
            var n = e - l;
            return void 0 === l || n >= t || n < 0 || (h && e - u >= a);
          }
          function y() {
            var e = ve();
            if (v(e)) return m(e);
            s = setTimeout(y, f(e));
          }
          function m(e) {
            return (s = void 0), d && r ? p(e) : ((r = i = void 0), o);
          }
          function b() {
            void 0 !== s && clearTimeout(s), (u = 0), (r = l = i = s = void 0);
          }
          function x() {
            return void 0 === s ? o : m(ve());
          }
          function w() {
            var e = ve(),
              n = v(e);
            if (((r = arguments), (i = this), (l = e), n)) {
              if (void 0 === s) return g(l);
              if (h) return clearTimeout(s), (s = setTimeout(y, t)), p(l);
            }
            return void 0 === s && (s = setTimeout(y, t)), o;
          }
          return (
            (t = $e(t) || 0),
            ce(n) &&
              ((c = !!n.leading),
              (a = (h = "maxWait" in n) ? Ze($e(n.maxWait) || 0, t) : a),
              (d = "trailing" in n ? !!n.trailing : d)),
            (w.cancel = b),
            (w.flush = x),
            w
          );
        }
        var et = Je,
          tt = g ? g.performance : null,
          nt =
            tt && tt.now
              ? function () {
                  return tt.now();
                }
              : function () {
                  return Date.now();
                },
          rt = (function () {
            if (g) {
              if (g.requestAnimationFrame)
                return function (e) {
                  g.requestAnimationFrame(e);
                };
              if (g.mozRequestAnimationFrame)
                return function (e) {
                  g.mozRequestAnimationFrame(e);
                };
              if (g.webkitRequestAnimationFrame)
                return function (e) {
                  g.webkitRequestAnimationFrame(e);
                };
              if (g.msRequestAnimationFrame)
                return function (e) {
                  g.msRequestAnimationFrame(e);
                };
            }
            return function (e) {
              e &&
                setTimeout(function () {
                  e(nt());
                }, 1e3 / 60);
            };
          })(),
          it = function (e) {
            return rt(e);
          },
          at = nt,
          ot = 9261,
          st = 65599,
          lt = 5381,
          ut = function (e) {
            for (
              var t,
                n =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : ot;
              !(t = e.next()).done;

            )
              n = (n * st + t.value) | 0;
            return n;
          },
          ct = function (e) {
            return (
              ((arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : ot) *
                st +
                e) |
              0
            );
          },
          ht = function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : lt;
            return ((t << 5) + t + e) | 0;
          },
          dt = function (e, t) {
            return 2097152 * e + t;
          },
          pt = function (e) {
            return 2097152 * e[0] + e[1];
          },
          gt = function (e, t) {
            return [ct(e[0], t[0]), ht(e[1], t[1])];
          },
          ft = function (e, t) {
            var n = { value: 0, done: !1 },
              r = 0,
              i = e.length;
            return ut(
              {
                next: function () {
                  return r < i ? (n.value = e[r++]) : (n.done = !0), n;
                },
              },
              t
            );
          },
          vt = function (e, t) {
            var n = { value: 0, done: !1 },
              r = 0,
              i = e.length;
            return ut(
              {
                next: function () {
                  return (
                    r < i ? (n.value = e.charCodeAt(r++)) : (n.done = !0), n
                  );
                },
              },
              t
            );
          },
          yt = function () {
            return mt(arguments);
          },
          mt = function (e) {
            for (var t, n = 0; n < e.length; n++) {
              var r = e[n];
              t = 0 === n ? vt(r) : vt(r, t);
            }
            return t;
          },
          bt = !0,
          xt = null != r.warn,
          wt = null != r.trace,
          Et = Number.MAX_SAFE_INTEGER || 9007199254740991,
          Tt = function () {
            return !0;
          },
          _t = function () {
            return !1;
          },
          Dt = function () {
            return 0;
          },
          Ct = function () {},
          Nt = function (e) {
            throw new Error(e);
          },
          At = function (e) {
            if (void 0 === e) return bt;
            bt = !!e;
          },
          Lt = function (e) {
            At() && (xt ? r.warn(e) : (r.log(e), wt && r.trace()));
          },
          St = function (e) {
            return ee({}, e);
          },
          Ot = function (e) {
            return null == e ? e : T(e) ? e.slice() : _(e) ? St(e) : e;
          },
          kt = function (e) {
            return e.slice();
          },
          It = function (e, t) {
            for (
              t = e = "";
              e++ < 36;
              t +=
                (51 * e) & 52
                  ? (15 ^ e
                      ? 8 ^ (Math.random() * (20 ^ e ? 16 : 4))
                      : 4
                    ).toString(16)
                  : "-"
            );
            return t;
          },
          Mt = {},
          Pt = function () {
            return Mt;
          },
          Rt = function (e) {
            var t = Object.keys(e);
            return function (n) {
              for (var r = {}, i = 0; i < t.length; i++) {
                var a = t[i],
                  o = null == n ? void 0 : n[a];
                r[a] = void 0 === o ? e[a] : o;
              }
              return r;
            };
          },
          Bt = function (e, t, n) {
            for (
              var r = e.length - 1;
              r >= 0 && (e[r] !== t || (e.splice(r, 1), !n));
              r--
            );
          },
          Ft = function (e) {
            e.splice(0, e.length);
          },
          zt = function (e, t) {
            for (var n = 0; n < t.length; n++) {
              var r = t[n];
              e.push(r);
            }
          },
          Gt = function (e, t, n) {
            return n && (t = V(n, t)), e[t];
          },
          Yt = function (e, t, n, r) {
            n && (t = V(n, t)), (e[t] = r);
          },
          Xt = (function () {
            function e() {
              t(this, e), (this._obj = {});
            }
            return (
              a(e, [
                {
                  key: "set",
                  value: function (e, t) {
                    return (this._obj[e] = t), this;
                  },
                },
                {
                  key: "delete",
                  value: function (e) {
                    return (this._obj[e] = void 0), this;
                  },
                },
                {
                  key: "clear",
                  value: function () {
                    this._obj = {};
                  },
                },
                {
                  key: "has",
                  value: function (e) {
                    return void 0 !== this._obj[e];
                  },
                },
                {
                  key: "get",
                  value: function (e) {
                    return this._obj[e];
                  },
                },
              ]),
              e
            );
          })(),
          Vt = "undefined" != typeof Map ? Map : Xt,
          Ut = "undefined",
          jt = (function () {
            function e(n) {
              if (
                (t(this, e),
                (this._obj = Object.create(null)),
                (this.size = 0),
                null != n)
              ) {
                var r;
                r =
                  null != n.instanceString &&
                  n.instanceString() === this.instanceString()
                    ? n.toArray()
                    : n;
                for (var i = 0; i < r.length; i++) this.add(r[i]);
              }
            }
            return (
              a(e, [
                {
                  key: "instanceString",
                  value: function () {
                    return "set";
                  },
                },
                {
                  key: "add",
                  value: function (e) {
                    var t = this._obj;
                    1 !== t[e] && ((t[e] = 1), this.size++);
                  },
                },
                {
                  key: "delete",
                  value: function (e) {
                    var t = this._obj;
                    1 === t[e] && ((t[e] = 0), this.size--);
                  },
                },
                {
                  key: "clear",
                  value: function () {
                    this._obj = Object.create(null);
                  },
                },
                {
                  key: "has",
                  value: function (e) {
                    return 1 === this._obj[e];
                  },
                },
                {
                  key: "toArray",
                  value: function () {
                    var e = this;
                    return Object.keys(this._obj).filter(function (t) {
                      return e.has(t);
                    });
                  },
                },
                {
                  key: "forEach",
                  value: function (e, t) {
                    return this.toArray().forEach(e, t);
                  },
                },
              ]),
              e
            );
          })(),
          Ht =
            ("undefined" == typeof Set ? "undefined" : e(Set)) !== Ut
              ? Set
              : jt,
          qt = function (e, t) {
            var n =
              !(arguments.length > 2 && void 0 !== arguments[2]) ||
              arguments[2];
            if (void 0 !== e && void 0 !== t && k(e)) {
              var r = t.group;
              if (
                (null == r &&
                  (r =
                    t.data && null != t.data.source && null != t.data.target
                      ? "edges"
                      : "nodes"),
                "nodes" === r || "edges" === r)
              ) {
                (this.length = 1), (this[0] = this);
                var i = (this._private = {
                  cy: e,
                  single: !0,
                  data: t.data || {},
                  position: t.position || { x: 0, y: 0 },
                  autoWidth: void 0,
                  autoHeight: void 0,
                  autoPadding: void 0,
                  compoundBoundsClean: !1,
                  listeners: [],
                  group: r,
                  style: {},
                  rstyle: {},
                  styleCxts: [],
                  styleKeys: {},
                  removed: !0,
                  selected: !!t.selected,
                  selectable: void 0 === t.selectable || !!t.selectable,
                  locked: !!t.locked,
                  grabbed: !1,
                  grabbable: void 0 === t.grabbable || !!t.grabbable,
                  pannable:
                    void 0 === t.pannable ? "edges" === r : !!t.pannable,
                  active: !1,
                  classes: new Ht(),
                  animation: { current: [], queue: [] },
                  rscratch: {},
                  scratch: t.scratch || {},
                  edges: [],
                  children: [],
                  parent: t.parent && t.parent.isNode() ? t.parent : null,
                  traversalCache: {},
                  backgrounding: !1,
                  bbCache: null,
                  bbCacheShift: { x: 0, y: 0 },
                  bodyBounds: null,
                  overlayBounds: null,
                  labelBounds: {
                    all: null,
                    source: null,
                    target: null,
                    main: null,
                  },
                  arrowBounds: {
                    source: null,
                    target: null,
                    "mid-source": null,
                    "mid-target": null,
                  },
                });
                if (
                  (null == i.position.x && (i.position.x = 0),
                  null == i.position.y && (i.position.y = 0),
                  t.renderedPosition)
                ) {
                  var a = t.renderedPosition,
                    o = e.pan(),
                    s = e.zoom();
                  i.position = { x: (a.x - o.x) / s, y: (a.y - o.y) / s };
                }
                var l = [];
                T(t.classes)
                  ? (l = t.classes)
                  : w(t.classes) && (l = t.classes.split(/\s+/));
                for (var u = 0, c = l.length; u < c; u++) {
                  var h = l[u];
                  h && "" !== h && i.classes.add(h);
                }
                this.createEmitter();
                var d = t.style || t.css;
                d &&
                  (Lt(
                    "Setting a `style` bypass at element creation should be done only when absolutely necessary.  Try to use the stylesheet instead."
                  ),
                  this.style(d)),
                  (void 0 === n || n) && this.restore();
              } else
                Nt(
                  "An element must be of type `nodes` or `edges`; you specified `" +
                    r +
                    "`"
                );
            } else
              Nt("An element must have a core reference and parameters set");
          },
          Wt = function (e) {
            return (
              (e = { bfs: e.bfs || !e.dfs, dfs: e.dfs || !e.bfs }),
              function (t, n, r) {
                var i;
                _(t) &&
                  !L(t) &&
                  ((t = (i = t).roots || i.root),
                  (n = i.visit),
                  (r = i.directed)),
                  (r = 2 !== arguments.length || E(n) ? r : n),
                  (n = E(n) ? n : function () {});
                for (
                  var a,
                    o = this._private.cy,
                    s = (t = w(t) ? this.filter(t) : t),
                    l = [],
                    u = [],
                    c = {},
                    h = {},
                    d = {},
                    p = 0,
                    g = this.byGroup(),
                    f = g.nodes,
                    v = g.edges,
                    y = 0;
                  y < s.length;
                  y++
                ) {
                  var m = s[y],
                    b = m.id();
                  m.isNode() &&
                    (l.unshift(m),
                    e.bfs && ((d[b] = !0), u.push(m)),
                    (h[b] = 0));
                }
                for (
                  var x = function () {
                    var t = e.bfs ? l.shift() : l.pop(),
                      i = t.id();
                    if (e.dfs) {
                      if (d[i]) return "continue";
                      (d[i] = !0), u.push(t);
                    }
                    var o = h[i],
                      s = c[i],
                      g = null != s ? s.source() : null,
                      y = null != s ? s.target() : null,
                      m = null == s ? void 0 : t.same(g) ? y[0] : g[0],
                      b = void 0;
                    if (!0 === (b = n(t, s, m, p++, o)))
                      return (a = t), "break";
                    if (!1 === b) return "break";
                    for (
                      var x = t.connectedEdges().filter(function (e) {
                          return (!r || e.source().same(t)) && v.has(e);
                        }),
                        w = 0;
                      w < x.length;
                      w++
                    ) {
                      var E = x[w],
                        T = E.connectedNodes().filter(function (e) {
                          return !e.same(t) && f.has(e);
                        }),
                        _ = T.id();
                      0 === T.length ||
                        d[_] ||
                        ((T = T[0]),
                        l.push(T),
                        e.bfs && ((d[_] = !0), u.push(T)),
                        (c[_] = E),
                        (h[_] = h[i] + 1));
                    }
                  };
                  0 !== l.length;

                ) {
                  var T = x();
                  if ("continue" !== T && "break" === T) break;
                }
                for (var D = o.collection(), C = 0; C < u.length; C++) {
                  var N = u[C],
                    A = c[N.id()];
                  null != A && D.push(A), D.push(N);
                }
                return { path: o.collection(D), found: o.collection(a) };
              }
            );
          },
          $t = {
            breadthFirstSearch: Wt({ bfs: !0 }),
            depthFirstSearch: Wt({ dfs: !0 }),
          };
        ($t.bfs = $t.breadthFirstSearch), ($t.dfs = $t.depthFirstSearch);
        var Kt = de(function (e, t) {
            (function () {
              var t, n, r, i, a, o, s, l, u, c, h, d, p, g, f;
              (r = Math.floor),
                (c = Math.min),
                (n = function (e, t) {
                  return e < t ? -1 : e > t ? 1 : 0;
                }),
                (u = function (e, t, i, a, o) {
                  var s;
                  if ((null == i && (i = 0), null == o && (o = n), i < 0))
                    throw new Error("lo must be non-negative");
                  for (null == a && (a = e.length); i < a; )
                    o(t, e[(s = r((i + a) / 2))]) < 0 ? (a = s) : (i = s + 1);
                  return [].splice.apply(e, [i, i - i].concat(t)), t;
                }),
                (o = function (e, t, r) {
                  return (
                    null == r && (r = n), e.push(t), g(e, 0, e.length - 1, r)
                  );
                }),
                (a = function (e, t) {
                  var r, i;
                  return (
                    null == t && (t = n),
                    (r = e.pop()),
                    e.length ? ((i = e[0]), (e[0] = r), f(e, 0, t)) : (i = r),
                    i
                  );
                }),
                (l = function (e, t, r) {
                  var i;
                  return (
                    null == r && (r = n), (i = e[0]), (e[0] = t), f(e, 0, r), i
                  );
                }),
                (s = function (e, t, r) {
                  var i;
                  return (
                    null == r && (r = n),
                    e.length &&
                      r(e[0], t) < 0 &&
                      ((t = (i = [e[0], t])[0]), (e[0] = i[1]), f(e, 0, r)),
                    t
                  );
                }),
                (i = function (e, t) {
                  var i, a, o, s, l, u;
                  for (
                    null == t && (t = n),
                      l = [],
                      a = 0,
                      o = (s = function () {
                        u = [];
                        for (
                          var t = 0, n = r(e.length / 2);
                          0 <= n ? t < n : t > n;
                          0 <= n ? t++ : t--
                        )
                          u.push(t);
                        return u;
                      }
                        .apply(this)
                        .reverse()).length;
                    a < o;
                    a++
                  )
                    (i = s[a]), l.push(f(e, i, t));
                  return l;
                }),
                (p = function (e, t, r) {
                  var i;
                  if ((null == r && (r = n), -1 !== (i = e.indexOf(t))))
                    return g(e, 0, i, r), f(e, i, r);
                }),
                (h = function (e, t, r) {
                  var a, o, l, u, c;
                  if ((null == r && (r = n), !(o = e.slice(0, t)).length))
                    return o;
                  for (i(o, r), l = 0, u = (c = e.slice(t)).length; l < u; l++)
                    (a = c[l]), s(o, a, r);
                  return o.sort(r).reverse();
                }),
                (d = function (e, t, r) {
                  var o, s, l, h, d, p, g, f, v;
                  if ((null == r && (r = n), 10 * t <= e.length)) {
                    if (!(l = e.slice(0, t).sort(r)).length) return l;
                    for (
                      s = l[l.length - 1], h = 0, p = (g = e.slice(t)).length;
                      h < p;
                      h++
                    )
                      r((o = g[h]), s) < 0 &&
                        (u(l, o, 0, null, r), l.pop(), (s = l[l.length - 1]));
                    return l;
                  }
                  for (
                    i(e, r), v = [], d = 0, f = c(t, e.length);
                    0 <= f ? d < f : d > f;
                    0 <= f ? ++d : --d
                  )
                    v.push(a(e, r));
                  return v;
                }),
                (g = function (e, t, r, i) {
                  var a, o, s;
                  for (
                    null == i && (i = n), a = e[r];
                    r > t && i(a, (o = e[(s = (r - 1) >> 1)])) < 0;

                  )
                    (e[r] = o), (r = s);
                  return (e[r] = a);
                }),
                (f = function (e, t, r) {
                  var i, a, o, s, l;
                  for (
                    null == r && (r = n),
                      a = e.length,
                      l = t,
                      o = e[t],
                      i = 2 * t + 1;
                    i < a;

                  )
                    (s = i + 1) < a && !(r(e[i], e[s]) < 0) && (i = s),
                      (e[t] = e[i]),
                      (i = 2 * (t = i) + 1);
                  return (e[t] = o), g(e, l, t, r);
                }),
                (t = (function () {
                  function e(e) {
                    (this.cmp = null != e ? e : n), (this.nodes = []);
                  }
                  return (
                    (e.push = o),
                    (e.pop = a),
                    (e.replace = l),
                    (e.pushpop = s),
                    (e.heapify = i),
                    (e.updateItem = p),
                    (e.nlargest = h),
                    (e.nsmallest = d),
                    (e.prototype.push = function (e) {
                      return o(this.nodes, e, this.cmp);
                    }),
                    (e.prototype.pop = function () {
                      return a(this.nodes, this.cmp);
                    }),
                    (e.prototype.peek = function () {
                      return this.nodes[0];
                    }),
                    (e.prototype.contains = function (e) {
                      return -1 !== this.nodes.indexOf(e);
                    }),
                    (e.prototype.replace = function (e) {
                      return l(this.nodes, e, this.cmp);
                    }),
                    (e.prototype.pushpop = function (e) {
                      return s(this.nodes, e, this.cmp);
                    }),
                    (e.prototype.heapify = function () {
                      return i(this.nodes, this.cmp);
                    }),
                    (e.prototype.updateItem = function (e) {
                      return p(this.nodes, e, this.cmp);
                    }),
                    (e.prototype.clear = function () {
                      return (this.nodes = []);
                    }),
                    (e.prototype.empty = function () {
                      return 0 === this.nodes.length;
                    }),
                    (e.prototype.size = function () {
                      return this.nodes.length;
                    }),
                    (e.prototype.clone = function () {
                      var t;
                      return ((t = new e()).nodes = this.nodes.slice(0)), t;
                    }),
                    (e.prototype.toArray = function () {
                      return this.nodes.slice(0);
                    }),
                    (e.prototype.insert = e.prototype.push),
                    (e.prototype.top = e.prototype.peek),
                    (e.prototype.front = e.prototype.peek),
                    (e.prototype.has = e.prototype.contains),
                    (e.prototype.copy = e.prototype.clone),
                    e
                  );
                })()),
                (function (t, n) {
                  e.exports = n();
                })(0, function () {
                  return t;
                });
            }.call(he));
          }),
          Zt = Kt,
          Qt = Rt({
            root: null,
            weight: function (e) {
              return 1;
            },
            directed: !1,
          }),
          Jt = {
            dijkstra: function (e) {
              if (!_(e)) {
                var t = arguments;
                e = { root: t[0], weight: t[1], directed: t[2] };
              }
              var n = Qt(e),
                r = n.root,
                i = n.weight,
                a = n.directed,
                o = this,
                s = i,
                l = w(r) ? this.filter(r)[0] : r[0],
                u = {},
                c = {},
                h = {},
                d = this.byGroup(),
                p = d.nodes,
                g = d.edges;
              g.unmergeBy(function (e) {
                return e.isLoop();
              });
              for (
                var f = function (e) {
                    return u[e.id()];
                  },
                  v = function (e, t) {
                    (u[e.id()] = t), y.updateItem(e);
                  },
                  y = new Zt(function (e, t) {
                    return f(e) - f(t);
                  }),
                  m = 0;
                m < p.length;
                m++
              ) {
                var b = p[m];
                (u[b.id()] = b.same(l) ? 0 : 1 / 0), y.push(b);
              }
              for (
                var x = function (e, t) {
                  for (
                    var n,
                      r = (a ? e.edgesTo(t) : e.edgesWith(t)).intersect(g),
                      i = 1 / 0,
                      o = 0;
                    o < r.length;
                    o++
                  ) {
                    var l = r[o],
                      u = s(l);
                    (u < i || !n) && ((i = u), (n = l));
                  }
                  return { edge: n, dist: i };
                };
                y.size() > 0;

              ) {
                var E = y.pop(),
                  T = f(E),
                  D = E.id();
                if (((h[D] = T), T !== 1 / 0))
                  for (
                    var C = E.neighborhood().intersect(p), N = 0;
                    N < C.length;
                    N++
                  ) {
                    var A = C[N],
                      L = A.id(),
                      S = x(E, A),
                      O = T + S.dist;
                    O < f(A) && (v(A, O), (c[L] = { node: E, edge: S.edge }));
                  }
              }
              return {
                distanceTo: function (e) {
                  var t = w(e) ? p.filter(e)[0] : e[0];
                  return h[t.id()];
                },
                pathTo: function (e) {
                  var t = w(e) ? p.filter(e)[0] : e[0],
                    n = [],
                    r = t,
                    i = r.id();
                  if (t.length > 0)
                    for (n.unshift(t); c[i]; ) {
                      var a = c[i];
                      n.unshift(a.edge),
                        n.unshift(a.node),
                        (i = (r = a.node).id());
                    }
                  return o.spawn(n);
                },
              };
            },
          },
          en = {
            kruskal: function (e) {
              e =
                e ||
                function (e) {
                  return 1;
                };
              for (
                var t = this.byGroup(),
                  n = t.nodes,
                  r = t.edges,
                  i = n.length,
                  a = new Array(i),
                  o = n,
                  s = function (e) {
                    for (var t = 0; t < a.length; t++)
                      if (a[t].has(e)) return t;
                  },
                  l = 0;
                l < i;
                l++
              )
                a[l] = this.spawn(n[l]);
              for (
                var u = r.sort(function (t, n) {
                    return e(t) - e(n);
                  }),
                  c = 0;
                c < u.length;
                c++
              ) {
                var h = u[c],
                  d = h.source()[0],
                  p = h.target()[0],
                  g = s(d),
                  f = s(p),
                  v = a[g],
                  y = a[f];
                g !== f && (o.merge(h), v.merge(y), a.splice(f, 1));
              }
              return o;
            },
          },
          tn = Rt({
            root: null,
            goal: null,
            weight: function (e) {
              return 1;
            },
            heuristic: function (e) {
              return 0;
            },
            directed: !1,
          }),
          nn = {
            aStar: function (e) {
              var t = this.cy(),
                n = tn(e),
                r = n.root,
                i = n.goal,
                a = n.heuristic,
                o = n.directed,
                s = n.weight;
              (r = t.collection(r)[0]), (i = t.collection(i)[0]);
              var l,
                u,
                c = r.id(),
                h = i.id(),
                d = {},
                p = {},
                g = {},
                f = new Zt(function (e, t) {
                  return p[e.id()] - p[t.id()];
                }),
                v = new Ht(),
                y = {},
                m = {},
                b = function (e, t) {
                  f.push(e), v.add(t);
                },
                x = function () {
                  (l = f.pop()), (u = l.id()), v.delete(u);
                },
                w = function (e) {
                  return v.has(e);
                };
              b(r, c), (d[c] = 0), (p[c] = a(r));
              for (var E = 0; f.size() > 0; ) {
                if ((x(), E++, u === h)) {
                  for (
                    var T = [], _ = i, D = h, C = m[D];
                    T.unshift(_), null != C && T.unshift(C), null != (_ = y[D]);

                  )
                    C = m[(D = _.id())];
                  return {
                    found: !0,
                    distance: d[u],
                    path: this.spawn(T),
                    steps: E,
                  };
                }
                g[u] = !0;
                for (var N = l._private.edges, A = 0; A < N.length; A++) {
                  var L = N[A];
                  if (
                    this.hasElementWithId(L.id()) &&
                    (!o || L.data("source") === u)
                  ) {
                    var S = L.source(),
                      O = L.target(),
                      k = S.id() !== u ? S : O,
                      I = k.id();
                    if (this.hasElementWithId(I) && !g[I]) {
                      var M = d[u] + s(L);
                      w(I)
                        ? M < d[I] &&
                          ((d[I] = M),
                          (p[I] = M + a(k)),
                          (y[I] = l),
                          (m[I] = L))
                        : ((d[I] = M),
                          (p[I] = M + a(k)),
                          b(k, I),
                          (y[I] = l),
                          (m[I] = L));
                    }
                  }
                }
              }
              return { found: !1, distance: void 0, path: void 0, steps: E };
            },
          },
          rn = Rt({
            weight: function (e) {
              return 1;
            },
            directed: !1,
          }),
          an = {
            floydWarshall: function (e) {
              for (
                var t = this.cy(),
                  n = rn(e),
                  r = n.weight,
                  i = n.directed,
                  a = r,
                  o = this.byGroup(),
                  s = o.nodes,
                  l = o.edges,
                  u = s.length,
                  c = u * u,
                  h = function (e) {
                    return s.indexOf(e);
                  },
                  d = function (e) {
                    return s[e];
                  },
                  p = new Array(c),
                  g = 0;
                g < c;
                g++
              ) {
                var f = g % u,
                  v = (g - f) / u;
                p[g] = v === f ? 0 : 1 / 0;
              }
              for (
                var y = new Array(c), m = new Array(c), b = 0;
                b < l.length;
                b++
              ) {
                var x = l[b],
                  E = x.source()[0],
                  T = x.target()[0];
                if (E !== T) {
                  var _ = h(E),
                    D = h(T),
                    C = _ * u + D,
                    N = a(x);
                  if ((p[C] > N && ((p[C] = N), (y[C] = D), (m[C] = x)), !i)) {
                    var A = D * u + _;
                    !i && p[A] > N && ((p[A] = N), (y[A] = _), (m[A] = x));
                  }
                }
              }
              for (var L = 0; L < u; L++)
                for (var S = 0; S < u; S++)
                  for (var O = S * u + L, k = 0; k < u; k++) {
                    var I = S * u + k,
                      M = L * u + k;
                    p[O] + p[M] < p[I] && ((p[I] = p[O] + p[M]), (y[I] = y[O]));
                  }
              var P = function (e) {
                  return (w(e) ? t.filter(e) : e)[0];
                },
                R = function (e) {
                  return h(P(e));
                },
                B = {
                  distance: function (e, t) {
                    var n = R(e),
                      r = R(t);
                    return p[n * u + r];
                  },
                  path: function (e, n) {
                    var r = R(e),
                      i = R(n),
                      a = d(r);
                    if (r === i) return a.collection();
                    if (null == y[r * u + i]) return t.collection();
                    var o,
                      s = t.collection(),
                      l = r;
                    for (s.merge(a); r !== i; )
                      (l = r),
                        (r = y[r * u + i]),
                        (o = m[l * u + r]),
                        s.merge(o),
                        s.merge(d(r));
                    return s;
                  },
                };
              return B;
            },
          },
          on = Rt({
            weight: function (e) {
              return 1;
            },
            directed: !1,
            root: null,
          }),
          sn = {
            bellmanFord: function (e) {
              var t = this,
                n = on(e),
                r = n.weight,
                i = n.directed,
                a = n.root,
                o = r,
                s = this,
                l = this.cy(),
                u = this.byGroup(),
                c = u.edges,
                h = u.nodes,
                d = h.length,
                p = new Vt(),
                g = !1,
                f = [];
              (a = l.collection(a)[0]),
                c.unmergeBy(function (e) {
                  return e.isLoop();
                });
              for (
                var v = c.length,
                  y = function (e) {
                    var t = p.get(e.id());
                    return t || ((t = {}), p.set(e.id(), t)), t;
                  },
                  m = function (e) {
                    return (w(e) ? l.$(e) : e)[0];
                  },
                  b = function (e) {
                    return y(m(e)).dist;
                  },
                  x = function (e) {
                    for (
                      var n =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : a,
                        r = [],
                        i = m(e);
                      ;

                    ) {
                      if (null == i) return t.spawn();
                      var o = y(i),
                        l = o.edge,
                        u = o.pred;
                      if ((r.unshift(i[0]), i.same(n) && r.length > 0)) break;
                      null != l && r.unshift(l), (i = u);
                    }
                    return s.spawn(r);
                  },
                  E = 0;
                E < d;
                E++
              ) {
                var T = h[E],
                  _ = y(T);
                T.same(a) ? (_.dist = 0) : (_.dist = 1 / 0),
                  (_.pred = null),
                  (_.edge = null);
              }
              for (
                var D = !1,
                  C = function (e, t, n, r, i, a) {
                    var o = r.dist + a;
                    o < i.dist &&
                      !n.same(r.edge) &&
                      ((i.dist = o), (i.pred = e), (i.edge = n), (D = !0));
                  },
                  N = 1;
                N < d;
                N++
              ) {
                D = !1;
                for (var A = 0; A < v; A++) {
                  var L = c[A],
                    S = L.source(),
                    O = L.target(),
                    k = o(L),
                    I = y(S),
                    M = y(O);
                  C(S, O, L, I, M, k), i || C(O, S, L, M, I, k);
                }
                if (!D) break;
              }
              if (D)
                for (var P = [], R = 0; R < v; R++) {
                  var B = c[R],
                    F = B.source(),
                    z = B.target(),
                    G = o(B),
                    Y = y(F).dist,
                    X = y(z).dist;
                  if (Y + G < X || (!i && X + G < Y)) {
                    if (
                      (g ||
                        (Lt(
                          "Graph contains a negative weight cycle for Bellman-Ford"
                        ),
                        (g = !0)),
                      !1 === e.findNegativeWeightCycles)
                    )
                      break;
                    var V = [];
                    Y + G < X && V.push(F), !i && X + G < Y && V.push(z);
                    for (var U = V.length, j = 0; j < U; j++) {
                      var H = V[j],
                        q = [H];
                      q.push(y(H).edge);
                      for (var W = y(H).pred; -1 === q.indexOf(W); )
                        q.push(W), q.push(y(W).edge), (W = y(W).pred);
                      for (
                        var $ = (q = q.slice(q.indexOf(W)))[0].id(),
                          K = 0,
                          Z = 2;
                        Z < q.length;
                        Z += 2
                      )
                        q[Z].id() < $ && (($ = q[Z].id()), (K = Z));
                      (q = q.slice(K).concat(q.slice(0, K))).push(q[0]);
                      var Q = q
                        .map(function (e) {
                          return e.id();
                        })
                        .join(",");
                      -1 === P.indexOf(Q) && (f.push(s.spawn(q)), P.push(Q));
                    }
                  }
                }
              return {
                distanceTo: b,
                pathTo: x,
                hasNegativeWeightCycle: g,
                negativeWeightCycles: f,
              };
            },
          },
          ln = Math.sqrt(2),
          un = function (e, t, n) {
            0 === n.length &&
              Nt("Karger-Stein must be run on a connected (sub)graph");
            for (
              var r = n[e],
                i = r[1],
                a = r[2],
                o = t[i],
                s = t[a],
                l = n,
                u = l.length - 1;
              u >= 0;
              u--
            ) {
              var c = l[u],
                h = c[1],
                d = c[2];
              ((t[h] === o && t[d] === s) || (t[h] === s && t[d] === o)) &&
                l.splice(u, 1);
            }
            for (var p = 0; p < l.length; p++) {
              var g = l[p];
              g[1] === s
                ? ((l[p] = g.slice()), (l[p][1] = o))
                : g[2] === s && ((l[p] = g.slice()), (l[p][2] = o));
            }
            for (var f = 0; f < t.length; f++) t[f] === s && (t[f] = o);
            return l;
          },
          cn = function (e, t, n, r) {
            for (; n > r; ) {
              var i = Math.floor(Math.random() * t.length);
              (t = un(i, e, t)), n--;
            }
            return t;
          },
          hn = {
            kargerStein: function () {
              var e = this,
                t = this.byGroup(),
                n = t.nodes,
                r = t.edges;
              r.unmergeBy(function (e) {
                return e.isLoop();
              });
              var i = n.length,
                a = r.length,
                o = Math.ceil(Math.pow(Math.log(i) / Math.LN2, 2)),
                s = Math.floor(i / ln);
              if (!(i < 2)) {
                for (var l = [], u = 0; u < a; u++) {
                  var c = r[u];
                  l.push([u, n.indexOf(c.source()), n.indexOf(c.target())]);
                }
                for (
                  var h = 1 / 0,
                    d = [],
                    p = new Array(i),
                    g = new Array(i),
                    f = new Array(i),
                    v = function (e, t) {
                      for (var n = 0; n < i; n++) t[n] = e[n];
                    },
                    y = 0;
                  y <= o;
                  y++
                ) {
                  for (var m = 0; m < i; m++) g[m] = m;
                  var b = cn(g, l.slice(), i, s),
                    x = b.slice();
                  v(g, f);
                  var w = cn(g, b, s, 2),
                    E = cn(f, x, s, 2);
                  w.length <= E.length && w.length < h
                    ? ((h = w.length), (d = w), v(g, p))
                    : E.length <= w.length &&
                      E.length < h &&
                      ((h = E.length), (d = E), v(f, p));
                }
                for (
                  var T = this.spawn(
                      d.map(function (e) {
                        return r[e[0]];
                      })
                    ),
                    _ = this.spawn(),
                    D = this.spawn(),
                    C = p[0],
                    N = 0;
                  N < p.length;
                  N++
                ) {
                  var A = p[N],
                    L = n[N];
                  A === C ? _.merge(L) : D.merge(L);
                }
                var S = function (t) {
                    var n = e.spawn();
                    return (
                      t.forEach(function (t) {
                        n.merge(t),
                          t.connectedEdges().forEach(function (t) {
                            e.contains(t) && !T.contains(t) && n.merge(t);
                          });
                      }),
                      n
                    );
                  },
                  O = [S(_), S(D)];
                return { cut: T, components: O, partition1: _, partition2: D };
              }
              Nt("At least 2 nodes are required for Karger-Stein algorithm");
            },
          },
          dn = function (e) {
            return { x: e.x, y: e.y };
          },
          pn = function (e, t, n) {
            return { x: e.x * t + n.x, y: e.y * t + n.y };
          },
          gn = function (e, t, n) {
            return { x: (e.x - n.x) / t, y: (e.y - n.y) / t };
          },
          fn = function (e) {
            return { x: e[0], y: e[1] };
          },
          vn = function (e) {
            for (
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0,
                n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : e.length,
                r = 1 / 0,
                i = t;
              i < n;
              i++
            ) {
              var a = e[i];
              isFinite(a) && (r = Math.min(a, r));
            }
            return r;
          },
          yn = function (e) {
            for (
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0,
                n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : e.length,
                r = -1 / 0,
                i = t;
              i < n;
              i++
            ) {
              var a = e[i];
              isFinite(a) && (r = Math.max(a, r));
            }
            return r;
          },
          mn = function (e) {
            for (
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0,
                n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : e.length,
                r = 0,
                i = 0,
                a = t;
              a < n;
              a++
            ) {
              var o = e[a];
              isFinite(o) && ((r += o), i++);
            }
            return r / i;
          },
          bn = function (e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : e.length,
              r =
                !(arguments.length > 4 && void 0 !== arguments[4]) ||
                arguments[4],
              i =
                !(arguments.length > 5 && void 0 !== arguments[5]) ||
                arguments[5];
            arguments.length > 3 && void 0 !== arguments[3] && !arguments[3]
              ? (n < e.length && e.splice(n, e.length - n),
                t > 0 && e.splice(0, t))
              : (e = e.slice(t, n));
            for (var a = 0, o = e.length - 1; o >= 0; o--) {
              var s = e[o];
              i ? isFinite(s) || ((e[o] = -1 / 0), a++) : e.splice(o, 1);
            }
            r &&
              e.sort(function (e, t) {
                return e - t;
              });
            var l = e.length,
              u = Math.floor(l / 2);
            return l % 2 != 0 ? e[u + 1 + a] : (e[u - 1 + a] + e[u + a]) / 2;
          },
          xn = function (e) {
            return (Math.PI * e) / 180;
          },
          wn = function (e, t) {
            return Math.atan2(t, e) - Math.PI / 2;
          },
          En =
            Math.log2 ||
            function (e) {
              return Math.log(e) / Math.log(2);
            },
          Tn = function (e) {
            return e > 0 ? 1 : e < 0 ? -1 : 0;
          },
          _n = function (e, t) {
            return Math.sqrt(Dn(e, t));
          },
          Dn = function (e, t) {
            var n = t.x - e.x,
              r = t.y - e.y;
            return n * n + r * r;
          },
          Cn = function (e) {
            for (var t = e.length, n = 0, r = 0; r < t; r++) n += e[r];
            for (var i = 0; i < t; i++) e[i] = e[i] / n;
            return e;
          },
          Nn = function (e, t, n, r) {
            return (1 - r) * (1 - r) * e + 2 * (1 - r) * r * t + r * r * n;
          },
          An = function (e, t, n, r) {
            return { x: Nn(e.x, t.x, n.x, r), y: Nn(e.y, t.y, n.y, r) };
          },
          Ln = function (e, t, n, r) {
            var i = { x: t.x - e.x, y: t.y - e.y },
              a = _n(e, t),
              o = { x: i.x / a, y: i.y / a };
            return (
              (n = null == n ? 0 : n),
              (r = null != r ? r : n * a),
              { x: e.x + o.x * r, y: e.y + o.y * r }
            );
          },
          Sn = function (e, t, n) {
            return Math.max(e, Math.min(n, t));
          },
          On = function (e) {
            if (null == e)
              return {
                x1: 1 / 0,
                y1: 1 / 0,
                x2: -1 / 0,
                y2: -1 / 0,
                w: 0,
                h: 0,
              };
            if (null != e.x1 && null != e.y1) {
              if (null != e.x2 && null != e.y2 && e.x2 >= e.x1 && e.y2 >= e.y1)
                return {
                  x1: e.x1,
                  y1: e.y1,
                  x2: e.x2,
                  y2: e.y2,
                  w: e.x2 - e.x1,
                  h: e.y2 - e.y1,
                };
              if (null != e.w && null != e.h && e.w >= 0 && e.h >= 0)
                return {
                  x1: e.x1,
                  y1: e.y1,
                  x2: e.x1 + e.w,
                  y2: e.y1 + e.h,
                  w: e.w,
                  h: e.h,
                };
            }
          },
          kn = function (e) {
            return { x1: e.x1, x2: e.x2, w: e.w, y1: e.y1, y2: e.y2, h: e.h };
          },
          In = function (e) {
            (e.x1 = 1 / 0),
              (e.y1 = 1 / 0),
              (e.x2 = -1 / 0),
              (e.y2 = -1 / 0),
              (e.w = 0),
              (e.h = 0);
          },
          Mn = function (e, t, n) {
            return {
              x1: e.x1 + t,
              x2: e.x2 + t,
              y1: e.y1 + n,
              y2: e.y2 + n,
              w: e.w,
              h: e.h,
            };
          },
          Pn = function (e, t) {
            (e.x1 = Math.min(e.x1, t.x1)),
              (e.x2 = Math.max(e.x2, t.x2)),
              (e.w = e.x2 - e.x1),
              (e.y1 = Math.min(e.y1, t.y1)),
              (e.y2 = Math.max(e.y2, t.y2)),
              (e.h = e.y2 - e.y1);
          },
          Rn = function (e, t, n) {
            (e.x1 = Math.min(e.x1, t)),
              (e.x2 = Math.max(e.x2, t)),
              (e.w = e.x2 - e.x1),
              (e.y1 = Math.min(e.y1, n)),
              (e.y2 = Math.max(e.y2, n)),
              (e.h = e.y2 - e.y1);
          },
          Bn = function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0;
            return (
              (e.x1 -= t),
              (e.x2 += t),
              (e.y1 -= t),
              (e.y2 += t),
              (e.w = e.x2 - e.x1),
              (e.h = e.y2 - e.y1),
              e
            );
          },
          Fn = function (e) {
            var t,
              n,
              r,
              i,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [0];
            if (1 === a.length) t = n = r = i = a[0];
            else if (2 === a.length) (t = r = a[0]), (i = n = a[1]);
            else if (4 === a.length) {
              var o = s(a, 4);
              (t = o[0]), (n = o[1]), (r = o[2]), (i = o[3]);
            }
            return (
              (e.x1 -= i),
              (e.x2 += n),
              (e.y1 -= t),
              (e.y2 += r),
              (e.w = e.x2 - e.x1),
              (e.h = e.y2 - e.y1),
              e
            );
          },
          zn = function (e, t) {
            (e.x1 = t.x1),
              (e.y1 = t.y1),
              (e.x2 = t.x2),
              (e.y2 = t.y2),
              (e.w = e.x2 - e.x1),
              (e.h = e.y2 - e.y1);
          },
          Gn = function (e, t) {
            return !(
              e.x1 > t.x2 ||
              t.x1 > e.x2 ||
              e.x2 < t.x1 ||
              t.x2 < e.x1 ||
              e.y2 < t.y1 ||
              t.y2 < e.y1 ||
              e.y1 > t.y2 ||
              t.y1 > e.y2
            );
          },
          Yn = function (e, t, n) {
            return e.x1 <= t && t <= e.x2 && e.y1 <= n && n <= e.y2;
          },
          Xn = function (e, t) {
            return Yn(e, t.x, t.y);
          },
          Vn = function (e, t) {
            return Yn(e, t.x1, t.y1) && Yn(e, t.x2, t.y2);
          },
          Un = function (e, t, n, r, i, a, o) {
            var s,
              l,
              u =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : "auto",
              c = "auto" === u ? pr(i, a) : u,
              h = i / 2,
              d = a / 2,
              p = (c = Math.min(c, h, d)) !== h,
              g = c !== d;
            if (p) {
              var f = r - d - o;
              if (
                (s = or(e, t, n, r, n - h + c - o, f, n + h - c + o, f, !1))
                  .length > 0
              )
                return s;
            }
            if (g) {
              var v = n + h + o;
              if (
                (s = or(e, t, n, r, v, r - d + c - o, v, r + d - c + o, !1))
                  .length > 0
              )
                return s;
            }
            if (p) {
              var y = r + d + o;
              if (
                (s = or(e, t, n, r, n - h + c - o, y, n + h - c + o, y, !1))
                  .length > 0
              )
                return s;
            }
            if (g) {
              var m = n - h - o;
              if (
                (s = or(e, t, n, r, m, r - d + c - o, m, r + d - c + o, !1))
                  .length > 0
              )
                return s;
            }
            var b = n - h + c,
              x = r - d + c;
            if (
              (l = ir(e, t, n, r, b, x, c + o)).length > 0 &&
              l[0] <= b &&
              l[1] <= x
            )
              return [l[0], l[1]];
            var w = n + h - c,
              E = r - d + c;
            if (
              (l = ir(e, t, n, r, w, E, c + o)).length > 0 &&
              l[0] >= w &&
              l[1] <= E
            )
              return [l[0], l[1]];
            var T = n + h - c,
              _ = r + d - c;
            if (
              (l = ir(e, t, n, r, T, _, c + o)).length > 0 &&
              l[0] >= T &&
              l[1] >= _
            )
              return [l[0], l[1]];
            var D = n - h + c,
              C = r + d - c;
            return (l = ir(e, t, n, r, D, C, c + o)).length > 0 &&
              l[0] <= D &&
              l[1] >= C
              ? [l[0], l[1]]
              : [];
          },
          jn = function (e, t, n, r, i, a, o) {
            var s = o,
              l = Math.min(n, i),
              u = Math.max(n, i),
              c = Math.min(r, a),
              h = Math.max(r, a);
            return l - s <= e && e <= u + s && c - s <= t && t <= h + s;
          },
          Hn = function (e, t, n, r, i, a, o, s, l) {
            var u = {
              x1: Math.min(n, o, i) - l,
              x2: Math.max(n, o, i) + l,
              y1: Math.min(r, s, a) - l,
              y2: Math.max(r, s, a) + l,
            };
            return !(e < u.x1 || e > u.x2 || t < u.y1 || t > u.y2);
          },
          qn = function (e, t, n, r) {
            var i = t * t - 4 * e * (n -= r);
            if (i < 0) return [];
            var a = Math.sqrt(i),
              o = 2 * e;
            return [(-t + a) / o, (-t - a) / o];
          },
          Wn = function (e, t, n, r, i) {
            var a, o, s, l, u, c, h, d;
            return (
              0 === e && (e = 1e-5),
              (s = -27 * (r /= e) + (t /= e) * (9 * (n /= e) - t * t * 2)),
              (a = (o = (3 * n - t * t) / 9) * o * o + (s /= 54) * s),
              (i[1] = 0),
              (h = t / 3),
              a > 0
                ? ((u =
                    (u = s + Math.sqrt(a)) < 0
                      ? -Math.pow(-u, 1 / 3)
                      : Math.pow(u, 1 / 3)),
                  (c =
                    (c = s - Math.sqrt(a)) < 0
                      ? -Math.pow(-c, 1 / 3)
                      : Math.pow(c, 1 / 3)),
                  (i[0] = -h + u + c),
                  (h += (u + c) / 2),
                  (i[4] = i[2] = -h),
                  (h = (Math.sqrt(3) * (-c + u)) / 2),
                  (i[3] = h),
                  void (i[5] = -h))
                : ((i[5] = i[3] = 0),
                  0 === a
                    ? ((d = s < 0 ? -Math.pow(-s, 1 / 3) : Math.pow(s, 1 / 3)),
                      (i[0] = 2 * d - h),
                      void (i[4] = i[2] = -(d + h)))
                    : ((l = (o = -o) * o * o),
                      (l = Math.acos(s / Math.sqrt(l))),
                      (d = 2 * Math.sqrt(o)),
                      (i[0] = -h + d * Math.cos(l / 3)),
                      (i[2] = -h + d * Math.cos((l + 2 * Math.PI) / 3)),
                      void (i[4] = -h + d * Math.cos((l + 4 * Math.PI) / 3))))
            );
          },
          $n = function (e, t, n, r, i, a, o, s) {
            var l = [];
            Wn(
              1 * n * n -
                4 * n * i +
                2 * n * o +
                4 * i * i -
                4 * i * o +
                o * o +
                r * r -
                4 * r * a +
                2 * r * s +
                4 * a * a -
                4 * a * s +
                s * s,
              9 * n * i -
                3 * n * n -
                3 * n * o -
                6 * i * i +
                3 * i * o +
                9 * r * a -
                3 * r * r -
                3 * r * s -
                6 * a * a +
                3 * a * s,
              3 * n * n -
                6 * n * i +
                n * o -
                n * e +
                2 * i * i +
                2 * i * e -
                o * e +
                3 * r * r -
                6 * r * a +
                r * s -
                r * t +
                2 * a * a +
                2 * a * t -
                s * t,
              1 * n * i - n * n + n * e - i * e + r * a - r * r + r * t - a * t,
              l
            );
            for (var u = 1e-7, c = [], h = 0; h < 6; h += 2)
              Math.abs(l[h + 1]) < u && l[h] >= 0 && l[h] <= 1 && c.push(l[h]);
            c.push(1), c.push(0);
            for (var d, p, g, f = -1, v = 0; v < c.length; v++)
              (d =
                Math.pow(1 - c[v], 2) * n +
                2 * (1 - c[v]) * c[v] * i +
                c[v] * c[v] * o),
                (p =
                  Math.pow(1 - c[v], 2) * r +
                  2 * (1 - c[v]) * c[v] * a +
                  c[v] * c[v] * s),
                (g = Math.pow(d - e, 2) + Math.pow(p - t, 2)),
                f >= 0 ? g < f && (f = g) : (f = g);
            return f;
          },
          Kn = function (e, t, n, r, i, a) {
            var o = [e - n, t - r],
              s = [i - n, a - r],
              l = s[0] * s[0] + s[1] * s[1],
              u = o[0] * o[0] + o[1] * o[1],
              c = o[0] * s[0] + o[1] * s[1],
              h = (c * c) / l;
            return c < 0
              ? u
              : h > l
              ? (e - i) * (e - i) + (t - a) * (t - a)
              : u - h;
          },
          Zn = function (e, t, n) {
            for (var r, i, a, o, s = 0, l = 0; l < n.length / 2; l++)
              if (
                ((r = n[2 * l]),
                (i = n[2 * l + 1]),
                l + 1 < n.length / 2
                  ? ((a = n[2 * (l + 1)]), (o = n[2 * (l + 1) + 1]))
                  : ((a = n[2 * (l + 1 - n.length / 2)]),
                    (o = n[2 * (l + 1 - n.length / 2) + 1])),
                r == e && a == e)
              );
              else {
                if (!((r >= e && e >= a) || (r <= e && e <= a))) continue;
                ((e - r) / (a - r)) * (o - i) + i > t && s++;
              }
            return s % 2 != 0;
          },
          Qn = function (e, t, n, r, i, a, o, s, l) {
            var u,
              c = new Array(n.length);
            null != s[0]
              ? ((u = Math.atan(s[1] / s[0])),
                s[0] < 0 ? (u += Math.PI / 2) : (u = -u - Math.PI / 2))
              : (u = s);
            for (
              var h, d = Math.cos(-u), p = Math.sin(-u), g = 0;
              g < c.length / 2;
              g++
            )
              (c[2 * g] = (a / 2) * (n[2 * g] * d - n[2 * g + 1] * p)),
                (c[2 * g + 1] = (o / 2) * (n[2 * g + 1] * d + n[2 * g] * p)),
                (c[2 * g] += r),
                (c[2 * g + 1] += i);
            if (l > 0) {
              var f = tr(c, -l);
              h = er(f);
            } else h = c;
            return Zn(e, t, h);
          },
          Jn = function (e, t, n, r, i, a, o, s) {
            for (var l = new Array(2 * n.length), u = 0; u < s.length; u++) {
              var c = s[u];
              if (
                ((l[4 * u + 0] = c.startX),
                (l[4 * u + 1] = c.startY),
                (l[4 * u + 2] = c.stopX),
                (l[4 * u + 3] = c.stopY),
                Math.pow(c.cx - e, 2) + Math.pow(c.cy - t, 2) <=
                  Math.pow(c.radius, 2))
              )
                return !0;
            }
            return Zn(e, t, l);
          },
          er = function (e) {
            for (
              var t, n, r, i, a, o, s, l, u = new Array(e.length / 2), c = 0;
              c < e.length / 4;
              c++
            ) {
              (t = e[4 * c]),
                (n = e[4 * c + 1]),
                (r = e[4 * c + 2]),
                (i = e[4 * c + 3]),
                c < e.length / 4 - 1
                  ? ((a = e[4 * (c + 1)]),
                    (o = e[4 * (c + 1) + 1]),
                    (s = e[4 * (c + 1) + 2]),
                    (l = e[4 * (c + 1) + 3]))
                  : ((a = e[0]), (o = e[1]), (s = e[2]), (l = e[3]));
              var h = or(t, n, r, i, a, o, s, l, !0);
              (u[2 * c] = h[0]), (u[2 * c + 1] = h[1]);
            }
            return u;
          },
          tr = function (e, t) {
            for (
              var n, r, i, a, o = new Array(2 * e.length), s = 0;
              s < e.length / 2;
              s++
            ) {
              (n = e[2 * s]),
                (r = e[2 * s + 1]),
                s < e.length / 2 - 1
                  ? ((i = e[2 * (s + 1)]), (a = e[2 * (s + 1) + 1]))
                  : ((i = e[0]), (a = e[1]));
              var l = a - r,
                u = -(i - n),
                c = Math.sqrt(l * l + u * u),
                h = l / c,
                d = u / c;
              (o[4 * s] = n + h * t),
                (o[4 * s + 1] = r + d * t),
                (o[4 * s + 2] = i + h * t),
                (o[4 * s + 3] = a + d * t);
            }
            return o;
          },
          nr = function (e, t, n, r, i, a) {
            var o = n - e,
              s = r - t;
            (o /= i), (s /= a);
            var l = Math.sqrt(o * o + s * s),
              u = l - 1;
            if (u < 0) return [];
            var c = u / l;
            return [(n - e) * c + e, (r - t) * c + t];
          },
          rr = function (e, t, n, r, i, a, o) {
            return (
              (e -= i),
              (t -= a),
              (e /= n / 2 + o) * e + (t /= r / 2 + o) * t <= 1
            );
          },
          ir = function (e, t, n, r, i, a, o) {
            var s = [n - e, r - t],
              l = [e - i, t - a],
              u = s[0] * s[0] + s[1] * s[1],
              c = 2 * (l[0] * s[0] + l[1] * s[1]),
              h = c * c - 4 * u * (l[0] * l[0] + l[1] * l[1] - o * o);
            if (h < 0) return [];
            var d = (-c + Math.sqrt(h)) / (2 * u),
              p = (-c - Math.sqrt(h)) / (2 * u),
              g = Math.min(d, p),
              f = Math.max(d, p),
              v = [];
            if (
              (g >= 0 && g <= 1 && v.push(g),
              f >= 0 && f <= 1 && v.push(f),
              0 === v.length)
            )
              return [];
            var y = v[0] * s[0] + e,
              m = v[0] * s[1] + t;
            return v.length > 1
              ? v[0] == v[1]
                ? [y, m]
                : [y, m, v[1] * s[0] + e, v[1] * s[1] + t]
              : [y, m];
          },
          ar = function (e, t, n) {
            return (t <= e && e <= n) || (n <= e && e <= t)
              ? e
              : (e <= t && t <= n) || (n <= t && t <= e)
              ? t
              : n;
          },
          or = function (e, t, n, r, i, a, o, s, l) {
            var u = e - i,
              c = n - e,
              h = o - i,
              d = t - a,
              p = r - t,
              g = s - a,
              f = h * d - g * u,
              v = c * d - p * u,
              y = g * c - h * p;
            if (0 !== y) {
              var m = f / y,
                b = v / y,
                x = 0.001,
                w = 0 - x,
                E = 1 + x;
              return (w <= m && m <= E && w <= b && b <= E) || l
                ? [e + m * c, t + m * p]
                : [];
            }
            return 0 === f || 0 === v
              ? ar(e, n, o) === o
                ? [o, s]
                : ar(e, n, i) === i
                ? [i, a]
                : ar(i, o, n) === n
                ? [n, r]
                : []
              : [];
          },
          sr = function (e, t, n, r, i, a, o, s) {
            var l,
              u,
              c,
              h,
              d,
              p,
              g = [],
              f = new Array(n.length),
              v = !0;
            if ((null == a && (v = !1), v)) {
              for (var y = 0; y < f.length / 2; y++)
                (f[2 * y] = n[2 * y] * a + r),
                  (f[2 * y + 1] = n[2 * y + 1] * o + i);
              if (s > 0) {
                var m = tr(f, -s);
                u = er(m);
              } else u = f;
            } else u = n;
            for (var b = 0; b < u.length / 2; b++)
              (c = u[2 * b]),
                (h = u[2 * b + 1]),
                b < u.length / 2 - 1
                  ? ((d = u[2 * (b + 1)]), (p = u[2 * (b + 1) + 1]))
                  : ((d = u[0]), (p = u[1])),
                0 !== (l = or(e, t, r, i, c, h, d, p)).length &&
                  g.push(l[0], l[1]);
            return g;
          },
          lr = function (e, t, n, r, i, a, o, s, l) {
            var u,
              c = [],
              h = new Array(2 * n.length);
            l.forEach(function (n, a) {
              0 === a
                ? ((h[h.length - 2] = n.startX), (h[h.length - 1] = n.startY))
                : ((h[4 * a - 2] = n.startX), (h[4 * a - 1] = n.startY)),
                (h[4 * a] = n.stopX),
                (h[4 * a + 1] = n.stopY),
                0 !== (u = ir(e, t, r, i, n.cx, n.cy, n.radius)).length &&
                  c.push(u[0], u[1]);
            });
            for (var d = 0; d < h.length / 4; d++)
              0 !==
                (u = or(
                  e,
                  t,
                  r,
                  i,
                  h[4 * d],
                  h[4 * d + 1],
                  h[4 * d + 2],
                  h[4 * d + 3],
                  !1
                )).length && c.push(u[0], u[1]);
            if (c.length > 2) {
              for (
                var p = [c[0], c[1]],
                  g = Math.pow(p[0] - e, 2) + Math.pow(p[1] - t, 2),
                  f = 1;
                f < c.length / 2;
                f++
              ) {
                var v =
                  Math.pow(c[2 * f] - e, 2) + Math.pow(c[2 * f + 1] - t, 2);
                v <= g && ((p[0] = c[2 * f]), (p[1] = c[2 * f + 1]), (g = v));
              }
              return p;
            }
            return c;
          },
          ur = function (e, t, n) {
            var r = [e[0] - t[0], e[1] - t[1]],
              i = Math.sqrt(r[0] * r[0] + r[1] * r[1]),
              a = (i - n) / i;
            return a < 0 && (a = 1e-5), [t[0] + a * r[0], t[1] + a * r[1]];
          },
          cr = function (e, t) {
            var n = dr(e, t);
            return (n = hr(n));
          },
          hr = function (e) {
            for (
              var t,
                n,
                r = e.length / 2,
                i = 1 / 0,
                a = 1 / 0,
                o = -1 / 0,
                s = -1 / 0,
                l = 0;
              l < r;
              l++
            )
              (t = e[2 * l]),
                (n = e[2 * l + 1]),
                (i = Math.min(i, t)),
                (o = Math.max(o, t)),
                (a = Math.min(a, n)),
                (s = Math.max(s, n));
            for (var u = 2 / (o - i), c = 2 / (s - a), h = 0; h < r; h++)
              (t = e[2 * h] = e[2 * h] * u),
                (n = e[2 * h + 1] = e[2 * h + 1] * c),
                (i = Math.min(i, t)),
                (o = Math.max(o, t)),
                (a = Math.min(a, n)),
                (s = Math.max(s, n));
            if (a < -1)
              for (var d = 0; d < r; d++)
                n = e[2 * d + 1] = e[2 * d + 1] + (-1 - a);
            return e;
          },
          dr = function (e, t) {
            var n = (1 / e) * 2 * Math.PI,
              r = e % 2 == 0 ? Math.PI / 2 + n / 2 : Math.PI / 2;
            r += t;
            for (var i, a = new Array(2 * e), o = 0; o < e; o++)
              (i = o * n + r),
                (a[2 * o] = Math.cos(i)),
                (a[2 * o + 1] = Math.sin(-i));
            return a;
          },
          pr = function (e, t) {
            return Math.min(e / 4, t / 4, 8);
          },
          gr = function (e, t) {
            return Math.min(e / 10, t / 10, 8);
          },
          fr = function () {
            return 8;
          },
          vr = function (e, t, n) {
            return [e - 2 * t + n, 2 * (t - e), e];
          },
          yr = function (e, t) {
            return {
              heightOffset: Math.min(15, 0.05 * t),
              widthOffset: Math.min(100, 0.25 * e),
              ctrlPtOffsetPct: 0.05,
            };
          },
          mr = Rt({
            dampingFactor: 0.8,
            precision: 1e-6,
            iterations: 200,
            weight: function (e) {
              return 1;
            },
          }),
          br = {
            pageRank: function (e) {
              for (
                var t = mr(e),
                  n = t.dampingFactor,
                  r = t.precision,
                  i = t.iterations,
                  a = t.weight,
                  o = this._private.cy,
                  s = this.byGroup(),
                  l = s.nodes,
                  u = s.edges,
                  c = l.length,
                  h = c * c,
                  d = u.length,
                  p = new Array(h),
                  g = new Array(c),
                  f = (1 - n) / c,
                  v = 0;
                v < c;
                v++
              ) {
                for (var y = 0; y < c; y++) p[v * c + y] = 0;
                g[v] = 0;
              }
              for (var m = 0; m < d; m++) {
                var b = u[m],
                  x = b.data("source"),
                  w = b.data("target");
                if (x !== w) {
                  var E = l.indexOfId(x),
                    T = l.indexOfId(w),
                    _ = a(b);
                  (p[T * c + E] += _), (g[E] += _);
                }
              }
              for (var D = 1 / c + f, C = 0; C < c; C++)
                if (0 === g[C]) for (var N = 0; N < c; N++) p[N * c + C] = D;
                else
                  for (var A = 0; A < c; A++) {
                    var L = A * c + C;
                    p[L] = p[L] / g[C] + f;
                  }
              for (var S, O = new Array(c), k = new Array(c), I = 0; I < c; I++)
                O[I] = 1;
              for (var M = 0; M < i; M++) {
                for (var P = 0; P < c; P++) k[P] = 0;
                for (var R = 0; R < c; R++)
                  for (var B = 0; B < c; B++) {
                    var F = R * c + B;
                    k[R] += p[F] * O[B];
                  }
                Cn(k), (S = O), (O = k), (k = S);
                for (var z = 0, G = 0; G < c; G++) {
                  var Y = S[G] - O[G];
                  z += Y * Y;
                }
                if (z < r) break;
              }
              return {
                rank: function (e) {
                  return (e = o.collection(e)[0]), O[l.indexOf(e)];
                },
              };
            },
          },
          xr = Rt({
            root: null,
            weight: function (e) {
              return 1;
            },
            directed: !1,
            alpha: 0,
          }),
          wr = {
            degreeCentralityNormalized: function (e) {
              e = xr(e);
              var t = this.cy(),
                n = this.nodes(),
                r = n.length;
              if (e.directed) {
                for (var i = {}, a = {}, o = 0, s = 0, l = 0; l < r; l++) {
                  var u = n[l],
                    c = u.id();
                  e.root = u;
                  var h = this.degreeCentrality(e);
                  o < h.indegree && (o = h.indegree),
                    s < h.outdegree && (s = h.outdegree),
                    (i[c] = h.indegree),
                    (a[c] = h.outdegree);
                }
                return {
                  indegree: function (e) {
                    return 0 == o
                      ? 0
                      : (w(e) && (e = t.filter(e)), i[e.id()] / o);
                  },
                  outdegree: function (e) {
                    return 0 === s
                      ? 0
                      : (w(e) && (e = t.filter(e)), a[e.id()] / s);
                  },
                };
              }
              for (var d = {}, p = 0, g = 0; g < r; g++) {
                var f = n[g];
                e.root = f;
                var v = this.degreeCentrality(e);
                p < v.degree && (p = v.degree), (d[f.id()] = v.degree);
              }
              return {
                degree: function (e) {
                  return 0 === p
                    ? 0
                    : (w(e) && (e = t.filter(e)), d[e.id()] / p);
                },
              };
            },
            degreeCentrality: function (e) {
              e = xr(e);
              var t = this.cy(),
                n = this,
                r = e,
                i = r.root,
                a = r.weight,
                o = r.directed,
                s = r.alpha;
              if (((i = t.collection(i)[0]), o)) {
                for (
                  var l = i.connectedEdges(),
                    u = l.filter(function (e) {
                      return e.target().same(i) && n.has(e);
                    }),
                    c = l.filter(function (e) {
                      return e.source().same(i) && n.has(e);
                    }),
                    h = u.length,
                    d = c.length,
                    p = 0,
                    g = 0,
                    f = 0;
                  f < u.length;
                  f++
                )
                  p += a(u[f]);
                for (var v = 0; v < c.length; v++) g += a(c[v]);
                return {
                  indegree: Math.pow(h, 1 - s) * Math.pow(p, s),
                  outdegree: Math.pow(d, 1 - s) * Math.pow(g, s),
                };
              }
              for (
                var y = i.connectedEdges().intersection(n),
                  m = y.length,
                  b = 0,
                  x = 0;
                x < y.length;
                x++
              )
                b += a(y[x]);
              return { degree: Math.pow(m, 1 - s) * Math.pow(b, s) };
            },
          };
        (wr.dc = wr.degreeCentrality),
          (wr.dcn = wr.degreeCentralityNormalised =
            wr.degreeCentralityNormalized);
        var Er = Rt({
            harmonic: !0,
            weight: function () {
              return 1;
            },
            directed: !1,
            root: null,
          }),
          Tr = {
            closenessCentralityNormalized: function (e) {
              for (
                var t = Er(e),
                  n = t.harmonic,
                  r = t.weight,
                  i = t.directed,
                  a = this.cy(),
                  o = {},
                  s = 0,
                  l = this.nodes(),
                  u = this.floydWarshall({ weight: r, directed: i }),
                  c = 0;
                c < l.length;
                c++
              ) {
                for (var h = 0, d = l[c], p = 0; p < l.length; p++)
                  if (c !== p) {
                    var g = u.distance(d, l[p]);
                    h += n ? 1 / g : g;
                  }
                n || (h = 1 / h), s < h && (s = h), (o[d.id()] = h);
              }
              return {
                closeness: function (e) {
                  return 0 == s
                    ? 0
                    : ((e = w(e) ? a.filter(e)[0].id() : e.id()), o[e] / s);
                },
              };
            },
            closenessCentrality: function (e) {
              var t = Er(e),
                n = t.root,
                r = t.weight,
                i = t.directed,
                a = t.harmonic;
              n = this.filter(n)[0];
              for (
                var o = this.dijkstra({ root: n, weight: r, directed: i }),
                  s = 0,
                  l = this.nodes(),
                  u = 0;
                u < l.length;
                u++
              ) {
                var c = l[u];
                if (!c.same(n)) {
                  var h = o.distanceTo(c);
                  s += a ? 1 / h : h;
                }
              }
              return a ? s : 1 / s;
            },
          };
        (Tr.cc = Tr.closenessCentrality),
          (Tr.ccn = Tr.closenessCentralityNormalised =
            Tr.closenessCentralityNormalized);
        var _r = Rt({ weight: null, directed: !1 }),
          Dr = {
            betweennessCentrality: function (e) {
              for (
                var t = _r(e),
                  n = t.directed,
                  r = t.weight,
                  i = null != r,
                  a = this.cy(),
                  o = this.nodes(),
                  s = {},
                  l = {},
                  u = 0,
                  c = {
                    set: function (e, t) {
                      (l[e] = t), t > u && (u = t);
                    },
                    get: function (e) {
                      return l[e];
                    },
                  },
                  h = 0;
                h < o.length;
                h++
              ) {
                var d = o[h],
                  p = d.id();
                (s[p] = n
                  ? d.outgoers().nodes()
                  : d.openNeighborhood().nodes()),
                  c.set(p, 0);
              }
              for (
                var g = function (e) {
                    for (
                      var t = o[e].id(),
                        n = [],
                        l = {},
                        u = {},
                        h = {},
                        d = new Zt(function (e, t) {
                          return h[e] - h[t];
                        }),
                        p = 0;
                      p < o.length;
                      p++
                    ) {
                      var g = o[p].id();
                      (l[g] = []), (u[g] = 0), (h[g] = 1 / 0);
                    }
                    for (u[t] = 1, h[t] = 0, d.push(t); !d.empty(); ) {
                      var f = d.pop();
                      if ((n.push(f), i))
                        for (var v = 0; v < s[f].length; v++) {
                          var y = s[f][v],
                            m = a.getElementById(f),
                            b = void 0;
                          b =
                            m.edgesTo(y).length > 0
                              ? m.edgesTo(y)[0]
                              : y.edgesTo(m)[0];
                          var x = r(b);
                          (y = y.id()),
                            h[y] > h[f] + x &&
                              ((h[y] = h[f] + x),
                              d.nodes.indexOf(y) < 0
                                ? d.push(y)
                                : d.updateItem(y),
                              (u[y] = 0),
                              (l[y] = [])),
                            h[y] == h[f] + x &&
                              ((u[y] = u[y] + u[f]), l[y].push(f));
                        }
                      else
                        for (var w = 0; w < s[f].length; w++) {
                          var E = s[f][w].id();
                          h[E] == 1 / 0 && (d.push(E), (h[E] = h[f] + 1)),
                            h[E] == h[f] + 1 &&
                              ((u[E] = u[E] + u[f]), l[E].push(f));
                        }
                    }
                    for (var T = {}, _ = 0; _ < o.length; _++) T[o[_].id()] = 0;
                    for (; n.length > 0; ) {
                      for (var D = n.pop(), C = 0; C < l[D].length; C++) {
                        var N = l[D][C];
                        T[N] = T[N] + (u[N] / u[D]) * (1 + T[D]);
                      }
                      D != o[e].id() && c.set(D, c.get(D) + T[D]);
                    }
                  },
                  f = 0;
                f < o.length;
                f++
              )
                g(f);
              var v = {
                betweenness: function (e) {
                  var t = a.collection(e).id();
                  return c.get(t);
                },
                betweennessNormalized: function (e) {
                  if (0 == u) return 0;
                  var t = a.collection(e).id();
                  return c.get(t) / u;
                },
              };
              return (v.betweennessNormalised = v.betweennessNormalized), v;
            },
          };
        Dr.bc = Dr.betweennessCentrality;
        var Cr = Rt({
            expandFactor: 2,
            inflateFactor: 2,
            multFactor: 1,
            maxIterations: 20,
            attributes: [
              function (e) {
                return 1;
              },
            ],
          }),
          Nr = function (e) {
            return Cr(e);
          },
          Ar = function (e, t) {
            for (var n = 0, r = 0; r < t.length; r++) n += t[r](e);
            return n;
          },
          Lr = function (e, t, n) {
            for (var r = 0; r < t; r++) e[r * t + r] = n;
          },
          Sr = function (e, t) {
            for (var n, r = 0; r < t; r++) {
              n = 0;
              for (var i = 0; i < t; i++) n += e[i * t + r];
              for (var a = 0; a < t; a++) e[a * t + r] = e[a * t + r] / n;
            }
          },
          Or = function (e, t, n) {
            for (var r = new Array(n * n), i = 0; i < n; i++) {
              for (var a = 0; a < n; a++) r[i * n + a] = 0;
              for (var o = 0; o < n; o++)
                for (var s = 0; s < n; s++)
                  r[i * n + s] += e[i * n + o] * t[o * n + s];
            }
            return r;
          },
          kr = function (e, t, n) {
            for (var r = e.slice(0), i = 1; i < n; i++) e = Or(e, r, t);
            return e;
          },
          Ir = function (e, t, n) {
            for (var r = new Array(t * t), i = 0; i < t * t; i++)
              r[i] = Math.pow(e[i], n);
            return Sr(r, t), r;
          },
          Mr = function (e, t, n, r) {
            for (var i = 0; i < n; i++)
              if (
                Math.round(e[i] * Math.pow(10, r)) / Math.pow(10, r) !=
                Math.round(t[i] * Math.pow(10, r)) / Math.pow(10, r)
              )
                return !1;
            return !0;
          },
          Pr = function (e, t, n, r) {
            for (var i = [], a = 0; a < t; a++) {
              for (var o = [], s = 0; s < t; s++)
                Math.round(1e3 * e[a * t + s]) / 1e3 > 0 && o.push(n[s]);
              0 !== o.length && i.push(r.collection(o));
            }
            return i;
          },
          Rr = function (e, t) {
            for (var n = 0; n < e.length; n++)
              if (!t[n] || e[n].id() !== t[n].id()) return !1;
            return !0;
          },
          Br = function (e) {
            for (var t = 0; t < e.length; t++)
              for (var n = 0; n < e.length; n++)
                t != n && Rr(e[t], e[n]) && e.splice(n, 1);
            return e;
          },
          Fr = function (e) {
            for (
              var t = this.nodes(),
                n = this.edges(),
                r = this.cy(),
                i = Nr(e),
                a = {},
                o = 0;
              o < t.length;
              o++
            )
              a[t[o].id()] = o;
            for (
              var s, l = t.length, u = l * l, c = new Array(u), h = 0;
              h < u;
              h++
            )
              c[h] = 0;
            for (var d = 0; d < n.length; d++) {
              var p = n[d],
                g = a[p.source().id()],
                f = a[p.target().id()],
                v = Ar(p, i.attributes);
              (c[g * l + f] += v), (c[f * l + g] += v);
            }
            Lr(c, l, i.multFactor), Sr(c, l);
            for (var y = !0, m = 0; y && m < i.maxIterations; )
              (y = !1),
                (s = kr(c, l, i.expandFactor)),
                (c = Ir(s, l, i.inflateFactor)),
                Mr(c, s, u, 4) || (y = !0),
                m++;
            var b = Pr(c, l, t, r);
            return (b = Br(b));
          },
          zr = { markovClustering: Fr, mcl: Fr },
          Gr = function (e) {
            return e;
          },
          Yr = function (e, t) {
            return Math.abs(t - e);
          },
          Xr = function (e, t, n) {
            return e + Yr(t, n);
          },
          Vr = function (e, t, n) {
            return e + Math.pow(n - t, 2);
          },
          Ur = function (e) {
            return Math.sqrt(e);
          },
          jr = function (e, t, n) {
            return Math.max(e, Yr(t, n));
          },
          Hr = function (e, t, n, r, i) {
            for (
              var a =
                  arguments.length > 5 && void 0 !== arguments[5]
                    ? arguments[5]
                    : Gr,
                o = r,
                s = 0;
              s < e;
              s++
            )
              o = i(o, t(s), n(s));
            return a(o);
          },
          qr = {
            euclidean: function (e, t, n) {
              return e >= 2 ? Hr(e, t, n, 0, Vr, Ur) : Hr(e, t, n, 0, Xr);
            },
            squaredEuclidean: function (e, t, n) {
              return Hr(e, t, n, 0, Vr);
            },
            manhattan: function (e, t, n) {
              return Hr(e, t, n, 0, Xr);
            },
            max: function (e, t, n) {
              return Hr(e, t, n, -1 / 0, jr);
            },
          };
        function Wr(e, t, n, r, i, a) {
          var o;
          return (
            (o = E(e) ? e : qr[e] || qr.euclidean),
            0 === t && E(e) ? o(i, a) : o(t, n, r, i, a)
          );
        }
        (qr["squared-euclidean"] = qr.squaredEuclidean),
          (qr.squaredeuclidean = qr.squaredEuclidean);
        var $r = Rt({
            k: 2,
            m: 2,
            sensitivityThreshold: 1e-4,
            distance: "euclidean",
            maxIterations: 10,
            attributes: [],
            testMode: !1,
            testCentroids: null,
          }),
          Kr = function (e) {
            return $r(e);
          },
          Zr = function (e, t, n, r, i) {
            var a =
                "kMedoids" !== i
                  ? function (e) {
                      return n[e];
                    }
                  : function (e) {
                      return r[e](n);
                    },
              o = function (e) {
                return r[e](t);
              },
              s = n,
              l = t;
            return Wr(e, r.length, a, o, s, l);
          },
          Qr = function (e, t, n) {
            for (
              var r = n.length,
                i = new Array(r),
                a = new Array(r),
                o = new Array(t),
                s = null,
                l = 0;
              l < r;
              l++
            )
              (i[l] = e.min(n[l]).value), (a[l] = e.max(n[l]).value);
            for (var u = 0; u < t; u++) {
              s = [];
              for (var c = 0; c < r; c++)
                s[c] = Math.random() * (a[c] - i[c]) + i[c];
              o[u] = s;
            }
            return o;
          },
          Jr = function (e, t, n, r, i) {
            for (var a = 1 / 0, o = 0, s = 0; s < t.length; s++) {
              var l = Zr(n, e, t[s], r, i);
              l < a && ((a = l), (o = s));
            }
            return o;
          },
          ei = function (e, t, n) {
            for (var r = [], i = null, a = 0; a < t.length; a++)
              n[(i = t[a]).id()] === e && r.push(i);
            return r;
          },
          ti = function (e, t, n) {
            return Math.abs(t - e) <= n;
          },
          ni = function (e, t, n) {
            for (var r = 0; r < e.length; r++)
              for (var i = 0; i < e[r].length; i++)
                if (Math.abs(e[r][i] - t[r][i]) > n) return !1;
            return !0;
          },
          ri = function (e, t, n) {
            for (var r = 0; r < n; r++) if (e === t[r]) return !0;
            return !1;
          },
          ii = function (e, t) {
            var n = new Array(t);
            if (e.length < 50)
              for (var r = 0; r < t; r++) {
                for (
                  var i = e[Math.floor(Math.random() * e.length)];
                  ri(i, n, r);

                )
                  i = e[Math.floor(Math.random() * e.length)];
                n[r] = i;
              }
            else
              for (var a = 0; a < t; a++)
                n[a] = e[Math.floor(Math.random() * e.length)];
            return n;
          },
          ai = function (e, t, n) {
            for (var r = 0, i = 0; i < t.length; i++)
              r += Zr("manhattan", t[i], e, n, "kMedoids");
            return r;
          },
          oi = function (e, t, n, r, i) {
            for (var a, o, s = 0; s < t.length; s++)
              for (var l = 0; l < e.length; l++)
                r[s][l] = Math.pow(n[s][l], i.m);
            for (var u = 0; u < e.length; u++)
              for (var c = 0; c < i.attributes.length; c++) {
                (a = 0), (o = 0);
                for (var h = 0; h < t.length; h++)
                  (a += r[h][u] * i.attributes[c](t[h])), (o += r[h][u]);
                e[u][c] = a / o;
              }
          },
          si = function (e, t, n, r, i) {
            for (var a = 0; a < e.length; a++) t[a] = e[a].slice();
            for (var o, s, l, u = 2 / (i.m - 1), c = 0; c < n.length; c++)
              for (var h = 0; h < r.length; h++) {
                o = 0;
                for (var d = 0; d < n.length; d++)
                  (s = Zr(i.distance, r[h], n[c], i.attributes, "cmeans")),
                    (l = Zr(i.distance, r[h], n[d], i.attributes, "cmeans")),
                    (o += Math.pow(s / l, u));
                e[h][c] = 1 / o;
              }
          },
          li = function (e, t, n, r) {
            for (var i, a, o = new Array(n.k), s = 0; s < o.length; s++)
              o[s] = [];
            for (var l = 0; l < t.length; l++) {
              (i = -1 / 0), (a = -1);
              for (var u = 0; u < t[0].length; u++)
                t[l][u] > i && ((i = t[l][u]), (a = u));
              o[a].push(e[l]);
            }
            for (var c = 0; c < o.length; c++) o[c] = r.collection(o[c]);
            return o;
          },
          ui = function (e) {
            var t,
              n,
              r,
              i,
              a = this.cy(),
              o = this.nodes(),
              s = Kr(e);
            r = new Array(o.length);
            for (var l = 0; l < o.length; l++) r[l] = new Array(s.k);
            n = new Array(o.length);
            for (var u = 0; u < o.length; u++) n[u] = new Array(s.k);
            for (var c = 0; c < o.length; c++) {
              for (var h = 0, d = 0; d < s.k; d++)
                (n[c][d] = Math.random()), (h += n[c][d]);
              for (var p = 0; p < s.k; p++) n[c][p] = n[c][p] / h;
            }
            t = new Array(s.k);
            for (var g = 0; g < s.k; g++) t[g] = new Array(s.attributes.length);
            i = new Array(o.length);
            for (var f = 0; f < o.length; f++) i[f] = new Array(s.k);
            for (var v = !0, y = 0; v && y < s.maxIterations; )
              (v = !1),
                oi(t, o, n, i, s),
                si(n, r, t, o, s),
                ni(n, r, s.sensitivityThreshold) || (v = !0),
                y++;
            return { clusters: li(o, n, s, a), degreeOfMembership: n };
          },
          ci = {
            kMeans: function (t) {
              var n,
                r = this.cy(),
                i = this.nodes(),
                a = null,
                o = Kr(t),
                s = new Array(o.k),
                l = {};
              o.testMode
                ? "number" == typeof o.testCentroids
                  ? (o.testCentroids, (n = Qr(i, o.k, o.attributes)))
                  : (n =
                      "object" === e(o.testCentroids)
                        ? o.testCentroids
                        : Qr(i, o.k, o.attributes))
                : (n = Qr(i, o.k, o.attributes));
              for (var u = !0, c = 0; u && c < o.maxIterations; ) {
                for (var h = 0; h < i.length; h++)
                  l[(a = i[h]).id()] = Jr(
                    a,
                    n,
                    o.distance,
                    o.attributes,
                    "kMeans"
                  );
                u = !1;
                for (var d = 0; d < o.k; d++) {
                  var p = ei(d, i, l);
                  if (0 !== p.length) {
                    for (
                      var g = o.attributes.length,
                        f = n[d],
                        v = new Array(g),
                        y = new Array(g),
                        m = 0;
                      m < g;
                      m++
                    ) {
                      y[m] = 0;
                      for (var b = 0; b < p.length; b++)
                        (a = p[b]), (y[m] += o.attributes[m](a));
                      (v[m] = y[m] / p.length),
                        ti(v[m], f[m], o.sensitivityThreshold) || (u = !0);
                    }
                    (n[d] = v), (s[d] = r.collection(p));
                  }
                }
                c++;
              }
              return s;
            },
            kMedoids: function (t) {
              var n,
                r,
                i = this.cy(),
                a = this.nodes(),
                o = null,
                s = Kr(t),
                l = new Array(s.k),
                u = {},
                c = new Array(s.k);
              s.testMode
                ? "number" == typeof s.testCentroids ||
                  (n =
                    "object" === e(s.testCentroids)
                      ? s.testCentroids
                      : ii(a, s.k))
                : (n = ii(a, s.k));
              for (var h = !0, d = 0; h && d < s.maxIterations; ) {
                for (var p = 0; p < a.length; p++)
                  u[(o = a[p]).id()] = Jr(
                    o,
                    n,
                    s.distance,
                    s.attributes,
                    "kMedoids"
                  );
                h = !1;
                for (var g = 0; g < n.length; g++) {
                  var f = ei(g, a, u);
                  if (0 !== f.length) {
                    c[g] = ai(n[g], f, s.attributes);
                    for (var v = 0; v < f.length; v++)
                      (r = ai(f[v], f, s.attributes)) < c[g] &&
                        ((c[g] = r), (n[g] = f[v]), (h = !0));
                    l[g] = i.collection(f);
                  }
                }
                d++;
              }
              return l;
            },
            fuzzyCMeans: ui,
            fcm: ui,
          },
          hi = Rt({
            distance: "euclidean",
            linkage: "min",
            mode: "threshold",
            threshold: 1 / 0,
            addDendrogram: !1,
            dendrogramDepth: 0,
            attributes: [],
          }),
          di = { single: "min", complete: "max" },
          pi = function (e) {
            var t = hi(e),
              n = di[t.linkage];
            return null != n && (t.linkage = n), t;
          },
          gi = function (e, t, n, r, i) {
            for (
              var a,
                o = 0,
                s = 1 / 0,
                l = i.attributes,
                u = function (e, t) {
                  return Wr(
                    i.distance,
                    l.length,
                    function (t) {
                      return l[t](e);
                    },
                    function (e) {
                      return l[e](t);
                    },
                    e,
                    t
                  );
                },
                c = 0;
              c < e.length;
              c++
            ) {
              var h = e[c].key,
                d = n[h][r[h]];
              d < s && ((o = h), (s = d));
            }
            if (
              ("threshold" === i.mode && s >= i.threshold) ||
              ("dendrogram" === i.mode && 1 === e.length)
            )
              return !1;
            var p,
              g = t[o],
              f = t[r[o]];
            (p =
              "dendrogram" === i.mode
                ? { left: g, right: f, key: g.key }
                : { value: g.value.concat(f.value), key: g.key }),
              (e[g.index] = p),
              e.splice(f.index, 1),
              (t[g.key] = p);
            for (var v = 0; v < e.length; v++) {
              var y = e[v];
              g.key === y.key
                ? (a = 1 / 0)
                : "min" === i.linkage
                ? ((a = n[g.key][y.key]),
                  n[g.key][y.key] > n[f.key][y.key] && (a = n[f.key][y.key]))
                : "max" === i.linkage
                ? ((a = n[g.key][y.key]),
                  n[g.key][y.key] < n[f.key][y.key] && (a = n[f.key][y.key]))
                : (a =
                    "mean" === i.linkage
                      ? (n[g.key][y.key] * g.size + n[f.key][y.key] * f.size) /
                        (g.size + f.size)
                      : "dendrogram" === i.mode
                      ? u(y.value, g.value)
                      : u(y.value[0], g.value[0])),
                (n[g.key][y.key] = n[y.key][g.key] = a);
            }
            for (var m = 0; m < e.length; m++) {
              var b = e[m].key;
              if (r[b] === g.key || r[b] === f.key) {
                for (var x = b, w = 0; w < e.length; w++) {
                  var E = e[w].key;
                  n[b][E] < n[b][x] && (x = E);
                }
                r[b] = x;
              }
              e[m].index = m;
            }
            return (g.key = f.key = g.index = f.index = null), !0;
          },
          fi = function e(t, n, r) {
            t &&
              (t.value
                ? n.push(t.value)
                : (t.left && e(t.left, n), t.right && e(t.right, n)));
          },
          vi = function e(t, n) {
            if (!t) return "";
            if (t.left && t.right) {
              var r = e(t.left, n),
                i = e(t.right, n),
                a = n.add({ group: "nodes", data: { id: r + "," + i } });
              return (
                n.add({ group: "edges", data: { source: r, target: a.id() } }),
                n.add({ group: "edges", data: { source: i, target: a.id() } }),
                a.id()
              );
            }
            return t.value ? t.value.id() : void 0;
          },
          yi = function e(t, n, r) {
            if (!t) return [];
            var i = [],
              a = [],
              o = [];
            return 0 === n
              ? (t.left && fi(t.left, i),
                t.right && fi(t.right, a),
                (o = i.concat(a)),
                [r.collection(o)])
              : 1 === n
              ? t.value
                ? [r.collection(t.value)]
                : (t.left && fi(t.left, i),
                  t.right && fi(t.right, a),
                  [r.collection(i), r.collection(a)])
              : t.value
              ? [r.collection(t.value)]
              : (t.left && (i = e(t.left, n - 1, r)),
                t.right && (a = e(t.right, n - 1, r)),
                i.concat(a));
          },
          mi = function (e) {
            for (
              var t = this.cy(),
                n = this.nodes(),
                r = pi(e),
                i = r.attributes,
                a = function (e, t) {
                  return Wr(
                    r.distance,
                    i.length,
                    function (t) {
                      return i[t](e);
                    },
                    function (e) {
                      return i[e](t);
                    },
                    e,
                    t
                  );
                },
                o = [],
                s = [],
                l = [],
                u = [],
                c = 0;
              c < n.length;
              c++
            ) {
              var h = {
                value: "dendrogram" === r.mode ? n[c] : [n[c]],
                key: c,
                index: c,
              };
              (o[c] = h), (u[c] = h), (s[c] = []), (l[c] = 0);
            }
            for (var d = 0; d < o.length; d++)
              for (var p = 0; p <= d; p++) {
                var g = void 0;
                (g =
                  "dendrogram" === r.mode
                    ? d === p
                      ? 1 / 0
                      : a(o[d].value, o[p].value)
                    : d === p
                    ? 1 / 0
                    : a(o[d].value[0], o[p].value[0])),
                  (s[d][p] = g),
                  (s[p][d] = g),
                  g < s[d][l[d]] && (l[d] = p);
              }
            for (var f, v = gi(o, u, s, l, r); v; ) v = gi(o, u, s, l, r);
            return (
              "dendrogram" === r.mode
                ? ((f = yi(o[0], r.dendrogramDepth, t)),
                  r.addDendrogram && vi(o[0], t))
                : ((f = new Array(o.length)),
                  o.forEach(function (e, n) {
                    (e.key = e.index = null), (f[n] = t.collection(e.value));
                  })),
              f
            );
          },
          bi = { hierarchicalClustering: mi, hca: mi },
          xi = Rt({
            distance: "euclidean",
            preference: "median",
            damping: 0.8,
            maxIterations: 1e3,
            minIterations: 100,
            attributes: [],
          }),
          wi = function (e) {
            var t = e.damping,
              n = e.preference;
            (0.5 <= t && t < 1) ||
              Nt("Damping must range on [0.5, 1).  Got: ".concat(t));
            var r = ["median", "mean", "min", "max"];
            return (
              r.some(function (e) {
                return e === n;
              }) ||
                C(n) ||
                Nt(
                  "Preference must be one of ["
                    .concat(
                      r
                        .map(function (e) {
                          return "'".concat(e, "'");
                        })
                        .join(", "),
                      "] or a number.  Got: "
                    )
                    .concat(n)
                ),
              xi(e)
            );
          },
          Ei = function (e, t, n, r) {
            var i = function (e, t) {
              return r[t](e);
            };
            return -Wr(
              e,
              r.length,
              function (e) {
                return i(t, e);
              },
              function (e) {
                return i(n, e);
              },
              t,
              n
            );
          },
          Ti = function (e, t) {
            return "median" === t
              ? bn(e)
              : "mean" === t
              ? mn(e)
              : "min" === t
              ? vn(e)
              : "max" === t
              ? yn(e)
              : t;
          },
          _i = function (e, t, n) {
            for (var r = [], i = 0; i < e; i++)
              t[i * e + i] + n[i * e + i] > 0 && r.push(i);
            return r;
          },
          Di = function (e, t, n) {
            for (var r = [], i = 0; i < e; i++) {
              for (var a = -1, o = -1 / 0, s = 0; s < n.length; s++) {
                var l = n[s];
                t[i * e + l] > o && ((a = l), (o = t[i * e + l]));
              }
              a > 0 && r.push(a);
            }
            for (var u = 0; u < n.length; u++) r[n[u]] = n[u];
            return r;
          },
          Ci = function (e, t, n) {
            for (var r = Di(e, t, n), i = 0; i < n.length; i++) {
              for (var a = [], o = 0; o < r.length; o++)
                r[o] === n[i] && a.push(o);
              for (var s = -1, l = -1 / 0, u = 0; u < a.length; u++) {
                for (var c = 0, h = 0; h < a.length; h++)
                  c += t[a[h] * e + a[u]];
                c > l && ((s = u), (l = c));
              }
              n[i] = a[s];
            }
            return (r = Di(e, t, n));
          },
          Ni = function (e) {
            for (
              var t,
                n,
                r,
                i,
                a,
                o,
                s = this.cy(),
                l = this.nodes(),
                u = wi(e),
                c = {},
                h = 0;
              h < l.length;
              h++
            )
              c[l[h].id()] = h;
            (n = (t = l.length) * t), (r = new Array(n));
            for (var d = 0; d < n; d++) r[d] = -1 / 0;
            for (var p = 0; p < t; p++)
              for (var g = 0; g < t; g++)
                p !== g &&
                  (r[p * t + g] = Ei(u.distance, l[p], l[g], u.attributes));
            i = Ti(r, u.preference);
            for (var f = 0; f < t; f++) r[f * t + f] = i;
            a = new Array(n);
            for (var v = 0; v < n; v++) a[v] = 0;
            o = new Array(n);
            for (var y = 0; y < n; y++) o[y] = 0;
            for (
              var m = new Array(t), b = new Array(t), x = new Array(t), w = 0;
              w < t;
              w++
            )
              (m[w] = 0), (b[w] = 0), (x[w] = 0);
            for (
              var E, T = new Array(t * u.minIterations), _ = 0;
              _ < T.length;
              _++
            )
              T[_] = 0;
            for (E = 0; E < u.maxIterations; E++) {
              for (var D = 0; D < t; D++) {
                for (
                  var C = -1 / 0, N = -1 / 0, A = -1, L = 0, S = 0;
                  S < t;
                  S++
                )
                  (m[S] = a[D * t + S]),
                    (L = o[D * t + S] + r[D * t + S]) >= C
                      ? ((N = C), (C = L), (A = S))
                      : L > N && (N = L);
                for (var O = 0; O < t; O++)
                  a[D * t + O] =
                    (1 - u.damping) * (r[D * t + O] - C) + u.damping * m[O];
                a[D * t + A] =
                  (1 - u.damping) * (r[D * t + A] - N) + u.damping * m[A];
              }
              for (var k = 0; k < t; k++) {
                for (var I = 0, M = 0; M < t; M++)
                  (m[M] = o[M * t + k]),
                    (b[M] = Math.max(0, a[M * t + k])),
                    (I += b[M]);
                (I -= b[k]), (b[k] = a[k * t + k]), (I += b[k]);
                for (var P = 0; P < t; P++)
                  o[P * t + k] =
                    (1 - u.damping) * Math.min(0, I - b[P]) + u.damping * m[P];
                o[k * t + k] = (1 - u.damping) * (I - b[k]) + u.damping * m[k];
              }
              for (var R = 0, B = 0; B < t; B++) {
                var F = o[B * t + B] + a[B * t + B] > 0 ? 1 : 0;
                (T[(E % u.minIterations) * t + B] = F), (R += F);
              }
              if (
                R > 0 &&
                (E >= u.minIterations - 1 || E == u.maxIterations - 1)
              ) {
                for (var z = 0, G = 0; G < t; G++) {
                  x[G] = 0;
                  for (var Y = 0; Y < u.minIterations; Y++)
                    x[G] += T[Y * t + G];
                  (0 !== x[G] && x[G] !== u.minIterations) || z++;
                }
                if (z === t) break;
              }
            }
            for (
              var X = _i(t, a, o), V = Ci(t, r, X), U = {}, j = 0;
              j < X.length;
              j++
            )
              U[X[j]] = [];
            for (var H = 0; H < l.length; H++) {
              var q = V[c[l[H].id()]];
              null != q && U[q].push(l[H]);
            }
            for (var W = new Array(X.length), $ = 0; $ < X.length; $++)
              W[$] = s.collection(U[X[$]]);
            return W;
          },
          Ai = { affinityPropagation: Ni, ap: Ni },
          Li = Rt({ root: void 0, directed: !1 }),
          Si = {
            hierholzer: function (e) {
              if (!_(e)) {
                var t = arguments;
                e = { root: t[0], directed: t[1] };
              }
              var n,
                r,
                i,
                a = Li(e),
                o = a.root,
                s = a.directed,
                l = this,
                u = !1;
              o && (i = w(o) ? this.filter(o)[0].id() : o[0].id());
              var c = {},
                h = {};
              s
                ? l.forEach(function (e) {
                    var t = e.id();
                    if (e.isNode()) {
                      var i = e.indegree(!0),
                        a = e.outdegree(!0),
                        o = i - a,
                        s = a - i;
                      1 == o
                        ? n
                          ? (u = !0)
                          : (n = t)
                        : 1 == s
                        ? r
                          ? (u = !0)
                          : (r = t)
                        : (s > 1 || o > 1) && (u = !0),
                        (c[t] = []),
                        e.outgoers().forEach(function (e) {
                          e.isEdge() && c[t].push(e.id());
                        });
                    } else h[t] = [void 0, e.target().id()];
                  })
                : l.forEach(function (e) {
                    var t = e.id();
                    e.isNode()
                      ? (e.degree(!0) % 2 &&
                          (n ? (r ? (u = !0) : (r = t)) : (n = t)),
                        (c[t] = []),
                        e.connectedEdges().forEach(function (e) {
                          return c[t].push(e.id());
                        }))
                      : (h[t] = [e.source().id(), e.target().id()]);
                  });
              var d = { found: !1, trail: void 0 };
              if (u) return d;
              if (r && n)
                if (s) {
                  if (i && r != i) return d;
                  i = r;
                } else {
                  if (i && r != i && n != i) return d;
                  i || (i = r);
                }
              else i || (i = l[0].id());
              var p = function (e) {
                  for (var t, n, r, i = e, a = [e]; c[i].length; )
                    (t = c[i].shift()),
                      (n = h[t][0]),
                      i != (r = h[t][1])
                        ? ((c[r] = c[r].filter(function (e) {
                            return e != t;
                          })),
                          (i = r))
                        : s ||
                          i == n ||
                          ((c[n] = c[n].filter(function (e) {
                            return e != t;
                          })),
                          (i = n)),
                      a.unshift(t),
                      a.unshift(i);
                  return a;
                },
                g = [],
                f = [];
              for (f = p(i); 1 != f.length; )
                0 == c[f[0]].length
                  ? (g.unshift(l.getElementById(f.shift())),
                    g.unshift(l.getElementById(f.shift())))
                  : (f = p(f.shift()).concat(f));
              for (var v in (g.unshift(l.getElementById(f.shift())), c))
                if (c[v].length) return d;
              return (d.found = !0), (d.trail = this.spawn(g, !0)), d;
            },
          },
          Oi = function () {
            var e = this,
              t = {},
              n = 0,
              r = 0,
              i = [],
              a = [],
              o = {},
              s = function (n, r) {
                for (
                  var o = a.length - 1, s = [], l = e.spawn();
                  a[o].x != n || a[o].y != r;

                )
                  s.push(a.pop().edge), o--;
                s.push(a.pop().edge),
                  s.forEach(function (n) {
                    var r = n.connectedNodes().intersection(e);
                    l.merge(n),
                      r.forEach(function (n) {
                        var r = n.id(),
                          i = n.connectedEdges().intersection(e);
                        l.merge(n),
                          t[r].cutVertex
                            ? l.merge(
                                i.filter(function (e) {
                                  return e.isLoop();
                                })
                              )
                            : l.merge(i);
                      });
                  }),
                  i.push(l);
              },
              l = function l(u, c, h) {
                u === h && (r += 1),
                  (t[c] = { id: n, low: n++, cutVertex: !1 });
                var d,
                  p,
                  g,
                  f,
                  v = e.getElementById(c).connectedEdges().intersection(e);
                0 === v.size()
                  ? i.push(e.spawn(e.getElementById(c)))
                  : v.forEach(function (e) {
                      (d = e.source().id()),
                        (p = e.target().id()),
                        (g = d === c ? p : d) !== h &&
                          ((f = e.id()),
                          o[f] ||
                            ((o[f] = !0), a.push({ x: c, y: g, edge: e })),
                          g in t
                            ? (t[c].low = Math.min(t[c].low, t[g].id))
                            : (l(u, g, c),
                              (t[c].low = Math.min(t[c].low, t[g].low)),
                              t[c].id <= t[g].low &&
                                ((t[c].cutVertex = !0), s(c, g))));
                    });
              };
            e.forEach(function (e) {
              if (e.isNode()) {
                var n = e.id();
                n in t || ((r = 0), l(n, n), (t[n].cutVertex = r > 1));
              }
            });
            var u = Object.keys(t)
              .filter(function (e) {
                return t[e].cutVertex;
              })
              .map(function (t) {
                return e.getElementById(t);
              });
            return { cut: e.spawn(u), components: i };
          },
          ki = function () {
            var e = this,
              t = {},
              n = 0,
              r = [],
              i = [],
              a = e.spawn(e),
              o = function o(s) {
                if (
                  (i.push(s),
                  (t[s] = { index: n, low: n++, explored: !1 }),
                  e
                    .getElementById(s)
                    .connectedEdges()
                    .intersection(e)
                    .forEach(function (e) {
                      var n = e.target().id();
                      n !== s &&
                        (n in t || o(n),
                        t[n].explored ||
                          (t[s].low = Math.min(t[s].low, t[n].low)));
                    }),
                  t[s].index === t[s].low)
                ) {
                  for (var l = e.spawn(); ; ) {
                    var u = i.pop();
                    if (
                      (l.merge(e.getElementById(u)),
                      (t[u].low = t[s].index),
                      (t[u].explored = !0),
                      u === s)
                    )
                      break;
                  }
                  var c = l.edgesWith(l),
                    h = l.merge(c);
                  r.push(h), (a = a.difference(h));
                }
              };
            return (
              e.forEach(function (e) {
                if (e.isNode()) {
                  var n = e.id();
                  n in t || o(n);
                }
              }),
              { cut: a, components: r }
            );
          },
          Ii = {};
        [
          $t,
          Jt,
          en,
          nn,
          an,
          sn,
          hn,
          br,
          wr,
          Tr,
          Dr,
          zr,
          ci,
          bi,
          Ai,
          Si,
          {
            hopcroftTarjanBiconnected: Oi,
            htbc: Oi,
            htb: Oi,
            hopcroftTarjanBiconnectedComponents: Oi,
          },
          {
            tarjanStronglyConnected: ki,
            tsc: ki,
            tscc: ki,
            tarjanStronglyConnectedComponents: ki,
          },
        ].forEach(function (e) {
          ee(Ii, e);
        });
        var Mi = 0,
          Pi = 1,
          Ri = 2,
          Bi = function e(t) {
            if (!(this instanceof e)) return new e(t);
            (this.id = "Thenable/1.0.7"),
              (this.state = Mi),
              (this.fulfillValue = void 0),
              (this.rejectReason = void 0),
              (this.onFulfilled = []),
              (this.onRejected = []),
              (this.proxy = { then: this.then.bind(this) }),
              "function" == typeof t &&
                t.call(this, this.fulfill.bind(this), this.reject.bind(this));
          };
        Bi.prototype = {
          fulfill: function (e) {
            return Fi(this, Pi, "fulfillValue", e);
          },
          reject: function (e) {
            return Fi(this, Ri, "rejectReason", e);
          },
          then: function (e, t) {
            var n = this,
              r = new Bi();
            return (
              n.onFulfilled.push(Yi(e, r, "fulfill")),
              n.onRejected.push(Yi(t, r, "reject")),
              zi(n),
              r.proxy
            );
          },
        };
        var Fi = function (e, t, n, r) {
            return e.state === Mi && ((e.state = t), (e[n] = r), zi(e)), e;
          },
          zi = function (e) {
            e.state === Pi
              ? Gi(e, "onFulfilled", e.fulfillValue)
              : e.state === Ri && Gi(e, "onRejected", e.rejectReason);
          },
          Gi = function (e, t, n) {
            if (0 !== e[t].length) {
              var r = e[t];
              e[t] = [];
              var i = function () {
                for (var e = 0; e < r.length; e++) r[e](n);
              };
              "function" == typeof setImmediate
                ? setImmediate(i)
                : setTimeout(i, 0);
            }
          },
          Yi = function (e, t, n) {
            return function (r) {
              if ("function" != typeof e) t[n].call(t, r);
              else {
                var i;
                try {
                  i = e(r);
                } catch (a) {
                  return void t.reject(a);
                }
                Xi(t, i);
              }
            };
          },
          Xi = function t(n, r) {
            if (n !== r && n.proxy !== r) {
              var i;
              if (("object" === e(r) && null !== r) || "function" == typeof r)
                try {
                  i = r.then;
                } catch (o) {
                  return void n.reject(o);
                }
              if ("function" != typeof i) n.fulfill(r);
              else {
                var a = !1;
                try {
                  i.call(
                    r,
                    function (e) {
                      a ||
                        ((a = !0),
                        e === r
                          ? n.reject(new TypeError("circular thenable chain"))
                          : t(n, e));
                    },
                    function (e) {
                      a || ((a = !0), n.reject(e));
                    }
                  );
                } catch (o) {
                  a || n.reject(o);
                }
              }
            } else
              n.reject(new TypeError("cannot resolve promise with itself"));
          };
        (Bi.all = function (e) {
          return new Bi(function (t, n) {
            for (
              var r = new Array(e.length),
                i = 0,
                a = function (n, a) {
                  (r[n] = a), ++i === e.length && t(r);
                },
                o = 0;
              o < e.length;
              o++
            )
              !(function (t) {
                var r = e[t];
                null != r && null != r.then
                  ? r.then(
                      function (e) {
                        a(t, e);
                      },
                      function (e) {
                        n(e);
                      }
                    )
                  : a(t, r);
              })(o);
          });
        }),
          (Bi.resolve = function (e) {
            return new Bi(function (t, n) {
              t(e);
            });
          }),
          (Bi.reject = function (e) {
            return new Bi(function (t, n) {
              n(e);
            });
          });
        var Vi = "undefined" != typeof Promise ? Promise : Bi,
          Ui = function (e, t, n) {
            var r = k(e),
              i = !r,
              a = (this._private = ee({ duration: 1e3 }, t, n));
            if (
              ((a.target = e),
              (a.style = a.style || a.css),
              (a.started = !1),
              (a.playing = !1),
              (a.hooked = !1),
              (a.applying = !1),
              (a.progress = 0),
              (a.completes = []),
              (a.frames = []),
              a.complete && E(a.complete) && a.completes.push(a.complete),
              i)
            ) {
              var o = e.position();
              (a.startPosition = a.startPosition || { x: o.x, y: o.y }),
                (a.startStyle =
                  a.startStyle ||
                  e.cy().style().getAnimationStartStyle(e, a.style));
            }
            if (r) {
              var s = e.pan();
              (a.startPan = { x: s.x, y: s.y }), (a.startZoom = e.zoom());
            }
            (this.length = 1), (this[0] = this);
          },
          ji = Ui.prototype;
        ee(ji, {
          instanceString: function () {
            return "animation";
          },
          hook: function () {
            var e = this._private;
            if (!e.hooked) {
              var t = e.target._private.animation;
              (e.queue ? t.queue : t.current).push(this),
                L(e.target) && e.target.cy().addToAnimationPool(e.target),
                (e.hooked = !0);
            }
            return this;
          },
          play: function () {
            var e = this._private;
            return (
              1 === e.progress && (e.progress = 0),
              (e.playing = !0),
              (e.started = !1),
              (e.stopped = !1),
              this.hook(),
              this
            );
          },
          playing: function () {
            return this._private.playing;
          },
          apply: function () {
            var e = this._private;
            return (
              (e.applying = !0),
              (e.started = !1),
              (e.stopped = !1),
              this.hook(),
              this
            );
          },
          applying: function () {
            return this._private.applying;
          },
          pause: function () {
            var e = this._private;
            return (e.playing = !1), (e.started = !1), this;
          },
          stop: function () {
            var e = this._private;
            return (e.playing = !1), (e.started = !1), (e.stopped = !0), this;
          },
          rewind: function () {
            return this.progress(0);
          },
          fastforward: function () {
            return this.progress(1);
          },
          time: function (e) {
            var t = this._private;
            return void 0 === e
              ? t.progress * t.duration
              : this.progress(e / t.duration);
          },
          progress: function (e) {
            var t = this._private,
              n = t.playing;
            return void 0 === e
              ? t.progress
              : (n && this.pause(),
                (t.progress = e),
                (t.started = !1),
                n && this.play(),
                this);
          },
          completed: function () {
            return 1 === this._private.progress;
          },
          reverse: function () {
            var e = this._private,
              t = e.playing;
            t && this.pause(), (e.progress = 1 - e.progress), (e.started = !1);
            var n = function (t, n) {
              var r = e[t];
              null != r && ((e[t] = e[n]), (e[n] = r));
            };
            if (
              (n("zoom", "startZoom"),
              n("pan", "startPan"),
              n("position", "startPosition"),
              e.style)
            )
              for (var r = 0; r < e.style.length; r++) {
                var i = e.style[r],
                  a = i.name,
                  o = e.startStyle[a];
                (e.startStyle[a] = i), (e.style[r] = o);
              }
            return t && this.play(), this;
          },
          promise: function (e) {
            var t,
              n = this._private;
            return (
              (t = "frame" === e ? n.frames : n.completes),
              new Vi(function (e, n) {
                t.push(function () {
                  e();
                });
              })
            );
          },
        }),
          (ji.complete = ji.completed),
          (ji.run = ji.play),
          (ji.running = ji.playing);
        var Hi = {
            animated: function () {
              return function () {
                var e = this,
                  t = void 0 !== e.length ? e : [e];
                if (!(this._private.cy || this).styleEnabled()) return !1;
                var n = t[0];
                return n ? n._private.animation.current.length > 0 : void 0;
              };
            },
            clearQueue: function () {
              return function () {
                var e = this,
                  t = void 0 !== e.length ? e : [e];
                if (!(this._private.cy || this).styleEnabled()) return this;
                for (var n = 0; n < t.length; n++)
                  t[n]._private.animation.queue = [];
                return this;
              };
            },
            delay: function () {
              return function (e, t) {
                return (this._private.cy || this).styleEnabled()
                  ? this.animate({ delay: e, duration: e, complete: t })
                  : this;
              };
            },
            delayAnimation: function () {
              return function (e, t) {
                return (this._private.cy || this).styleEnabled()
                  ? this.animation({ delay: e, duration: e, complete: t })
                  : this;
              };
            },
            animation: function () {
              return function (e, t) {
                var n = this,
                  r = void 0 !== n.length,
                  i = r ? n : [n],
                  a = this._private.cy || this,
                  o = !r,
                  s = !o;
                if (!a.styleEnabled()) return this;
                var l = a.style();
                if (((e = ee({}, e, t)), 0 === Object.keys(e).length))
                  return new Ui(i[0], e);
                switch (
                  (void 0 === e.duration && (e.duration = 400), e.duration)
                ) {
                  case "slow":
                    e.duration = 600;
                    break;
                  case "fast":
                    e.duration = 200;
                }
                if (
                  (s &&
                    ((e.style = l.getPropsList(e.style || e.css)),
                    (e.css = void 0)),
                  s && null != e.renderedPosition)
                ) {
                  var u = e.renderedPosition,
                    c = a.pan(),
                    h = a.zoom();
                  e.position = gn(u, h, c);
                }
                if (o && null != e.panBy) {
                  var d = e.panBy,
                    p = a.pan();
                  e.pan = { x: p.x + d.x, y: p.y + d.y };
                }
                var g = e.center || e.centre;
                if (o && null != g) {
                  var f = a.getCenterPan(g.eles, e.zoom);
                  null != f && (e.pan = f);
                }
                if (o && null != e.fit) {
                  var v = e.fit,
                    y = a.getFitViewport(v.eles || v.boundingBox, v.padding);
                  null != y && ((e.pan = y.pan), (e.zoom = y.zoom));
                }
                if (o && _(e.zoom)) {
                  var m = a.getZoomedViewport(e.zoom);
                  null != m
                    ? (m.zoomed && (e.zoom = m.zoom),
                      m.panned && (e.pan = m.pan))
                    : (e.zoom = null);
                }
                return new Ui(i[0], e);
              };
            },
            animate: function () {
              return function (e, t) {
                var n = this,
                  r = void 0 !== n.length ? n : [n];
                if (!(this._private.cy || this).styleEnabled()) return this;
                t && (e = ee({}, e, t));
                for (var i = 0; i < r.length; i++) {
                  var a = r[i],
                    o = a.animated() && (void 0 === e.queue || e.queue);
                  a.animation(e, o ? { queue: !0 } : void 0).play();
                }
                return this;
              };
            },
            stop: function () {
              return function (e, t) {
                var n = this,
                  r = void 0 !== n.length ? n : [n],
                  i = this._private.cy || this;
                if (!i.styleEnabled()) return this;
                for (var a = 0; a < r.length; a++) {
                  for (
                    var o = r[a]._private, s = o.animation.current, l = 0;
                    l < s.length;
                    l++
                  ) {
                    var u = s[l]._private;
                    t && (u.duration = 0);
                  }
                  e && (o.animation.queue = []),
                    t || (o.animation.current = []);
                }
                return i.notify("draw"), this;
              };
            },
          },
          qi = Array.isArray,
          Wi = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
          $i = /^\w*$/;
        function Ki(e, t) {
          if (qi(e)) return !1;
          var n = typeof e;
          return (
            !(
              "number" != n &&
              "symbol" != n &&
              "boolean" != n &&
              null != e &&
              !Xe(e)
            ) ||
            $i.test(e) ||
            !Wi.test(e) ||
            (null != t && e in Object(t))
          );
        }
        var Zi = Ki,
          Qi = "[object AsyncFunction]",
          Ji = "[object Function]",
          ea = "[object GeneratorFunction]",
          ta = "[object Proxy]";
        function na(e) {
          if (!ce(e)) return !1;
          var t = Be(e);
          return t == Ji || t == ea || t == Qi || t == ta;
        }
        var ra,
          ia = na,
          aa = fe["__core-js_shared__"],
          oa = (ra = /[^.]+$/.exec((aa && aa.keys && aa.keys.IE_PROTO) || ""))
            ? "Symbol(src)_1." + ra
            : "";
        function sa(e) {
          return !!oa && oa in e;
        }
        var la = sa,
          ua = Function.prototype.toString;
        function ca(e) {
          if (null != e) {
            try {
              return ua.call(e);
            } catch (t) {}
            try {
              return e + "";
            } catch (t) {}
          }
          return "";
        }
        var ha = ca,
          da = /[\\^$.*+?()[\]{}|]/g,
          pa = /^\[object .+?Constructor\]$/,
          ga = Function.prototype,
          fa = Object.prototype,
          va = ga.toString,
          ya = fa.hasOwnProperty,
          ma = RegExp(
            "^" +
              va
                .call(ya)
                .replace(da, "\\$&")
                .replace(
                  /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                  "$1.*?"
                ) +
              "$"
          );
        function ba(e) {
          return !(!ce(e) || la(e)) && (ia(e) ? ma : pa).test(ha(e));
        }
        var xa = ba;
        function wa(e, t) {
          return null == e ? void 0 : e[t];
        }
        var Ea = wa;
        function Ta(e, t) {
          var n = Ea(e, t);
          return xa(n) ? n : void 0;
        }
        var _a = Ta,
          Da = _a(Object, "create");
        function Ca() {
          (this.__data__ = Da ? Da(null) : {}), (this.size = 0);
        }
        var Na = Ca;
        function Aa(e) {
          var t = this.has(e) && delete this.__data__[e];
          return (this.size -= t ? 1 : 0), t;
        }
        var La = Aa,
          Sa = "__lodash_hash_undefined__",
          Oa = Object.prototype.hasOwnProperty;
        function ka(e) {
          var t = this.__data__;
          if (Da) {
            var n = t[e];
            return n === Sa ? void 0 : n;
          }
          return Oa.call(t, e) ? t[e] : void 0;
        }
        var Ia = ka,
          Ma = Object.prototype.hasOwnProperty;
        function Pa(e) {
          var t = this.__data__;
          return Da ? void 0 !== t[e] : Ma.call(t, e);
        }
        var Ra = Pa,
          Ba = "__lodash_hash_undefined__";
        function Fa(e, t) {
          var n = this.__data__;
          return (
            (this.size += this.has(e) ? 0 : 1),
            (n[e] = Da && void 0 === t ? Ba : t),
            this
          );
        }
        var za = Fa;
        function Ga(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        (Ga.prototype.clear = Na),
          (Ga.prototype.delete = La),
          (Ga.prototype.get = Ia),
          (Ga.prototype.has = Ra),
          (Ga.prototype.set = za);
        var Ya = Ga;
        function Xa() {
          (this.__data__ = []), (this.size = 0);
        }
        var Va = Xa;
        function Ua(e, t) {
          return e === t || (e != e && t != t);
        }
        var ja = Ua;
        function Ha(e, t) {
          for (var n = e.length; n--; ) if (ja(e[n][0], t)) return n;
          return -1;
        }
        var qa = Ha,
          Wa = Array.prototype.splice;
        function $a(e) {
          var t = this.__data__,
            n = qa(t, e);
          return !(
            n < 0 ||
            (n == t.length - 1 ? t.pop() : Wa.call(t, n, 1), --this.size, 0)
          );
        }
        var Ka = $a;
        function Za(e) {
          var t = this.__data__,
            n = qa(t, e);
          return n < 0 ? void 0 : t[n][1];
        }
        var Qa = Za;
        function Ja(e) {
          return qa(this.__data__, e) > -1;
        }
        var eo = Ja;
        function to(e, t) {
          var n = this.__data__,
            r = qa(n, e);
          return r < 0 ? (++this.size, n.push([e, t])) : (n[r][1] = t), this;
        }
        var no = to;
        function ro(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        (ro.prototype.clear = Va),
          (ro.prototype.delete = Ka),
          (ro.prototype.get = Qa),
          (ro.prototype.has = eo),
          (ro.prototype.set = no);
        var io = ro,
          ao = _a(fe, "Map");
        function oo() {
          (this.size = 0),
            (this.__data__ = {
              hash: new Ya(),
              map: new (ao || io)(),
              string: new Ya(),
            });
        }
        var so = oo;
        function lo(e) {
          var t = typeof e;
          return "string" == t ||
            "number" == t ||
            "symbol" == t ||
            "boolean" == t
            ? "__proto__" !== e
            : null === e;
        }
        var uo = lo;
        function co(e, t) {
          var n = e.__data__;
          return uo(t) ? n["string" == typeof t ? "string" : "hash"] : n.map;
        }
        var ho = co;
        function po(e) {
          var t = ho(this, e).delete(e);
          return (this.size -= t ? 1 : 0), t;
        }
        var go = po;
        function fo(e) {
          return ho(this, e).get(e);
        }
        var vo = fo;
        function yo(e) {
          return ho(this, e).has(e);
        }
        var mo = yo;
        function bo(e, t) {
          var n = ho(this, e),
            r = n.size;
          return n.set(e, t), (this.size += n.size == r ? 0 : 1), this;
        }
        var xo = bo;
        function wo(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        (wo.prototype.clear = so),
          (wo.prototype.delete = go),
          (wo.prototype.get = vo),
          (wo.prototype.has = mo),
          (wo.prototype.set = xo);
        var Eo = wo,
          To = "Expected a function";
        function _o(e, t) {
          if ("function" != typeof e || (null != t && "function" != typeof t))
            throw new TypeError(To);
          var n = function () {
            var r = arguments,
              i = t ? t.apply(this, r) : r[0],
              a = n.cache;
            if (a.has(i)) return a.get(i);
            var o = e.apply(this, r);
            return (n.cache = a.set(i, o) || a), o;
          };
          return (n.cache = new (_o.Cache || Eo)()), n;
        }
        _o.Cache = Eo;
        var Do = _o,
          Co = 500;
        function No(e) {
          var t = Do(e, function (e) {
              return n.size === Co && n.clear(), e;
            }),
            n = t.cache;
          return t;
        }
        var Ao =
            /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
          Lo = /\\(\\)?/g,
          So = No(function (e) {
            var t = [];
            return (
              46 === e.charCodeAt(0) && t.push(""),
              e.replace(Ao, function (e, n, r, i) {
                t.push(r ? i.replace(Lo, "$1") : n || e);
              }),
              t
            );
          });
        function Oo(e, t) {
          for (
            var n = -1, r = null == e ? 0 : e.length, i = Array(r);
            ++n < r;

          )
            i[n] = t(e[n], n, e);
          return i;
        }
        var ko = Oo,
          Io = 1 / 0,
          Mo = Te ? Te.prototype : void 0,
          Po = Mo ? Mo.toString : void 0;
        function Ro(e) {
          if ("string" == typeof e) return e;
          if (qi(e)) return ko(e, Ro) + "";
          if (Xe(e)) return Po ? Po.call(e) : "";
          var t = e + "";
          return "0" == t && 1 / e == -Io ? "-0" : t;
        }
        var Bo = Ro;
        function Fo(e) {
          return null == e ? "" : Bo(e);
        }
        var zo = Fo;
        function Go(e, t) {
          return qi(e) ? e : Zi(e, t) ? [e] : So(zo(e));
        }
        var Yo = Go,
          Xo = 1 / 0;
        function Vo(e) {
          if ("string" == typeof e || Xe(e)) return e;
          var t = e + "";
          return "0" == t && 1 / e == -Xo ? "-0" : t;
        }
        var Uo = Vo;
        function jo(e, t) {
          for (var n = 0, r = (t = Yo(t, e)).length; null != e && n < r; )
            e = e[Uo(t[n++])];
          return n && n == r ? e : void 0;
        }
        var Ho = jo;
        function qo(e, t, n) {
          var r = null == e ? void 0 : Ho(e, t);
          return void 0 === r ? n : r;
        }
        var Wo = qo,
          $o = (function () {
            try {
              var e = _a(Object, "defineProperty");
              return e({}, "", {}), e;
            } catch (t) {}
          })();
        function Ko(e, t, n) {
          "__proto__" == t && $o
            ? $o(e, t, {
                configurable: !0,
                enumerable: !0,
                value: n,
                writable: !0,
              })
            : (e[t] = n);
        }
        var Zo = Ko,
          Qo = Object.prototype.hasOwnProperty;
        function Jo(e, t, n) {
          var r = e[t];
          (Qo.call(e, t) && ja(r, n) && (void 0 !== n || t in e)) ||
            Zo(e, t, n);
        }
        var es = Jo,
          ts = 9007199254740991,
          ns = /^(?:0|[1-9]\d*)$/;
        function rs(e, t) {
          var n = typeof e;
          return (
            !!(t = null == t ? ts : t) &&
            ("number" == n || ("symbol" != n && ns.test(e))) &&
            e > -1 &&
            e % 1 == 0 &&
            e < t
          );
        }
        var is = rs;
        function as(e, t, n, r) {
          if (!ce(e)) return e;
          for (
            var i = -1, a = (t = Yo(t, e)).length, o = a - 1, s = e;
            null != s && ++i < a;

          ) {
            var l = Uo(t[i]),
              u = n;
            if ("__proto__" === l || "constructor" === l || "prototype" === l)
              return e;
            if (i != o) {
              var c = s[l];
              void 0 === (u = r ? r(c, l, s) : void 0) &&
                (u = ce(c) ? c : is(t[i + 1]) ? [] : {});
            }
            es(s, l, u), (s = s[l]);
          }
          return e;
        }
        var os = as;
        function ss(e, t, n) {
          return null == e ? e : os(e, t, n);
        }
        var ls = ss;
        function us(e, t) {
          var n = -1,
            r = e.length;
          for (t || (t = Array(r)); ++n < r; ) t[n] = e[n];
          return t;
        }
        var cs = us;
        function hs(e) {
          return qi(e) ? ko(e, Uo) : Xe(e) ? [e] : cs(So(zo(e)));
        }
        var ds = hs,
          ps = {
            eventAliasesOn: function (e) {
              var t = e;
              (t.addListener = t.listen = t.bind = t.on),
                (t.unlisten = t.unbind = t.off = t.removeListener),
                (t.trigger = t.emit),
                (t.pon = t.promiseOn =
                  function (e, t) {
                    var n = this,
                      r = Array.prototype.slice.call(arguments, 0);
                    return new Vi(function (e, t) {
                      var i = function (t) {
                          n.off.apply(n, o), e(t);
                        },
                        a = r.concat([i]),
                        o = a.concat([]);
                      n.on.apply(n, a);
                    });
                  });
            },
          },
          gs = {};
        [
          Hi,
          {
            data: function (e) {
              return (
                (e = ee(
                  {},
                  {
                    field: "data",
                    bindingEvent: "data",
                    allowBinding: !1,
                    allowSetting: !1,
                    allowGetting: !1,
                    settingEvent: "data",
                    settingTriggersEvent: !1,
                    triggerFnName: "trigger",
                    immutableKeys: {},
                    updateStyle: !1,
                    beforeGet: function (e) {},
                    beforeSet: function (e, t) {},
                    onSet: function (e) {},
                    canSet: function (e) {
                      return !0;
                    },
                  },
                  e
                )),
                function (t, n) {
                  var r = e,
                    i = this,
                    a = void 0 !== i.length,
                    s = a ? i : [i],
                    l = a ? i[0] : i;
                  if (w(t)) {
                    var u,
                      c = -1 !== t.indexOf(".") && ds(t);
                    if (r.allowGetting && void 0 === n)
                      return (
                        l &&
                          (r.beforeGet(l),
                          (u =
                            c && void 0 === l._private[r.field][t]
                              ? Wo(l._private[r.field], c)
                              : l._private[r.field][t])),
                        u
                      );
                    if (r.allowSetting && void 0 !== n && !r.immutableKeys[t]) {
                      var h = o({}, t, n);
                      r.beforeSet(i, h);
                      for (var d = 0, p = s.length; d < p; d++) {
                        var g = s[d];
                        r.canSet(g) &&
                          (c && void 0 === l._private[r.field][t]
                            ? ls(g._private[r.field], c, n)
                            : (g._private[r.field][t] = n));
                      }
                      r.updateStyle && i.updateStyle(),
                        r.onSet(i),
                        r.settingTriggersEvent &&
                          i[r.triggerFnName](r.settingEvent);
                    }
                  } else if (r.allowSetting && _(t)) {
                    var f,
                      v,
                      y = t,
                      m = Object.keys(y);
                    r.beforeSet(i, y);
                    for (var b = 0; b < m.length; b++)
                      if (((v = y[(f = m[b])]), !r.immutableKeys[f]))
                        for (var x = 0; x < s.length; x++) {
                          var T = s[x];
                          r.canSet(T) && (T._private[r.field][f] = v);
                        }
                    r.updateStyle && i.updateStyle(),
                      r.onSet(i),
                      r.settingTriggersEvent &&
                        i[r.triggerFnName](r.settingEvent);
                  } else if (r.allowBinding && E(t)) {
                    var D = t;
                    i.on(r.bindingEvent, D);
                  } else if (r.allowGetting && void 0 === t) {
                    var C;
                    return l && (r.beforeGet(l), (C = l._private[r.field])), C;
                  }
                  return i;
                }
              );
            },
            removeData: function (e) {
              return (
                (e = ee(
                  {},
                  {
                    field: "data",
                    event: "data",
                    triggerFnName: "trigger",
                    triggerEvent: !1,
                    immutableKeys: {},
                  },
                  e
                )),
                function (t) {
                  var n = e,
                    r = this,
                    i = void 0 !== r.length ? r : [r];
                  if (w(t)) {
                    for (
                      var a = t.split(/\s+/), o = a.length, s = 0;
                      s < o;
                      s++
                    ) {
                      var l = a[s];
                      if (!P(l) && !n.immutableKeys[l])
                        for (var u = 0, c = i.length; u < c; u++)
                          i[u]._private[n.field][l] = void 0;
                    }
                    n.triggerEvent && r[n.triggerFnName](n.event);
                  } else if (void 0 === t) {
                    for (var h = 0, d = i.length; h < d; h++)
                      for (
                        var p = i[h]._private[n.field],
                          g = Object.keys(p),
                          f = 0;
                        f < g.length;
                        f++
                      ) {
                        var v = g[f];
                        !n.immutableKeys[v] && (p[v] = void 0);
                      }
                    n.triggerEvent && r[n.triggerFnName](n.event);
                  }
                  return r;
                }
              );
            },
          },
          ps,
        ].forEach(function (e) {
          ee(gs, e);
        });
        var fs = {
            animate: gs.animate(),
            animation: gs.animation(),
            animated: gs.animated(),
            clearQueue: gs.clearQueue(),
            delay: gs.delay(),
            delayAnimation: gs.delayAnimation(),
            stop: gs.stop(),
          },
          vs = {
            classes: function (e) {
              var t = this;
              if (void 0 === e) {
                var n = [];
                return (
                  t[0]._private.classes.forEach(function (e) {
                    return n.push(e);
                  }),
                  n
                );
              }
              T(e) || (e = (e || "").match(/\S+/g) || []);
              for (var r = [], i = new Ht(e), a = 0; a < t.length; a++) {
                for (
                  var o = t[a], s = o._private, l = s.classes, u = !1, c = 0;
                  c < e.length;
                  c++
                ) {
                  var h = e[c];
                  if (!l.has(h)) {
                    u = !0;
                    break;
                  }
                }
                u || (u = l.size !== e.length),
                  u && ((s.classes = i), r.push(o));
              }
              return (
                r.length > 0 && this.spawn(r).updateStyle().emit("class"), t
              );
            },
            addClass: function (e) {
              return this.toggleClass(e, !0);
            },
            hasClass: function (e) {
              var t = this[0];
              return null != t && t._private.classes.has(e);
            },
            toggleClass: function (e, t) {
              T(e) || (e = e.match(/\S+/g) || []);
              for (
                var n = this, r = void 0 === t, i = [], a = 0, o = n.length;
                a < o;
                a++
              )
                for (
                  var s = n[a], l = s._private.classes, u = !1, c = 0;
                  c < e.length;
                  c++
                ) {
                  var h = e[c],
                    d = l.has(h),
                    p = !1;
                  t || (r && !d)
                    ? (l.add(h), (p = !0))
                    : (!t || (r && d)) && (l.delete(h), (p = !0)),
                    !u && p && (i.push(s), (u = !0));
                }
              return (
                i.length > 0 && this.spawn(i).updateStyle().emit("class"), n
              );
            },
            removeClass: function (e) {
              return this.toggleClass(e, !1);
            },
            flashClass: function (e, t) {
              var n = this;
              if (null == t) t = 250;
              else if (0 === t) return n;
              return (
                n.addClass(e),
                setTimeout(function () {
                  n.removeClass(e);
                }, t),
                n
              );
            },
          };
        vs.className = vs.classNames = vs.classes;
        var ys = {
          metaChar:
            "[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\|\\}\\~]",
          comparatorOp: "=|\\!=|>|>=|<|<=|\\$=|\\^=|\\*=",
          boolOp: "\\?|\\!|\\^",
          string: "\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'",
          number: j,
          meta: "degree|indegree|outdegree",
          separator: "\\s*,\\s*",
          descendant: "\\s+",
          child: "\\s+>\\s+",
          subject: "\\$",
          group: "node|edge|\\*",
          directedEdge: "\\s+->\\s+",
          undirectedEdge: "\\s+<->\\s+",
        };
        (ys.variable = "(?:[\\w-.]|(?:\\\\" + ys.metaChar + "))+"),
          (ys.className = "(?:[\\w-]|(?:\\\\" + ys.metaChar + "))+"),
          (ys.value = ys.string + "|" + ys.number),
          (ys.id = ys.variable),
          (function () {
            var e, t, n;
            for (e = ys.comparatorOp.split("|"), n = 0; n < e.length; n++)
              (t = e[n]), (ys.comparatorOp += "|@" + t);
            for (e = ys.comparatorOp.split("|"), n = 0; n < e.length; n++)
              (t = e[n]).indexOf("!") >= 0 ||
                ("=" !== t && (ys.comparatorOp += "|\\!" + t));
          })();
        var ms = function () {
            return { checks: [] };
          },
          bs = {
            GROUP: 0,
            COLLECTION: 1,
            FILTER: 2,
            DATA_COMPARE: 3,
            DATA_EXIST: 4,
            DATA_BOOL: 5,
            META_COMPARE: 6,
            STATE: 7,
            ID: 8,
            CLASS: 9,
            UNDIRECTED_EDGE: 10,
            DIRECTED_EDGE: 11,
            NODE_SOURCE: 12,
            NODE_TARGET: 13,
            NODE_NEIGHBOR: 14,
            CHILD: 15,
            DESCENDANT: 16,
            PARENT: 17,
            ANCESTOR: 18,
            COMPOUND_SPLIT: 19,
            TRUE: 20,
          },
          xs = [
            {
              selector: ":selected",
              matches: function (e) {
                return e.selected();
              },
            },
            {
              selector: ":unselected",
              matches: function (e) {
                return !e.selected();
              },
            },
            {
              selector: ":selectable",
              matches: function (e) {
                return e.selectable();
              },
            },
            {
              selector: ":unselectable",
              matches: function (e) {
                return !e.selectable();
              },
            },
            {
              selector: ":locked",
              matches: function (e) {
                return e.locked();
              },
            },
            {
              selector: ":unlocked",
              matches: function (e) {
                return !e.locked();
              },
            },
            {
              selector: ":visible",
              matches: function (e) {
                return e.visible();
              },
            },
            {
              selector: ":hidden",
              matches: function (e) {
                return !e.visible();
              },
            },
            {
              selector: ":transparent",
              matches: function (e) {
                return e.transparent();
              },
            },
            {
              selector: ":grabbed",
              matches: function (e) {
                return e.grabbed();
              },
            },
            {
              selector: ":free",
              matches: function (e) {
                return !e.grabbed();
              },
            },
            {
              selector: ":removed",
              matches: function (e) {
                return e.removed();
              },
            },
            {
              selector: ":inside",
              matches: function (e) {
                return !e.removed();
              },
            },
            {
              selector: ":grabbable",
              matches: function (e) {
                return e.grabbable();
              },
            },
            {
              selector: ":ungrabbable",
              matches: function (e) {
                return !e.grabbable();
              },
            },
            {
              selector: ":animated",
              matches: function (e) {
                return e.animated();
              },
            },
            {
              selector: ":unanimated",
              matches: function (e) {
                return !e.animated();
              },
            },
            {
              selector: ":parent",
              matches: function (e) {
                return e.isParent();
              },
            },
            {
              selector: ":childless",
              matches: function (e) {
                return e.isChildless();
              },
            },
            {
              selector: ":child",
              matches: function (e) {
                return e.isChild();
              },
            },
            {
              selector: ":orphan",
              matches: function (e) {
                return e.isOrphan();
              },
            },
            {
              selector: ":nonorphan",
              matches: function (e) {
                return e.isChild();
              },
            },
            {
              selector: ":compound",
              matches: function (e) {
                return e.isNode()
                  ? e.isParent()
                  : e.source().isParent() || e.target().isParent();
              },
            },
            {
              selector: ":loop",
              matches: function (e) {
                return e.isLoop();
              },
            },
            {
              selector: ":simple",
              matches: function (e) {
                return e.isSimple();
              },
            },
            {
              selector: ":active",
              matches: function (e) {
                return e.active();
              },
            },
            {
              selector: ":inactive",
              matches: function (e) {
                return !e.active();
              },
            },
            {
              selector: ":backgrounding",
              matches: function (e) {
                return e.backgrounding();
              },
            },
            {
              selector: ":nonbackgrounding",
              matches: function (e) {
                return !e.backgrounding();
              },
            },
          ].sort(function (e, t) {
            return J(e.selector, t.selector);
          }),
          ws = (function () {
            for (var e, t = {}, n = 0; n < xs.length; n++)
              t[(e = xs[n]).selector] = e.matches;
            return t;
          })(),
          Es = function (e, t) {
            return ws[e](t);
          },
          Ts =
            "(" +
            xs
              .map(function (e) {
                return e.selector;
              })
              .join("|") +
            ")",
          _s = function (e) {
            return e.replace(
              new RegExp("\\\\(" + ys.metaChar + ")", "g"),
              function (e, t) {
                return t;
              }
            );
          },
          Ds = function (e, t, n) {
            e[e.length - 1] = n;
          },
          Cs = [
            {
              name: "group",
              query: !0,
              regex: "(" + ys.group + ")",
              populate: function (e, t, n) {
                var r = s(n, 1)[0];
                t.checks.push({
                  type: bs.GROUP,
                  value: "*" === r ? r : r + "s",
                });
              },
            },
            {
              name: "state",
              query: !0,
              regex: Ts,
              populate: function (e, t, n) {
                var r = s(n, 1)[0];
                t.checks.push({ type: bs.STATE, value: r });
              },
            },
            {
              name: "id",
              query: !0,
              regex: "\\#(" + ys.id + ")",
              populate: function (e, t, n) {
                var r = s(n, 1)[0];
                t.checks.push({ type: bs.ID, value: _s(r) });
              },
            },
            {
              name: "className",
              query: !0,
              regex: "\\.(" + ys.className + ")",
              populate: function (e, t, n) {
                var r = s(n, 1)[0];
                t.checks.push({ type: bs.CLASS, value: _s(r) });
              },
            },
            {
              name: "dataExists",
              query: !0,
              regex: "\\[\\s*(" + ys.variable + ")\\s*\\]",
              populate: function (e, t, n) {
                var r = s(n, 1)[0];
                t.checks.push({ type: bs.DATA_EXIST, field: _s(r) });
              },
            },
            {
              name: "dataCompare",
              query: !0,
              regex:
                "\\[\\s*(" +
                ys.variable +
                ")\\s*(" +
                ys.comparatorOp +
                ")\\s*(" +
                ys.value +
                ")\\s*\\]",
              populate: function (e, t, n) {
                var r = s(n, 3),
                  i = r[0],
                  a = r[1],
                  o = r[2];
                (o =
                  null != new RegExp("^" + ys.string + "$").exec(o)
                    ? o.substring(1, o.length - 1)
                    : parseFloat(o)),
                  t.checks.push({
                    type: bs.DATA_COMPARE,
                    field: _s(i),
                    operator: a,
                    value: o,
                  });
              },
            },
            {
              name: "dataBool",
              query: !0,
              regex:
                "\\[\\s*(" + ys.boolOp + ")\\s*(" + ys.variable + ")\\s*\\]",
              populate: function (e, t, n) {
                var r = s(n, 2),
                  i = r[0],
                  a = r[1];
                t.checks.push({
                  type: bs.DATA_BOOL,
                  field: _s(a),
                  operator: i,
                });
              },
            },
            {
              name: "metaCompare",
              query: !0,
              regex:
                "\\[\\[\\s*(" +
                ys.meta +
                ")\\s*(" +
                ys.comparatorOp +
                ")\\s*(" +
                ys.number +
                ")\\s*\\]\\]",
              populate: function (e, t, n) {
                var r = s(n, 3),
                  i = r[0],
                  a = r[1],
                  o = r[2];
                t.checks.push({
                  type: bs.META_COMPARE,
                  field: _s(i),
                  operator: a,
                  value: parseFloat(o),
                });
              },
            },
            {
              name: "nextQuery",
              separator: !0,
              regex: ys.separator,
              populate: function (e, t) {
                var n = e.currentSubject,
                  r = e.edgeCount,
                  i = e.compoundCount,
                  a = e[e.length - 1];
                return (
                  null != n && ((a.subject = n), (e.currentSubject = null)),
                  (a.edgeCount = r),
                  (a.compoundCount = i),
                  (e.edgeCount = 0),
                  (e.compoundCount = 0),
                  (e[e.length++] = ms())
                );
              },
            },
            {
              name: "directedEdge",
              separator: !0,
              regex: ys.directedEdge,
              populate: function (e, t) {
                if (null == e.currentSubject) {
                  var n = ms(),
                    r = t,
                    i = ms();
                  return (
                    n.checks.push({
                      type: bs.DIRECTED_EDGE,
                      source: r,
                      target: i,
                    }),
                    Ds(e, t, n),
                    e.edgeCount++,
                    i
                  );
                }
                var a = ms(),
                  o = t,
                  s = ms();
                return (
                  a.checks.push({ type: bs.NODE_SOURCE, source: o, target: s }),
                  Ds(e, t, a),
                  e.edgeCount++,
                  s
                );
              },
            },
            {
              name: "undirectedEdge",
              separator: !0,
              regex: ys.undirectedEdge,
              populate: function (e, t) {
                if (null == e.currentSubject) {
                  var n = ms(),
                    r = t,
                    i = ms();
                  return (
                    n.checks.push({ type: bs.UNDIRECTED_EDGE, nodes: [r, i] }),
                    Ds(e, t, n),
                    e.edgeCount++,
                    i
                  );
                }
                var a = ms(),
                  o = t,
                  s = ms();
                return (
                  a.checks.push({
                    type: bs.NODE_NEIGHBOR,
                    node: o,
                    neighbor: s,
                  }),
                  Ds(e, t, a),
                  s
                );
              },
            },
            {
              name: "child",
              separator: !0,
              regex: ys.child,
              populate: function (e, t) {
                if (null == e.currentSubject) {
                  var n = ms(),
                    r = ms(),
                    i = e[e.length - 1];
                  return (
                    n.checks.push({ type: bs.CHILD, parent: i, child: r }),
                    Ds(e, t, n),
                    e.compoundCount++,
                    r
                  );
                }
                if (e.currentSubject === t) {
                  var a = ms(),
                    o = e[e.length - 1],
                    s = ms(),
                    l = ms(),
                    u = ms(),
                    c = ms();
                  return (
                    a.checks.push({
                      type: bs.COMPOUND_SPLIT,
                      left: o,
                      right: s,
                      subject: l,
                    }),
                    (l.checks = t.checks),
                    (t.checks = [{ type: bs.TRUE }]),
                    c.checks.push({ type: bs.TRUE }),
                    s.checks.push({ type: bs.PARENT, parent: c, child: u }),
                    Ds(e, o, a),
                    (e.currentSubject = l),
                    e.compoundCount++,
                    u
                  );
                }
                var h = ms(),
                  d = ms(),
                  p = [{ type: bs.PARENT, parent: h, child: d }];
                return (
                  (h.checks = t.checks), (t.checks = p), e.compoundCount++, d
                );
              },
            },
            {
              name: "descendant",
              separator: !0,
              regex: ys.descendant,
              populate: function (e, t) {
                if (null == e.currentSubject) {
                  var n = ms(),
                    r = ms(),
                    i = e[e.length - 1];
                  return (
                    n.checks.push({
                      type: bs.DESCENDANT,
                      ancestor: i,
                      descendant: r,
                    }),
                    Ds(e, t, n),
                    e.compoundCount++,
                    r
                  );
                }
                if (e.currentSubject === t) {
                  var a = ms(),
                    o = e[e.length - 1],
                    s = ms(),
                    l = ms(),
                    u = ms(),
                    c = ms();
                  return (
                    a.checks.push({
                      type: bs.COMPOUND_SPLIT,
                      left: o,
                      right: s,
                      subject: l,
                    }),
                    (l.checks = t.checks),
                    (t.checks = [{ type: bs.TRUE }]),
                    c.checks.push({ type: bs.TRUE }),
                    s.checks.push({
                      type: bs.ANCESTOR,
                      ancestor: c,
                      descendant: u,
                    }),
                    Ds(e, o, a),
                    (e.currentSubject = l),
                    e.compoundCount++,
                    u
                  );
                }
                var h = ms(),
                  d = ms(),
                  p = [{ type: bs.ANCESTOR, ancestor: h, descendant: d }];
                return (
                  (h.checks = t.checks), (t.checks = p), e.compoundCount++, d
                );
              },
            },
            {
              name: "subject",
              modifier: !0,
              regex: ys.subject,
              populate: function (e, t) {
                if (null != e.currentSubject && e.currentSubject !== t)
                  return (
                    Lt(
                      "Redefinition of subject in selector `" +
                        e.toString() +
                        "`"
                    ),
                    !1
                  );
                e.currentSubject = t;
                var n = e[e.length - 1].checks[0],
                  r = null == n ? null : n.type;
                r === bs.DIRECTED_EDGE
                  ? (n.type = bs.NODE_TARGET)
                  : r === bs.UNDIRECTED_EDGE &&
                    ((n.type = bs.NODE_NEIGHBOR),
                    (n.node = n.nodes[1]),
                    (n.neighbor = n.nodes[0]),
                    (n.nodes = null));
              },
            },
          ];
        Cs.forEach(function (e) {
          return (e.regexObj = new RegExp("^" + e.regex));
        });
        var Ns = function (e) {
            for (var t, n, r, i = 0; i < Cs.length; i++) {
              var a = Cs[i],
                o = a.name,
                s = e.match(a.regexObj);
              if (null != s) {
                (n = s), (t = a), (r = o);
                var l = s[0];
                e = e.substring(l.length);
                break;
              }
            }
            return { expr: t, match: n, name: r, remaining: e };
          },
          As = function (e) {
            var t = e.match(/^\s+/);
            if (t) {
              var n = t[0];
              e = e.substring(n.length);
            }
            return e;
          },
          Ls = {
            parse: function (e) {
              var t = this,
                n = (t.inputText = e),
                r = (t[0] = ms());
              for (t.length = 1, n = As(n); ; ) {
                var i = Ns(n);
                if (null == i.expr)
                  return Lt("The selector `" + e + "`is invalid"), !1;
                var a = i.match.slice(1),
                  o = i.expr.populate(t, r, a);
                if (!1 === o) return !1;
                if ((null != o && (r = o), (n = i.remaining).match(/^\s*$/)))
                  break;
              }
              var s = t[t.length - 1];
              null != t.currentSubject && (s.subject = t.currentSubject),
                (s.edgeCount = t.edgeCount),
                (s.compoundCount = t.compoundCount);
              for (var l = 0; l < t.length; l++) {
                var u = t[l];
                if (u.compoundCount > 0 && u.edgeCount > 0)
                  return (
                    Lt(
                      "The selector `" +
                        e +
                        "` is invalid because it uses both a compound selector and an edge selector"
                    ),
                    !1
                  );
                if (u.edgeCount > 1)
                  return (
                    Lt(
                      "The selector `" +
                        e +
                        "` is invalid because it uses multiple edge selectors"
                    ),
                    !1
                  );
                1 === u.edgeCount &&
                  Lt(
                    "The selector `" +
                      e +
                      "` is deprecated.  Edge selectors do not take effect on changes to source and target nodes after an edge is added, for performance reasons.  Use a class or data selector on edges instead, updating the class or data of an edge when your app detects a change in source or target nodes."
                  );
              }
              return !0;
            },
            toString: function () {
              if (null != this.toStringCache) return this.toStringCache;
              for (
                var e = function (e) {
                    return null == e ? "" : e;
                  },
                  t = function (t) {
                    return w(t) ? '"' + t + '"' : e(t);
                  },
                  n = function (e) {
                    return " " + e + " ";
                  },
                  r = function (r, a) {
                    var o = r.type,
                      s = r.value;
                    switch (o) {
                      case bs.GROUP:
                        var l = e(s);
                        return l.substring(0, l.length - 1);
                      case bs.DATA_COMPARE:
                        var u = r.field,
                          c = r.operator;
                        return "[" + u + n(e(c)) + t(s) + "]";
                      case bs.DATA_BOOL:
                        var h = r.operator,
                          d = r.field;
                        return "[" + e(h) + d + "]";
                      case bs.DATA_EXIST:
                        return "[" + r.field + "]";
                      case bs.META_COMPARE:
                        var p = r.operator;
                        return "[[" + r.field + n(e(p)) + t(s) + "]]";
                      case bs.STATE:
                        return s;
                      case bs.ID:
                        return "#" + s;
                      case bs.CLASS:
                        return "." + s;
                      case bs.PARENT:
                      case bs.CHILD:
                        return i(r.parent, a) + n(">") + i(r.child, a);
                      case bs.ANCESTOR:
                      case bs.DESCENDANT:
                        return i(r.ancestor, a) + " " + i(r.descendant, a);
                      case bs.COMPOUND_SPLIT:
                        var g = i(r.left, a),
                          f = i(r.subject, a),
                          v = i(r.right, a);
                        return g + (g.length > 0 ? " " : "") + f + v;
                      case bs.TRUE:
                        return "";
                    }
                  },
                  i = function (e, t) {
                    return e.checks.reduce(function (n, i, a) {
                      return n + (t === e && 0 === a ? "$" : "") + r(i, t);
                    }, "");
                  },
                  a = "",
                  o = 0;
                o < this.length;
                o++
              ) {
                var s = this[o];
                (a += i(s, s.subject)),
                  this.length > 1 && o < this.length - 1 && (a += ", ");
              }
              return (this.toStringCache = a), a;
            },
          },
          Ss = function (e, t, n) {
            var r,
              i,
              a,
              o = w(e),
              s = C(e),
              l = w(n),
              u = !1,
              c = !1,
              h = !1;
            switch (
              (t.indexOf("!") >= 0 && ((t = t.replace("!", "")), (c = !0)),
              t.indexOf("@") >= 0 && ((t = t.replace("@", "")), (u = !0)),
              (o || l || u) && ((i = o || s ? "" + e : ""), (a = "" + n)),
              u && ((e = i = i.toLowerCase()), (n = a = a.toLowerCase())),
              t)
            ) {
              case "*=":
                r = i.indexOf(a) >= 0;
                break;
              case "$=":
                r = i.indexOf(a, i.length - a.length) >= 0;
                break;
              case "^=":
                r = 0 === i.indexOf(a);
                break;
              case "=":
                r = e === n;
                break;
              case ">":
                (h = !0), (r = e > n);
                break;
              case ">=":
                (h = !0), (r = e >= n);
                break;
              case "<":
                (h = !0), (r = e < n);
                break;
              case "<=":
                (h = !0), (r = e <= n);
                break;
              default:
                r = !1;
            }
            return !c || (null == e && h) || (r = !r), r;
          },
          Os = function (e, t) {
            switch (t) {
              case "?":
                return !!e;
              case "!":
                return !e;
              case "^":
                return void 0 === e;
            }
          },
          ks = function (e) {
            return void 0 !== e;
          },
          Is = function (e, t) {
            return e.data(t);
          },
          Ms = function (e, t) {
            return e[t]();
          },
          Ps = [],
          Rs = function (e, t) {
            return e.checks.every(function (e) {
              return Ps[e.type](e, t);
            });
          };
        (Ps[bs.GROUP] = function (e, t) {
          var n = e.value;
          return "*" === n || n === t.group();
        }),
          (Ps[bs.STATE] = function (e, t) {
            var n = e.value;
            return Es(n, t);
          }),
          (Ps[bs.ID] = function (e, t) {
            var n = e.value;
            return t.id() === n;
          }),
          (Ps[bs.CLASS] = function (e, t) {
            var n = e.value;
            return t.hasClass(n);
          }),
          (Ps[bs.META_COMPARE] = function (e, t) {
            var n = e.field,
              r = e.operator,
              i = e.value;
            return Ss(Ms(t, n), r, i);
          }),
          (Ps[bs.DATA_COMPARE] = function (e, t) {
            var n = e.field,
              r = e.operator,
              i = e.value;
            return Ss(Is(t, n), r, i);
          }),
          (Ps[bs.DATA_BOOL] = function (e, t) {
            var n = e.field,
              r = e.operator;
            return Os(Is(t, n), r);
          }),
          (Ps[bs.DATA_EXIST] = function (e, t) {
            var n = e.field;
            return e.operator, ks(Is(t, n));
          }),
          (Ps[bs.UNDIRECTED_EDGE] = function (e, t) {
            var n = e.nodes[0],
              r = e.nodes[1],
              i = t.source(),
              a = t.target();
            return (Rs(n, i) && Rs(r, a)) || (Rs(r, i) && Rs(n, a));
          }),
          (Ps[bs.NODE_NEIGHBOR] = function (e, t) {
            return (
              Rs(e.node, t) &&
              t.neighborhood().some(function (t) {
                return t.isNode() && Rs(e.neighbor, t);
              })
            );
          }),
          (Ps[bs.DIRECTED_EDGE] = function (e, t) {
            return Rs(e.source, t.source()) && Rs(e.target, t.target());
          }),
          (Ps[bs.NODE_SOURCE] = function (e, t) {
            return (
              Rs(e.source, t) &&
              t.outgoers().some(function (t) {
                return t.isNode() && Rs(e.target, t);
              })
            );
          }),
          (Ps[bs.NODE_TARGET] = function (e, t) {
            return (
              Rs(e.target, t) &&
              t.incomers().some(function (t) {
                return t.isNode() && Rs(e.source, t);
              })
            );
          }),
          (Ps[bs.CHILD] = function (e, t) {
            return Rs(e.child, t) && Rs(e.parent, t.parent());
          }),
          (Ps[bs.PARENT] = function (e, t) {
            return (
              Rs(e.parent, t) &&
              t.children().some(function (t) {
                return Rs(e.child, t);
              })
            );
          }),
          (Ps[bs.DESCENDANT] = function (e, t) {
            return (
              Rs(e.descendant, t) &&
              t.ancestors().some(function (t) {
                return Rs(e.ancestor, t);
              })
            );
          }),
          (Ps[bs.ANCESTOR] = function (e, t) {
            return (
              Rs(e.ancestor, t) &&
              t.descendants().some(function (t) {
                return Rs(e.descendant, t);
              })
            );
          }),
          (Ps[bs.COMPOUND_SPLIT] = function (e, t) {
            return Rs(e.subject, t) && Rs(e.left, t) && Rs(e.right, t);
          }),
          (Ps[bs.TRUE] = function () {
            return !0;
          }),
          (Ps[bs.COLLECTION] = function (e, t) {
            return e.value.has(t);
          }),
          (Ps[bs.FILTER] = function (e, t) {
            return (0, e.value)(t);
          });
        var Bs = {
            matches: function (e) {
              for (var t = this, n = 0; n < t.length; n++) {
                var r = t[n];
                if (Rs(r, e)) return !0;
              }
              return !1;
            },
            filter: function (e) {
              var t = this;
              if (
                1 === t.length &&
                1 === t[0].checks.length &&
                t[0].checks[0].type === bs.ID
              )
                return e.getElementById(t[0].checks[0].value).collection();
              var n = function (e) {
                for (var n = 0; n < t.length; n++) {
                  var r = t[n];
                  if (Rs(r, e)) return !0;
                }
                return !1;
              };
              return (
                null == t.text() &&
                  (n = function () {
                    return !0;
                  }),
                e.filter(n)
              );
            },
          },
          Fs = function (e) {
            (this.inputText = e),
              (this.currentSubject = null),
              (this.compoundCount = 0),
              (this.edgeCount = 0),
              (this.length = 0),
              null == e ||
                (w(e) && e.match(/^\s*$/)) ||
                (L(e)
                  ? this.addQuery({
                      checks: [{ type: bs.COLLECTION, value: e.collection() }],
                    })
                  : E(e)
                  ? this.addQuery({ checks: [{ type: bs.FILTER, value: e }] })
                  : w(e)
                  ? this.parse(e) || (this.invalid = !0)
                  : Nt("A selector must be created from a string; found "));
          },
          zs = Fs.prototype;
        [Ls, Bs].forEach(function (e) {
          return ee(zs, e);
        }),
          (zs.text = function () {
            return this.inputText;
          }),
          (zs.size = function () {
            return this.length;
          }),
          (zs.eq = function (e) {
            return this[e];
          }),
          (zs.sameText = function (e) {
            return !this.invalid && !e.invalid && this.text() === e.text();
          }),
          (zs.addQuery = function (e) {
            this[this.length++] = e;
          }),
          (zs.selector = zs.toString);
        var Gs = {
          allAre: function (e) {
            var t = new Fs(e);
            return this.every(function (e) {
              return t.matches(e);
            });
          },
          is: function (e) {
            var t = new Fs(e);
            return this.some(function (e) {
              return t.matches(e);
            });
          },
          some: function (e, t) {
            for (var n = 0; n < this.length; n++)
              if (t ? e.apply(t, [this[n], n, this]) : e(this[n], n, this))
                return !0;
            return !1;
          },
          every: function (e, t) {
            for (var n = 0; n < this.length; n++)
              if (!(t ? e.apply(t, [this[n], n, this]) : e(this[n], n, this)))
                return !1;
            return !0;
          },
          same: function (e) {
            if (this === e) return !0;
            e = this.cy().collection(e);
            var t = this.length;
            return (
              t === e.length &&
              (1 === t
                ? this[0] === e[0]
                : this.every(function (t) {
                    return e.hasElementWithId(t.id());
                  }))
            );
          },
          anySame: function (e) {
            return (
              (e = this.cy().collection(e)),
              this.some(function (t) {
                return e.hasElementWithId(t.id());
              })
            );
          },
          allAreNeighbors: function (e) {
            e = this.cy().collection(e);
            var t = this.neighborhood();
            return e.every(function (e) {
              return t.hasElementWithId(e.id());
            });
          },
          contains: function (e) {
            e = this.cy().collection(e);
            var t = this;
            return e.every(function (e) {
              return t.hasElementWithId(e.id());
            });
          },
        };
        (Gs.allAreNeighbours = Gs.allAreNeighbors),
          (Gs.has = Gs.contains),
          (Gs.equal = Gs.equals = Gs.same);
        var Ys,
          Xs,
          Vs = function (e, t) {
            return function (n, r, i, a) {
              var o,
                s = n,
                l = this;
              if (
                (null == s ? (o = "") : L(s) && 1 === s.length && (o = s.id()),
                1 === l.length && o)
              ) {
                var u = l[0]._private,
                  c = (u.traversalCache = u.traversalCache || {}),
                  h = (c[t] = c[t] || []),
                  d = vt(o),
                  p = h[d];
                return p || (h[d] = e.call(l, n, r, i, a));
              }
              return e.call(l, n, r, i, a);
            };
          },
          Us = {
            parent: function (e) {
              var t = [];
              if (1 === this.length) {
                var n = this[0]._private.parent;
                if (n) return n;
              }
              for (var r = 0; r < this.length; r++) {
                var i = this[r]._private.parent;
                i && t.push(i);
              }
              return this.spawn(t, !0).filter(e);
            },
            parents: function (e) {
              for (var t = [], n = this.parent(); n.nonempty(); ) {
                for (var r = 0; r < n.length; r++) {
                  var i = n[r];
                  t.push(i);
                }
                n = n.parent();
              }
              return this.spawn(t, !0).filter(e);
            },
            commonAncestors: function (e) {
              for (var t, n = 0; n < this.length; n++) {
                var r = this[n].parents();
                t = (t = t || r).intersect(r);
              }
              return t.filter(e);
            },
            orphans: function (e) {
              return this.stdFilter(function (e) {
                return e.isOrphan();
              }).filter(e);
            },
            nonorphans: function (e) {
              return this.stdFilter(function (e) {
                return e.isChild();
              }).filter(e);
            },
            children: Vs(function (e) {
              for (var t = [], n = 0; n < this.length; n++)
                for (
                  var r = this[n]._private.children, i = 0;
                  i < r.length;
                  i++
                )
                  t.push(r[i]);
              return this.spawn(t, !0).filter(e);
            }, "children"),
            siblings: function (e) {
              return this.parent().children().not(this).filter(e);
            },
            isParent: function () {
              var e = this[0];
              if (e) return e.isNode() && 0 !== e._private.children.length;
            },
            isChildless: function () {
              var e = this[0];
              if (e) return e.isNode() && 0 === e._private.children.length;
            },
            isChild: function () {
              var e = this[0];
              if (e) return e.isNode() && null != e._private.parent;
            },
            isOrphan: function () {
              var e = this[0];
              if (e) return e.isNode() && null == e._private.parent;
            },
            descendants: function (e) {
              var t = [];
              function n(e) {
                for (var r = 0; r < e.length; r++) {
                  var i = e[r];
                  t.push(i), i.children().nonempty() && n(i.children());
                }
              }
              return n(this.children()), this.spawn(t, !0).filter(e);
            },
          };
        function js(e, t, n, r) {
          for (
            var i = [], a = new Ht(), o = e.cy().hasCompoundNodes(), s = 0;
            s < e.length;
            s++
          ) {
            var l = e[s];
            n ? i.push(l) : o && r(i, a, l);
          }
          for (; i.length > 0; ) {
            var u = i.shift();
            t(u), a.add(u.id()), o && r(i, a, u);
          }
          return e;
        }
        function Hs(e, t, n) {
          if (n.isParent())
            for (var r = n._private.children, i = 0; i < r.length; i++) {
              var a = r[i];
              t.has(a.id()) || e.push(a);
            }
        }
        function qs(e, t, n) {
          if (n.isChild()) {
            var r = n._private.parent;
            t.has(r.id()) || e.push(r);
          }
        }
        function Ws(e, t, n) {
          qs(e, t, n), Hs(e, t, n);
        }
        (Us.forEachDown = function (e) {
          return js(
            this,
            e,
            !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
            Hs
          );
        }),
          (Us.forEachUp = function (e) {
            return js(
              this,
              e,
              !(arguments.length > 1 && void 0 !== arguments[1]) ||
                arguments[1],
              qs
            );
          }),
          (Us.forEachUpAndDown = function (e) {
            return js(
              this,
              e,
              !(arguments.length > 1 && void 0 !== arguments[1]) ||
                arguments[1],
              Ws
            );
          }),
          (Us.ancestors = Us.parents),
          ((Ys = Xs =
            {
              data: gs.data({
                field: "data",
                bindingEvent: "data",
                allowBinding: !0,
                allowSetting: !0,
                settingEvent: "data",
                settingTriggersEvent: !0,
                triggerFnName: "trigger",
                allowGetting: !0,
                immutableKeys: { id: !0, source: !0, target: !0, parent: !0 },
                updateStyle: !0,
              }),
              removeData: gs.removeData({
                field: "data",
                event: "data",
                triggerFnName: "trigger",
                triggerEvent: !0,
                immutableKeys: { id: !0, source: !0, target: !0, parent: !0 },
                updateStyle: !0,
              }),
              scratch: gs.data({
                field: "scratch",
                bindingEvent: "scratch",
                allowBinding: !0,
                allowSetting: !0,
                settingEvent: "scratch",
                settingTriggersEvent: !0,
                triggerFnName: "trigger",
                allowGetting: !0,
                updateStyle: !0,
              }),
              removeScratch: gs.removeData({
                field: "scratch",
                event: "scratch",
                triggerFnName: "trigger",
                triggerEvent: !0,
                updateStyle: !0,
              }),
              rscratch: gs.data({
                field: "rscratch",
                allowBinding: !1,
                allowSetting: !0,
                settingTriggersEvent: !1,
                allowGetting: !0,
              }),
              removeRscratch: gs.removeData({
                field: "rscratch",
                triggerEvent: !1,
              }),
              id: function () {
                var e = this[0];
                if (e) return e._private.data.id;
              },
            }).attr = Ys.data),
          (Ys.removeAttr = Ys.removeData);
        var $s,
          Ks,
          Zs = Xs,
          Qs = {};
        function Js(e) {
          return function (t) {
            var n = this;
            if (
              (void 0 === t && (t = !0),
              0 !== n.length && n.isNode() && !n.removed())
            ) {
              for (
                var r = 0, i = n[0], a = i._private.edges, o = 0;
                o < a.length;
                o++
              ) {
                var s = a[o];
                (!t && s.isLoop()) || (r += e(i, s));
              }
              return r;
            }
          };
        }
        function el(e, t) {
          return function (n) {
            for (var r, i = this.nodes(), a = 0; a < i.length; a++) {
              var o = i[a][e](n);
              void 0 === o || (void 0 !== r && !t(o, r)) || (r = o);
            }
            return r;
          };
        }
        ee(Qs, {
          degree: Js(function (e, t) {
            return t.source().same(t.target()) ? 2 : 1;
          }),
          indegree: Js(function (e, t) {
            return t.target().same(e) ? 1 : 0;
          }),
          outdegree: Js(function (e, t) {
            return t.source().same(e) ? 1 : 0;
          }),
        }),
          ee(Qs, {
            minDegree: el("degree", function (e, t) {
              return e < t;
            }),
            maxDegree: el("degree", function (e, t) {
              return e > t;
            }),
            minIndegree: el("indegree", function (e, t) {
              return e < t;
            }),
            maxIndegree: el("indegree", function (e, t) {
              return e > t;
            }),
            minOutdegree: el("outdegree", function (e, t) {
              return e < t;
            }),
            maxOutdegree: el("outdegree", function (e, t) {
              return e > t;
            }),
          }),
          ee(Qs, {
            totalDegree: function (e) {
              for (var t = 0, n = this.nodes(), r = 0; r < n.length; r++)
                t += n[r].degree(e);
              return t;
            },
          });
        var tl = function (e, t, n) {
            for (var r = 0; r < e.length; r++) {
              var i = e[r];
              if (!i.locked()) {
                var a = i._private.position,
                  o = {
                    x: null != t.x ? t.x - a.x : 0,
                    y: null != t.y ? t.y - a.y : 0,
                  };
                !i.isParent() ||
                  (0 === o.x && 0 === o.y) ||
                  i.children().shift(o, n),
                  i.dirtyBoundingBoxCache();
              }
            }
          },
          nl = {
            field: "position",
            bindingEvent: "position",
            allowBinding: !0,
            allowSetting: !0,
            settingEvent: "position",
            settingTriggersEvent: !0,
            triggerFnName: "emitAndNotify",
            allowGetting: !0,
            validKeys: ["x", "y"],
            beforeGet: function (e) {
              e.updateCompoundBounds();
            },
            beforeSet: function (e, t) {
              tl(e, t, !1);
            },
            onSet: function (e) {
              e.dirtyCompoundBoundsCache();
            },
            canSet: function (e) {
              return !e.locked();
            },
          };
        (($s = Ks =
          {
            position: gs.data(nl),
            silentPosition: gs.data(
              ee({}, nl, {
                allowBinding: !1,
                allowSetting: !0,
                settingTriggersEvent: !1,
                allowGetting: !1,
                beforeSet: function (e, t) {
                  tl(e, t, !0);
                },
                onSet: function (e) {
                  e.dirtyCompoundBoundsCache();
                },
              })
            ),
            positions: function (e, t) {
              if (_(e)) t ? this.silentPosition(e) : this.position(e);
              else if (E(e)) {
                var n = e,
                  r = this.cy();
                r.startBatch();
                for (var i = 0; i < this.length; i++) {
                  var a = this[i],
                    o = void 0;
                  (o = n(a, i)) && (t ? a.silentPosition(o) : a.position(o));
                }
                r.endBatch();
              }
              return this;
            },
            silentPositions: function (e) {
              return this.positions(e, !0);
            },
            shift: function (e, t, n) {
              var r;
              if (
                (_(e)
                  ? ((r = { x: C(e.x) ? e.x : 0, y: C(e.y) ? e.y : 0 }),
                    (n = t))
                  : w(e) && C(t) && ((r = { x: 0, y: 0 })[e] = t),
                null != r)
              ) {
                var i = this.cy();
                i.startBatch();
                for (var a = 0; a < this.length; a++) {
                  var o = this[a];
                  if (
                    !(
                      i.hasCompoundNodes() &&
                      o.isChild() &&
                      o.ancestors().anySame(this)
                    )
                  ) {
                    var s = o.position(),
                      l = { x: s.x + r.x, y: s.y + r.y };
                    n ? o.silentPosition(l) : o.position(l);
                  }
                }
                i.endBatch();
              }
              return this;
            },
            silentShift: function (e, t) {
              return (
                _(e) ? this.shift(e, !0) : w(e) && C(t) && this.shift(e, t, !0),
                this
              );
            },
            renderedPosition: function (e, t) {
              var n = this[0],
                r = this.cy(),
                i = r.zoom(),
                a = r.pan(),
                o = _(e) ? e : void 0,
                s = void 0 !== o || (void 0 !== t && w(e));
              if (n && n.isNode()) {
                if (!s) {
                  var l = n.position();
                  return (o = pn(l, i, a)), void 0 === e ? o : o[e];
                }
                for (var u = 0; u < this.length; u++) {
                  var c = this[u];
                  void 0 !== t
                    ? c.position(e, (t - a[e]) / i)
                    : void 0 !== o && c.position(gn(o, i, a));
                }
              } else if (!s) return;
              return this;
            },
            relativePosition: function (e, t) {
              var n = this[0],
                r = this.cy(),
                i = _(e) ? e : void 0,
                a = void 0 !== i || (void 0 !== t && w(e)),
                o = r.hasCompoundNodes();
              if (n && n.isNode()) {
                if (!a) {
                  var s = n.position(),
                    l = o ? n.parent() : null,
                    u = l && l.length > 0,
                    c = u;
                  u && (l = l[0]);
                  var h = c ? l.position() : { x: 0, y: 0 };
                  return (
                    (i = { x: s.x - h.x, y: s.y - h.y }),
                    void 0 === e ? i : i[e]
                  );
                }
                for (var d = 0; d < this.length; d++) {
                  var p = this[d],
                    g = o ? p.parent() : null,
                    f = g && g.length > 0,
                    v = f;
                  f && (g = g[0]);
                  var y = v ? g.position() : { x: 0, y: 0 };
                  void 0 !== t
                    ? p.position(e, t + y[e])
                    : void 0 !== i &&
                      p.position({ x: i.x + y.x, y: i.y + y.y });
                }
              } else if (!a) return;
              return this;
            },
          }).modelPosition = $s.point =
          $s.position),
          ($s.modelPositions = $s.points = $s.positions),
          ($s.renderedPoint = $s.renderedPosition),
          ($s.relativePoint = $s.relativePosition);
        var rl,
          il,
          al = Ks;
        (rl = il = {}),
          (il.renderedBoundingBox = function (e) {
            var t = this.boundingBox(e),
              n = this.cy(),
              r = n.zoom(),
              i = n.pan(),
              a = t.x1 * r + i.x,
              o = t.x2 * r + i.x,
              s = t.y1 * r + i.y,
              l = t.y2 * r + i.y;
            return { x1: a, x2: o, y1: s, y2: l, w: o - a, h: l - s };
          }),
          (il.dirtyCompoundBoundsCache = function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
              t = this.cy();
            return t.styleEnabled() && t.hasCompoundNodes()
              ? (this.forEachUp(function (t) {
                  if (t.isParent()) {
                    var n = t._private;
                    (n.compoundBoundsClean = !1),
                      (n.bbCache = null),
                      e || t.emitAndNotify("bounds");
                  }
                }),
                this)
              : this;
          }),
          (il.updateCompoundBounds = function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
              t = this.cy();
            if (!t.styleEnabled() || !t.hasCompoundNodes()) return this;
            if (!e && t.batching()) return this;
            function n(e) {
              if (e.isParent()) {
                var t = e._private,
                  n = e.children(),
                  r =
                    "include" === e.pstyle("compound-sizing-wrt-labels").value,
                  i = {
                    width: {
                      val: e.pstyle("min-width").pfValue,
                      left: e.pstyle("min-width-bias-left"),
                      right: e.pstyle("min-width-bias-right"),
                    },
                    height: {
                      val: e.pstyle("min-height").pfValue,
                      top: e.pstyle("min-height-bias-top"),
                      bottom: e.pstyle("min-height-bias-bottom"),
                    },
                  },
                  a = n.boundingBox({
                    includeLabels: r,
                    includeOverlays: !1,
                    useCache: !1,
                  }),
                  o = t.position;
                (0 !== a.w && 0 !== a.h) ||
                  (((a = {
                    w: e.pstyle("width").pfValue,
                    h: e.pstyle("height").pfValue,
                  }).x1 = o.x - a.w / 2),
                  (a.x2 = o.x + a.w / 2),
                  (a.y1 = o.y - a.h / 2),
                  (a.y2 = o.y + a.h / 2));
                var s = i.width.left.value;
                "px" === i.width.left.units &&
                  i.width.val > 0 &&
                  (s = (100 * s) / i.width.val);
                var l = i.width.right.value;
                "px" === i.width.right.units &&
                  i.width.val > 0 &&
                  (l = (100 * l) / i.width.val);
                var u = i.height.top.value;
                "px" === i.height.top.units &&
                  i.height.val > 0 &&
                  (u = (100 * u) / i.height.val);
                var c = i.height.bottom.value;
                "px" === i.height.bottom.units &&
                  i.height.val > 0 &&
                  (c = (100 * c) / i.height.val);
                var h = y(i.width.val - a.w, s, l),
                  d = h.biasDiff,
                  p = h.biasComplementDiff,
                  g = y(i.height.val - a.h, u, c),
                  f = g.biasDiff,
                  v = g.biasComplementDiff;
                (t.autoPadding = m(
                  a.w,
                  a.h,
                  e.pstyle("padding"),
                  e.pstyle("padding-relative-to").value
                )),
                  (t.autoWidth = Math.max(a.w, i.width.val)),
                  (o.x = (-d + a.x1 + a.x2 + p) / 2),
                  (t.autoHeight = Math.max(a.h, i.height.val)),
                  (o.y = (-f + a.y1 + a.y2 + v) / 2);
              }
              function y(e, t, n) {
                var r = 0,
                  i = 0,
                  a = t + n;
                return (
                  e > 0 && a > 0 && ((r = (t / a) * e), (i = (n / a) * e)),
                  { biasDiff: r, biasComplementDiff: i }
                );
              }
              function m(e, t, n, r) {
                if ("%" !== n.units) return "px" === n.units ? n.pfValue : 0;
                switch (r) {
                  case "width":
                    return e > 0 ? n.pfValue * e : 0;
                  case "height":
                    return t > 0 ? n.pfValue * t : 0;
                  case "average":
                    return e > 0 && t > 0 ? (n.pfValue * (e + t)) / 2 : 0;
                  case "min":
                    return e > 0 && t > 0
                      ? e > t
                        ? n.pfValue * t
                        : n.pfValue * e
                      : 0;
                  case "max":
                    return e > 0 && t > 0
                      ? e > t
                        ? n.pfValue * e
                        : n.pfValue * t
                      : 0;
                  default:
                    return 0;
                }
              }
            }
            for (var r = 0; r < this.length; r++) {
              var i = this[r],
                a = i._private;
              (a.compoundBoundsClean && !e) ||
                (n(i), t.batching() || (a.compoundBoundsClean = !0));
            }
            return this;
          });
        var ol = function (e) {
            return e === 1 / 0 || e === -1 / 0 ? 0 : e;
          },
          sl = function (e, t, n, r, i) {
            r - t != 0 &&
              i - n != 0 &&
              null != t &&
              null != n &&
              null != r &&
              null != i &&
              ((e.x1 = t < e.x1 ? t : e.x1),
              (e.x2 = r > e.x2 ? r : e.x2),
              (e.y1 = n < e.y1 ? n : e.y1),
              (e.y2 = i > e.y2 ? i : e.y2),
              (e.w = e.x2 - e.x1),
              (e.h = e.y2 - e.y1));
          },
          ll = function (e, t) {
            return null == t ? e : sl(e, t.x1, t.y1, t.x2, t.y2);
          },
          ul = function (e, t, n) {
            return Gt(e, t, n);
          },
          cl = function (e, t, n) {
            if (!t.cy().headless()) {
              var r,
                i,
                a = t._private,
                o = a.rstyle,
                s = o.arrowWidth / 2;
              if ("none" !== t.pstyle(n + "-arrow-shape").value) {
                "source" === n
                  ? ((r = o.srcX), (i = o.srcY))
                  : "target" === n
                  ? ((r = o.tgtX), (i = o.tgtY))
                  : ((r = o.midX), (i = o.midY));
                var l = (a.arrowBounds = a.arrowBounds || {}),
                  u = (l[n] = l[n] || {});
                (u.x1 = r - s),
                  (u.y1 = i - s),
                  (u.x2 = r + s),
                  (u.y2 = i + s),
                  (u.w = u.x2 - u.x1),
                  (u.h = u.y2 - u.y1),
                  Bn(u, 1),
                  sl(e, u.x1, u.y1, u.x2, u.y2);
              }
            }
          },
          hl = function (e, t, n) {
            if (!t.cy().headless()) {
              var r;
              r = n ? n + "-" : "";
              var i = t._private,
                a = i.rstyle;
              if (t.pstyle(r + "label").strValue) {
                var o,
                  s,
                  l,
                  u,
                  c = t.pstyle("text-halign"),
                  h = t.pstyle("text-valign"),
                  d = ul(a, "labelWidth", n),
                  p = ul(a, "labelHeight", n),
                  g = ul(a, "labelX", n),
                  f = ul(a, "labelY", n),
                  v = t.pstyle(r + "text-margin-x").pfValue,
                  y = t.pstyle(r + "text-margin-y").pfValue,
                  m = t.isEdge(),
                  b = t.pstyle(r + "text-rotation"),
                  x = t.pstyle("text-outline-width").pfValue,
                  w = t.pstyle("text-border-width").pfValue / 2,
                  E = t.pstyle("text-background-padding").pfValue,
                  T = 2,
                  _ = p,
                  D = d,
                  C = D / 2,
                  N = _ / 2;
                if (m) (o = g - C), (s = g + C), (l = f - N), (u = f + N);
                else {
                  switch (c.value) {
                    case "left":
                      (o = g - D), (s = g);
                      break;
                    case "center":
                      (o = g - C), (s = g + C);
                      break;
                    case "right":
                      (o = g), (s = g + D);
                  }
                  switch (h.value) {
                    case "top":
                      (l = f - _), (u = f);
                      break;
                    case "center":
                      (l = f - N), (u = f + N);
                      break;
                    case "bottom":
                      (l = f), (u = f + _);
                  }
                }
                (o += v - Math.max(x, w) - E - T),
                  (s += v + Math.max(x, w) + E + T),
                  (l += y - Math.max(x, w) - E - T),
                  (u += y + Math.max(x, w) + E + T);
                var A = n || "main",
                  L = i.labelBounds,
                  S = (L[A] = L[A] || {});
                (S.x1 = o),
                  (S.y1 = l),
                  (S.x2 = s),
                  (S.y2 = u),
                  (S.w = s - o),
                  (S.h = u - l);
                var O = m && "autorotate" === b.strValue,
                  k = null != b.pfValue && 0 !== b.pfValue;
                if (O || k) {
                  var I = O ? ul(i.rstyle, "labelAngle", n) : b.pfValue,
                    M = Math.cos(I),
                    P = Math.sin(I),
                    R = (o + s) / 2,
                    B = (l + u) / 2;
                  if (!m) {
                    switch (c.value) {
                      case "left":
                        R = s;
                        break;
                      case "right":
                        R = o;
                    }
                    switch (h.value) {
                      case "top":
                        B = u;
                        break;
                      case "bottom":
                        B = l;
                    }
                  }
                  var F = function (e, t) {
                      return {
                        x: (e -= R) * M - (t -= B) * P + R,
                        y: e * P + t * M + B,
                      };
                    },
                    z = F(o, l),
                    G = F(o, u),
                    Y = F(s, l),
                    X = F(s, u);
                  (o = Math.min(z.x, G.x, Y.x, X.x)),
                    (s = Math.max(z.x, G.x, Y.x, X.x)),
                    (l = Math.min(z.y, G.y, Y.y, X.y)),
                    (u = Math.max(z.y, G.y, Y.y, X.y));
                }
                var V = A + "Rot",
                  U = (L[V] = L[V] || {});
                (U.x1 = o),
                  (U.y1 = l),
                  (U.x2 = s),
                  (U.y2 = u),
                  (U.w = s - o),
                  (U.h = u - l),
                  sl(e, o, l, s, u),
                  sl(i.labelBounds.all, o, l, s, u);
              }
              return e;
            }
          },
          dl = function (e, t) {
            if (!t.cy().headless()) {
              var n = t.pstyle("outline-opacity").value,
                r = t.pstyle("outline-width").value;
              if (n > 0 && r > 0) {
                var i = t.pstyle("outline-offset").value,
                  a = t.pstyle("shape").value,
                  o = r + i,
                  s = (e.w + 2 * o) / e.w,
                  l = (e.h + 2 * o) / e.h,
                  u = 0,
                  c = 0;
                ["diamond", "pentagon", "round-triangle"].includes(a)
                  ? ((s = (e.w + 2.4 * o) / e.w), (c = -o / 3.6))
                  : ["concave-hexagon", "rhomboid", "right-rhomboid"].includes(
                      a
                    )
                  ? (s = (e.w + 2.4 * o) / e.w)
                  : "star" === a
                  ? ((s = (e.w + 2.8 * o) / e.w),
                    (l = (e.h + 2.6 * o) / e.h),
                    (c = -o / 3.8))
                  : "triangle" === a
                  ? ((s = (e.w + 2.8 * o) / e.w),
                    (l = (e.h + 2.4 * o) / e.h),
                    (c = -o / 1.4))
                  : "vee" === a &&
                    ((s = (e.w + 4.4 * o) / e.w),
                    (l = (e.h + 3.8 * o) / e.h),
                    (c = 0.5 * -o));
                var h = e.h * l - e.h,
                  d = e.w * s - e.w;
                if (
                  (Fn(e, [Math.ceil(h / 2), Math.ceil(d / 2)]),
                  0 != u || 0 !== c)
                ) {
                  var p = Mn(e, u, c);
                  Pn(e, p);
                }
              }
            }
          },
          pl = function (e, t) {
            var n,
              r,
              i,
              a,
              o,
              s,
              l = e._private.cy,
              u = l.styleEnabled(),
              c = l.headless(),
              h = On(),
              d = e._private,
              p = e.isNode(),
              g = e.isEdge(),
              f = d.rstyle,
              v = p && u ? e.pstyle("bounds-expansion").pfValue : [0],
              y = function (e) {
                return "none" !== e.pstyle("display").value;
              },
              m = !u || (y(e) && (!g || (y(e.source()) && y(e.target()))));
            if (m) {
              var b = 0;
              u &&
                t.includeOverlays &&
                0 !== e.pstyle("overlay-opacity").value &&
                (b = e.pstyle("overlay-padding").value);
              var x = 0;
              u &&
                t.includeUnderlays &&
                0 !== e.pstyle("underlay-opacity").value &&
                (x = e.pstyle("underlay-padding").value);
              var w = Math.max(b, x),
                E = 0;
              if (
                (u && (E = e.pstyle("width").pfValue / 2), p && t.includeNodes)
              ) {
                var T = e.position();
                (o = T.x), (s = T.y);
                var _ = e.outerWidth() / 2,
                  D = e.outerHeight() / 2;
                sl(h, (n = o - _), (i = s - D), (r = o + _), (a = s + D)),
                  u && t.includeOutlines && dl(h, e);
              } else if (g && t.includeEdges)
                if (u && !c) {
                  var C = e.pstyle("curve-style").strValue;
                  if (
                    ((n = Math.min(f.srcX, f.midX, f.tgtX)),
                    (r = Math.max(f.srcX, f.midX, f.tgtX)),
                    (i = Math.min(f.srcY, f.midY, f.tgtY)),
                    (a = Math.max(f.srcY, f.midY, f.tgtY)),
                    sl(h, (n -= E), (i -= E), (r += E), (a += E)),
                    "haystack" === C)
                  ) {
                    var N = f.haystackPts;
                    if (N && 2 === N.length) {
                      if (((n = N[0].x), (i = N[0].y), n > (r = N[1].x))) {
                        var A = n;
                        (n = r), (r = A);
                      }
                      if (i > (a = N[1].y)) {
                        var L = i;
                        (i = a), (a = L);
                      }
                      sl(h, n - E, i - E, r + E, a + E);
                    }
                  } else if (
                    "bezier" === C ||
                    "unbundled-bezier" === C ||
                    C.endsWith("segments") ||
                    C.endsWith("taxi")
                  ) {
                    var S;
                    switch (C) {
                      case "bezier":
                      case "unbundled-bezier":
                        S = f.bezierPts;
                        break;
                      case "segments":
                      case "taxi":
                      case "round-segments":
                      case "round-taxi":
                        S = f.linePts;
                    }
                    if (null != S)
                      for (var O = 0; O < S.length; O++) {
                        var k = S[O];
                        (n = k.x - E),
                          (r = k.x + E),
                          (i = k.y - E),
                          (a = k.y + E),
                          sl(h, n, i, r, a);
                      }
                  }
                } else {
                  var I = e.source().position(),
                    M = e.target().position();
                  if ((n = I.x) > (r = M.x)) {
                    var P = n;
                    (n = r), (r = P);
                  }
                  if ((i = I.y) > (a = M.y)) {
                    var R = i;
                    (i = a), (a = R);
                  }
                  sl(h, (n -= E), (i -= E), (r += E), (a += E));
                }
              if (
                (u &&
                  t.includeEdges &&
                  g &&
                  (cl(h, e, "mid-source"),
                  cl(h, e, "mid-target"),
                  cl(h, e, "source"),
                  cl(h, e, "target")),
                u && "yes" === e.pstyle("ghost").value)
              ) {
                var B = e.pstyle("ghost-offset-x").pfValue,
                  F = e.pstyle("ghost-offset-y").pfValue;
                sl(h, h.x1 + B, h.y1 + F, h.x2 + B, h.y2 + F);
              }
              var z = (d.bodyBounds = d.bodyBounds || {});
              zn(z, h),
                Fn(z, v),
                Bn(z, 1),
                u &&
                  ((n = h.x1),
                  (r = h.x2),
                  (i = h.y1),
                  (a = h.y2),
                  sl(h, n - w, i - w, r + w, a + w));
              var G = (d.overlayBounds = d.overlayBounds || {});
              zn(G, h), Fn(G, v), Bn(G, 1);
              var Y = (d.labelBounds = d.labelBounds || {});
              null != Y.all ? In(Y.all) : (Y.all = On()),
                u &&
                  t.includeLabels &&
                  (t.includeMainLabels && hl(h, e, null),
                  g &&
                    (t.includeSourceLabels && hl(h, e, "source"),
                    t.includeTargetLabels && hl(h, e, "target")));
            }
            return (
              (h.x1 = ol(h.x1)),
              (h.y1 = ol(h.y1)),
              (h.x2 = ol(h.x2)),
              (h.y2 = ol(h.y2)),
              (h.w = ol(h.x2 - h.x1)),
              (h.h = ol(h.y2 - h.y1)),
              h.w > 0 && h.h > 0 && m && (Fn(h, v), Bn(h, 1)),
              h
            );
          },
          gl = function (e) {
            var t = 0,
              n = function (e) {
                return (e ? 1 : 0) << t++;
              },
              r = 0;
            return (
              (r += n(e.incudeNodes)),
              (r += n(e.includeEdges)),
              (r += n(e.includeLabels)),
              (r += n(e.includeMainLabels)),
              (r += n(e.includeSourceLabels)),
              (r += n(e.includeTargetLabels)),
              (r += n(e.includeOverlays)),
              (r += n(e.includeOutlines))
            );
          },
          fl = function (e) {
            if (e.isEdge()) {
              var t = e.source().position(),
                n = e.target().position(),
                r = function (e) {
                  return Math.round(e);
                };
              return ft([r(t.x), r(t.y), r(n.x), r(n.y)]);
            }
            return 0;
          },
          vl = function (e, t) {
            var n,
              r = e._private,
              i = e.isEdge(),
              a = (null == t ? ml : gl(t)) === ml,
              o = fl(e),
              s = r.bbCachePosKey === o,
              l = t.useCache && s,
              u = function (e) {
                return null == e._private.bbCache || e._private.styleDirty;
              };
            if (
              (!l || u(e) || (i && u(e.source())) || u(e.target())
                ? (s || e.recalculateRenderedStyle(l),
                  (n = pl(e, yl)),
                  (r.bbCache = n),
                  (r.bbCachePosKey = o))
                : (n = r.bbCache),
              !a)
            ) {
              var c = e.isNode();
              (n = On()),
                ((t.includeNodes && c) || (t.includeEdges && !c)) &&
                  (t.includeOverlays
                    ? ll(n, r.overlayBounds)
                    : ll(n, r.bodyBounds)),
                t.includeLabels &&
                  (t.includeMainLabels &&
                  (!i || (t.includeSourceLabels && t.includeTargetLabels))
                    ? ll(n, r.labelBounds.all)
                    : (t.includeMainLabels && ll(n, r.labelBounds.mainRot),
                      t.includeSourceLabels && ll(n, r.labelBounds.sourceRot),
                      t.includeTargetLabels && ll(n, r.labelBounds.targetRot))),
                (n.w = n.x2 - n.x1),
                (n.h = n.y2 - n.y1);
            }
            return n;
          },
          yl = {
            includeNodes: !0,
            includeEdges: !0,
            includeLabels: !0,
            includeMainLabels: !0,
            includeSourceLabels: !0,
            includeTargetLabels: !0,
            includeOverlays: !0,
            includeUnderlays: !0,
            includeOutlines: !0,
            useCache: !0,
          },
          ml = gl(yl),
          bl = Rt(yl);
        (il.boundingBox = function (e) {
          var t;
          if (
            1 !== this.length ||
            null == this[0]._private.bbCache ||
            this[0]._private.styleDirty ||
            (void 0 !== e && void 0 !== e.useCache && !0 !== e.useCache)
          ) {
            t = On();
            var n = bl((e = e || yl)),
              r = this;
            if (r.cy().styleEnabled())
              for (var i = 0; i < r.length; i++) {
                var a = r[i],
                  o = a._private,
                  s = fl(a),
                  l = o.bbCachePosKey === s,
                  u = n.useCache && l && !o.styleDirty;
                a.recalculateRenderedStyle(u);
              }
            this.updateCompoundBounds(!e.useCache);
            for (var c = 0; c < r.length; c++) {
              var h = r[c];
              ll(t, vl(h, n));
            }
          } else (e = void 0 === e ? yl : bl(e)), (t = vl(this[0], e));
          return (
            (t.x1 = ol(t.x1)),
            (t.y1 = ol(t.y1)),
            (t.x2 = ol(t.x2)),
            (t.y2 = ol(t.y2)),
            (t.w = ol(t.x2 - t.x1)),
            (t.h = ol(t.y2 - t.y1)),
            t
          );
        }),
          (il.dirtyBoundingBoxCache = function () {
            for (var e = 0; e < this.length; e++) {
              var t = this[e]._private;
              (t.bbCache = null),
                (t.bbCachePosKey = null),
                (t.bodyBounds = null),
                (t.overlayBounds = null),
                (t.labelBounds.all = null),
                (t.labelBounds.source = null),
                (t.labelBounds.target = null),
                (t.labelBounds.main = null),
                (t.labelBounds.sourceRot = null),
                (t.labelBounds.targetRot = null),
                (t.labelBounds.mainRot = null),
                (t.arrowBounds.source = null),
                (t.arrowBounds.target = null),
                (t.arrowBounds["mid-source"] = null),
                (t.arrowBounds["mid-target"] = null);
            }
            return this.emitAndNotify("bounds"), this;
          }),
          (il.boundingBoxAt = function (e) {
            var t = this.nodes(),
              n = this.cy(),
              r = n.hasCompoundNodes(),
              i = n.collection();
            if (
              (r &&
                ((i = t.filter(function (e) {
                  return e.isParent();
                })),
                (t = t.not(i))),
              _(e))
            ) {
              var a = e;
              e = function () {
                return a;
              };
            }
            var o = function (t, n) {
                return (t._private.bbAtOldPos = e(t, n));
              },
              s = function (e) {
                return e._private.bbAtOldPos;
              };
            n.startBatch(),
              t.forEach(o).silentPositions(e),
              r &&
                (i.dirtyCompoundBoundsCache(),
                i.dirtyBoundingBoxCache(),
                i.updateCompoundBounds(!0));
            var l = kn(this.boundingBox({ useCache: !1 }));
            return (
              t.silentPositions(s),
              r &&
                (i.dirtyCompoundBoundsCache(),
                i.dirtyBoundingBoxCache(),
                i.updateCompoundBounds(!0)),
              n.endBatch(),
              l
            );
          }),
          (rl.boundingbox = rl.bb = rl.boundingBox),
          (rl.renderedBoundingbox = rl.renderedBoundingBox);
        var xl,
          wl,
          El = il;
        xl = wl = {};
        var Tl = function (e) {
          (e.uppercaseName = U(e.name)),
            (e.autoName = "auto" + e.uppercaseName),
            (e.labelName = "label" + e.uppercaseName),
            (e.outerName = "outer" + e.uppercaseName),
            (e.uppercaseOuterName = U(e.outerName)),
            (xl[e.name] = function () {
              var t = this[0],
                n = t._private,
                r = n.cy._private.styleEnabled;
              if (t) {
                if (r) {
                  if (t.isParent())
                    return t.updateCompoundBounds(), n[e.autoName] || 0;
                  var i = t.pstyle(e.name);
                  return "label" === i.strValue
                    ? (t.recalculateRenderedStyle(), n.rstyle[e.labelName] || 0)
                    : i.pfValue;
                }
                return 1;
              }
            }),
            (xl["outer" + e.uppercaseName] = function () {
              var t = this[0],
                n = t._private.cy._private.styleEnabled;
              if (t)
                return n
                  ? t[e.name]() +
                      t.pstyle("border-width").pfValue +
                      2 * t.padding()
                  : 1;
            }),
            (xl["rendered" + e.uppercaseName] = function () {
              var t = this[0];
              if (t) return t[e.name]() * this.cy().zoom();
            }),
            (xl["rendered" + e.uppercaseOuterName] = function () {
              var t = this[0];
              if (t) return t[e.outerName]() * this.cy().zoom();
            });
        };
        Tl({ name: "width" }),
          Tl({ name: "height" }),
          (wl.padding = function () {
            var e = this[0],
              t = e._private;
            return e.isParent()
              ? (e.updateCompoundBounds(),
                void 0 !== t.autoPadding
                  ? t.autoPadding
                  : e.pstyle("padding").pfValue)
              : e.pstyle("padding").pfValue;
          }),
          (wl.paddedHeight = function () {
            var e = this[0];
            return e.height() + 2 * e.padding();
          }),
          (wl.paddedWidth = function () {
            var e = this[0];
            return e.width() + 2 * e.padding();
          });
        var _l = wl,
          Dl = function (e, t) {
            if (e.isEdge()) return t(e);
          },
          Cl = function (e, t) {
            if (e.isEdge()) {
              var n = e.cy();
              return pn(t(e), n.zoom(), n.pan());
            }
          },
          Nl = function (e, t) {
            if (e.isEdge()) {
              var n = e.cy(),
                r = n.pan(),
                i = n.zoom();
              return t(e).map(function (e) {
                return pn(e, i, r);
              });
            }
          },
          Al = {
            controlPoints: {
              get: function (e) {
                return e.renderer().getControlPoints(e);
              },
              mult: !0,
            },
            segmentPoints: {
              get: function (e) {
                return e.renderer().getSegmentPoints(e);
              },
              mult: !0,
            },
            sourceEndpoint: {
              get: function (e) {
                return e.renderer().getSourceEndpoint(e);
              },
            },
            targetEndpoint: {
              get: function (e) {
                return e.renderer().getTargetEndpoint(e);
              },
            },
            midpoint: {
              get: function (e) {
                return e.renderer().getEdgeMidpoint(e);
              },
            },
          },
          Ll = function (e) {
            return "rendered" + e[0].toUpperCase() + e.substr(1);
          },
          Sl = Object.keys(Al).reduce(function (e, t) {
            var n = Al[t],
              r = Ll(t);
            return (
              (e[t] = function () {
                return Dl(this, n.get);
              }),
              n.mult
                ? (e[r] = function () {
                    return Nl(this, n.get);
                  })
                : (e[r] = function () {
                    return Cl(this, n.get);
                  }),
              e
            );
          }, {}),
          Ol = ee({}, al, El, _l, Sl),
          kl = function (e, t) {
            this.recycle(e, t);
          };
        function Il() {
          return !1;
        }
        function Ml() {
          return !0;
        }
        kl.prototype = {
          instanceString: function () {
            return "event";
          },
          recycle: function (e, t) {
            if (
              ((this.isImmediatePropagationStopped =
                this.isPropagationStopped =
                this.isDefaultPrevented =
                  Il),
              null != e && e.preventDefault
                ? ((this.type = e.type),
                  (this.isDefaultPrevented = e.defaultPrevented ? Ml : Il))
                : null != e && e.type
                ? (t = e)
                : (this.type = e),
              null != t &&
                ((this.originalEvent = t.originalEvent),
                (this.type = null != t.type ? t.type : this.type),
                (this.cy = t.cy),
                (this.target = t.target),
                (this.position = t.position),
                (this.renderedPosition = t.renderedPosition),
                (this.namespace = t.namespace),
                (this.layout = t.layout)),
              null != this.cy &&
                null != this.position &&
                null == this.renderedPosition)
            ) {
              var n = this.position,
                r = this.cy.zoom(),
                i = this.cy.pan();
              this.renderedPosition = { x: n.x * r + i.x, y: n.y * r + i.y };
            }
            this.timeStamp = (e && e.timeStamp) || Date.now();
          },
          preventDefault: function () {
            this.isDefaultPrevented = Ml;
            var e = this.originalEvent;
            e && e.preventDefault && e.preventDefault();
          },
          stopPropagation: function () {
            this.isPropagationStopped = Ml;
            var e = this.originalEvent;
            e && e.stopPropagation && e.stopPropagation();
          },
          stopImmediatePropagation: function () {
            (this.isImmediatePropagationStopped = Ml), this.stopPropagation();
          },
          isDefaultPrevented: Il,
          isPropagationStopped: Il,
          isImmediatePropagationStopped: Il,
        };
        var Pl = /^([^.]+)(\.(?:[^.]+))?$/,
          Rl = ".*",
          Bl = {
            qualifierCompare: function (e, t) {
              return e === t;
            },
            eventMatches: function () {
              return !0;
            },
            addEventFields: function () {},
            callbackContext: function (e) {
              return e;
            },
            beforeEmit: function () {},
            afterEmit: function () {},
            bubble: function () {
              return !1;
            },
            parent: function () {
              return null;
            },
            context: null,
          },
          Fl = Object.keys(Bl),
          zl = {};
        function Gl() {
          for (
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : zl,
              t = arguments.length > 1 ? arguments[1] : void 0,
              n = 0;
            n < Fl.length;
            n++
          ) {
            var r = Fl[n];
            this[r] = e[r] || Bl[r];
          }
          (this.context = t || this.context),
            (this.listeners = []),
            (this.emitting = 0);
        }
        var Yl = Gl.prototype,
          Xl = function (e, t, n, r, i, a, o) {
            E(r) && ((i = r), (r = null)),
              o && (a = null == a ? o : ee({}, a, o));
            for (var s = T(n) ? n : n.split(/\s+/), l = 0; l < s.length; l++) {
              var u = s[l];
              if (!P(u)) {
                var c = u.match(Pl);
                if (c && !1 === t(e, u, c[1], c[2] ? c[2] : null, r, i, a))
                  break;
              }
            }
          },
          Vl = function (e, t) {
            return e.addEventFields(e.context, t), new kl(t.type, t);
          },
          Ul = function (e, t, n) {
            if (M(n)) t(e, n);
            else if (_(n)) t(e, Vl(e, n));
            else
              for (
                var r = T(n) ? n : n.split(/\s+/), i = 0;
                i < r.length;
                i++
              ) {
                var a = r[i];
                if (!P(a)) {
                  var o = a.match(Pl);
                  if (o) {
                    var s = o[1],
                      l = o[2] ? o[2] : null;
                    t(e, Vl(e, { type: s, namespace: l, target: e.context }));
                  }
                }
              }
          };
        (Yl.on = Yl.addListener =
          function (e, t, n, r, i) {
            return (
              Xl(
                this,
                function (e, t, n, r, i, a, o) {
                  E(a) &&
                    e.listeners.push({
                      event: t,
                      callback: a,
                      type: n,
                      namespace: r,
                      qualifier: i,
                      conf: o,
                    });
                },
                e,
                t,
                n,
                r,
                i
              ),
              this
            );
          }),
          (Yl.one = function (e, t, n, r) {
            return this.on(e, t, n, r, { one: !0 });
          }),
          (Yl.removeListener = Yl.off =
            function (e, t, n, r) {
              var i = this;
              0 !== this.emitting && (this.listeners = kt(this.listeners));
              for (
                var a = this.listeners,
                  o = function (o) {
                    var s = a[o];
                    Xl(
                      i,
                      function (t, n, r, i, l, u) {
                        if (
                          (s.type === r || "*" === e) &&
                          ((!i && ".*" !== s.namespace) || s.namespace === i) &&
                          (!l || t.qualifierCompare(s.qualifier, l)) &&
                          (!u || s.callback === u)
                        )
                          return a.splice(o, 1), !1;
                      },
                      e,
                      t,
                      n,
                      r
                    );
                  },
                  s = a.length - 1;
                s >= 0;
                s--
              )
                o(s);
              return this;
            }),
          (Yl.removeAllListeners = function () {
            return this.removeListener("*");
          }),
          (Yl.emit = Yl.trigger =
            function (e, t, n) {
              var r = this.listeners,
                i = r.length;
              return (
                this.emitting++,
                T(t) || (t = [t]),
                Ul(
                  this,
                  function (e, a) {
                    null != n &&
                      ((r = [
                        {
                          event: a.event,
                          type: a.type,
                          namespace: a.namespace,
                          callback: n,
                        },
                      ]),
                      (i = r.length));
                    for (
                      var o = function (n) {
                          var i = r[n];
                          if (
                            i.type === a.type &&
                            (!i.namespace ||
                              i.namespace === a.namespace ||
                              i.namespace === Rl) &&
                            e.eventMatches(e.context, i, a)
                          ) {
                            var o = [a];
                            null != t && zt(o, t),
                              e.beforeEmit(e.context, i, a),
                              i.conf &&
                                i.conf.one &&
                                (e.listeners = e.listeners.filter(function (e) {
                                  return e !== i;
                                }));
                            var s = e.callbackContext(e.context, i, a),
                              l = i.callback.apply(s, o);
                            e.afterEmit(e.context, i, a),
                              !1 === l &&
                                (a.stopPropagation(), a.preventDefault());
                          }
                        },
                        s = 0;
                      s < i;
                      s++
                    )
                      o(s);
                    e.bubble(e.context) &&
                      !a.isPropagationStopped() &&
                      e.parent(e.context).emit(a, t);
                  },
                  e
                ),
                this.emitting--,
                this
              );
            });
        var jl = {
            qualifierCompare: function (e, t) {
              return null == e || null == t
                ? null == e && null == t
                : e.sameText(t);
            },
            eventMatches: function (e, t, n) {
              var r = t.qualifier;
              return (
                null == r ||
                (e !== n.target && S(n.target) && r.matches(n.target))
              );
            },
            addEventFields: function (e, t) {
              (t.cy = e.cy()), (t.target = e);
            },
            callbackContext: function (e, t, n) {
              return null != t.qualifier ? n.target : e;
            },
            beforeEmit: function (e, t) {
              t.conf &&
                t.conf.once &&
                t.conf.onceCollection.removeListener(
                  t.event,
                  t.qualifier,
                  t.callback
                );
            },
            bubble: function () {
              return !0;
            },
            parent: function (e) {
              return e.isChild() ? e.parent() : e.cy();
            },
          },
          Hl = function (e) {
            return w(e) ? new Fs(e) : e;
          },
          ql = {
            createEmitter: function () {
              for (var e = 0; e < this.length; e++) {
                var t = this[e],
                  n = t._private;
                n.emitter || (n.emitter = new Gl(jl, t));
              }
              return this;
            },
            emitter: function () {
              return this._private.emitter;
            },
            on: function (e, t, n) {
              for (var r = Hl(t), i = 0; i < this.length; i++)
                this[i].emitter().on(e, r, n);
              return this;
            },
            removeListener: function (e, t, n) {
              for (var r = Hl(t), i = 0; i < this.length; i++)
                this[i].emitter().removeListener(e, r, n);
              return this;
            },
            removeAllListeners: function () {
              for (var e = 0; e < this.length; e++)
                this[e].emitter().removeAllListeners();
              return this;
            },
            one: function (e, t, n) {
              for (var r = Hl(t), i = 0; i < this.length; i++)
                this[i].emitter().one(e, r, n);
              return this;
            },
            once: function (e, t, n) {
              for (var r = Hl(t), i = 0; i < this.length; i++)
                this[i]
                  .emitter()
                  .on(e, r, n, { once: !0, onceCollection: this });
            },
            emit: function (e, t) {
              for (var n = 0; n < this.length; n++)
                this[n].emitter().emit(e, t);
              return this;
            },
            emitAndNotify: function (e, t) {
              if (0 !== this.length)
                return this.cy().notify(e, this), this.emit(e, t), this;
            },
          };
        gs.eventAliasesOn(ql);
        var Wl = {
            nodes: function (e) {
              return this.filter(function (e) {
                return e.isNode();
              }).filter(e);
            },
            edges: function (e) {
              return this.filter(function (e) {
                return e.isEdge();
              }).filter(e);
            },
            byGroup: function () {
              for (
                var e = this.spawn(), t = this.spawn(), n = 0;
                n < this.length;
                n++
              ) {
                var r = this[n];
                r.isNode() ? e.push(r) : t.push(r);
              }
              return { nodes: e, edges: t };
            },
            filter: function (e, t) {
              if (void 0 === e) return this;
              if (w(e) || L(e)) return new Fs(e).filter(this);
              if (E(e)) {
                for (var n = this.spawn(), r = this, i = 0; i < r.length; i++) {
                  var a = r[i];
                  (t ? e.apply(t, [a, i, r]) : e(a, i, r)) && n.push(a);
                }
                return n;
              }
              return this.spawn();
            },
            not: function (e) {
              if (e) {
                w(e) && (e = this.filter(e));
                for (var t = this.spawn(), n = 0; n < this.length; n++) {
                  var r = this[n];
                  e.has(r) || t.push(r);
                }
                return t;
              }
              return this;
            },
            absoluteComplement: function () {
              return this.cy().mutableElements().not(this);
            },
            intersect: function (e) {
              if (w(e)) {
                var t = e;
                return this.filter(t);
              }
              for (
                var n = this.spawn(),
                  r = this,
                  i = e,
                  a = this.length < e.length,
                  o = a ? r : i,
                  s = a ? i : r,
                  l = 0;
                l < o.length;
                l++
              ) {
                var u = o[l];
                s.has(u) && n.push(u);
              }
              return n;
            },
            xor: function (e) {
              var t = this._private.cy;
              w(e) && (e = t.$(e));
              var n = this.spawn(),
                r = this,
                i = e,
                a = function (e, t) {
                  for (var r = 0; r < e.length; r++) {
                    var i = e[r],
                      a = i._private.data.id;
                    t.hasElementWithId(a) || n.push(i);
                  }
                };
              return a(r, i), a(i, r), n;
            },
            diff: function (e) {
              var t = this._private.cy;
              w(e) && (e = t.$(e));
              var n = this.spawn(),
                r = this.spawn(),
                i = this.spawn(),
                a = this,
                o = e,
                s = function (e, t, n) {
                  for (var r = 0; r < e.length; r++) {
                    var a = e[r],
                      o = a._private.data.id;
                    t.hasElementWithId(o) ? i.merge(a) : n.push(a);
                  }
                };
              return s(a, o, n), s(o, a, r), { left: n, right: r, both: i };
            },
            add: function (e) {
              var t = this._private.cy;
              if (!e) return this;
              if (w(e)) {
                var n = e;
                e = t.mutableElements().filter(n);
              }
              for (var r = this.spawnSelf(), i = 0; i < e.length; i++) {
                var a = e[i],
                  o = !this.has(a);
                o && r.push(a);
              }
              return r;
            },
            merge: function (e) {
              var t = this._private,
                n = t.cy;
              if (!e) return this;
              if (e && w(e)) {
                var r = e;
                e = n.mutableElements().filter(r);
              }
              for (var i = t.map, a = 0; a < e.length; a++) {
                var o = e[a],
                  s = o._private.data.id;
                if (!i.has(s)) {
                  var l = this.length++;
                  (this[l] = o), i.set(s, { ele: o, index: l });
                }
              }
              return this;
            },
            unmergeAt: function (e) {
              var t = this[e].id(),
                n = this._private.map;
              (this[e] = void 0), n.delete(t);
              var r = e === this.length - 1;
              if (this.length > 1 && !r) {
                var i = this.length - 1,
                  a = this[i],
                  o = a._private.data.id;
                (this[i] = void 0),
                  (this[e] = a),
                  n.set(o, { ele: a, index: e });
              }
              return this.length--, this;
            },
            unmergeOne: function (e) {
              e = e[0];
              var t = this._private,
                n = e._private.data.id,
                r = t.map.get(n);
              if (!r) return this;
              var i = r.index;
              return this.unmergeAt(i), this;
            },
            unmerge: function (e) {
              var t = this._private.cy;
              if (!e) return this;
              if (e && w(e)) {
                var n = e;
                e = t.mutableElements().filter(n);
              }
              for (var r = 0; r < e.length; r++) this.unmergeOne(e[r]);
              return this;
            },
            unmergeBy: function (e) {
              for (var t = this.length - 1; t >= 0; t--)
                e(this[t]) && this.unmergeAt(t);
              return this;
            },
            map: function (e, t) {
              for (var n = [], r = this, i = 0; i < r.length; i++) {
                var a = r[i],
                  o = t ? e.apply(t, [a, i, r]) : e(a, i, r);
                n.push(o);
              }
              return n;
            },
            reduce: function (e, t) {
              for (var n = t, r = this, i = 0; i < r.length; i++)
                n = e(n, r[i], i, r);
              return n;
            },
            max: function (e, t) {
              for (var n, r = -1 / 0, i = this, a = 0; a < i.length; a++) {
                var o = i[a],
                  s = t ? e.apply(t, [o, a, i]) : e(o, a, i);
                s > r && ((r = s), (n = o));
              }
              return { value: r, ele: n };
            },
            min: function (e, t) {
              for (var n, r = 1 / 0, i = this, a = 0; a < i.length; a++) {
                var o = i[a],
                  s = t ? e.apply(t, [o, a, i]) : e(o, a, i);
                s < r && ((r = s), (n = o));
              }
              return { value: r, ele: n };
            },
          },
          $l = Wl;
        ($l.u = $l["|"] = $l["+"] = $l.union = $l.or = $l.add),
          ($l["\\"] =
            $l["!"] =
            $l["-"] =
            $l.difference =
            $l.relativeComplement =
            $l.subtract =
              $l.not),
          ($l.n = $l["&"] = $l["."] = $l.and = $l.intersection = $l.intersect),
          ($l["^"] =
            $l["(+)"] =
            $l["(-)"] =
            $l.symmetricDifference =
            $l.symdiff =
              $l.xor),
          ($l.fnFilter = $l.filterFn = $l.stdFilter = $l.filter),
          ($l.complement = $l.abscomp = $l.absoluteComplement);
        var Kl,
          Zl = {
            isNode: function () {
              return "nodes" === this.group();
            },
            isEdge: function () {
              return "edges" === this.group();
            },
            isLoop: function () {
              return this.isEdge() && this.source()[0] === this.target()[0];
            },
            isSimple: function () {
              return this.isEdge() && this.source()[0] !== this.target()[0];
            },
            group: function () {
              var e = this[0];
              if (e) return e._private.group;
            },
          },
          Ql = function (e, t) {
            var n = e.cy().hasCompoundNodes();
            function r(e) {
              var t = e.pstyle("z-compound-depth");
              return "auto" === t.value
                ? n
                  ? e.zDepth()
                  : 0
                : "bottom" === t.value
                ? -1
                : "top" === t.value
                ? Et
                : 0;
            }
            var i = r(e) - r(t);
            if (0 !== i) return i;
            function a(e) {
              return "auto" === e.pstyle("z-index-compare").value && e.isNode()
                ? 1
                : 0;
            }
            var o = a(e) - a(t);
            if (0 !== o) return o;
            var s = e.pstyle("z-index").value - t.pstyle("z-index").value;
            return 0 !== s ? s : e.poolIndex() - t.poolIndex();
          },
          Jl = {
            forEach: function (e, t) {
              if (E(e))
                for (var n = this.length, r = 0; r < n; r++) {
                  var i = this[r];
                  if (!1 === (t ? e.apply(t, [i, r, this]) : e(i, r, this)))
                    break;
                }
              return this;
            },
            toArray: function () {
              for (var e = [], t = 0; t < this.length; t++) e.push(this[t]);
              return e;
            },
            slice: function (e, t) {
              var n = [],
                r = this.length;
              null == t && (t = r),
                null == e && (e = 0),
                e < 0 && (e = r + e),
                t < 0 && (t = r + t);
              for (var i = e; i >= 0 && i < t && i < r; i++) n.push(this[i]);
              return this.spawn(n);
            },
            size: function () {
              return this.length;
            },
            eq: function (e) {
              return this[e] || this.spawn();
            },
            first: function () {
              return this[0] || this.spawn();
            },
            last: function () {
              return this[this.length - 1] || this.spawn();
            },
            empty: function () {
              return 0 === this.length;
            },
            nonempty: function () {
              return !this.empty();
            },
            sort: function (e) {
              if (!E(e)) return this;
              var t = this.toArray().sort(e);
              return this.spawn(t);
            },
            sortByZIndex: function () {
              return this.sort(Ql);
            },
            zDepth: function () {
              var e = this[0];
              if (e) {
                var t = e._private;
                if ("nodes" === t.group) {
                  var n = t.data.parent ? e.parents().size() : 0;
                  return e.isParent() ? n : Et - 1;
                }
                var r = t.source,
                  i = t.target,
                  a = r.zDepth(),
                  o = i.zDepth();
                return Math.max(a, o, 0);
              }
            },
          };
        (Jl.each = Jl.forEach),
          (Kl = "undefined"),
          ("undefined" == typeof Symbol ? "undefined" : e(Symbol)) != Kl &&
            e(Symbol.iterator) != Kl &&
            (Jl[Symbol.iterator] = function () {
              var e = this,
                t = { value: void 0, done: !1 },
                n = 0,
                r = this.length;
              return o(
                {
                  next: function () {
                    return (
                      n < r
                        ? (t.value = e[n++])
                        : ((t.value = void 0), (t.done = !0)),
                      t
                    );
                  },
                },
                Symbol.iterator,
                function () {
                  return this;
                }
              );
            });
        var eu = Rt({ nodeDimensionsIncludeLabels: !1 }),
          tu = {
            layoutDimensions: function (e) {
              var t;
              if (((e = eu(e)), this.takesUpSpace()))
                if (e.nodeDimensionsIncludeLabels) {
                  var n = this.boundingBox();
                  t = { w: n.w, h: n.h };
                } else t = { w: this.outerWidth(), h: this.outerHeight() };
              else t = { w: 0, h: 0 };
              return (0 !== t.w && 0 !== t.h) || (t.w = t.h = 1), t;
            },
            layoutPositions: function (e, t, n) {
              var r = this.nodes().filter(function (e) {
                  return !e.isParent();
                }),
                i = this.cy(),
                a = t.eles,
                o = function (e) {
                  return e.id();
                },
                s = G(n, o);
              e.emit({ type: "layoutstart", layout: e }), (e.animations = []);
              var l = function (e, t, n) {
                  var r = { x: t.x1 + t.w / 2, y: t.y1 + t.h / 2 },
                    i = { x: (n.x - r.x) * e, y: (n.y - r.y) * e };
                  return { x: r.x + i.x, y: r.y + i.y };
                },
                u = t.spacingFactor && 1 !== t.spacingFactor,
                c = function () {
                  if (!u) return null;
                  for (var e = On(), t = 0; t < r.length; t++) {
                    var n = r[t],
                      i = s(n, t);
                    Rn(e, i.x, i.y);
                  }
                  return e;
                },
                h = c(),
                d = G(function (e, n) {
                  var r = s(e, n);
                  if (u) {
                    var i = Math.abs(t.spacingFactor);
                    r = l(i, h, r);
                  }
                  return null != t.transform && (r = t.transform(e, r)), r;
                }, o);
              if (t.animate) {
                for (var p = 0; p < r.length; p++) {
                  var g = r[p],
                    f = d(g, p);
                  if (null == t.animateFilter || t.animateFilter(g, p)) {
                    var v = g.animation({
                      position: f,
                      duration: t.animationDuration,
                      easing: t.animationEasing,
                    });
                    e.animations.push(v);
                  } else g.position(f);
                }
                if (t.fit) {
                  var y = i.animation({
                    fit: {
                      boundingBox: a.boundingBoxAt(d),
                      padding: t.padding,
                    },
                    duration: t.animationDuration,
                    easing: t.animationEasing,
                  });
                  e.animations.push(y);
                } else if (void 0 !== t.zoom && void 0 !== t.pan) {
                  var m = i.animation({
                    zoom: t.zoom,
                    pan: t.pan,
                    duration: t.animationDuration,
                    easing: t.animationEasing,
                  });
                  e.animations.push(m);
                }
                e.animations.forEach(function (e) {
                  return e.play();
                }),
                  e.one("layoutready", t.ready),
                  e.emit({ type: "layoutready", layout: e }),
                  Vi.all(
                    e.animations.map(function (e) {
                      return e.promise();
                    })
                  ).then(function () {
                    e.one("layoutstop", t.stop),
                      e.emit({ type: "layoutstop", layout: e });
                  });
              } else
                r.positions(d),
                  t.fit && i.fit(t.eles, t.padding),
                  null != t.zoom && i.zoom(t.zoom),
                  t.pan && i.pan(t.pan),
                  e.one("layoutready", t.ready),
                  e.emit({ type: "layoutready", layout: e }),
                  e.one("layoutstop", t.stop),
                  e.emit({ type: "layoutstop", layout: e });
              return this;
            },
            layout: function (e) {
              return this.cy().makeLayout(ee({}, e, { eles: this }));
            },
          };
        function nu(e, t, n) {
          var r,
            i = n._private,
            a = (i.styleCache = i.styleCache || []);
          return null != (r = a[e]) ? r : (r = a[e] = t(n));
        }
        function ru(e, t) {
          return (
            (e = vt(e)),
            function (n) {
              return nu(e, t, n);
            }
          );
        }
        function iu(e, t) {
          e = vt(e);
          var n = function (e) {
            return t.call(e);
          };
          return function () {
            var t = this[0];
            if (t) return nu(e, n, t);
          };
        }
        tu.createLayout = tu.makeLayout = tu.layout;
        var au = {
          recalculateRenderedStyle: function (e) {
            var t = this.cy(),
              n = t.renderer(),
              r = t.styleEnabled();
            return n && r && n.recalculateRenderedStyle(this, e), this;
          },
          dirtyStyleCache: function () {
            var e,
              t = this.cy(),
              n = function (e) {
                return (e._private.styleCache = null);
              };
            return (
              t.hasCompoundNodes()
                ? ((e = this.spawnSelf()
                    .merge(this.descendants())
                    .merge(this.parents())).merge(e.connectedEdges()),
                  e.forEach(n))
                : this.forEach(function (e) {
                    n(e), e.connectedEdges().forEach(n);
                  }),
              this
            );
          },
          updateStyle: function (e) {
            var t = this._private.cy;
            if (!t.styleEnabled()) return this;
            if (t.batching())
              return t._private.batchStyleEles.merge(this), this;
            var n = this;
            (e = !(!e && void 0 !== e)),
              t.hasCompoundNodes() &&
                (n = this.spawnSelf()
                  .merge(this.descendants())
                  .merge(this.parents()));
            var r = n;
            return (
              e ? r.emitAndNotify("style") : r.emit("style"),
              n.forEach(function (e) {
                return (e._private.styleDirty = !0);
              }),
              this
            );
          },
          cleanStyle: function () {
            var e = this.cy();
            if (e.styleEnabled())
              for (var t = 0; t < this.length; t++) {
                var n = this[t];
                n._private.styleDirty &&
                  ((n._private.styleDirty = !1), e.style().apply(n));
              }
          },
          parsedStyle: function (e) {
            var t =
                !(arguments.length > 1 && void 0 !== arguments[1]) ||
                arguments[1],
              n = this[0],
              r = n.cy();
            if (r.styleEnabled() && n) {
              this.cleanStyle();
              var i = n._private.style[e];
              return null != i ? i : t ? r.style().getDefaultProperty(e) : null;
            }
          },
          numericStyle: function (e) {
            var t = this[0];
            if (t.cy().styleEnabled() && t) {
              var n = t.pstyle(e);
              return void 0 !== n.pfValue ? n.pfValue : n.value;
            }
          },
          numericStyleUnits: function (e) {
            var t = this[0];
            if (t.cy().styleEnabled()) return t ? t.pstyle(e).units : void 0;
          },
          renderedStyle: function (e) {
            var t = this.cy();
            if (!t.styleEnabled()) return this;
            var n = this[0];
            return n ? t.style().getRenderedStyle(n, e) : void 0;
          },
          style: function (e, t) {
            var n = this.cy();
            if (!n.styleEnabled()) return this;
            var r = !1,
              i = n.style();
            if (_(e)) {
              var a = e;
              i.applyBypass(this, a, r), this.emitAndNotify("style");
            } else if (w(e)) {
              if (void 0 === t) {
                var o = this[0];
                return o ? i.getStylePropertyValue(o, e) : void 0;
              }
              i.applyBypass(this, e, t, r), this.emitAndNotify("style");
            } else if (void 0 === e) {
              var s = this[0];
              return s ? i.getRawStyle(s) : void 0;
            }
            return this;
          },
          removeStyle: function (e) {
            var t = this.cy();
            if (!t.styleEnabled()) return this;
            var n = !1,
              r = t.style(),
              i = this;
            if (void 0 === e)
              for (var a = 0; a < i.length; a++) {
                var o = i[a];
                r.removeAllBypasses(o, n);
              }
            else {
              e = e.split(/\s+/);
              for (var s = 0; s < i.length; s++) {
                var l = i[s];
                r.removeBypasses(l, e, n);
              }
            }
            return this.emitAndNotify("style"), this;
          },
          show: function () {
            return this.css("display", "element"), this;
          },
          hide: function () {
            return this.css("display", "none"), this;
          },
          effectiveOpacity: function () {
            var e = this.cy();
            if (!e.styleEnabled()) return 1;
            var t = e.hasCompoundNodes(),
              n = this[0];
            if (n) {
              var r = n._private,
                i = n.pstyle("opacity").value;
              if (!t) return i;
              var a = r.data.parent ? n.parents() : null;
              if (a)
                for (var o = 0; o < a.length; o++)
                  i *= a[o].pstyle("opacity").value;
              return i;
            }
          },
          transparent: function () {
            if (!this.cy().styleEnabled()) return !1;
            var e = this[0],
              t = e.cy().hasCompoundNodes();
            return e
              ? t
                ? 0 === e.effectiveOpacity()
                : 0 === e.pstyle("opacity").value
              : void 0;
          },
          backgrounding: function () {
            return (
              !!this.cy().styleEnabled() && !!this[0]._private.backgrounding
            );
          },
        };
        function ou(e, t) {
          var n = e._private.data.parent ? e.parents() : null;
          if (n) for (var r = 0; r < n.length; r++) if (!t(n[r])) return !1;
          return !0;
        }
        function su(e) {
          var t = e.ok,
            n = e.edgeOkViaNode || e.ok,
            r = e.parentOk || e.ok;
          return function () {
            var e = this.cy();
            if (!e.styleEnabled()) return !0;
            var i = this[0],
              a = e.hasCompoundNodes();
            if (i) {
              var o = i._private;
              if (!t(i)) return !1;
              if (i.isNode()) return !a || ou(i, r);
              var s = o.source,
                l = o.target;
              return (
                n(s) &&
                (!a || ou(s, n)) &&
                (s === l || (n(l) && (!a || ou(l, n))))
              );
            }
          };
        }
        var lu = ru("eleTakesUpSpace", function (e) {
          return (
            "element" === e.pstyle("display").value &&
            0 !== e.width() &&
            (!e.isNode() || 0 !== e.height())
          );
        });
        au.takesUpSpace = iu("takesUpSpace", su({ ok: lu }));
        var uu = ru("eleInteractive", function (e) {
            return (
              "yes" === e.pstyle("events").value &&
              "visible" === e.pstyle("visibility").value &&
              lu(e)
            );
          }),
          cu = ru("parentInteractive", function (e) {
            return "visible" === e.pstyle("visibility").value && lu(e);
          });
        (au.interactive = iu(
          "interactive",
          su({ ok: uu, parentOk: cu, edgeOkViaNode: lu })
        )),
          (au.noninteractive = function () {
            var e = this[0];
            if (e) return !e.interactive();
          });
        var hu = ru("eleVisible", function (e) {
            return (
              "visible" === e.pstyle("visibility").value &&
              0 !== e.pstyle("opacity").pfValue &&
              lu(e)
            );
          }),
          du = lu;
        (au.visible = iu("visible", su({ ok: hu, edgeOkViaNode: du }))),
          (au.hidden = function () {
            var e = this[0];
            if (e) return !e.visible();
          }),
          (au.isBundledBezier = iu("isBundledBezier", function () {
            return (
              !!this.cy().styleEnabled() &&
              !this.removed() &&
              "bezier" === this.pstyle("curve-style").value &&
              this.takesUpSpace()
            );
          })),
          (au.bypass = au.css = au.style),
          (au.renderedCss = au.renderedStyle),
          (au.removeBypass = au.removeCss = au.removeStyle),
          (au.pstyle = au.parsedStyle);
        var pu = {};
        function gu(e) {
          return function () {
            var t = arguments,
              n = [];
            if (2 === t.length) {
              var r = t[0],
                i = t[1];
              this.on(e.event, r, i);
            } else if (1 === t.length && E(t[0])) {
              var a = t[0];
              this.on(e.event, a);
            } else if (0 === t.length || (1 === t.length && T(t[0]))) {
              for (
                var o = 1 === t.length ? t[0] : null, s = 0;
                s < this.length;
                s++
              ) {
                var l = this[s],
                  u = !e.ableField || l._private[e.ableField],
                  c = l._private[e.field] != e.value;
                if (e.overrideAble) {
                  var h = e.overrideAble(l);
                  if (void 0 !== h && ((u = h), !h)) return this;
                }
                u && ((l._private[e.field] = e.value), c && n.push(l));
              }
              var d = this.spawn(n);
              d.updateStyle(), d.emit(e.event), o && d.emit(o);
            }
            return this;
          };
        }
        function fu(e) {
          (pu[e.field] = function () {
            var t = this[0];
            if (t) {
              if (e.overrideField) {
                var n = e.overrideField(t);
                if (void 0 !== n) return n;
              }
              return t._private[e.field];
            }
          }),
            (pu[e.on] = gu({
              event: e.on,
              field: e.field,
              ableField: e.ableField,
              overrideAble: e.overrideAble,
              value: !0,
            })),
            (pu[e.off] = gu({
              event: e.off,
              field: e.field,
              ableField: e.ableField,
              overrideAble: e.overrideAble,
              value: !1,
            }));
        }
        fu({
          field: "locked",
          overrideField: function (e) {
            return !!e.cy().autolock() || void 0;
          },
          on: "lock",
          off: "unlock",
        }),
          fu({
            field: "grabbable",
            overrideField: function (e) {
              return !e.cy().autoungrabify() && !e.pannable() && void 0;
            },
            on: "grabify",
            off: "ungrabify",
          }),
          fu({
            field: "selected",
            ableField: "selectable",
            overrideAble: function (e) {
              return !e.cy().autounselectify() && void 0;
            },
            on: "select",
            off: "unselect",
          }),
          fu({
            field: "selectable",
            overrideField: function (e) {
              return !e.cy().autounselectify() && void 0;
            },
            on: "selectify",
            off: "unselectify",
          }),
          (pu.deselect = pu.unselect),
          (pu.grabbed = function () {
            var e = this[0];
            if (e) return e._private.grabbed;
          }),
          fu({ field: "active", on: "activate", off: "unactivate" }),
          fu({ field: "pannable", on: "panify", off: "unpanify" }),
          (pu.inactive = function () {
            var e = this[0];
            if (e) return !e._private.active;
          });
        var vu = {},
          yu = function (e) {
            return function (t) {
              for (var n = this, r = [], i = 0; i < n.length; i++) {
                var a = n[i];
                if (a.isNode()) {
                  for (
                    var o = !1, s = a.connectedEdges(), l = 0;
                    l < s.length;
                    l++
                  ) {
                    var u = s[l],
                      c = u.source(),
                      h = u.target();
                    if (
                      (e.noIncomingEdges && h === a && c !== a) ||
                      (e.noOutgoingEdges && c === a && h !== a)
                    ) {
                      o = !0;
                      break;
                    }
                  }
                  o || r.push(a);
                }
              }
              return this.spawn(r, !0).filter(t);
            };
          },
          mu = function (e) {
            return function (t) {
              for (var n = this, r = [], i = 0; i < n.length; i++) {
                var a = n[i];
                if (a.isNode())
                  for (var o = a.connectedEdges(), s = 0; s < o.length; s++) {
                    var l = o[s],
                      u = l.source(),
                      c = l.target();
                    e.outgoing && u === a
                      ? (r.push(l), r.push(c))
                      : e.incoming && c === a && (r.push(l), r.push(u));
                  }
              }
              return this.spawn(r, !0).filter(t);
            };
          },
          bu = function (e) {
            return function (t) {
              for (var n = this, r = [], i = {}; ; ) {
                var a = e.outgoing ? n.outgoers() : n.incomers();
                if (0 === a.length) break;
                for (var o = !1, s = 0; s < a.length; s++) {
                  var l = a[s],
                    u = l.id();
                  i[u] || ((i[u] = !0), r.push(l), (o = !0));
                }
                if (!o) break;
                n = a;
              }
              return this.spawn(r, !0).filter(t);
            };
          };
        function xu(e) {
          return function (t) {
            for (var n = [], r = 0; r < this.length; r++) {
              var i = this[r]._private[e.attr];
              i && n.push(i);
            }
            return this.spawn(n, !0).filter(t);
          };
        }
        function wu(e) {
          return function (t) {
            var n = [],
              r = this._private.cy,
              i = e || {};
            w(t) && (t = r.$(t));
            for (var a = 0; a < t.length; a++)
              for (var o = t[a]._private.edges, s = 0; s < o.length; s++) {
                var l = o[s],
                  u = l._private.data,
                  c =
                    this.hasElementWithId(u.source) &&
                    t.hasElementWithId(u.target),
                  h =
                    t.hasElementWithId(u.source) &&
                    this.hasElementWithId(u.target);
                if (c || h) {
                  if (i.thisIsSrc || i.thisIsTgt) {
                    if (i.thisIsSrc && !c) continue;
                    if (i.thisIsTgt && !h) continue;
                  }
                  n.push(l);
                }
              }
            return this.spawn(n, !0);
          };
        }
        function Eu(e) {
          return (
            (e = ee({}, { codirected: !1 }, e)),
            function (t) {
              for (
                var n = [], r = this.edges(), i = e, a = 0;
                a < r.length;
                a++
              )
                for (
                  var o = r[a]._private,
                    s = o.source,
                    l = s._private.data.id,
                    u = o.data.target,
                    c = s._private.edges,
                    h = 0;
                  h < c.length;
                  h++
                ) {
                  var d = c[h],
                    p = d._private.data,
                    g = p.target,
                    f = p.source,
                    v = g === u && f === l,
                    y = l === g && u === f;
                  ((i.codirected && v) || (!i.codirected && (v || y))) &&
                    n.push(d);
                }
              return this.spawn(n, !0).filter(t);
            }
          );
        }
        (vu.clearTraversalCache = function () {
          for (var e = 0; e < this.length; e++)
            this[e]._private.traversalCache = null;
        }),
          ee(vu, {
            roots: yu({ noIncomingEdges: !0 }),
            leaves: yu({ noOutgoingEdges: !0 }),
            outgoers: Vs(mu({ outgoing: !0 }), "outgoers"),
            successors: bu({ outgoing: !0 }),
            incomers: Vs(mu({ incoming: !0 }), "incomers"),
            predecessors: bu({ incoming: !0 }),
          }),
          ee(vu, {
            neighborhood: Vs(function (e) {
              for (var t = [], n = this.nodes(), r = 0; r < n.length; r++)
                for (
                  var i = n[r], a = i.connectedEdges(), o = 0;
                  o < a.length;
                  o++
                ) {
                  var s = a[o],
                    l = s.source(),
                    u = s.target(),
                    c = i === l ? u : l;
                  c.length > 0 && t.push(c[0]), t.push(s[0]);
                }
              return this.spawn(t, !0).filter(e);
            }, "neighborhood"),
            closedNeighborhood: function (e) {
              return this.neighborhood().add(this).filter(e);
            },
            openNeighborhood: function (e) {
              return this.neighborhood(e);
            },
          }),
          (vu.neighbourhood = vu.neighborhood),
          (vu.closedNeighbourhood = vu.closedNeighborhood),
          (vu.openNeighbourhood = vu.openNeighborhood),
          ee(vu, {
            source: Vs(function (e) {
              var t,
                n = this[0];
              return (
                n && (t = n._private.source || n.cy().collection()),
                t && e ? t.filter(e) : t
              );
            }, "source"),
            target: Vs(function (e) {
              var t,
                n = this[0];
              return (
                n && (t = n._private.target || n.cy().collection()),
                t && e ? t.filter(e) : t
              );
            }, "target"),
            sources: xu({ attr: "source" }),
            targets: xu({ attr: "target" }),
          }),
          ee(vu, {
            edgesWith: Vs(wu(), "edgesWith"),
            edgesTo: Vs(wu({ thisIsSrc: !0 }), "edgesTo"),
          }),
          ee(vu, {
            connectedEdges: Vs(function (e) {
              for (var t = [], n = this, r = 0; r < n.length; r++) {
                var i = n[r];
                if (i.isNode())
                  for (var a = i._private.edges, o = 0; o < a.length; o++) {
                    var s = a[o];
                    t.push(s);
                  }
              }
              return this.spawn(t, !0).filter(e);
            }, "connectedEdges"),
            connectedNodes: Vs(function (e) {
              for (var t = [], n = this, r = 0; r < n.length; r++) {
                var i = n[r];
                i.isEdge() && (t.push(i.source()[0]), t.push(i.target()[0]));
              }
              return this.spawn(t, !0).filter(e);
            }, "connectedNodes"),
            parallelEdges: Vs(Eu(), "parallelEdges"),
            codirectedEdges: Vs(Eu({ codirected: !0 }), "codirectedEdges"),
          }),
          ee(vu, {
            components: function (e) {
              var t = this,
                n = t.cy(),
                r = n.collection(),
                i = null == e ? t.nodes() : e.nodes(),
                a = [];
              null != e && i.empty() && (i = e.sources());
              var o = function (e, t) {
                r.merge(e), i.unmerge(e), t.merge(e);
              };
              if (i.empty()) return t.spawn();
              var s = function () {
                var e = n.collection();
                a.push(e);
                var r = i[0];
                o(r, e),
                  t.bfs({
                    directed: !1,
                    roots: r,
                    visit: function (t) {
                      return o(t, e);
                    },
                  }),
                  e.forEach(function (n) {
                    n.connectedEdges().forEach(function (n) {
                      t.has(n) &&
                        e.has(n.source()) &&
                        e.has(n.target()) &&
                        e.merge(n);
                    });
                  });
              };
              do {
                s();
              } while (i.length > 0);
              return a;
            },
            component: function () {
              var e = this[0];
              return e.cy().mutableElements().components(e)[0];
            },
          }),
          (vu.componentsOf = vu.components);
        var Tu = function (e, t) {
            var n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              r =
                arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            if (void 0 !== e) {
              var i = new Vt(),
                a = !1;
              if (t) {
                if (t.length > 0 && _(t[0]) && !S(t[0])) {
                  a = !0;
                  for (
                    var o = [], s = new Ht(), l = 0, u = t.length;
                    l < u;
                    l++
                  ) {
                    var c = t[l];
                    null == c.data && (c.data = {});
                    var h = c.data;
                    if (null == h.id) h.id = It();
                    else if (e.hasElementWithId(h.id) || s.has(h.id)) continue;
                    var d = new qt(e, c, !1);
                    o.push(d), s.add(h.id);
                  }
                  t = o;
                }
              } else t = [];
              this.length = 0;
              for (var p = 0, g = t.length; p < g; p++) {
                var f = t[p][0];
                if (null != f) {
                  var v = f._private.data.id;
                  (n && i.has(v)) ||
                    (n && i.set(v, { index: this.length, ele: f }),
                    (this[this.length] = f),
                    this.length++);
                }
              }
              (this._private = {
                eles: this,
                cy: e,
                get map() {
                  return (
                    null == this.lazyMap && this.rebuildMap(), this.lazyMap
                  );
                },
                set map(e) {
                  this.lazyMap = e;
                },
                rebuildMap: function () {
                  for (
                    var e = (this.lazyMap = new Vt()), t = this.eles, n = 0;
                    n < t.length;
                    n++
                  ) {
                    var r = t[n];
                    e.set(r.id(), { index: n, ele: r });
                  }
                },
              }),
                n && (this._private.map = i),
                a && !r && this.restore();
            } else Nt("A collection must have a reference to the core");
          },
          _u = (qt.prototype = Tu.prototype = Object.create(Array.prototype));
        (_u.instanceString = function () {
          return "collection";
        }),
          (_u.spawn = function (e, t) {
            return new Tu(this.cy(), e, t);
          }),
          (_u.spawnSelf = function () {
            return this.spawn(this);
          }),
          (_u.cy = function () {
            return this._private.cy;
          }),
          (_u.renderer = function () {
            return this._private.cy.renderer();
          }),
          (_u.element = function () {
            return this[0];
          }),
          (_u.collection = function () {
            return O(this) ? this : new Tu(this._private.cy, [this]);
          }),
          (_u.unique = function () {
            return new Tu(this._private.cy, this, !0);
          }),
          (_u.hasElementWithId = function (e) {
            return (e = "" + e), this._private.map.has(e);
          }),
          (_u.getElementById = function (e) {
            e = "" + e;
            var t = this._private.cy,
              n = this._private.map.get(e);
            return n ? n.ele : new Tu(t);
          }),
          (_u.$id = _u.getElementById),
          (_u.poolIndex = function () {
            var e = this._private.cy._private.elements,
              t = this[0]._private.data.id;
            return e._private.map.get(t).index;
          }),
          (_u.indexOf = function (e) {
            var t = e[0]._private.data.id;
            return this._private.map.get(t).index;
          }),
          (_u.indexOfId = function (e) {
            return (e = "" + e), this._private.map.get(e).index;
          }),
          (_u.json = function (e) {
            var t = this.element(),
              n = this.cy();
            if (null == t && e) return this;
            if (null != t) {
              var r = t._private;
              if (_(e)) {
                if ((n.startBatch(), e.data)) {
                  t.data(e.data);
                  var i = r.data;
                  if (t.isEdge()) {
                    var a = !1,
                      o = {},
                      s = e.data.source,
                      l = e.data.target;
                    null != s &&
                      s != i.source &&
                      ((o.source = "" + s), (a = !0)),
                      null != l &&
                        l != i.target &&
                        ((o.target = "" + l), (a = !0)),
                      a && (t = t.move(o));
                  } else {
                    var u = "parent" in e.data,
                      c = e.data.parent;
                    !u ||
                      (null == c && null == i.parent) ||
                      c == i.parent ||
                      (void 0 === c && (c = null),
                      null != c && (c = "" + c),
                      (t = t.move({ parent: c })));
                  }
                }
                e.position && t.position(e.position);
                var h = function (n, i, a) {
                  var o = e[n];
                  null != o && o !== r[n] && (o ? t[i]() : t[a]());
                };
                return (
                  h("removed", "remove", "restore"),
                  h("selected", "select", "unselect"),
                  h("selectable", "selectify", "unselectify"),
                  h("locked", "lock", "unlock"),
                  h("grabbable", "grabify", "ungrabify"),
                  h("pannable", "panify", "unpanify"),
                  null != e.classes && t.classes(e.classes),
                  n.endBatch(),
                  this
                );
              }
              if (void 0 === e) {
                var d = {
                  data: Ot(r.data),
                  position: Ot(r.position),
                  group: r.group,
                  removed: r.removed,
                  selected: r.selected,
                  selectable: r.selectable,
                  locked: r.locked,
                  grabbable: r.grabbable,
                  pannable: r.pannable,
                  classes: null,
                };
                d.classes = "";
                var p = 0;
                return (
                  r.classes.forEach(function (e) {
                    return (d.classes += 0 == p++ ? e : " " + e);
                  }),
                  d
                );
              }
            }
          }),
          (_u.jsons = function () {
            for (var e = [], t = 0; t < this.length; t++) {
              var n = this[t].json();
              e.push(n);
            }
            return e;
          }),
          (_u.clone = function () {
            for (var e = this.cy(), t = [], n = 0; n < this.length; n++) {
              var r = this[n].json(),
                i = new qt(e, r, !1);
              t.push(i);
            }
            return new Tu(e, t);
          }),
          (_u.copy = _u.clone),
          (_u.restore = function () {
            for (
              var e,
                t,
                n =
                  !(arguments.length > 0 && void 0 !== arguments[0]) ||
                  arguments[0],
                r =
                  !(arguments.length > 1 && void 0 !== arguments[1]) ||
                  arguments[1],
                i = this,
                a = i.cy(),
                o = a._private,
                s = [],
                l = [],
                u = 0,
                c = i.length;
              u < c;
              u++
            ) {
              var h = i[u];
              (r && !h.removed()) || (h.isNode() ? s.push(h) : l.push(h));
            }
            e = s.concat(l);
            var d = function () {
              e.splice(t, 1), t--;
            };
            for (t = 0; t < e.length; t++) {
              var p = e[t],
                g = p._private,
                f = g.data;
              if ((p.clearTraversalCache(), r || g.removed))
                if (void 0 === f.id) f.id = It();
                else if (C(f.id)) f.id = "" + f.id;
                else {
                  if (P(f.id) || !w(f.id)) {
                    Nt(
                      "Can not create element with invalid string ID `" +
                        f.id +
                        "`"
                    ),
                      d();
                    continue;
                  }
                  if (a.hasElementWithId(f.id)) {
                    Nt("Can not create second element with ID `" + f.id + "`"),
                      d();
                    continue;
                  }
                }
              var v = f.id;
              if (p.isNode()) {
                var y = g.position;
                null == y.x && (y.x = 0), null == y.y && (y.y = 0);
              }
              if (p.isEdge()) {
                for (
                  var m = p,
                    b = ["source", "target"],
                    x = b.length,
                    E = !1,
                    T = 0;
                  T < x;
                  T++
                ) {
                  var _ = b[T],
                    D = f[_];
                  C(D) && (D = f[_] = "" + f[_]),
                    null == D || "" === D
                      ? (Nt(
                          "Can not create edge `" +
                            v +
                            "` with unspecified " +
                            _
                        ),
                        (E = !0))
                      : a.hasElementWithId(D) ||
                        (Nt(
                          "Can not create edge `" +
                            v +
                            "` with nonexistant " +
                            _ +
                            " `" +
                            D +
                            "`"
                        ),
                        (E = !0));
                }
                if (E) {
                  d();
                  continue;
                }
                var N = a.getElementById(f.source),
                  A = a.getElementById(f.target);
                N.same(A)
                  ? N._private.edges.push(m)
                  : (N._private.edges.push(m), A._private.edges.push(m)),
                  (m._private.source = N),
                  (m._private.target = A);
              }
              (g.map = new Vt()),
                g.map.set(v, { ele: p, index: 0 }),
                (g.removed = !1),
                r && a.addToPool(p);
            }
            for (var L = 0; L < s.length; L++) {
              var S = s[L],
                O = S._private.data;
              C(O.parent) && (O.parent = "" + O.parent);
              var k = O.parent;
              if (null != k || S._private.parent) {
                var I = S._private.parent
                  ? a.collection().merge(S._private.parent)
                  : a.getElementById(k);
                if (I.empty()) O.parent = void 0;
                else if (I[0].removed())
                  Lt(
                    "Node added with missing parent, reference to parent removed"
                  ),
                    (O.parent = void 0),
                    (S._private.parent = null);
                else {
                  for (var M = !1, R = I; !R.empty(); ) {
                    if (S.same(R)) {
                      (M = !0), (O.parent = void 0);
                      break;
                    }
                    R = R.parent();
                  }
                  M ||
                    (I[0]._private.children.push(S),
                    (S._private.parent = I[0]),
                    (o.hasCompoundNodes = !0));
                }
              }
            }
            if (e.length > 0) {
              for (
                var B = e.length === i.length ? i : new Tu(a, e), F = 0;
                F < B.length;
                F++
              ) {
                var z = B[F];
                z.isNode() ||
                  (z.parallelEdges().clearTraversalCache(),
                  z.source().clearTraversalCache(),
                  z.target().clearTraversalCache());
              }
              (o.hasCompoundNodes
                ? a
                    .collection()
                    .merge(B)
                    .merge(B.connectedNodes())
                    .merge(B.parent())
                : B
              )
                .dirtyCompoundBoundsCache()
                .dirtyBoundingBoxCache()
                .updateStyle(n),
                n ? B.emitAndNotify("add") : r && B.emit("add");
            }
            return i;
          }),
          (_u.removed = function () {
            var e = this[0];
            return e && e._private.removed;
          }),
          (_u.inside = function () {
            var e = this[0];
            return e && !e._private.removed;
          }),
          (_u.remove = function () {
            var e =
                !(arguments.length > 0 && void 0 !== arguments[0]) ||
                arguments[0],
              t =
                !(arguments.length > 1 && void 0 !== arguments[1]) ||
                arguments[1],
              n = this,
              r = [],
              i = {},
              a = n._private.cy;
            function o(e) {
              for (var t = e._private.edges, n = 0; n < t.length; n++) l(t[n]);
            }
            function s(e) {
              for (var t = e._private.children, n = 0; n < t.length; n++)
                l(t[n]);
            }
            function l(e) {
              var n = i[e.id()];
              (t && e.removed()) ||
                n ||
                ((i[e.id()] = !0),
                e.isNode() ? (r.push(e), o(e), s(e)) : r.unshift(e));
            }
            for (var u = 0, c = n.length; u < c; u++) l(n[u]);
            function h(e, t) {
              var n = e._private.edges;
              Bt(n, t), e.clearTraversalCache();
            }
            function d(e) {
              e.clearTraversalCache();
            }
            var p = [];
            function g(e, t) {
              t = t[0];
              var n = (e = e[0])._private.children,
                r = e.id();
              Bt(n, t),
                (t._private.parent = null),
                p.ids[r] || ((p.ids[r] = !0), p.push(e));
            }
            (p.ids = {}),
              n.dirtyCompoundBoundsCache(),
              t && a.removeFromPool(r);
            for (var f = 0; f < r.length; f++) {
              var v = r[f];
              if (v.isEdge()) {
                var y = v.source()[0],
                  m = v.target()[0];
                h(y, v), h(m, v);
                for (var b = v.parallelEdges(), x = 0; x < b.length; x++) {
                  var w = b[x];
                  d(w), w.isBundledBezier() && w.dirtyBoundingBoxCache();
                }
              } else {
                var E = v.parent();
                0 !== E.length && g(E, v);
              }
              t && (v._private.removed = !0);
            }
            var T = a._private.elements;
            a._private.hasCompoundNodes = !1;
            for (var _ = 0; _ < T.length; _++)
              if (T[_].isParent()) {
                a._private.hasCompoundNodes = !0;
                break;
              }
            var D = new Tu(this.cy(), r);
            D.size() > 0 &&
              (e ? D.emitAndNotify("remove") : t && D.emit("remove"));
            for (var C = 0; C < p.length; C++) {
              var N = p[C];
              (t && N.removed()) || N.updateStyle();
            }
            return D;
          }),
          (_u.move = function (e) {
            var t = this._private.cy,
              n = this,
              r = !1,
              i = !1,
              a = function (e) {
                return null == e ? e : "" + e;
              };
            if (void 0 !== e.source || void 0 !== e.target) {
              var o = a(e.source),
                s = a(e.target),
                l = null != o && t.hasElementWithId(o),
                u = null != s && t.hasElementWithId(s);
              (l || u) &&
                (t.batch(function () {
                  n.remove(r, i), n.emitAndNotify("moveout");
                  for (var e = 0; e < n.length; e++) {
                    var t = n[e],
                      a = t._private.data;
                    t.isEdge() && (l && (a.source = o), u && (a.target = s));
                  }
                  n.restore(r, i);
                }),
                n.emitAndNotify("move"));
            } else if (void 0 !== e.parent) {
              var c = a(e.parent);
              if (null === c || t.hasElementWithId(c)) {
                var h = null === c ? void 0 : c;
                t.batch(function () {
                  var e = n.remove(r, i);
                  e.emitAndNotify("moveout");
                  for (var t = 0; t < n.length; t++) {
                    var a = n[t],
                      o = a._private.data;
                    a.isNode() && (o.parent = h);
                  }
                  e.restore(r, i);
                }),
                  n.emitAndNotify("move");
              }
            }
            return this;
          }),
          [
            Ii,
            fs,
            vs,
            Gs,
            Us,
            Zs,
            Qs,
            Ol,
            ql,
            Wl,
            Zl,
            Jl,
            tu,
            au,
            pu,
            vu,
          ].forEach(function (e) {
            ee(_u, e);
          });
        var Du = {
          add: function (e) {
            var t,
              n = this;
            if (L(e)) {
              var r = e;
              if (r._private.cy === n) t = r.restore();
              else {
                for (var i = [], a = 0; a < r.length; a++) {
                  var o = r[a];
                  i.push(o.json());
                }
                t = new Tu(n, i);
              }
            } else if (T(e)) t = new Tu(n, e);
            else if (_(e) && (T(e.nodes) || T(e.edges))) {
              for (
                var s = e, l = [], u = ["nodes", "edges"], c = 0, h = u.length;
                c < h;
                c++
              ) {
                var d = u[c],
                  p = s[d];
                if (T(p))
                  for (var g = 0, f = p.length; g < f; g++) {
                    var v = ee({ group: d }, p[g]);
                    l.push(v);
                  }
              }
              t = new Tu(n, l);
            } else t = new qt(n, e).collection();
            return t;
          },
          remove: function (e) {
            if (L(e));
            else if (w(e)) {
              var t = e;
              e = this.$(t);
            }
            return e.remove();
          },
        };
        function Cu(e, t, n, r) {
          var i = 4,
            a = 0.001,
            o = 1e-7,
            s = 10,
            l = 11,
            u = 1 / (l - 1),
            c = "undefined" != typeof Float32Array;
          if (4 !== arguments.length) return !1;
          for (var h = 0; h < 4; ++h)
            if (
              "number" != typeof arguments[h] ||
              isNaN(arguments[h]) ||
              !isFinite(arguments[h])
            )
              return !1;
          (e = Math.min(e, 1)),
            (n = Math.min(n, 1)),
            (e = Math.max(e, 0)),
            (n = Math.max(n, 0));
          var d = c ? new Float32Array(l) : new Array(l);
          function p(e, t) {
            return 1 - 3 * t + 3 * e;
          }
          function g(e, t) {
            return 3 * t - 6 * e;
          }
          function f(e) {
            return 3 * e;
          }
          function v(e, t, n) {
            return ((p(t, n) * e + g(t, n)) * e + f(t)) * e;
          }
          function y(e, t, n) {
            return 3 * p(t, n) * e * e + 2 * g(t, n) * e + f(t);
          }
          function m(t, r) {
            for (var a = 0; a < i; ++a) {
              var o = y(r, e, n);
              if (0 === o) return r;
              r -= (v(r, e, n) - t) / o;
            }
            return r;
          }
          function b() {
            for (var t = 0; t < l; ++t) d[t] = v(t * u, e, n);
          }
          function x(t, r, i) {
            var a,
              l,
              u = 0;
            do {
              (a = v((l = r + (i - r) / 2), e, n) - t) > 0 ? (i = l) : (r = l);
            } while (Math.abs(a) > o && ++u < s);
            return l;
          }
          function w(t) {
            for (var r = 0, i = 1, o = l - 1; i !== o && d[i] <= t; ++i) r += u;
            --i;
            var s = r + ((t - d[i]) / (d[i + 1] - d[i])) * u,
              c = y(s, e, n);
            return c >= a ? m(t, s) : 0 === c ? s : x(t, r, r + u);
          }
          var E = !1;
          function T() {
            (E = !0), (e === t && n === r) || b();
          }
          var _ = function (i) {
            return (
              E || T(),
              e === t && n === r ? i : 0 === i ? 0 : 1 === i ? 1 : v(w(i), t, r)
            );
          };
          _.getControlPoints = function () {
            return [
              { x: e, y: t },
              { x: n, y: r },
            ];
          };
          var D = "generateBezier(" + [e, t, n, r] + ")";
          return (
            (_.toString = function () {
              return D;
            }),
            _
          );
        }
        var Nu = (function () {
            function e(e) {
              return -e.tension * e.x - e.friction * e.v;
            }
            function t(t, n, r) {
              var i = {
                x: t.x + r.dx * n,
                v: t.v + r.dv * n,
                tension: t.tension,
                friction: t.friction,
              };
              return { dx: i.v, dv: e(i) };
            }
            function n(n, r) {
              var i = { dx: n.v, dv: e(n) },
                a = t(n, 0.5 * r, i),
                o = t(n, 0.5 * r, a),
                s = t(n, r, o),
                l = (1 / 6) * (i.dx + 2 * (a.dx + o.dx) + s.dx),
                u = (1 / 6) * (i.dv + 2 * (a.dv + o.dv) + s.dv);
              return (n.x = n.x + l * r), (n.v = n.v + u * r), n;
            }
            return function e(t, r, i) {
              var a,
                o,
                s,
                l = { x: -1, v: 0, tension: null, friction: null },
                u = [0],
                c = 0,
                h = 1e-4,
                d = 0.016;
              for (
                t = parseFloat(t) || 500,
                  r = parseFloat(r) || 20,
                  i = i || null,
                  l.tension = t,
                  l.friction = r,
                  o = (a = null !== i) ? ((c = e(t, r)) / i) * d : d;
                (s = n(s || l, o)),
                  u.push(1 + s.x),
                  (c += 16),
                  Math.abs(s.x) > h && Math.abs(s.v) > h;

              );
              return a
                ? function (e) {
                    return u[(e * (u.length - 1)) | 0];
                  }
                : c;
            };
          })(),
          Au = function (e, t, n, r) {
            var i = Cu(e, t, n, r);
            return function (e, t, n) {
              return e + (t - e) * i(n);
            };
          },
          Lu = {
            linear: function (e, t, n) {
              return e + (t - e) * n;
            },
            ease: Au(0.25, 0.1, 0.25, 1),
            "ease-in": Au(0.42, 0, 1, 1),
            "ease-out": Au(0, 0, 0.58, 1),
            "ease-in-out": Au(0.42, 0, 0.58, 1),
            "ease-in-sine": Au(0.47, 0, 0.745, 0.715),
            "ease-out-sine": Au(0.39, 0.575, 0.565, 1),
            "ease-in-out-sine": Au(0.445, 0.05, 0.55, 0.95),
            "ease-in-quad": Au(0.55, 0.085, 0.68, 0.53),
            "ease-out-quad": Au(0.25, 0.46, 0.45, 0.94),
            "ease-in-out-quad": Au(0.455, 0.03, 0.515, 0.955),
            "ease-in-cubic": Au(0.55, 0.055, 0.675, 0.19),
            "ease-out-cubic": Au(0.215, 0.61, 0.355, 1),
            "ease-in-out-cubic": Au(0.645, 0.045, 0.355, 1),
            "ease-in-quart": Au(0.895, 0.03, 0.685, 0.22),
            "ease-out-quart": Au(0.165, 0.84, 0.44, 1),
            "ease-in-out-quart": Au(0.77, 0, 0.175, 1),
            "ease-in-quint": Au(0.755, 0.05, 0.855, 0.06),
            "ease-out-quint": Au(0.23, 1, 0.32, 1),
            "ease-in-out-quint": Au(0.86, 0, 0.07, 1),
            "ease-in-expo": Au(0.95, 0.05, 0.795, 0.035),
            "ease-out-expo": Au(0.19, 1, 0.22, 1),
            "ease-in-out-expo": Au(1, 0, 0, 1),
            "ease-in-circ": Au(0.6, 0.04, 0.98, 0.335),
            "ease-out-circ": Au(0.075, 0.82, 0.165, 1),
            "ease-in-out-circ": Au(0.785, 0.135, 0.15, 0.86),
            spring: function (e, t, n) {
              if (0 === n) return Lu.linear;
              var r = Nu(e, t, n);
              return function (e, t, n) {
                return e + (t - e) * r(n);
              };
            },
            "cubic-bezier": Au,
          };
        function Su(e, t, n, r, i) {
          if (1 === r) return n;
          if (t === n) return n;
          var a = i(t, n, r);
          return (
            null == e ||
              ((e.roundValue || e.color) && (a = Math.round(a)),
              void 0 !== e.min && (a = Math.max(a, e.min)),
              void 0 !== e.max && (a = Math.min(a, e.max))),
            a
          );
        }
        function Ou(e, t) {
          return null != e.pfValue || null != e.value
            ? null == e.pfValue || (null != t && "%" === t.type.units)
              ? e.value
              : e.pfValue
            : e;
        }
        function ku(e, t, n, r, i) {
          var a = null != i ? i.type : null;
          n < 0 ? (n = 0) : n > 1 && (n = 1);
          var o = Ou(e, i),
            s = Ou(t, i);
          if (C(o) && C(s)) return Su(a, o, s, n, r);
          if (T(o) && T(s)) {
            for (var l = [], u = 0; u < s.length; u++) {
              var c = o[u],
                h = s[u];
              if (null != c && null != h) {
                var d = Su(a, c, h, n, r);
                l.push(d);
              } else l.push(h);
            }
            return l;
          }
        }
        function Iu(e, t, n, r) {
          var i = !r,
            a = e._private,
            o = t._private,
            s = o.easing,
            l = o.startTime,
            u = (r ? e : e.cy()).style();
          if (!o.easingImpl)
            if (null == s) o.easingImpl = Lu.linear;
            else {
              var c, h, d;
              (c = w(s) ? u.parse("transition-timing-function", s).value : s),
                w(c)
                  ? ((h = c), (d = []))
                  : ((h = c[1]),
                    (d = c.slice(2).map(function (e) {
                      return +e;
                    }))),
                d.length > 0
                  ? ("spring" === h && d.push(o.duration),
                    (o.easingImpl = Lu[h].apply(null, d)))
                  : (o.easingImpl = Lu[h]);
            }
          var p,
            g = o.easingImpl;
          if (
            ((p = 0 === o.duration ? 1 : (n - l) / o.duration),
            o.applying && (p = o.progress),
            p < 0 ? (p = 0) : p > 1 && (p = 1),
            null == o.delay)
          ) {
            var f = o.startPosition,
              v = o.position;
            if (v && i && !e.locked()) {
              var y = {};
              Mu(f.x, v.x) && (y.x = ku(f.x, v.x, p, g)),
                Mu(f.y, v.y) && (y.y = ku(f.y, v.y, p, g)),
                e.position(y);
            }
            var m = o.startPan,
              b = o.pan,
              x = a.pan,
              E = null != b && r;
            E &&
              (Mu(m.x, b.x) && (x.x = ku(m.x, b.x, p, g)),
              Mu(m.y, b.y) && (x.y = ku(m.y, b.y, p, g)),
              e.emit("pan"));
            var T = o.startZoom,
              _ = o.zoom,
              D = null != _ && r;
            D &&
              (Mu(T, _) && (a.zoom = Sn(a.minZoom, ku(T, _, p, g), a.maxZoom)),
              e.emit("zoom")),
              (E || D) && e.emit("viewport");
            var C = o.style;
            if (C && C.length > 0 && i) {
              for (var N = 0; N < C.length; N++) {
                var A = C[N],
                  L = A.name,
                  S = A,
                  O = o.startStyle[L],
                  k = ku(O, S, p, g, u.properties[O.name]);
                u.overrideBypass(e, L, k);
              }
              e.emit("style");
            }
          }
          return (o.progress = p), p;
        }
        function Mu(e, t) {
          return !!(null != e && null != t && ((C(e) && C(t)) || (e && t)));
        }
        function Pu(e, t, n, r) {
          var i = t._private;
          (i.started = !0), (i.startTime = n - i.progress * i.duration);
        }
        function Ru(e, t) {
          var n = t._private.aniEles,
            r = [];
          function i(t, n) {
            var i = t._private,
              a = i.animation.current,
              o = i.animation.queue,
              s = !1;
            if (0 === a.length) {
              var l = o.shift();
              l && a.push(l);
            }
            for (
              var u = function (e) {
                  for (var t = e.length - 1; t >= 0; t--) (0, e[t])();
                  e.splice(0, e.length);
                },
                c = a.length - 1;
              c >= 0;
              c--
            ) {
              var h = a[c],
                d = h._private;
              d.stopped
                ? (a.splice(c, 1),
                  (d.hooked = !1),
                  (d.playing = !1),
                  (d.started = !1),
                  u(d.frames))
                : (d.playing || d.applying) &&
                  (d.playing && d.applying && (d.applying = !1),
                  d.started || Pu(t, h, e),
                  Iu(t, h, e, n),
                  d.applying && (d.applying = !1),
                  u(d.frames),
                  null != d.step && d.step(e),
                  h.completed() &&
                    (a.splice(c, 1),
                    (d.hooked = !1),
                    (d.playing = !1),
                    (d.started = !1),
                    u(d.completes)),
                  (s = !0));
            }
            return n || 0 !== a.length || 0 !== o.length || r.push(t), s;
          }
          for (var a = !1, o = 0; o < n.length; o++) {
            var s = i(n[o]);
            a = a || s;
          }
          var l = i(t, !0);
          (a || l) && (n.length > 0 ? t.notify("draw", n) : t.notify("draw")),
            n.unmerge(r),
            t.emit("step");
        }
        var Bu = {
            animate: gs.animate(),
            animation: gs.animation(),
            animated: gs.animated(),
            clearQueue: gs.clearQueue(),
            delay: gs.delay(),
            delayAnimation: gs.delayAnimation(),
            stop: gs.stop(),
            addToAnimationPool: function (e) {
              var t = this;
              t.styleEnabled() && t._private.aniEles.merge(e);
            },
            stopAnimationLoop: function () {
              this._private.animationsRunning = !1;
            },
            startAnimationLoop: function () {
              var e = this;
              if (((e._private.animationsRunning = !0), e.styleEnabled())) {
                var t = e.renderer();
                t && t.beforeRender
                  ? t.beforeRender(function (t, n) {
                      Ru(n, e);
                    }, t.beforeRenderPriorities.animations)
                  : n();
              }
              function n() {
                e._private.animationsRunning &&
                  it(function (t) {
                    Ru(t, e), n();
                  });
              }
            },
          },
          Fu = {
            qualifierCompare: function (e, t) {
              return null == e || null == t
                ? null == e && null == t
                : e.sameText(t);
            },
            eventMatches: function (e, t, n) {
              var r = t.qualifier;
              return (
                null == r ||
                (e !== n.target && S(n.target) && r.matches(n.target))
              );
            },
            addEventFields: function (e, t) {
              (t.cy = e), (t.target = e);
            },
            callbackContext: function (e, t, n) {
              return null != t.qualifier ? n.target : e;
            },
          },
          zu = function (e) {
            return w(e) ? new Fs(e) : e;
          },
          Gu = {
            createEmitter: function () {
              var e = this._private;
              return e.emitter || (e.emitter = new Gl(Fu, this)), this;
            },
            emitter: function () {
              return this._private.emitter;
            },
            on: function (e, t, n) {
              return this.emitter().on(e, zu(t), n), this;
            },
            removeListener: function (e, t, n) {
              return this.emitter().removeListener(e, zu(t), n), this;
            },
            removeAllListeners: function () {
              return this.emitter().removeAllListeners(), this;
            },
            one: function (e, t, n) {
              return this.emitter().one(e, zu(t), n), this;
            },
            once: function (e, t, n) {
              return this.emitter().one(e, zu(t), n), this;
            },
            emit: function (e, t) {
              return this.emitter().emit(e, t), this;
            },
            emitAndNotify: function (e, t) {
              return this.emit(e), this.notify(e, t), this;
            },
          };
        gs.eventAliasesOn(Gu);
        var Yu = {
          png: function (e) {
            return (e = e || {}), this._private.renderer.png(e);
          },
          jpg: function (e) {
            var t = this._private.renderer;
            return ((e = e || {}).bg = e.bg || "#fff"), t.jpg(e);
          },
        };
        Yu.jpeg = Yu.jpg;
        var Xu = {
          layout: function (e) {
            var t = this;
            if (null != e)
              if (null != e.name) {
                var n = e.name,
                  r = t.extension("layout", n);
                if (null != r) {
                  var i;
                  i = w(e.eles) ? t.$(e.eles) : null != e.eles ? e.eles : t.$();
                  var a = new r(ee({}, e, { cy: t, eles: i }));
                  return a;
                }
                Nt(
                  "No such layout `" +
                    n +
                    "` found.  Did you forget to import it and `cytoscape.use()` it?"
                );
              } else Nt("A `name` must be specified to make a layout");
            else Nt("Layout options must be specified to make a layout");
          },
        };
        Xu.createLayout = Xu.makeLayout = Xu.layout;
        var Vu = {
            notify: function (e, t) {
              var n = this._private;
              if (this.batching()) {
                n.batchNotifications = n.batchNotifications || {};
                var r = (n.batchNotifications[e] =
                  n.batchNotifications[e] || this.collection());
                null != t && r.merge(t);
              } else if (n.notificationsEnabled) {
                var i = this.renderer();
                !this.destroyed() && i && i.notify(e, t);
              }
            },
            notifications: function (e) {
              var t = this._private;
              return void 0 === e
                ? t.notificationsEnabled
                : ((t.notificationsEnabled = !!e), this);
            },
            noNotifications: function (e) {
              this.notifications(!1), e(), this.notifications(!0);
            },
            batching: function () {
              return this._private.batchCount > 0;
            },
            startBatch: function () {
              var e = this._private;
              return (
                null == e.batchCount && (e.batchCount = 0),
                0 === e.batchCount &&
                  ((e.batchStyleEles = this.collection()),
                  (e.batchNotifications = {})),
                e.batchCount++,
                this
              );
            },
            endBatch: function () {
              var e = this._private;
              if (0 === e.batchCount) return this;
              if ((e.batchCount--, 0 === e.batchCount)) {
                e.batchStyleEles.updateStyle();
                var t = this.renderer();
                Object.keys(e.batchNotifications).forEach(function (n) {
                  var r = e.batchNotifications[n];
                  r.empty() ? t.notify(n) : t.notify(n, r);
                });
              }
              return this;
            },
            batch: function (e) {
              return this.startBatch(), e(), this.endBatch(), this;
            },
            batchData: function (e) {
              var t = this;
              return this.batch(function () {
                for (var n = Object.keys(e), r = 0; r < n.length; r++) {
                  var i = n[r],
                    a = e[i];
                  t.getElementById(i).data(a);
                }
              });
            },
          },
          Uu = Rt({
            hideEdgesOnViewport: !1,
            textureOnViewport: !1,
            motionBlur: !1,
            motionBlurOpacity: 0.05,
            pixelRatio: void 0,
            desktopTapThreshold: 4,
            touchTapThreshold: 8,
            wheelSensitivity: 1,
            debug: !1,
            showFps: !1,
          }),
          ju = {
            renderTo: function (e, t, n, r) {
              return this._private.renderer.renderTo(e, t, n, r), this;
            },
            renderer: function () {
              return this._private.renderer;
            },
            forceRender: function () {
              return this.notify("draw"), this;
            },
            resize: function () {
              return this.invalidateSize(), this.emitAndNotify("resize"), this;
            },
            initRenderer: function (e) {
              var t = this,
                n = t.extension("renderer", e.name);
              if (null != n) {
                void 0 !== e.wheelSensitivity &&
                  Lt(
                    "You have set a custom wheel sensitivity.  This will make your app zoom unnaturally when using mainstream mice.  You should change this value from the default only if you can guarantee that all your users will use the same hardware and OS configuration as your current machine."
                  );
                var r = Uu(e);
                (r.cy = t),
                  (t._private.renderer = new n(r)),
                  this.notify("init");
              } else
                Nt(
                  "Can not initialise: No such renderer `".concat(
                    e.name,
                    "` found. Did you forget to import it and `cytoscape.use()` it?"
                  )
                );
            },
            destroyRenderer: function () {
              var e = this;
              e.notify("destroy");
              var t = e.container();
              if (t)
                for (t._cyreg = null; t.childNodes.length > 0; )
                  t.removeChild(t.childNodes[0]);
              (e._private.renderer = null),
                e.mutableElements().forEach(function (e) {
                  var t = e._private;
                  (t.rscratch = {}),
                    (t.rstyle = {}),
                    (t.animation.current = []),
                    (t.animation.queue = []);
                });
            },
            onRender: function (e) {
              return this.on("render", e);
            },
            offRender: function (e) {
              return this.off("render", e);
            },
          };
        ju.invalidateDimensions = ju.resize;
        var Hu = {
          collection: function (e, t) {
            return w(e)
              ? this.$(e)
              : L(e)
              ? e.collection()
              : T(e)
              ? (t || (t = {}), new Tu(this, e, t.unique, t.removed))
              : new Tu(this);
          },
          nodes: function (e) {
            var t = this.$(function (e) {
              return e.isNode();
            });
            return e ? t.filter(e) : t;
          },
          edges: function (e) {
            var t = this.$(function (e) {
              return e.isEdge();
            });
            return e ? t.filter(e) : t;
          },
          $: function (e) {
            var t = this._private.elements;
            return e ? t.filter(e) : t.spawnSelf();
          },
          mutableElements: function () {
            return this._private.elements;
          },
        };
        Hu.elements = Hu.filter = Hu.$;
        var qu = {},
          Wu = "t",
          $u = "f";
        (qu.apply = function (e) {
          for (
            var t = this, n = t._private.cy.collection(), r = 0;
            r < e.length;
            r++
          ) {
            var i = e[r],
              a = t.getContextMeta(i);
            if (!a.empty) {
              var o = t.getContextStyle(a),
                s = t.applyContextStyle(a, o, i);
              i._private.appliedInitStyle
                ? t.updateTransitions(i, s.diffProps)
                : (i._private.appliedInitStyle = !0),
                t.updateStyleHints(i) && n.push(i);
            }
          }
          return n;
        }),
          (qu.getPropertiesDiff = function (e, t) {
            var n = this,
              r = (n._private.propDiffs = n._private.propDiffs || {}),
              i = e + "-" + t,
              a = r[i];
            if (a) return a;
            for (var o = [], s = {}, l = 0; l < n.length; l++) {
              var u = n[l],
                c = e[l] === Wu,
                h = t[l] === Wu,
                d = c !== h,
                p = u.mappedProperties.length > 0;
              if (d || (h && p)) {
                var g = void 0;
                (d && p) || d
                  ? (g = u.properties)
                  : p && (g = u.mappedProperties);
                for (var f = 0; f < g.length; f++) {
                  for (
                    var v = g[f], y = v.name, m = !1, b = l + 1;
                    b < n.length;
                    b++
                  ) {
                    var x = n[b];
                    if (t[b] === Wu && (m = null != x.properties[v.name]))
                      break;
                  }
                  s[y] || m || ((s[y] = !0), o.push(y));
                }
              }
            }
            return (r[i] = o), o;
          }),
          (qu.getContextMeta = function (e) {
            for (
              var t, n = this, r = "", i = e._private.styleCxtKey || "", a = 0;
              a < n.length;
              a++
            ) {
              var o = n[a];
              r += o.selector && o.selector.matches(e) ? Wu : $u;
            }
            return (
              (t = n.getPropertiesDiff(i, r)),
              (e._private.styleCxtKey = r),
              { key: r, diffPropNames: t, empty: 0 === t.length }
            );
          }),
          (qu.getContextStyle = function (e) {
            var t = e.key,
              n = this,
              r = (this._private.contextStyles =
                this._private.contextStyles || {});
            if (r[t]) return r[t];
            for (var i = { _private: { key: t } }, a = 0; a < n.length; a++) {
              var o = n[a];
              if (t[a] === Wu)
                for (var s = 0; s < o.properties.length; s++) {
                  var l = o.properties[s];
                  i[l.name] = l;
                }
            }
            return (r[t] = i), i;
          }),
          (qu.applyContextStyle = function (e, t, n) {
            for (
              var r = this, i = e.diffPropNames, a = {}, o = r.types, s = 0;
              s < i.length;
              s++
            ) {
              var l = i[s],
                u = t[l],
                c = n.pstyle(l);
              if (!u) {
                if (!c) continue;
                u = c.bypass
                  ? { name: l, deleteBypassed: !0 }
                  : { name: l, delete: !0 };
              }
              if (c !== u) {
                if (
                  u.mapped === o.fn &&
                  null != c &&
                  null != c.mapping &&
                  c.mapping.value === u.value
                ) {
                  var h = c.mapping;
                  if ((h.fnValue = u.value(n)) === h.prevFnValue) continue;
                }
                var d = (a[l] = { prev: c });
                r.applyParsedProperty(n, u),
                  (d.next = n.pstyle(l)),
                  d.next && d.next.bypass && (d.next = d.next.bypassed);
              }
            }
            return { diffProps: a };
          }),
          (qu.updateStyleHints = function (e) {
            var t = e._private,
              n = this,
              r = n.propertyGroupNames,
              i = n.propertyGroupKeys,
              a = function (e, t, r) {
                return n.getPropertiesHash(e, t, r);
              },
              o = t.styleKey;
            if (e.removed()) return !1;
            var s = "nodes" === t.group,
              l = e._private.style;
            r = Object.keys(l);
            for (var u = 0; u < i.length; u++) {
              var c = i[u];
              t.styleKeys[c] = [ot, lt];
            }
            for (
              var h = function (e, n) {
                  return (t.styleKeys[n][0] = ct(e, t.styleKeys[n][0]));
                },
                d = function (e, n) {
                  return (t.styleKeys[n][1] = ht(e, t.styleKeys[n][1]));
                },
                p = function (e, t) {
                  h(e, t), d(e, t);
                },
                g = function (e, t) {
                  for (var n = 0; n < e.length; n++) {
                    var r = e.charCodeAt(n);
                    h(r, t), d(r, t);
                  }
                },
                f = 2e9,
                v = function (e) {
                  return -128 < e && e < 128 && Math.floor(e) !== e
                    ? f - ((1024 * e) | 0)
                    : e;
                },
                y = 0;
              y < r.length;
              y++
            ) {
              var m = r[y],
                b = l[m];
              if (null != b) {
                var x = this.properties[m],
                  w = x.type,
                  E = x.groupKey,
                  T = void 0;
                null != x.hashOverride
                  ? (T = x.hashOverride(e, b))
                  : null != b.pfValue && (T = b.pfValue);
                var _ = null == x.enums ? b.value : null,
                  D = null != T,
                  C = D || null != _,
                  N = b.units;
                w.number && C && !w.multiple
                  ? (p(v(D ? T : _), E), D || null == N || g(N, E))
                  : g(b.strValue, E);
              }
            }
            for (var A = [ot, lt], L = 0; L < i.length; L++) {
              var S = i[L],
                O = t.styleKeys[S];
              (A[0] = ct(O[0], A[0])), (A[1] = ht(O[1], A[1]));
            }
            t.styleKey = dt(A[0], A[1]);
            var k = t.styleKeys;
            t.labelDimsKey = pt(k.labelDimensions);
            var I = a(e, ["label"], k.labelDimensions);
            if (
              ((t.labelKey = pt(I)),
              (t.labelStyleKey = pt(gt(k.commonLabel, I))),
              !s)
            ) {
              var M = a(e, ["source-label"], k.labelDimensions);
              (t.sourceLabelKey = pt(M)),
                (t.sourceLabelStyleKey = pt(gt(k.commonLabel, M)));
              var P = a(e, ["target-label"], k.labelDimensions);
              (t.targetLabelKey = pt(P)),
                (t.targetLabelStyleKey = pt(gt(k.commonLabel, P)));
            }
            if (s) {
              var R = t.styleKeys,
                B = R.nodeBody,
                F = R.nodeBorder,
                z = R.nodeOutline,
                G = R.backgroundImage,
                Y = R.compound,
                X = R.pie,
                V = [B, F, z, G, Y, X]
                  .filter(function (e) {
                    return null != e;
                  })
                  .reduce(gt, [ot, lt]);
              (t.nodeKey = pt(V)),
                (t.hasPie = null != X && X[0] !== ot && X[1] !== lt);
            }
            return o !== t.styleKey;
          }),
          (qu.clearStyleHints = function (e) {
            var t = e._private;
            (t.styleCxtKey = ""),
              (t.styleKeys = {}),
              (t.styleKey = null),
              (t.labelKey = null),
              (t.labelStyleKey = null),
              (t.sourceLabelKey = null),
              (t.sourceLabelStyleKey = null),
              (t.targetLabelKey = null),
              (t.targetLabelStyleKey = null),
              (t.nodeKey = null),
              (t.hasPie = null);
          }),
          (qu.applyParsedProperty = function (e, t) {
            var n,
              r = this,
              i = t,
              a = e._private.style,
              o = r.types,
              s = r.properties[i.name].type,
              l = i.bypass,
              u = a[i.name],
              c = u && u.bypass,
              h = e._private,
              d = "mapping",
              p = function (e) {
                return null == e
                  ? null
                  : null != e.pfValue
                  ? e.pfValue
                  : e.value;
              },
              g = function () {
                var t = p(u),
                  n = p(i);
                r.checkTriggers(e, i.name, t, n);
              };
            if (
              ("curve-style" === t.name &&
                e.isEdge() &&
                (("bezier" !== t.value && e.isLoop()) ||
                  ("haystack" === t.value &&
                    (e.source().isParent() || e.target().isParent()))) &&
                (i = t = this.parse(t.name, "bezier", l)),
              i.delete)
            )
              return (a[i.name] = void 0), g(), !0;
            if (i.deleteBypassed)
              return u
                ? !!u.bypass && ((u.bypassed = void 0), g(), !0)
                : (g(), !0);
            if (i.deleteBypass)
              return u
                ? !!u.bypass && ((a[i.name] = u.bypassed), g(), !0)
                : (g(), !0);
            var f = function () {
              Lt(
                "Do not assign mappings to elements without corresponding data (i.e. ele `" +
                  e.id() +
                  "` has no mapping for property `" +
                  i.name +
                  "` with data field `" +
                  i.field +
                  "`); try a `[" +
                  i.field +
                  "]` selector to limit scope to elements with `" +
                  i.field +
                  "` defined"
              );
            };
            switch (i.mapped) {
              case o.mapData:
                for (
                  var v, y = i.field.split("."), m = h.data, b = 0;
                  b < y.length && m;
                  b++
                )
                  m = m[y[b]];
                if (null == m) return f(), !1;
                if (!C(m))
                  return (
                    Lt(
                      "Do not use continuous mappers without specifying numeric data (i.e. `" +
                        i.field +
                        ": " +
                        m +
                        "` for `" +
                        e.id() +
                        "` is non-numeric)"
                    ),
                    !1
                  );
                var x = i.fieldMax - i.fieldMin;
                if (
                  ((v = 0 === x ? 0 : (m - i.fieldMin) / x) < 0
                    ? (v = 0)
                    : v > 1 && (v = 1),
                  s.color)
                ) {
                  var w = i.valueMin[0],
                    E = i.valueMax[0],
                    T = i.valueMin[1],
                    _ = i.valueMax[1],
                    D = i.valueMin[2],
                    N = i.valueMax[2],
                    A = null == i.valueMin[3] ? 1 : i.valueMin[3],
                    L = null == i.valueMax[3] ? 1 : i.valueMax[3],
                    S = [
                      Math.round(w + (E - w) * v),
                      Math.round(T + (_ - T) * v),
                      Math.round(D + (N - D) * v),
                      Math.round(A + (L - A) * v),
                    ];
                  n = {
                    bypass: i.bypass,
                    name: i.name,
                    value: S,
                    strValue: "rgb(" + S[0] + ", " + S[1] + ", " + S[2] + ")",
                  };
                } else {
                  if (!s.number) return !1;
                  var O = i.valueMin + (i.valueMax - i.valueMin) * v;
                  n = this.parse(i.name, O, i.bypass, d);
                }
                if (!n) return f(), !1;
                (n.mapping = i), (i = n);
                break;
              case o.data:
                for (
                  var k = i.field.split("."), I = h.data, M = 0;
                  M < k.length && I;
                  M++
                )
                  I = I[k[M]];
                if ((null != I && (n = this.parse(i.name, I, i.bypass, d)), !n))
                  return f(), !1;
                (n.mapping = i), (i = n);
                break;
              case o.fn:
                var P = i.value,
                  R = null != i.fnValue ? i.fnValue : P(e);
                if (((i.prevFnValue = R), null == R))
                  return (
                    Lt(
                      "Custom function mappers may not return null (i.e. `" +
                        i.name +
                        "` for ele `" +
                        e.id() +
                        "` is null)"
                    ),
                    !1
                  );
                if (!(n = this.parse(i.name, R, i.bypass, d)))
                  return (
                    Lt(
                      "Custom function mappers may not return invalid values for the property type (i.e. `" +
                        i.name +
                        "` for ele `" +
                        e.id() +
                        "` is invalid)"
                    ),
                    !1
                  );
                (n.mapping = Ot(i)), (i = n);
                break;
              case void 0:
                break;
              default:
                return !1;
            }
            return (
              l
                ? ((i.bypassed = c ? u.bypassed : u), (a[i.name] = i))
                : c
                ? (u.bypassed = i)
                : (a[i.name] = i),
              g(),
              !0
            );
          }),
          (qu.cleanElements = function (e, t) {
            for (var n = 0; n < e.length; n++) {
              var r = e[n];
              if (
                (this.clearStyleHints(r),
                r.dirtyCompoundBoundsCache(),
                r.dirtyBoundingBoxCache(),
                t)
              )
                for (
                  var i = r._private.style, a = Object.keys(i), o = 0;
                  o < a.length;
                  o++
                ) {
                  var s = a[o],
                    l = i[s];
                  null != l && (l.bypass ? (l.bypassed = null) : (i[s] = null));
                }
              else r._private.style = {};
            }
          }),
          (qu.update = function () {
            this._private.cy.mutableElements().updateStyle();
          }),
          (qu.updateTransitions = function (e, t) {
            var n = this,
              r = e._private,
              i = e.pstyle("transition-property").value,
              a = e.pstyle("transition-duration").pfValue,
              o = e.pstyle("transition-delay").pfValue;
            if (i.length > 0 && a > 0) {
              for (var s = {}, l = !1, u = 0; u < i.length; u++) {
                var c = i[u],
                  h = e.pstyle(c),
                  d = t[c];
                if (d) {
                  var p = d.prev,
                    g = null != d.next ? d.next : h,
                    f = !1,
                    v = void 0,
                    y = 1e-6;
                  p &&
                    (C(p.pfValue) && C(g.pfValue)
                      ? ((f = g.pfValue - p.pfValue), (v = p.pfValue + y * f))
                      : C(p.value) && C(g.value)
                      ? ((f = g.value - p.value), (v = p.value + y * f))
                      : T(p.value) &&
                        T(g.value) &&
                        ((f =
                          p.value[0] !== g.value[0] ||
                          p.value[1] !== g.value[1] ||
                          p.value[2] !== g.value[2]),
                        (v = p.strValue)),
                    f &&
                      ((s[c] = g.strValue),
                      this.applyBypass(e, c, v),
                      (l = !0)));
                }
              }
              if (!l) return;
              (r.transitioning = !0),
                new Vi(function (t) {
                  o > 0 ? e.delayAnimation(o).play().promise().then(t) : t();
                })
                  .then(function () {
                    return e
                      .animation({
                        style: s,
                        duration: a,
                        easing: e.pstyle("transition-timing-function").value,
                        queue: !1,
                      })
                      .play()
                      .promise();
                  })
                  .then(function () {
                    n.removeBypasses(e, i),
                      e.emitAndNotify("style"),
                      (r.transitioning = !1);
                  });
            } else
              r.transitioning &&
                (this.removeBypasses(e, i),
                e.emitAndNotify("style"),
                (r.transitioning = !1));
          }),
          (qu.checkTrigger = function (e, t, n, r, i, a) {
            var o = this.properties[t],
              s = i(o);
            null != s && s(n, r) && a(o);
          }),
          (qu.checkZOrderTrigger = function (e, t, n, r) {
            var i = this;
            this.checkTrigger(
              e,
              t,
              n,
              r,
              function (e) {
                return e.triggersZOrder;
              },
              function () {
                i._private.cy.notify("zorder", e);
              }
            );
          }),
          (qu.checkBoundsTrigger = function (e, t, n, r) {
            this.checkTrigger(
              e,
              t,
              n,
              r,
              function (e) {
                return e.triggersBounds;
              },
              function (i) {
                e.dirtyCompoundBoundsCache(),
                  e.dirtyBoundingBoxCache(),
                  !i.triggersBoundsOfParallelBeziers ||
                    "curve-style" !== t ||
                    ("bezier" !== n && "bezier" !== r) ||
                    e.parallelEdges().forEach(function (e) {
                      e.isBundledBezier() && e.dirtyBoundingBoxCache();
                    }),
                  !i.triggersBoundsOfConnectedEdges ||
                    "display" !== t ||
                    ("none" !== n && "none" !== r) ||
                    e.connectedEdges().forEach(function (e) {
                      e.dirtyBoundingBoxCache();
                    });
              }
            );
          }),
          (qu.checkTriggers = function (e, t, n, r) {
            e.dirtyStyleCache(),
              this.checkZOrderTrigger(e, t, n, r),
              this.checkBoundsTrigger(e, t, n, r);
          });
        var Ku = {
            applyBypass: function (e, t, n, r) {
              var i = this,
                a = [],
                o = !0;
              if ("*" === t || "**" === t) {
                if (void 0 !== n)
                  for (var s = 0; s < i.properties.length; s++) {
                    var l = i.properties[s].name,
                      u = this.parse(l, n, !0);
                    u && a.push(u);
                  }
              } else if (w(t)) {
                var c = this.parse(t, n, !0);
                c && a.push(c);
              } else {
                if (!_(t)) return !1;
                var h = t;
                r = n;
                for (var d = Object.keys(h), p = 0; p < d.length; p++) {
                  var g = d[p],
                    f = h[g];
                  if ((void 0 === f && (f = h[X(g)]), void 0 !== f)) {
                    var v = this.parse(g, f, !0);
                    v && a.push(v);
                  }
                }
              }
              if (0 === a.length) return !1;
              for (var y = !1, m = 0; m < e.length; m++) {
                for (
                  var b = e[m], x = {}, E = void 0, T = 0;
                  T < a.length;
                  T++
                ) {
                  var D = a[T];
                  if (r) {
                    var C = b.pstyle(D.name);
                    E = x[D.name] = { prev: C };
                  }
                  (y = this.applyParsedProperty(b, Ot(D)) || y),
                    r && (E.next = b.pstyle(D.name));
                }
                y && this.updateStyleHints(b),
                  r && this.updateTransitions(b, x, o);
              }
              return y;
            },
            overrideBypass: function (e, t, n) {
              t = Y(t);
              for (var r = 0; r < e.length; r++) {
                var i = e[r],
                  a = i._private.style[t],
                  o = this.properties[t].type,
                  s = o.color,
                  l = o.mutiple,
                  u = a ? (null != a.pfValue ? a.pfValue : a.value) : null;
                a && a.bypass
                  ? ((a.value = n),
                    null != a.pfValue && (a.pfValue = n),
                    (a.strValue = s
                      ? "rgb(" + n.join(",") + ")"
                      : l
                      ? n.join(" ")
                      : "" + n),
                    this.updateStyleHints(i))
                  : this.applyBypass(i, t, n),
                  this.checkTriggers(i, t, u, n);
              }
            },
            removeAllBypasses: function (e, t) {
              return this.removeBypasses(e, this.propertyNames, t);
            },
            removeBypasses: function (e, t, n) {
              for (var r = !0, i = 0; i < e.length; i++) {
                for (var a = e[i], o = {}, s = 0; s < t.length; s++) {
                  var l = t[s],
                    u = this.properties[l],
                    c = a.pstyle(u.name);
                  if (c && c.bypass) {
                    var h = "",
                      d = this.parse(l, h, !0),
                      p = (o[u.name] = { prev: c });
                    this.applyParsedProperty(a, d), (p.next = a.pstyle(u.name));
                  }
                }
                this.updateStyleHints(a), n && this.updateTransitions(a, o, r);
              }
            },
          },
          Zu = {
            getEmSizeInPixels: function () {
              var e = this.containerCss("font-size");
              return null != e ? parseFloat(e) : 1;
            },
            containerCss: function (e) {
              var t = this._private.cy,
                n = t.container(),
                r = t.window();
              if (r && n && r.getComputedStyle)
                return r.getComputedStyle(n).getPropertyValue(e);
            },
          },
          Qu = {
            getRenderedStyle: function (e, t) {
              return t
                ? this.getStylePropertyValue(e, t, !0)
                : this.getRawStyle(e, !0);
            },
            getRawStyle: function (e, t) {
              var n = this;
              if ((e = e[0])) {
                for (var r = {}, i = 0; i < n.properties.length; i++) {
                  var a = n.properties[i],
                    o = n.getStylePropertyValue(e, a.name, t);
                  null != o && ((r[a.name] = o), (r[X(a.name)] = o));
                }
                return r;
              }
            },
            getIndexedStyle: function (e, t, n, r) {
              var i = e.pstyle(t)[n][r];
              return null != i ? i : e.cy().style().getDefaultProperty(t)[n][0];
            },
            getStylePropertyValue: function (e, t, n) {
              var r = this;
              if ((e = e[0])) {
                var i = r.properties[t];
                i.alias && (i = i.pointsTo);
                var a = i.type,
                  o = e.pstyle(i.name);
                if (o) {
                  var s = o.value,
                    l = o.units,
                    u = o.strValue;
                  if (n && a.number && null != s && C(s)) {
                    var c = e.cy().zoom(),
                      h = function (e) {
                        return e * c;
                      },
                      d = function (e, t) {
                        return h(e) + t;
                      },
                      p = T(s);
                    return (
                      p
                        ? l.every(function (e) {
                            return null != e;
                          })
                        : null != l
                    )
                      ? p
                        ? s
                            .map(function (e, t) {
                              return d(e, l[t]);
                            })
                            .join(" ")
                        : d(s, l)
                      : p
                      ? s
                          .map(function (e) {
                            return w(e) ? e : "" + h(e);
                          })
                          .join(" ")
                      : "" + h(s);
                  }
                  if (null != u) return u;
                }
                return null;
              }
            },
            getAnimationStartStyle: function (e, t) {
              for (var n = {}, r = 0; r < t.length; r++) {
                var i = t[r].name,
                  a = e.pstyle(i);
                void 0 !== a &&
                  (a = _(a) ? this.parse(i, a.strValue) : this.parse(i, a)),
                  a && (n[i] = a);
              }
              return n;
            },
            getPropsList: function (e) {
              var t = [],
                n = e,
                r = this.properties;
              if (n)
                for (var i = Object.keys(n), a = 0; a < i.length; a++) {
                  var o = i[a],
                    s = n[o],
                    l = r[o] || r[Y(o)],
                    u = this.parse(l.name, s);
                  u && t.push(u);
                }
              return t;
            },
            getNonDefaultPropertiesHash: function (e, t, n) {
              var r,
                i,
                a,
                o,
                s,
                l,
                u = n.slice();
              for (s = 0; s < t.length; s++)
                if (((r = t[s]), null != (i = e.pstyle(r, !1))))
                  if (null != i.pfValue)
                    (u[0] = ct(o, u[0])), (u[1] = ht(o, u[1]));
                  else
                    for (a = i.strValue, l = 0; l < a.length; l++)
                      (o = a.charCodeAt(l)),
                        (u[0] = ct(o, u[0])),
                        (u[1] = ht(o, u[1]));
              return u;
            },
          };
        Qu.getPropertiesHash = Qu.getNonDefaultPropertiesHash;
        var Ju = {
            appendFromJson: function (e) {
              for (var t = this, n = 0; n < e.length; n++) {
                var r = e[n],
                  i = r.selector,
                  a = r.style || r.css,
                  o = Object.keys(a);
                t.selector(i);
                for (var s = 0; s < o.length; s++) {
                  var l = o[s],
                    u = a[l];
                  t.css(l, u);
                }
              }
              return t;
            },
            fromJson: function (e) {
              var t = this;
              return t.resetToDefault(), t.appendFromJson(e), t;
            },
            json: function () {
              for (var e = [], t = this.defaultLength; t < this.length; t++) {
                for (
                  var n = this[t],
                    r = n.selector,
                    i = n.properties,
                    a = {},
                    o = 0;
                  o < i.length;
                  o++
                ) {
                  var s = i[o];
                  a[s.name] = s.strValue;
                }
                e.push({ selector: r ? r.toString() : "core", style: a });
              }
              return e;
            },
          },
          ec = {
            appendFromString: function (e) {
              var t,
                n,
                r,
                i = this,
                a = this,
                o = "" + e;
              function s() {
                o = o.length > t.length ? o.substr(t.length) : "";
              }
              function l() {
                n = n.length > r.length ? n.substr(r.length) : "";
              }
              for (
                o = o.replace(/[/][*](\s|.)+?[*][/]/g, "");
                !o.match(/^\s*$/);

              ) {
                var u = o.match(/^\s*((?:.|\s)+?)\s*\{((?:.|\s)+?)\}/);
                if (!u) {
                  Lt(
                    "Halting stylesheet parsing: String stylesheet contains more to parse but no selector and block found in: " +
                      o
                  );
                  break;
                }
                t = u[0];
                var c = u[1];
                if ("core" !== c && new Fs(c).invalid)
                  Lt(
                    "Skipping parsing of block: Invalid selector found in string stylesheet: " +
                      c
                  ),
                    s();
                else {
                  var h = u[2],
                    d = !1;
                  n = h;
                  for (var p = []; !n.match(/^\s*$/); ) {
                    var g = n.match(/^\s*(.+?)\s*:\s*(.+?)(?:\s*;|\s*$)/);
                    if (!g) {
                      Lt(
                        "Skipping parsing of block: Invalid formatting of style property and value definitions found in:" +
                          h
                      ),
                        (d = !0);
                      break;
                    }
                    r = g[0];
                    var f = g[1],
                      v = g[2];
                    i.properties[f]
                      ? a.parse(f, v)
                        ? (p.push({ name: f, val: v }), l())
                        : (Lt(
                            "Skipping property: Invalid property definition in: " +
                              r
                          ),
                          l())
                      : (Lt(
                          "Skipping property: Invalid property name in: " + r
                        ),
                        l());
                  }
                  if (d) {
                    s();
                    break;
                  }
                  a.selector(c);
                  for (var y = 0; y < p.length; y++) {
                    var m = p[y];
                    a.css(m.name, m.val);
                  }
                  s();
                }
              }
              return a;
            },
            fromString: function (e) {
              var t = this;
              return t.resetToDefault(), t.appendFromString(e), t;
            },
          },
          tc = {};
        (function () {
          var e = j,
            t = q,
            n = $,
            r = K,
            i = Z,
            a = function (e) {
              return "^" + e + "\\s*\\(\\s*([\\w\\.]+)\\s*\\)$";
            },
            o = function (a) {
              var o = e + "|\\w+|" + t + "|" + n + "|" + r + "|" + i;
              return (
                "^" +
                a +
                "\\s*\\(([\\w\\.]+)\\s*\\,\\s*(" +
                e +
                ")\\s*\\,\\s*(" +
                e +
                ")\\s*,\\s*(" +
                o +
                ")\\s*\\,\\s*(" +
                o +
                ")\\)$"
              );
            },
            s = [
              "^url\\s*\\(\\s*['\"]?(.+?)['\"]?\\s*\\)$",
              "^(none)$",
              "^(.+)$",
            ];
          tc.types = {
            time: { number: !0, min: 0, units: "s|ms", implicitUnits: "ms" },
            percent: {
              number: !0,
              min: 0,
              max: 100,
              units: "%",
              implicitUnits: "%",
            },
            percentages: {
              number: !0,
              min: 0,
              max: 100,
              units: "%",
              implicitUnits: "%",
              multiple: !0,
            },
            zeroOneNumber: { number: !0, min: 0, max: 1, unitless: !0 },
            zeroOneNumbers: {
              number: !0,
              min: 0,
              max: 1,
              unitless: !0,
              multiple: !0,
            },
            nOneOneNumber: { number: !0, min: -1, max: 1, unitless: !0 },
            nonNegativeInt: { number: !0, min: 0, integer: !0, unitless: !0 },
            nonNegativeNumber: { number: !0, min: 0, unitless: !0 },
            position: { enums: ["parent", "origin"] },
            nodeSize: { number: !0, min: 0, enums: ["label"] },
            number: { number: !0, unitless: !0 },
            numbers: { number: !0, unitless: !0, multiple: !0 },
            positiveNumber: { number: !0, unitless: !0, min: 0, strictMin: !0 },
            size: { number: !0, min: 0 },
            bidirectionalSize: { number: !0 },
            bidirectionalSizeMaybePercent: { number: !0, allowPercent: !0 },
            bidirectionalSizes: { number: !0, multiple: !0 },
            sizeMaybePercent: { number: !0, min: 0, allowPercent: !0 },
            axisDirection: {
              enums: [
                "horizontal",
                "leftward",
                "rightward",
                "vertical",
                "upward",
                "downward",
                "auto",
              ],
            },
            paddingRelativeTo: {
              enums: ["width", "height", "average", "min", "max"],
            },
            bgWH: {
              number: !0,
              min: 0,
              allowPercent: !0,
              enums: ["auto"],
              multiple: !0,
            },
            bgPos: { number: !0, allowPercent: !0, multiple: !0 },
            bgRelativeTo: { enums: ["inner", "include-padding"], multiple: !0 },
            bgRepeat: {
              enums: ["repeat", "repeat-x", "repeat-y", "no-repeat"],
              multiple: !0,
            },
            bgFit: { enums: ["none", "contain", "cover"], multiple: !0 },
            bgCrossOrigin: {
              enums: ["anonymous", "use-credentials", "null"],
              multiple: !0,
            },
            bgClip: { enums: ["none", "node"], multiple: !0 },
            bgContainment: { enums: ["inside", "over"], multiple: !0 },
            color: { color: !0 },
            colors: { color: !0, multiple: !0 },
            fill: { enums: ["solid", "linear-gradient", "radial-gradient"] },
            bool: { enums: ["yes", "no"] },
            bools: { enums: ["yes", "no"], multiple: !0 },
            lineStyle: { enums: ["solid", "dotted", "dashed"] },
            lineCap: { enums: ["butt", "round", "square"] },
            linePosition: { enums: ["center", "inside", "outside"] },
            lineJoin: { enums: ["round", "bevel", "miter"] },
            borderStyle: { enums: ["solid", "dotted", "dashed", "double"] },
            curveStyle: {
              enums: [
                "bezier",
                "unbundled-bezier",
                "haystack",
                "segments",
                "straight",
                "straight-triangle",
                "taxi",
                "round-segments",
                "round-taxi",
              ],
            },
            radiusType: {
              enums: ["arc-radius", "influence-radius"],
              multiple: !0,
            },
            fontFamily: { regex: '^([\\w- \\"]+(?:\\s*,\\s*[\\w- \\"]+)*)$' },
            fontStyle: { enums: ["italic", "normal", "oblique"] },
            fontWeight: {
              enums: [
                "normal",
                "bold",
                "bolder",
                "lighter",
                "100",
                "200",
                "300",
                "400",
                "500",
                "600",
                "800",
                "900",
                100,
                200,
                300,
                400,
                500,
                600,
                700,
                800,
                900,
              ],
            },
            textDecoration: {
              enums: ["none", "underline", "overline", "line-through"],
            },
            textTransform: { enums: ["none", "uppercase", "lowercase"] },
            textWrap: { enums: ["none", "wrap", "ellipsis"] },
            textOverflowWrap: { enums: ["whitespace", "anywhere"] },
            textBackgroundShape: {
              enums: ["rectangle", "roundrectangle", "round-rectangle"],
            },
            nodeShape: {
              enums: [
                "rectangle",
                "roundrectangle",
                "round-rectangle",
                "cutrectangle",
                "cut-rectangle",
                "bottomroundrectangle",
                "bottom-round-rectangle",
                "barrel",
                "ellipse",
                "triangle",
                "round-triangle",
                "square",
                "pentagon",
                "round-pentagon",
                "hexagon",
                "round-hexagon",
                "concavehexagon",
                "concave-hexagon",
                "heptagon",
                "round-heptagon",
                "octagon",
                "round-octagon",
                "tag",
                "round-tag",
                "star",
                "diamond",
                "round-diamond",
                "vee",
                "rhomboid",
                "right-rhomboid",
                "polygon",
              ],
            },
            overlayShape: {
              enums: ["roundrectangle", "round-rectangle", "ellipse"],
            },
            cornerRadius: {
              number: !0,
              min: 0,
              units: "px|em",
              implicitUnits: "px",
              enums: ["auto"],
            },
            compoundIncludeLabels: { enums: ["include", "exclude"] },
            arrowShape: {
              enums: [
                "tee",
                "triangle",
                "triangle-tee",
                "circle-triangle",
                "triangle-cross",
                "triangle-backcurve",
                "vee",
                "square",
                "circle",
                "diamond",
                "chevron",
                "none",
              ],
            },
            arrowFill: { enums: ["filled", "hollow"] },
            arrowWidth: {
              number: !0,
              units: "%|px|em",
              implicitUnits: "px",
              enums: ["match-line"],
            },
            display: { enums: ["element", "none"] },
            visibility: { enums: ["hidden", "visible"] },
            zCompoundDepth: { enums: ["bottom", "orphan", "auto", "top"] },
            zIndexCompare: { enums: ["auto", "manual"] },
            valign: { enums: ["top", "center", "bottom"] },
            halign: { enums: ["left", "center", "right"] },
            justification: { enums: ["left", "center", "right", "auto"] },
            text: { string: !0 },
            data: { mapping: !0, regex: a("data") },
            layoutData: { mapping: !0, regex: a("layoutData") },
            scratch: { mapping: !0, regex: a("scratch") },
            mapData: { mapping: !0, regex: o("mapData") },
            mapLayoutData: { mapping: !0, regex: o("mapLayoutData") },
            mapScratch: { mapping: !0, regex: o("mapScratch") },
            fn: { mapping: !0, fn: !0 },
            url: { regexes: s, singleRegexMatchValue: !0 },
            urls: { regexes: s, singleRegexMatchValue: !0, multiple: !0 },
            propList: { propList: !0 },
            angle: { number: !0, units: "deg|rad", implicitUnits: "rad" },
            textRotation: {
              number: !0,
              units: "deg|rad",
              implicitUnits: "rad",
              enums: ["none", "autorotate"],
            },
            polygonPointList: {
              number: !0,
              multiple: !0,
              evenMultiple: !0,
              min: -1,
              max: 1,
              unitless: !0,
            },
            edgeDistances: {
              enums: ["intersection", "node-position", "endpoints"],
            },
            edgeEndpoint: {
              number: !0,
              multiple: !0,
              units: "%|px|em|deg|rad",
              implicitUnits: "px",
              enums: [
                "inside-to-node",
                "outside-to-node",
                "outside-to-node-or-label",
                "outside-to-line",
                "outside-to-line-or-label",
              ],
              singleEnum: !0,
              validate: function (e, t) {
                switch (e.length) {
                  case 2:
                    return (
                      "deg" !== t[0] &&
                      "rad" !== t[0] &&
                      "deg" !== t[1] &&
                      "rad" !== t[1]
                    );
                  case 1:
                    return w(e[0]) || "deg" === t[0] || "rad" === t[0];
                  default:
                    return !1;
                }
              },
            },
            easing: {
              regexes: [
                "^(spring)\\s*\\(\\s*(" + e + ")\\s*,\\s*(" + e + ")\\s*\\)$",
                "^(cubic-bezier)\\s*\\(\\s*(" +
                  e +
                  ")\\s*,\\s*(" +
                  e +
                  ")\\s*,\\s*(" +
                  e +
                  ")\\s*,\\s*(" +
                  e +
                  ")\\s*\\)$",
              ],
              enums: [
                "linear",
                "ease",
                "ease-in",
                "ease-out",
                "ease-in-out",
                "ease-in-sine",
                "ease-out-sine",
                "ease-in-out-sine",
                "ease-in-quad",
                "ease-out-quad",
                "ease-in-out-quad",
                "ease-in-cubic",
                "ease-out-cubic",
                "ease-in-out-cubic",
                "ease-in-quart",
                "ease-out-quart",
                "ease-in-out-quart",
                "ease-in-quint",
                "ease-out-quint",
                "ease-in-out-quint",
                "ease-in-expo",
                "ease-out-expo",
                "ease-in-out-expo",
                "ease-in-circ",
                "ease-out-circ",
                "ease-in-out-circ",
              ],
            },
            gradientDirection: {
              enums: [
                "to-bottom",
                "to-top",
                "to-left",
                "to-right",
                "to-bottom-right",
                "to-bottom-left",
                "to-top-right",
                "to-top-left",
                "to-right-bottom",
                "to-left-bottom",
                "to-right-top",
                "to-left-top",
              ],
            },
            boundsExpansion: {
              number: !0,
              multiple: !0,
              min: 0,
              validate: function (e) {
                var t = e.length;
                return 1 === t || 2 === t || 4 === t;
              },
            },
          };
          var l = {
              zeroNonZero: function (e, t) {
                return (
                  ((null == e || null == t) && e !== t) ||
                  (0 == e && 0 != t) ||
                  (0 != e && 0 == t)
                );
              },
              any: function (e, t) {
                return e != t;
              },
              emptyNonEmpty: function (e, t) {
                var n = P(e),
                  r = P(t);
                return (n && !r) || (!n && r);
              },
            },
            u = tc.types,
            c = [
              {
                name: "label",
                type: u.text,
                triggersBounds: l.any,
                triggersZOrder: l.emptyNonEmpty,
              },
              {
                name: "text-rotation",
                type: u.textRotation,
                triggersBounds: l.any,
              },
              {
                name: "text-margin-x",
                type: u.bidirectionalSize,
                triggersBounds: l.any,
              },
              {
                name: "text-margin-y",
                type: u.bidirectionalSize,
                triggersBounds: l.any,
              },
            ],
            h = [
              { name: "source-label", type: u.text, triggersBounds: l.any },
              {
                name: "source-text-rotation",
                type: u.textRotation,
                triggersBounds: l.any,
              },
              {
                name: "source-text-margin-x",
                type: u.bidirectionalSize,
                triggersBounds: l.any,
              },
              {
                name: "source-text-margin-y",
                type: u.bidirectionalSize,
                triggersBounds: l.any,
              },
              {
                name: "source-text-offset",
                type: u.size,
                triggersBounds: l.any,
              },
            ],
            d = [
              { name: "target-label", type: u.text, triggersBounds: l.any },
              {
                name: "target-text-rotation",
                type: u.textRotation,
                triggersBounds: l.any,
              },
              {
                name: "target-text-margin-x",
                type: u.bidirectionalSize,
                triggersBounds: l.any,
              },
              {
                name: "target-text-margin-y",
                type: u.bidirectionalSize,
                triggersBounds: l.any,
              },
              {
                name: "target-text-offset",
                type: u.size,
                triggersBounds: l.any,
              },
            ],
            p = [
              {
                name: "font-family",
                type: u.fontFamily,
                triggersBounds: l.any,
              },
              { name: "font-style", type: u.fontStyle, triggersBounds: l.any },
              {
                name: "font-weight",
                type: u.fontWeight,
                triggersBounds: l.any,
              },
              { name: "font-size", type: u.size, triggersBounds: l.any },
              {
                name: "text-transform",
                type: u.textTransform,
                triggersBounds: l.any,
              },
              { name: "text-wrap", type: u.textWrap, triggersBounds: l.any },
              {
                name: "text-overflow-wrap",
                type: u.textOverflowWrap,
                triggersBounds: l.any,
              },
              { name: "text-max-width", type: u.size, triggersBounds: l.any },
              {
                name: "text-outline-width",
                type: u.size,
                triggersBounds: l.any,
              },
              {
                name: "line-height",
                type: u.positiveNumber,
                triggersBounds: l.any,
              },
            ],
            g = [
              { name: "text-valign", type: u.valign, triggersBounds: l.any },
              { name: "text-halign", type: u.halign, triggersBounds: l.any },
              { name: "color", type: u.color },
              { name: "text-outline-color", type: u.color },
              { name: "text-outline-opacity", type: u.zeroOneNumber },
              { name: "text-background-color", type: u.color },
              { name: "text-background-opacity", type: u.zeroOneNumber },
              {
                name: "text-background-padding",
                type: u.size,
                triggersBounds: l.any,
              },
              { name: "text-border-opacity", type: u.zeroOneNumber },
              { name: "text-border-color", type: u.color },
              {
                name: "text-border-width",
                type: u.size,
                triggersBounds: l.any,
              },
              {
                name: "text-border-style",
                type: u.borderStyle,
                triggersBounds: l.any,
              },
              {
                name: "text-background-shape",
                type: u.textBackgroundShape,
                triggersBounds: l.any,
              },
              { name: "text-justification", type: u.justification },
            ],
            f = [
              { name: "events", type: u.bool, triggersZOrder: l.any },
              { name: "text-events", type: u.bool, triggersZOrder: l.any },
            ],
            v = [
              {
                name: "display",
                type: u.display,
                triggersZOrder: l.any,
                triggersBounds: l.any,
                triggersBoundsOfConnectedEdges: !0,
              },
              { name: "visibility", type: u.visibility, triggersZOrder: l.any },
              {
                name: "opacity",
                type: u.zeroOneNumber,
                triggersZOrder: l.zeroNonZero,
              },
              { name: "text-opacity", type: u.zeroOneNumber },
              { name: "min-zoomed-font-size", type: u.size },
              {
                name: "z-compound-depth",
                type: u.zCompoundDepth,
                triggersZOrder: l.any,
              },
              {
                name: "z-index-compare",
                type: u.zIndexCompare,
                triggersZOrder: l.any,
              },
              { name: "z-index", type: u.number, triggersZOrder: l.any },
            ],
            y = [
              { name: "overlay-padding", type: u.size, triggersBounds: l.any },
              { name: "overlay-color", type: u.color },
              {
                name: "overlay-opacity",
                type: u.zeroOneNumber,
                triggersBounds: l.zeroNonZero,
              },
              {
                name: "overlay-shape",
                type: u.overlayShape,
                triggersBounds: l.any,
              },
              { name: "overlay-corner-radius", type: u.cornerRadius },
            ],
            m = [
              { name: "underlay-padding", type: u.size, triggersBounds: l.any },
              { name: "underlay-color", type: u.color },
              {
                name: "underlay-opacity",
                type: u.zeroOneNumber,
                triggersBounds: l.zeroNonZero,
              },
              {
                name: "underlay-shape",
                type: u.overlayShape,
                triggersBounds: l.any,
              },
              { name: "underlay-corner-radius", type: u.cornerRadius },
            ],
            b = [
              { name: "transition-property", type: u.propList },
              { name: "transition-duration", type: u.time },
              { name: "transition-delay", type: u.time },
              { name: "transition-timing-function", type: u.easing },
            ],
            x = function (e, t) {
              return "label" === t.value ? -e.poolIndex() : t.pfValue;
            },
            E = [
              {
                name: "height",
                type: u.nodeSize,
                triggersBounds: l.any,
                hashOverride: x,
              },
              {
                name: "width",
                type: u.nodeSize,
                triggersBounds: l.any,
                hashOverride: x,
              },
              { name: "shape", type: u.nodeShape, triggersBounds: l.any },
              {
                name: "shape-polygon-points",
                type: u.polygonPointList,
                triggersBounds: l.any,
              },
              { name: "corner-radius", type: u.cornerRadius },
              { name: "background-color", type: u.color },
              { name: "background-fill", type: u.fill },
              { name: "background-opacity", type: u.zeroOneNumber },
              { name: "background-blacken", type: u.nOneOneNumber },
              { name: "background-gradient-stop-colors", type: u.colors },
              {
                name: "background-gradient-stop-positions",
                type: u.percentages,
              },
              {
                name: "background-gradient-direction",
                type: u.gradientDirection,
              },
              {
                name: "padding",
                type: u.sizeMaybePercent,
                triggersBounds: l.any,
              },
              {
                name: "padding-relative-to",
                type: u.paddingRelativeTo,
                triggersBounds: l.any,
              },
              {
                name: "bounds-expansion",
                type: u.boundsExpansion,
                triggersBounds: l.any,
              },
            ],
            T = [
              { name: "border-color", type: u.color },
              { name: "border-opacity", type: u.zeroOneNumber },
              { name: "border-width", type: u.size, triggersBounds: l.any },
              { name: "border-style", type: u.borderStyle },
              { name: "border-cap", type: u.lineCap },
              { name: "border-join", type: u.lineJoin },
              { name: "border-dash-pattern", type: u.numbers },
              { name: "border-dash-offset", type: u.number },
              { name: "border-position", type: u.linePosition },
            ],
            _ = [
              { name: "outline-color", type: u.color },
              { name: "outline-opacity", type: u.zeroOneNumber },
              { name: "outline-width", type: u.size, triggersBounds: l.any },
              { name: "outline-style", type: u.borderStyle },
              { name: "outline-offset", type: u.size, triggersBounds: l.any },
            ],
            D = [
              { name: "background-image", type: u.urls },
              { name: "background-image-crossorigin", type: u.bgCrossOrigin },
              { name: "background-image-opacity", type: u.zeroOneNumbers },
              { name: "background-image-containment", type: u.bgContainment },
              { name: "background-image-smoothing", type: u.bools },
              { name: "background-position-x", type: u.bgPos },
              { name: "background-position-y", type: u.bgPos },
              { name: "background-width-relative-to", type: u.bgRelativeTo },
              { name: "background-height-relative-to", type: u.bgRelativeTo },
              { name: "background-repeat", type: u.bgRepeat },
              { name: "background-fit", type: u.bgFit },
              { name: "background-clip", type: u.bgClip },
              { name: "background-width", type: u.bgWH },
              { name: "background-height", type: u.bgWH },
              { name: "background-offset-x", type: u.bgPos },
              { name: "background-offset-y", type: u.bgPos },
            ],
            C = [
              { name: "position", type: u.position, triggersBounds: l.any },
              {
                name: "compound-sizing-wrt-labels",
                type: u.compoundIncludeLabels,
                triggersBounds: l.any,
              },
              { name: "min-width", type: u.size, triggersBounds: l.any },
              {
                name: "min-width-bias-left",
                type: u.sizeMaybePercent,
                triggersBounds: l.any,
              },
              {
                name: "min-width-bias-right",
                type: u.sizeMaybePercent,
                triggersBounds: l.any,
              },
              { name: "min-height", type: u.size, triggersBounds: l.any },
              {
                name: "min-height-bias-top",
                type: u.sizeMaybePercent,
                triggersBounds: l.any,
              },
              {
                name: "min-height-bias-bottom",
                type: u.sizeMaybePercent,
                triggersBounds: l.any,
              },
            ],
            N = [
              { name: "line-style", type: u.lineStyle },
              { name: "line-color", type: u.color },
              { name: "line-fill", type: u.fill },
              { name: "line-cap", type: u.lineCap },
              { name: "line-opacity", type: u.zeroOneNumber },
              { name: "line-dash-pattern", type: u.numbers },
              { name: "line-dash-offset", type: u.number },
              { name: "line-outline-width", type: u.size },
              { name: "line-outline-color", type: u.color },
              { name: "line-gradient-stop-colors", type: u.colors },
              { name: "line-gradient-stop-positions", type: u.percentages },
              {
                name: "curve-style",
                type: u.curveStyle,
                triggersBounds: l.any,
                triggersBoundsOfParallelBeziers: !0,
              },
              {
                name: "haystack-radius",
                type: u.zeroOneNumber,
                triggersBounds: l.any,
              },
              {
                name: "source-endpoint",
                type: u.edgeEndpoint,
                triggersBounds: l.any,
              },
              {
                name: "target-endpoint",
                type: u.edgeEndpoint,
                triggersBounds: l.any,
              },
              {
                name: "control-point-step-size",
                type: u.size,
                triggersBounds: l.any,
              },
              {
                name: "control-point-distances",
                type: u.bidirectionalSizes,
                triggersBounds: l.any,
              },
              {
                name: "control-point-weights",
                type: u.numbers,
                triggersBounds: l.any,
              },
              {
                name: "segment-distances",
                type: u.bidirectionalSizes,
                triggersBounds: l.any,
              },
              {
                name: "segment-weights",
                type: u.numbers,
                triggersBounds: l.any,
              },
              { name: "segment-radii", type: u.numbers, triggersBounds: l.any },
              {
                name: "radius-type",
                type: u.radiusType,
                triggersBounds: l.any,
              },
              {
                name: "taxi-turn",
                type: u.bidirectionalSizeMaybePercent,
                triggersBounds: l.any,
              },
              {
                name: "taxi-turn-min-distance",
                type: u.size,
                triggersBounds: l.any,
              },
              {
                name: "taxi-direction",
                type: u.axisDirection,
                triggersBounds: l.any,
              },
              { name: "taxi-radius", type: u.number, triggersBounds: l.any },
              {
                name: "edge-distances",
                type: u.edgeDistances,
                triggersBounds: l.any,
              },
              {
                name: "arrow-scale",
                type: u.positiveNumber,
                triggersBounds: l.any,
              },
              { name: "loop-direction", type: u.angle, triggersBounds: l.any },
              { name: "loop-sweep", type: u.angle, triggersBounds: l.any },
              {
                name: "source-distance-from-node",
                type: u.size,
                triggersBounds: l.any,
              },
              {
                name: "target-distance-from-node",
                type: u.size,
                triggersBounds: l.any,
              },
            ],
            A = [
              { name: "ghost", type: u.bool, triggersBounds: l.any },
              {
                name: "ghost-offset-x",
                type: u.bidirectionalSize,
                triggersBounds: l.any,
              },
              {
                name: "ghost-offset-y",
                type: u.bidirectionalSize,
                triggersBounds: l.any,
              },
              { name: "ghost-opacity", type: u.zeroOneNumber },
            ],
            L = [
              { name: "selection-box-color", type: u.color },
              { name: "selection-box-opacity", type: u.zeroOneNumber },
              { name: "selection-box-border-color", type: u.color },
              { name: "selection-box-border-width", type: u.size },
              { name: "active-bg-color", type: u.color },
              { name: "active-bg-opacity", type: u.zeroOneNumber },
              { name: "active-bg-size", type: u.size },
              { name: "outside-texture-bg-color", type: u.color },
              { name: "outside-texture-bg-opacity", type: u.zeroOneNumber },
            ],
            S = [];
          (tc.pieBackgroundN = 16),
            S.push({ name: "pie-size", type: u.sizeMaybePercent });
          for (var O = 1; O <= tc.pieBackgroundN; O++)
            S.push({ name: "pie-" + O + "-background-color", type: u.color }),
              S.push({
                name: "pie-" + O + "-background-size",
                type: u.percent,
              }),
              S.push({
                name: "pie-" + O + "-background-opacity",
                type: u.zeroOneNumber,
              });
          var k = [],
            I = (tc.arrowPrefixes = [
              "source",
              "mid-source",
              "target",
              "mid-target",
            ]);
          [
            { name: "arrow-shape", type: u.arrowShape, triggersBounds: l.any },
            { name: "arrow-color", type: u.color },
            { name: "arrow-fill", type: u.arrowFill },
            { name: "arrow-width", type: u.arrowWidth },
          ].forEach(function (e) {
            I.forEach(function (t) {
              var n = t + "-" + e.name,
                r = e.type,
                i = e.triggersBounds;
              k.push({ name: n, type: r, triggersBounds: i });
            });
          }, {});
          var M = (tc.properties = [].concat(
              f,
              b,
              v,
              y,
              m,
              A,
              g,
              p,
              c,
              h,
              d,
              E,
              T,
              _,
              D,
              S,
              C,
              N,
              k,
              L
            )),
            R = (tc.propertyGroups = {
              behavior: f,
              transition: b,
              visibility: v,
              overlay: y,
              underlay: m,
              ghost: A,
              commonLabel: g,
              labelDimensions: p,
              mainLabel: c,
              sourceLabel: h,
              targetLabel: d,
              nodeBody: E,
              nodeBorder: T,
              nodeOutline: _,
              backgroundImage: D,
              pie: S,
              compound: C,
              edgeLine: N,
              edgeArrow: k,
              core: L,
            }),
            B = (tc.propertyGroupNames = {});
          (tc.propertyGroupKeys = Object.keys(R)).forEach(function (e) {
            (B[e] = R[e].map(function (e) {
              return e.name;
            })),
              R[e].forEach(function (t) {
                return (t.groupKey = e);
              });
          });
          var F = (tc.aliases = [
            { name: "content", pointsTo: "label" },
            {
              name: "control-point-distance",
              pointsTo: "control-point-distances",
            },
            { name: "control-point-weight", pointsTo: "control-point-weights" },
            { name: "segment-distance", pointsTo: "segment-distances" },
            { name: "segment-weight", pointsTo: "segment-weights" },
            { name: "segment-radius", pointsTo: "segment-radii" },
            { name: "edge-text-rotation", pointsTo: "text-rotation" },
            { name: "padding-left", pointsTo: "padding" },
            { name: "padding-right", pointsTo: "padding" },
            { name: "padding-top", pointsTo: "padding" },
            { name: "padding-bottom", pointsTo: "padding" },
          ]);
          tc.propertyNames = M.map(function (e) {
            return e.name;
          });
          for (var z = 0; z < M.length; z++) {
            var G = M[z];
            M[G.name] = G;
          }
          for (var Y = 0; Y < F.length; Y++) {
            var X = F[Y],
              V = M[X.pointsTo],
              U = { name: X.name, alias: !0, pointsTo: V };
            M.push(U), (M[X.name] = U);
          }
        })(),
          (tc.getDefaultProperty = function (e) {
            return this.getDefaultProperties()[e];
          }),
          (tc.getDefaultProperties = function () {
            var e = this._private;
            if (null != e.defaultProperties) return e.defaultProperties;
            for (
              var t = ee(
                  {
                    "selection-box-color": "#ddd",
                    "selection-box-opacity": 0.65,
                    "selection-box-border-color": "#aaa",
                    "selection-box-border-width": 1,
                    "active-bg-color": "black",
                    "active-bg-opacity": 0.15,
                    "active-bg-size": 30,
                    "outside-texture-bg-color": "#000",
                    "outside-texture-bg-opacity": 0.125,
                    events: "yes",
                    "text-events": "no",
                    "text-valign": "top",
                    "text-halign": "center",
                    "text-justification": "auto",
                    "line-height": 1,
                    color: "#000",
                    "text-outline-color": "#000",
                    "text-outline-width": 0,
                    "text-outline-opacity": 1,
                    "text-opacity": 1,
                    "text-decoration": "none",
                    "text-transform": "none",
                    "text-wrap": "none",
                    "text-overflow-wrap": "whitespace",
                    "text-max-width": 9999,
                    "text-background-color": "#000",
                    "text-background-opacity": 0,
                    "text-background-shape": "rectangle",
                    "text-background-padding": 0,
                    "text-border-opacity": 0,
                    "text-border-width": 0,
                    "text-border-style": "solid",
                    "text-border-color": "#000",
                    "font-family": "Helvetica Neue, Helvetica, sans-serif",
                    "font-style": "normal",
                    "font-weight": "normal",
                    "font-size": 16,
                    "min-zoomed-font-size": 0,
                    "text-rotation": "none",
                    "source-text-rotation": "none",
                    "target-text-rotation": "none",
                    visibility: "visible",
                    display: "element",
                    opacity: 1,
                    "z-compound-depth": "auto",
                    "z-index-compare": "auto",
                    "z-index": 0,
                    label: "",
                    "text-margin-x": 0,
                    "text-margin-y": 0,
                    "source-label": "",
                    "source-text-offset": 0,
                    "source-text-margin-x": 0,
                    "source-text-margin-y": 0,
                    "target-label": "",
                    "target-text-offset": 0,
                    "target-text-margin-x": 0,
                    "target-text-margin-y": 0,
                    "overlay-opacity": 0,
                    "overlay-color": "#000",
                    "overlay-padding": 10,
                    "overlay-shape": "round-rectangle",
                    "overlay-corner-radius": "auto",
                    "underlay-opacity": 0,
                    "underlay-color": "#000",
                    "underlay-padding": 10,
                    "underlay-shape": "round-rectangle",
                    "underlay-corner-radius": "auto",
                    "transition-property": "none",
                    "transition-duration": 0,
                    "transition-delay": 0,
                    "transition-timing-function": "linear",
                    "background-blacken": 0,
                    "background-color": "#999",
                    "background-fill": "solid",
                    "background-opacity": 1,
                    "background-image": "none",
                    "background-image-crossorigin": "anonymous",
                    "background-image-opacity": 1,
                    "background-image-containment": "inside",
                    "background-image-smoothing": "yes",
                    "background-position-x": "50%",
                    "background-position-y": "50%",
                    "background-offset-x": 0,
                    "background-offset-y": 0,
                    "background-width-relative-to": "include-padding",
                    "background-height-relative-to": "include-padding",
                    "background-repeat": "no-repeat",
                    "background-fit": "none",
                    "background-clip": "node",
                    "background-width": "auto",
                    "background-height": "auto",
                    "border-color": "#000",
                    "border-opacity": 1,
                    "border-width": 0,
                    "border-style": "solid",
                    "border-dash-pattern": [4, 2],
                    "border-dash-offset": 0,
                    "border-cap": "butt",
                    "border-join": "miter",
                    "border-position": "center",
                    "outline-color": "#999",
                    "outline-opacity": 1,
                    "outline-width": 0,
                    "outline-offset": 0,
                    "outline-style": "solid",
                    height: 30,
                    width: 30,
                    shape: "ellipse",
                    "shape-polygon-points": "-1, -1,   1, -1,   1, 1,   -1, 1",
                    "corner-radius": "auto",
                    "bounds-expansion": 0,
                    "background-gradient-direction": "to-bottom",
                    "background-gradient-stop-colors": "#999",
                    "background-gradient-stop-positions": "0%",
                    ghost: "no",
                    "ghost-offset-y": 0,
                    "ghost-offset-x": 0,
                    "ghost-opacity": 0,
                    padding: 0,
                    "padding-relative-to": "width",
                    position: "origin",
                    "compound-sizing-wrt-labels": "include",
                    "min-width": 0,
                    "min-width-bias-left": 0,
                    "min-width-bias-right": 0,
                    "min-height": 0,
                    "min-height-bias-top": 0,
                    "min-height-bias-bottom": 0,
                  },
                  { "pie-size": "100%" },
                  [
                    { name: "pie-{{i}}-background-color", value: "black" },
                    { name: "pie-{{i}}-background-size", value: "0%" },
                    { name: "pie-{{i}}-background-opacity", value: 1 },
                  ].reduce(function (e, t) {
                    for (var n = 1; n <= tc.pieBackgroundN; n++) {
                      var r = t.name.replace("{{i}}", n),
                        i = t.value;
                      e[r] = i;
                    }
                    return e;
                  }, {}),
                  {
                    "line-style": "solid",
                    "line-color": "#999",
                    "line-fill": "solid",
                    "line-cap": "butt",
                    "line-opacity": 1,
                    "line-outline-width": 0,
                    "line-outline-color": "#000",
                    "line-gradient-stop-colors": "#999",
                    "line-gradient-stop-positions": "0%",
                    "control-point-step-size": 40,
                    "control-point-weights": 0.5,
                    "segment-weights": 0.5,
                    "segment-distances": 20,
                    "segment-radii": 15,
                    "radius-type": "arc-radius",
                    "taxi-turn": "50%",
                    "taxi-radius": 15,
                    "taxi-turn-min-distance": 10,
                    "taxi-direction": "auto",
                    "edge-distances": "intersection",
                    "curve-style": "haystack",
                    "haystack-radius": 0,
                    "arrow-scale": 1,
                    "loop-direction": "-45deg",
                    "loop-sweep": "-90deg",
                    "source-distance-from-node": 0,
                    "target-distance-from-node": 0,
                    "source-endpoint": "outside-to-node",
                    "target-endpoint": "outside-to-node",
                    "line-dash-pattern": [6, 3],
                    "line-dash-offset": 0,
                  },
                  [
                    { name: "arrow-shape", value: "none" },
                    { name: "arrow-color", value: "#999" },
                    { name: "arrow-fill", value: "filled" },
                    { name: "arrow-width", value: 1 },
                  ].reduce(function (e, t) {
                    return (
                      tc.arrowPrefixes.forEach(function (n) {
                        var r = n + "-" + t.name,
                          i = t.value;
                        e[r] = i;
                      }),
                      e
                    );
                  }, {})
                ),
                n = {},
                r = 0;
              r < this.properties.length;
              r++
            ) {
              var i = this.properties[r];
              if (!i.pointsTo) {
                var a = i.name,
                  o = t[a],
                  s = this.parse(a, o);
                n[a] = s;
              }
            }
            return (e.defaultProperties = n), e.defaultProperties;
          }),
          (tc.addDefaultStylesheet = function () {
            this.selector(":parent")
              .css({
                shape: "rectangle",
                padding: 10,
                "background-color": "#eee",
                "border-color": "#ccc",
                "border-width": 1,
              })
              .selector("edge")
              .css({ width: 3 })
              .selector(":loop")
              .css({ "curve-style": "bezier" })
              .selector("edge:compound")
              .css({
                "curve-style": "bezier",
                "source-endpoint": "outside-to-line",
                "target-endpoint": "outside-to-line",
              })
              .selector(":selected")
              .css({
                "background-color": "#0169D9",
                "line-color": "#0169D9",
                "source-arrow-color": "#0169D9",
                "target-arrow-color": "#0169D9",
                "mid-source-arrow-color": "#0169D9",
                "mid-target-arrow-color": "#0169D9",
              })
              .selector(":parent:selected")
              .css({ "background-color": "#CCE1F9", "border-color": "#aec8e5" })
              .selector(":active")
              .css({
                "overlay-color": "black",
                "overlay-padding": 10,
                "overlay-opacity": 0.25,
              }),
              (this.defaultLength = this.length);
          });
        var nc = {
            parse: function (e, t, n, r) {
              var i = this;
              if (E(t)) return i.parseImplWarn(e, t, n, r);
              var a,
                o = yt(
                  e,
                  "" + t,
                  n ? "t" : "f",
                  "mapping" === r || !0 === r || !1 === r || null == r
                    ? "dontcare"
                    : r
                ),
                s = (i.propCache = i.propCache || []);
              return (
                (a = s[o]) || (a = s[o] = i.parseImplWarn(e, t, n, r)),
                (n || "mapping" === r) &&
                  (a = Ot(a)) &&
                  (a.value = Ot(a.value)),
                a
              );
            },
            parseImplWarn: function (e, t, n, r) {
              var i = this.parseImpl(e, t, n, r);
              return (
                i ||
                  null == t ||
                  Lt(
                    "The style property `"
                      .concat(e, ": ")
                      .concat(t, "` is invalid")
                  ),
                !i ||
                  ("width" !== i.name && "height" !== i.name) ||
                  "label" !== t ||
                  Lt(
                    "The style value of `label` is deprecated for `" +
                      i.name +
                      "`"
                  ),
                i
              );
            },
            parseImpl: function (e, t, n, r) {
              var i = this;
              e = Y(e);
              var a = i.properties[e],
                o = t,
                s = i.types;
              if (!a) return null;
              if (void 0 === t) return null;
              a.alias && ((a = a.pointsTo), (e = a.name));
              var l = w(t);
              l && (t = t.trim());
              var u,
                c,
                h = a.type;
              if (!h) return null;
              if (n && ("" === t || null === t))
                return { name: e, value: t, bypass: !0, deleteBypass: !0 };
              if (E(t))
                return {
                  name: e,
                  value: t,
                  strValue: "fn",
                  mapped: s.fn,
                  bypass: n,
                };
              if (!l || r || t.length < 7 || "a" !== t[1]);
              else {
                if (
                  t.length >= 7 &&
                  "d" === t[0] &&
                  (u = new RegExp(s.data.regex).exec(t))
                ) {
                  if (n) return !1;
                  var d = s.data;
                  return {
                    name: e,
                    value: u,
                    strValue: "" + t,
                    mapped: d,
                    field: u[1],
                    bypass: n,
                  };
                }
                if (
                  t.length >= 10 &&
                  "m" === t[0] &&
                  (c = new RegExp(s.mapData.regex).exec(t))
                ) {
                  if (n) return !1;
                  if (h.multiple) return !1;
                  var p = s.mapData;
                  if (!h.color && !h.number) return !1;
                  var g = this.parse(e, c[4]);
                  if (!g || g.mapped) return !1;
                  var f = this.parse(e, c[5]);
                  if (!f || f.mapped) return !1;
                  if (g.pfValue === f.pfValue || g.strValue === f.strValue)
                    return (
                      Lt(
                        "`" +
                          e +
                          ": " +
                          t +
                          "` is not a valid mapper because the output range is zero; converting to `" +
                          e +
                          ": " +
                          g.strValue +
                          "`"
                      ),
                      this.parse(e, g.strValue)
                    );
                  if (h.color) {
                    var v = g.value,
                      y = f.value;
                    if (
                      !(
                        v[0] !== y[0] ||
                        v[1] !== y[1] ||
                        v[2] !== y[2] ||
                        (v[3] !== y[3] &&
                          ((null != v[3] && 1 !== v[3]) ||
                            (null != y[3] && 1 !== y[3])))
                      )
                    )
                      return !1;
                  }
                  return {
                    name: e,
                    value: c,
                    strValue: "" + t,
                    mapped: p,
                    field: c[1],
                    fieldMin: parseFloat(c[2]),
                    fieldMax: parseFloat(c[3]),
                    valueMin: g.value,
                    valueMax: f.value,
                    bypass: n,
                  };
                }
              }
              if (h.multiple && "multiple" !== r) {
                var m;
                if (
                  ((m = l ? t.split(/\s+/) : T(t) ? t : [t]),
                  h.evenMultiple && m.length % 2 != 0)
                )
                  return null;
                for (
                  var b = [], x = [], _ = [], D = "", C = !1, A = 0;
                  A < m.length;
                  A++
                ) {
                  var L = i.parse(e, m[A], n, "multiple");
                  (C = C || w(L.value)),
                    b.push(L.value),
                    _.push(null != L.pfValue ? L.pfValue : L.value),
                    x.push(L.units),
                    (D += (A > 0 ? " " : "") + L.strValue);
                }
                return h.validate && !h.validate(b, x)
                  ? null
                  : h.singleEnum && C
                  ? 1 === b.length && w(b[0])
                    ? { name: e, value: b[0], strValue: b[0], bypass: n }
                    : null
                  : {
                      name: e,
                      value: b,
                      pfValue: _,
                      strValue: D,
                      bypass: n,
                      units: x,
                    };
              }
              var S = function () {
                for (var r = 0; r < h.enums.length; r++)
                  if (h.enums[r] === t)
                    return { name: e, value: t, strValue: "" + t, bypass: n };
                return null;
              };
              if (h.number) {
                var O,
                  k = "px";
                if (
                  (h.units && (O = h.units),
                  h.implicitUnits && (k = h.implicitUnits),
                  !h.unitless)
                )
                  if (l) {
                    var I = "px|em" + (h.allowPercent ? "|\\%" : "");
                    O && (I = O);
                    var M = t.match("^(" + j + ")(" + I + ")?$");
                    M && ((t = M[1]), (O = M[2] || k));
                  } else (O && !h.implicitUnits) || (O = k);
                if (((t = parseFloat(t)), isNaN(t) && void 0 === h.enums))
                  return null;
                if (isNaN(t) && void 0 !== h.enums) return (t = o), S();
                if (h.integer && !N(t)) return null;
                if (
                  (void 0 !== h.min &&
                    (t < h.min || (h.strictMin && t === h.min))) ||
                  (void 0 !== h.max &&
                    (t > h.max || (h.strictMax && t === h.max)))
                )
                  return null;
                var P = {
                  name: e,
                  value: t,
                  strValue: "" + t + (O || ""),
                  units: O,
                  bypass: n,
                };
                return (
                  h.unitless || ("px" !== O && "em" !== O)
                    ? (P.pfValue = t)
                    : (P.pfValue =
                        "px" !== O && O ? this.getEmSizeInPixels() * t : t),
                  ("ms" !== O && "s" !== O) ||
                    (P.pfValue = "ms" === O ? t : 1e3 * t),
                  ("deg" !== O && "rad" !== O) ||
                    (P.pfValue = "rad" === O ? t : xn(t)),
                  "%" === O && (P.pfValue = t / 100),
                  P
                );
              }
              if (h.propList) {
                var R = [],
                  B = "" + t;
                if ("none" === B);
                else {
                  for (
                    var F = B.split(/\s*,\s*|\s+/), z = 0;
                    z < F.length;
                    z++
                  ) {
                    var G = F[z].trim();
                    i.properties[G]
                      ? R.push(G)
                      : Lt("`" + G + "` is not a valid property name");
                  }
                  if (0 === R.length) return null;
                }
                return {
                  name: e,
                  value: R,
                  strValue: 0 === R.length ? "none" : R.join(" "),
                  bypass: n,
                };
              }
              if (h.color) {
                var X = ae(t);
                return X
                  ? {
                      name: e,
                      value: X,
                      pfValue: X,
                      strValue: "rgb(" + X[0] + "," + X[1] + "," + X[2] + ")",
                      bypass: n,
                    }
                  : null;
              }
              if (h.regex || h.regexes) {
                if (h.enums) {
                  var V = S();
                  if (V) return V;
                }
                for (
                  var U = h.regexes ? h.regexes : [h.regex], H = 0;
                  H < U.length;
                  H++
                ) {
                  var q = new RegExp(U[H]).exec(t);
                  if (q)
                    return {
                      name: e,
                      value: h.singleRegexMatchValue ? q[1] : q,
                      strValue: "" + t,
                      bypass: n,
                    };
                }
                return null;
              }
              return h.string
                ? { name: e, value: "" + t, strValue: "" + t, bypass: n }
                : h.enums
                ? S()
                : null;
            },
          },
          rc = function e(t) {
            if (!(this instanceof e)) return new e(t);
            k(t)
              ? ((this._private = { cy: t, coreStyle: {} }),
                (this.length = 0),
                this.resetToDefault())
              : Nt("A style must have a core reference");
          },
          ic = rc.prototype;
        (ic.instanceString = function () {
          return "style";
        }),
          (ic.clear = function () {
            for (
              var e = this._private, t = e.cy.elements(), n = 0;
              n < this.length;
              n++
            )
              this[n] = void 0;
            return (
              (this.length = 0),
              (e.contextStyles = {}),
              (e.propDiffs = {}),
              this.cleanElements(t, !0),
              t.forEach(function (e) {
                var t = e[0]._private;
                (t.styleDirty = !0), (t.appliedInitStyle = !1);
              }),
              this
            );
          }),
          (ic.resetToDefault = function () {
            return this.clear(), this.addDefaultStylesheet(), this;
          }),
          (ic.core = function (e) {
            return this._private.coreStyle[e] || this.getDefaultProperty(e);
          }),
          (ic.selector = function (e) {
            var t = "core" === e ? null : new Fs(e),
              n = this.length++;
            return (
              (this[n] = {
                selector: t,
                properties: [],
                mappedProperties: [],
                index: n,
              }),
              this
            );
          }),
          (ic.css = function () {
            var e = this,
              t = arguments;
            if (1 === t.length)
              for (var n = t[0], r = 0; r < e.properties.length; r++) {
                var i = e.properties[r],
                  a = n[i.name];
                void 0 === a && (a = n[X(i.name)]),
                  void 0 !== a && this.cssRule(i.name, a);
              }
            else 2 === t.length && this.cssRule(t[0], t[1]);
            return this;
          }),
          (ic.style = ic.css),
          (ic.cssRule = function (e, t) {
            var n = this.parse(e, t);
            if (n) {
              var r = this.length - 1;
              this[r].properties.push(n),
                (this[r].properties[n.name] = n),
                n.name.match(/pie-(\d+)-background-size/) &&
                  n.value &&
                  (this._private.hasPie = !0),
                n.mapped && this[r].mappedProperties.push(n),
                !this[r].selector && (this._private.coreStyle[n.name] = n);
            }
            return this;
          }),
          (ic.append = function (e) {
            return (
              I(e)
                ? e.appendToStyle(this)
                : T(e)
                ? this.appendFromJson(e)
                : w(e) && this.appendFromString(e),
              this
            );
          }),
          (rc.fromJson = function (e, t) {
            var n = new rc(e);
            return n.fromJson(t), n;
          }),
          (rc.fromString = function (e, t) {
            return new rc(e).fromString(t);
          }),
          [qu, Ku, Zu, Qu, Ju, ec, tc, nc].forEach(function (e) {
            ee(ic, e);
          }),
          (rc.types = ic.types),
          (rc.properties = ic.properties),
          (rc.propertyGroups = ic.propertyGroups),
          (rc.propertyGroupNames = ic.propertyGroupNames),
          (rc.propertyGroupKeys = ic.propertyGroupKeys);
        var ac = {
            style: function (e) {
              return e && this.setStyle(e).update(), this._private.style;
            },
            setStyle: function (e) {
              var t = this._private;
              return (
                I(e)
                  ? (t.style = e.generateStyle(this))
                  : T(e)
                  ? (t.style = rc.fromJson(this, e))
                  : w(e)
                  ? (t.style = rc.fromString(this, e))
                  : (t.style = rc(this)),
                t.style
              );
            },
            updateStyle: function () {
              this.mutableElements().updateStyle();
            },
          },
          oc = "single",
          sc = {
            autolock: function (e) {
              return void 0 === e
                ? this._private.autolock
                : ((this._private.autolock = !!e), this);
            },
            autoungrabify: function (e) {
              return void 0 === e
                ? this._private.autoungrabify
                : ((this._private.autoungrabify = !!e), this);
            },
            autounselectify: function (e) {
              return void 0 === e
                ? this._private.autounselectify
                : ((this._private.autounselectify = !!e), this);
            },
            selectionType: function (e) {
              var t = this._private;
              return (
                null == t.selectionType && (t.selectionType = oc),
                void 0 === e
                  ? t.selectionType
                  : (("additive" !== e && "single" !== e) ||
                      (t.selectionType = e),
                    this)
              );
            },
            panningEnabled: function (e) {
              return void 0 === e
                ? this._private.panningEnabled
                : ((this._private.panningEnabled = !!e), this);
            },
            userPanningEnabled: function (e) {
              return void 0 === e
                ? this._private.userPanningEnabled
                : ((this._private.userPanningEnabled = !!e), this);
            },
            zoomingEnabled: function (e) {
              return void 0 === e
                ? this._private.zoomingEnabled
                : ((this._private.zoomingEnabled = !!e), this);
            },
            userZoomingEnabled: function (e) {
              return void 0 === e
                ? this._private.userZoomingEnabled
                : ((this._private.userZoomingEnabled = !!e), this);
            },
            boxSelectionEnabled: function (e) {
              return void 0 === e
                ? this._private.boxSelectionEnabled
                : ((this._private.boxSelectionEnabled = !!e), this);
            },
            pan: function () {
              var e,
                t,
                n,
                r,
                i,
                a = arguments,
                o = this._private.pan;
              switch (a.length) {
                case 0:
                  return o;
                case 1:
                  if (w(a[0])) return o[(e = a[0])];
                  if (_(a[0])) {
                    if (!this._private.panningEnabled) return this;
                    (r = (n = a[0]).x),
                      (i = n.y),
                      C(r) && (o.x = r),
                      C(i) && (o.y = i),
                      this.emit("pan viewport");
                  }
                  break;
                case 2:
                  if (!this._private.panningEnabled) return this;
                  (e = a[0]),
                    (t = a[1]),
                    ("x" !== e && "y" !== e) || !C(t) || (o[e] = t),
                    this.emit("pan viewport");
              }
              return this.notify("viewport"), this;
            },
            panBy: function (e, t) {
              var n,
                r,
                i,
                a,
                o,
                s = arguments,
                l = this._private.pan;
              if (!this._private.panningEnabled) return this;
              switch (s.length) {
                case 1:
                  _(e) &&
                    ((a = (i = s[0]).x),
                    (o = i.y),
                    C(a) && (l.x += a),
                    C(o) && (l.y += o),
                    this.emit("pan viewport"));
                  break;
                case 2:
                  (r = t),
                    ("x" !== (n = e) && "y" !== n) || !C(r) || (l[n] += r),
                    this.emit("pan viewport");
              }
              return this.notify("viewport"), this;
            },
            fit: function (e, t) {
              var n = this.getFitViewport(e, t);
              if (n) {
                var r = this._private;
                (r.zoom = n.zoom),
                  (r.pan = n.pan),
                  this.emit("pan zoom viewport"),
                  this.notify("viewport");
              }
              return this;
            },
            getFitViewport: function (e, t) {
              if (
                (C(e) && void 0 === t && ((t = e), (e = void 0)),
                this._private.panningEnabled && this._private.zoomingEnabled)
              ) {
                var n;
                if (w(e)) {
                  var r = e;
                  e = this.$(r);
                } else if (B(e)) {
                  var i = e;
                  ((n = { x1: i.x1, y1: i.y1, x2: i.x2, y2: i.y2 }).w =
                    n.x2 - n.x1),
                    (n.h = n.y2 - n.y1);
                } else L(e) || (e = this.mutableElements());
                if (!L(e) || !e.empty()) {
                  n = n || e.boundingBox();
                  var a,
                    o = this.width(),
                    s = this.height();
                  if (
                    ((t = C(t) ? t : 0),
                    !isNaN(o) &&
                      !isNaN(s) &&
                      o > 0 &&
                      s > 0 &&
                      !isNaN(n.w) &&
                      !isNaN(n.h) &&
                      n.w > 0 &&
                      n.h > 0)
                  )
                    return {
                      zoom: (a =
                        (a =
                          (a = Math.min((o - 2 * t) / n.w, (s - 2 * t) / n.h)) >
                          this._private.maxZoom
                            ? this._private.maxZoom
                            : a) < this._private.minZoom
                          ? this._private.minZoom
                          : a),
                      pan: {
                        x: (o - a * (n.x1 + n.x2)) / 2,
                        y: (s - a * (n.y1 + n.y2)) / 2,
                      },
                    };
                }
              }
            },
            zoomRange: function (e, t) {
              var n = this._private;
              if (null == t) {
                var r = e;
                (e = r.min), (t = r.max);
              }
              return (
                C(e) && C(t) && e <= t
                  ? ((n.minZoom = e), (n.maxZoom = t))
                  : C(e) && void 0 === t && e <= n.maxZoom
                  ? (n.minZoom = e)
                  : C(t) && void 0 === e && t >= n.minZoom && (n.maxZoom = t),
                this
              );
            },
            minZoom: function (e) {
              return void 0 === e
                ? this._private.minZoom
                : this.zoomRange({ min: e });
            },
            maxZoom: function (e) {
              return void 0 === e
                ? this._private.maxZoom
                : this.zoomRange({ max: e });
            },
            getZoomedViewport: function (e) {
              var t,
                n,
                r = this._private,
                i = r.pan,
                a = r.zoom,
                o = !1;
              if (
                (r.zoomingEnabled || (o = !0),
                C(e)
                  ? (n = e)
                  : _(e) &&
                    ((n = e.level),
                    null != e.position
                      ? (t = pn(e.position, a, i))
                      : null != e.renderedPosition && (t = e.renderedPosition),
                    null == t || r.panningEnabled || (o = !0)),
                (n =
                  (n = n > r.maxZoom ? r.maxZoom : n) < r.minZoom
                    ? r.minZoom
                    : n),
                o || !C(n) || n === a || (null != t && (!C(t.x) || !C(t.y))))
              )
                return null;
              if (null != t) {
                var s = i,
                  l = a,
                  u = n;
                return {
                  zoomed: !0,
                  panned: !0,
                  zoom: u,
                  pan: {
                    x: (-u / l) * (t.x - s.x) + t.x,
                    y: (-u / l) * (t.y - s.y) + t.y,
                  },
                };
              }
              return { zoomed: !0, panned: !1, zoom: n, pan: i };
            },
            zoom: function (e) {
              if (void 0 === e) return this._private.zoom;
              var t = this.getZoomedViewport(e),
                n = this._private;
              return null != t && t.zoomed
                ? ((n.zoom = t.zoom),
                  t.panned && ((n.pan.x = t.pan.x), (n.pan.y = t.pan.y)),
                  this.emit("zoom" + (t.panned ? " pan" : "") + " viewport"),
                  this.notify("viewport"),
                  this)
                : this;
            },
            viewport: function (e) {
              var t = this._private,
                n = !0,
                r = !0,
                i = [],
                a = !1,
                o = !1;
              if (!e) return this;
              if ((C(e.zoom) || (n = !1), _(e.pan) || (r = !1), !n && !r))
                return this;
              if (n) {
                var s = e.zoom;
                s < t.minZoom || s > t.maxZoom || !t.zoomingEnabled
                  ? (a = !0)
                  : ((t.zoom = s), i.push("zoom"));
              }
              if (r && (!a || !e.cancelOnFailedZoom) && t.panningEnabled) {
                var l = e.pan;
                C(l.x) && ((t.pan.x = l.x), (o = !1)),
                  C(l.y) && ((t.pan.y = l.y), (o = !1)),
                  o || i.push("pan");
              }
              return (
                i.length > 0 &&
                  (i.push("viewport"),
                  this.emit(i.join(" ")),
                  this.notify("viewport")),
                this
              );
            },
            center: function (e) {
              var t = this.getCenterPan(e);
              return (
                t &&
                  ((this._private.pan = t),
                  this.emit("pan viewport"),
                  this.notify("viewport")),
                this
              );
            },
            getCenterPan: function (e, t) {
              if (this._private.panningEnabled) {
                if (w(e)) {
                  var n = e;
                  e = this.mutableElements().filter(n);
                } else L(e) || (e = this.mutableElements());
                if (0 !== e.length) {
                  var r = e.boundingBox(),
                    i = this.width(),
                    a = this.height();
                  return {
                    x:
                      (i -
                        (t = void 0 === t ? this._private.zoom : t) *
                          (r.x1 + r.x2)) /
                      2,
                    y: (a - t * (r.y1 + r.y2)) / 2,
                  };
                }
              }
            },
            reset: function () {
              return this._private.panningEnabled &&
                this._private.zoomingEnabled
                ? (this.viewport({ pan: { x: 0, y: 0 }, zoom: 1 }), this)
                : this;
            },
            invalidateSize: function () {
              this._private.sizeCache = null;
            },
            size: function () {
              var e,
                t,
                n = this._private,
                r = n.container,
                i = this;
              return (n.sizeCache =
                n.sizeCache ||
                (r
                  ? ((e = i.window().getComputedStyle(r)),
                    (t = function (t) {
                      return parseFloat(e.getPropertyValue(t));
                    }),
                    {
                      width:
                        r.clientWidth - t("padding-left") - t("padding-right"),
                      height:
                        r.clientHeight - t("padding-top") - t("padding-bottom"),
                    })
                  : { width: 1, height: 1 }));
            },
            width: function () {
              return this.size().width;
            },
            height: function () {
              return this.size().height;
            },
            extent: function () {
              var e = this._private.pan,
                t = this._private.zoom,
                n = this.renderedExtent(),
                r = {
                  x1: (n.x1 - e.x) / t,
                  x2: (n.x2 - e.x) / t,
                  y1: (n.y1 - e.y) / t,
                  y2: (n.y2 - e.y) / t,
                };
              return (r.w = r.x2 - r.x1), (r.h = r.y2 - r.y1), r;
            },
            renderedExtent: function () {
              var e = this.width(),
                t = this.height();
              return { x1: 0, y1: 0, x2: e, y2: t, w: e, h: t };
            },
            multiClickDebounceTime: function (e) {
              return e
                ? ((this._private.multiClickDebounceTime = e), this)
                : this._private.multiClickDebounceTime;
            },
          };
        (sc.centre = sc.center),
          (sc.autolockNodes = sc.autolock),
          (sc.autoungrabifyNodes = sc.autoungrabify);
        var lc = {
          data: gs.data({
            field: "data",
            bindingEvent: "data",
            allowBinding: !0,
            allowSetting: !0,
            settingEvent: "data",
            settingTriggersEvent: !0,
            triggerFnName: "trigger",
            allowGetting: !0,
            updateStyle: !0,
          }),
          removeData: gs.removeData({
            field: "data",
            event: "data",
            triggerFnName: "trigger",
            triggerEvent: !0,
            updateStyle: !0,
          }),
          scratch: gs.data({
            field: "scratch",
            bindingEvent: "scratch",
            allowBinding: !0,
            allowSetting: !0,
            settingEvent: "scratch",
            settingTriggersEvent: !0,
            triggerFnName: "trigger",
            allowGetting: !0,
            updateStyle: !0,
          }),
          removeScratch: gs.removeData({
            field: "scratch",
            event: "scratch",
            triggerFnName: "trigger",
            triggerEvent: !0,
            updateStyle: !0,
          }),
        };
        (lc.attr = lc.data), (lc.removeAttr = lc.removeData);
        var uc = function (e) {
            var t = this,
              n = (e = ee({}, e)).container;
            n && !A(n) && A(n[0]) && (n = n[0]);
            var r = n ? n._cyreg : null;
            (r = r || {}) && r.cy && (r.cy.destroy(), (r = {}));
            var i = (r.readies = r.readies || []);
            n && (n._cyreg = r), (r.cy = t);
            var a = void 0 !== g && void 0 !== n && !e.headless,
              o = e;
            (o.layout = ee({ name: a ? "grid" : "null" }, o.layout)),
              (o.renderer = ee({ name: a ? "canvas" : "null" }, o.renderer));
            var s = function (e, t, n) {
                return void 0 !== t ? t : void 0 !== n ? n : e;
              },
              l = (this._private = {
                container: n,
                ready: !1,
                options: o,
                elements: new Tu(this),
                listeners: [],
                aniEles: new Tu(this),
                data: o.data || {},
                scratch: {},
                layout: null,
                renderer: null,
                destroyed: !1,
                notificationsEnabled: !0,
                minZoom: 1e-50,
                maxZoom: 1e50,
                zoomingEnabled: s(!0, o.zoomingEnabled),
                userZoomingEnabled: s(!0, o.userZoomingEnabled),
                panningEnabled: s(!0, o.panningEnabled),
                userPanningEnabled: s(!0, o.userPanningEnabled),
                boxSelectionEnabled: s(!0, o.boxSelectionEnabled),
                autolock: s(!1, o.autolock, o.autolockNodes),
                autoungrabify: s(!1, o.autoungrabify, o.autoungrabifyNodes),
                autounselectify: s(!1, o.autounselectify),
                styleEnabled: void 0 === o.styleEnabled ? a : o.styleEnabled,
                zoom: C(o.zoom) ? o.zoom : 1,
                pan: {
                  x: _(o.pan) && C(o.pan.x) ? o.pan.x : 0,
                  y: _(o.pan) && C(o.pan.y) ? o.pan.y : 0,
                },
                animation: { current: [], queue: [] },
                hasCompoundNodes: !1,
                multiClickDebounceTime: s(250, o.multiClickDebounceTime),
              });
            this.createEmitter(),
              this.selectionType(o.selectionType),
              this.zoomRange({ min: o.minZoom, max: o.maxZoom });
            var u = function (e, t) {
              if (e.some(F)) return Vi.all(e).then(t);
              t(e);
            };
            l.styleEnabled && t.setStyle([]);
            var c = ee({}, o, o.renderer);
            t.initRenderer(c);
            var h = function (e, n, r) {
              t.notifications(!1);
              var i = t.mutableElements();
              i.length > 0 && i.remove(),
                null != e && (_(e) || T(e)) && t.add(e),
                t
                  .one("layoutready", function (e) {
                    t.notifications(!0),
                      t.emit(e),
                      t.one("load", n),
                      t.emitAndNotify("load");
                  })
                  .one("layoutstop", function () {
                    t.one("done", r), t.emit("done");
                  });
              var a = ee({}, t._private.options.layout);
              (a.eles = t.elements()), t.layout(a).run();
            };
            u([o.style, o.elements], function (e) {
              var n = e[0],
                a = e[1];
              l.styleEnabled && t.style().append(n),
                h(
                  a,
                  function () {
                    t.startAnimationLoop(),
                      (l.ready = !0),
                      E(o.ready) && t.on("ready", o.ready);
                    for (var e = 0; e < i.length; e++) {
                      var n = i[e];
                      t.on("ready", n);
                    }
                    r && (r.readies = []), t.emit("ready");
                  },
                  o.done
                );
            });
          },
          cc = uc.prototype;
        ee(cc, {
          instanceString: function () {
            return "core";
          },
          isReady: function () {
            return this._private.ready;
          },
          destroyed: function () {
            return this._private.destroyed;
          },
          ready: function (e) {
            return (
              this.isReady()
                ? this.emitter().emit("ready", [], e)
                : this.on("ready", e),
              this
            );
          },
          destroy: function () {
            var e = this;
            if (!e.destroyed())
              return (
                e.stopAnimationLoop(),
                e.destroyRenderer(),
                this.emit("destroy"),
                (e._private.destroyed = !0),
                e
              );
          },
          hasElementWithId: function (e) {
            return this._private.elements.hasElementWithId(e);
          },
          getElementById: function (e) {
            return this._private.elements.getElementById(e);
          },
          hasCompoundNodes: function () {
            return this._private.hasCompoundNodes;
          },
          headless: function () {
            return this._private.renderer.isHeadless();
          },
          styleEnabled: function () {
            return this._private.styleEnabled;
          },
          addToPool: function (e) {
            return this._private.elements.merge(e), this;
          },
          removeFromPool: function (e) {
            return this._private.elements.unmerge(e), this;
          },
          container: function () {
            return this._private.container || null;
          },
          window: function () {
            if (null == this._private.container) return g;
            var e = this._private.container.ownerDocument;
            return void 0 === e || null == e ? g : e.defaultView || g;
          },
          mount: function (e) {
            if (null != e) {
              var t = this,
                n = t._private,
                r = n.options;
              return (
                !A(e) && A(e[0]) && (e = e[0]),
                t.stopAnimationLoop(),
                t.destroyRenderer(),
                (n.container = e),
                (n.styleEnabled = !0),
                t.invalidateSize(),
                t.initRenderer(
                  ee({}, r, r.renderer, {
                    name:
                      "null" === r.renderer.name ? "canvas" : r.renderer.name,
                  })
                ),
                t.startAnimationLoop(),
                t.style(r.style),
                t.emit("mount"),
                t
              );
            }
          },
          unmount: function () {
            var e = this;
            return (
              e.stopAnimationLoop(),
              e.destroyRenderer(),
              e.initRenderer({ name: "null" }),
              e.emit("unmount"),
              e
            );
          },
          options: function () {
            return Ot(this._private.options);
          },
          json: function (e) {
            var t = this,
              n = t._private,
              r = t.mutableElements(),
              i = function (e) {
                return t.getElementById(e.id());
              };
            if (_(e)) {
              if ((t.startBatch(), e.elements)) {
                var a = {},
                  o = function (e, n) {
                    for (var r = [], i = [], o = 0; o < e.length; o++) {
                      var s = e[o];
                      if (s.data.id) {
                        var l = "" + s.data.id,
                          u = t.getElementById(l);
                        (a[l] = !0),
                          0 !== u.length
                            ? i.push({ ele: u, json: s })
                            : n
                            ? ((s.group = n), r.push(s))
                            : r.push(s);
                      } else
                        Lt(
                          "cy.json() cannot handle elements without an ID attribute"
                        );
                    }
                    t.add(r);
                    for (var c = 0; c < i.length; c++) {
                      var h = i[c],
                        d = h.ele,
                        p = h.json;
                      d.json(p);
                    }
                  };
                if (T(e.elements)) o(e.elements);
                else
                  for (var s = ["nodes", "edges"], l = 0; l < s.length; l++) {
                    var u = s[l],
                      c = e.elements[u];
                    T(c) && o(c, u);
                  }
                var h = t.collection();
                r
                  .filter(function (e) {
                    return !a[e.id()];
                  })
                  .forEach(function (e) {
                    e.isParent() ? h.merge(e) : e.remove();
                  }),
                  h.forEach(function (e) {
                    return e.children().move({ parent: null });
                  }),
                  h.forEach(function (e) {
                    return i(e).remove();
                  });
              }
              e.style && t.style(e.style),
                null != e.zoom && e.zoom !== n.zoom && t.zoom(e.zoom),
                e.pan &&
                  ((e.pan.x === n.pan.x && e.pan.y === n.pan.y) ||
                    t.pan(e.pan)),
                e.data && t.data(e.data);
              for (
                var d = [
                    "minZoom",
                    "maxZoom",
                    "zoomingEnabled",
                    "userZoomingEnabled",
                    "panningEnabled",
                    "userPanningEnabled",
                    "boxSelectionEnabled",
                    "autolock",
                    "autoungrabify",
                    "autounselectify",
                    "multiClickDebounceTime",
                  ],
                  p = 0;
                p < d.length;
                p++
              ) {
                var g = d[p];
                null != e[g] && t[g](e[g]);
              }
              return t.endBatch(), this;
            }
            var f = {};
            e
              ? (f.elements = this.elements().map(function (e) {
                  return e.json();
                }))
              : ((f.elements = {}),
                r.forEach(function (e) {
                  var t = e.group();
                  f.elements[t] || (f.elements[t] = []),
                    f.elements[t].push(e.json());
                })),
              this._private.styleEnabled && (f.style = t.style().json()),
              (f.data = Ot(t.data()));
            var v = n.options;
            return (
              (f.zoomingEnabled = n.zoomingEnabled),
              (f.userZoomingEnabled = n.userZoomingEnabled),
              (f.zoom = n.zoom),
              (f.minZoom = n.minZoom),
              (f.maxZoom = n.maxZoom),
              (f.panningEnabled = n.panningEnabled),
              (f.userPanningEnabled = n.userPanningEnabled),
              (f.pan = Ot(n.pan)),
              (f.boxSelectionEnabled = n.boxSelectionEnabled),
              (f.renderer = Ot(v.renderer)),
              (f.hideEdgesOnViewport = v.hideEdgesOnViewport),
              (f.textureOnViewport = v.textureOnViewport),
              (f.wheelSensitivity = v.wheelSensitivity),
              (f.motionBlur = v.motionBlur),
              (f.multiClickDebounceTime = v.multiClickDebounceTime),
              f
            );
          },
        }),
          (cc.$id = cc.getElementById),
          [Du, Bu, Gu, Yu, Xu, Vu, ju, Hu, ac, sc, lc].forEach(function (e) {
            ee(cc, e);
          });
        var hc = {
            fit: !0,
            directed: !1,
            padding: 30,
            circle: !1,
            grid: !1,
            spacingFactor: 1.75,
            boundingBox: void 0,
            avoidOverlap: !0,
            nodeDimensionsIncludeLabels: !1,
            roots: void 0,
            depthSort: void 0,
            animate: !1,
            animationDuration: 500,
            animationEasing: void 0,
            animateFilter: function (e, t) {
              return !0;
            },
            ready: void 0,
            stop: void 0,
            transform: function (e, t) {
              return t;
            },
          },
          dc = { maximal: !1, acyclic: !1 },
          pc = function (e) {
            return e.scratch("breadthfirst");
          },
          gc = function (e, t) {
            return e.scratch("breadthfirst", t);
          };
        function fc(e) {
          this.options = ee({}, hc, dc, e);
        }
        fc.prototype.run = function () {
          var e,
            t = this.options,
            n = t,
            r = t.cy,
            i = n.eles,
            a = i.nodes().filter(function (e) {
              return !e.isParent();
            }),
            o = i,
            s = n.directed,
            l = n.acyclic || n.maximal || n.maximalAdjustments > 0,
            u = On(
              n.boundingBox
                ? n.boundingBox
                : { x1: 0, y1: 0, w: r.width(), h: r.height() }
            );
          if (L(n.roots)) e = n.roots;
          else if (T(n.roots)) {
            for (var c = [], h = 0; h < n.roots.length; h++) {
              var d = n.roots[h],
                p = r.getElementById(d);
              c.push(p);
            }
            e = r.collection(c);
          } else if (w(n.roots)) e = r.$(n.roots);
          else if (s) e = a.roots();
          else {
            var g = i.components();
            e = r.collection();
            for (
              var f = function (t) {
                  var n = g[t],
                    r = n.maxDegree(!1),
                    i = n.filter(function (e) {
                      return e.degree(!1) === r;
                    });
                  e = e.add(i);
                },
                v = 0;
              v < g.length;
              v++
            )
              f(v);
          }
          var y = [],
            m = {},
            b = function (e, t) {
              null == y[t] && (y[t] = []);
              var n = y[t].length;
              y[t].push(e), gc(e, { index: n, depth: t });
            },
            x = function (e, t) {
              var n = pc(e),
                r = n.depth,
                i = n.index;
              (y[r][i] = null), b(e, t);
            };
          o.bfs({
            roots: e,
            directed: n.directed,
            visit: function (e, t, n, r, i) {
              var a = e[0],
                o = a.id();
              b(a, i), (m[o] = !0);
            },
          });
          for (var E = [], _ = 0; _ < a.length; _++) {
            var D = a[_];
            m[D.id()] || E.push(D);
          }
          var C = function (e) {
              for (var t = y[e], n = 0; n < t.length; n++) {
                var r = t[n];
                null != r
                  ? gc(r, { depth: e, index: n })
                  : (t.splice(n, 1), n--);
              }
            },
            N = function () {
              for (var e = 0; e < y.length; e++) C(e);
            },
            A = function (e, t) {
              for (
                var r = pc(e),
                  a = e.incomers().filter(function (e) {
                    return e.isNode() && i.has(e);
                  }),
                  o = -1,
                  s = e.id(),
                  l = 0;
                l < a.length;
                l++
              ) {
                var u = a[l],
                  c = pc(u);
                o = Math.max(o, c.depth);
              }
              if (r.depth <= o) {
                if (!n.acyclic && t[s]) return null;
                var h = o + 1;
                return x(e, h), (t[s] = h), !0;
              }
              return !1;
            };
          if (s && l) {
            var S = [],
              O = {},
              k = function (e) {
                return S.push(e);
              },
              I = function () {
                return S.shift();
              };
            for (
              a.forEach(function (e) {
                return S.push(e);
              });
              S.length > 0;

            ) {
              var M = I(),
                P = A(M, O);
              if (P)
                M.outgoers()
                  .filter(function (e) {
                    return e.isNode() && i.has(e);
                  })
                  .forEach(k);
              else if (null === P) {
                Lt(
                  "Detected double maximal shift for node `" +
                    M.id() +
                    "`.  Bailing maximal adjustment due to cycle.  Use `options.maximal: true` only on DAGs."
                );
                break;
              }
            }
          }
          N();
          var R = 0;
          if (n.avoidOverlap)
            for (var B = 0; B < a.length; B++) {
              var F = a[B].layoutDimensions(n),
                z = F.w,
                G = F.h;
              R = Math.max(R, z, G);
            }
          var Y = {},
            X = function (e) {
              if (Y[e.id()]) return Y[e.id()];
              for (
                var t = pc(e).depth, n = e.neighborhood(), r = 0, i = 0, o = 0;
                o < n.length;
                o++
              ) {
                var s = n[o];
                if (!s.isEdge() && !s.isParent() && a.has(s)) {
                  var l = pc(s);
                  if (null != l) {
                    var u = l.index,
                      c = l.depth;
                    if (null != u && null != c) {
                      var h = y[c].length;
                      c < t && ((r += u / h), i++);
                    }
                  }
                }
              }
              return (
                (r /= i = Math.max(1, i)),
                0 === i && (r = 0),
                (Y[e.id()] = r),
                r
              );
            },
            V = function (e, t) {
              var n = X(e) - X(t);
              return 0 === n ? Q(e.id(), t.id()) : n;
            };
          void 0 !== n.depthSort && (V = n.depthSort);
          for (var U = 0; U < y.length; U++) y[U].sort(V), C(U);
          for (var j = [], H = 0; H < E.length; H++) j.push(E[H]);
          y.unshift(j), N();
          for (var q = 0, W = 0; W < y.length; W++)
            q = Math.max(y[W].length, q);
          var $ = { x: u.x1 + u.w / 2, y: u.x1 + u.h / 2 },
            K = y.reduce(function (e, t) {
              return Math.max(e, t.length);
            }, 0),
            Z = function (e) {
              var t = pc(e),
                r = t.depth,
                i = t.index,
                a = y[r].length,
                o = Math.max(u.w / ((n.grid ? K : a) + 1), R),
                s = Math.max(u.h / (y.length + 1), R),
                l = Math.min(u.w / 2 / y.length, u.h / 2 / y.length);
              if (((l = Math.max(l, R)), n.circle)) {
                var c =
                    l * r + l - (y.length > 0 && y[0].length <= 3 ? l / 2 : 0),
                  h = ((2 * Math.PI) / y[r].length) * i;
                return (
                  0 === r && 1 === y[0].length && (c = 1),
                  { x: $.x + c * Math.cos(h), y: $.y + c * Math.sin(h) }
                );
              }
              return { x: $.x + (i + 1 - (a + 1) / 2) * o, y: (r + 1) * s };
            };
          return i.nodes().layoutPositions(this, n, Z), this;
        };
        var vc = {
          fit: !0,
          padding: 30,
          boundingBox: void 0,
          avoidOverlap: !0,
          nodeDimensionsIncludeLabels: !1,
          spacingFactor: void 0,
          radius: void 0,
          startAngle: 1.5 * Math.PI,
          sweep: void 0,
          clockwise: !0,
          sort: void 0,
          animate: !1,
          animationDuration: 500,
          animationEasing: void 0,
          animateFilter: function (e, t) {
            return !0;
          },
          ready: void 0,
          stop: void 0,
          transform: function (e, t) {
            return t;
          },
        };
        function yc(e) {
          this.options = ee({}, vc, e);
        }
        yc.prototype.run = function () {
          var e = this.options,
            t = e,
            n = e.cy,
            r = t.eles,
            i =
              void 0 !== t.counterclockwise ? !t.counterclockwise : t.clockwise,
            a = r.nodes().not(":parent");
          t.sort && (a = a.sort(t.sort));
          for (
            var o,
              s = On(
                t.boundingBox
                  ? t.boundingBox
                  : { x1: 0, y1: 0, w: n.width(), h: n.height() }
              ),
              l = { x: s.x1 + s.w / 2, y: s.y1 + s.h / 2 },
              u =
                (void 0 === t.sweep
                  ? 2 * Math.PI - (2 * Math.PI) / a.length
                  : t.sweep) / Math.max(1, a.length - 1),
              c = 0,
              h = 0;
            h < a.length;
            h++
          ) {
            var d = a[h].layoutDimensions(t),
              p = d.w,
              g = d.h;
            c = Math.max(c, p, g);
          }
          if (
            ((o = C(t.radius)
              ? t.radius
              : a.length <= 1
              ? 0
              : Math.min(s.h, s.w) / 2 - c),
            a.length > 1 && t.avoidOverlap)
          ) {
            c *= 1.75;
            var f = Math.cos(u) - Math.cos(0),
              v = Math.sin(u) - Math.sin(0),
              y = Math.sqrt((c * c) / (f * f + v * v));
            o = Math.max(y, o);
          }
          var m = function (e, n) {
            var r = t.startAngle + n * u * (i ? 1 : -1),
              a = o * Math.cos(r),
              s = o * Math.sin(r);
            return { x: l.x + a, y: l.y + s };
          };
          return r.nodes().layoutPositions(this, t, m), this;
        };
        var mc,
          bc = {
            fit: !0,
            padding: 30,
            startAngle: 1.5 * Math.PI,
            sweep: void 0,
            clockwise: !0,
            equidistant: !1,
            minNodeSpacing: 10,
            boundingBox: void 0,
            avoidOverlap: !0,
            nodeDimensionsIncludeLabels: !1,
            height: void 0,
            width: void 0,
            spacingFactor: void 0,
            concentric: function (e) {
              return e.degree();
            },
            levelWidth: function (e) {
              return e.maxDegree() / 4;
            },
            animate: !1,
            animationDuration: 500,
            animationEasing: void 0,
            animateFilter: function (e, t) {
              return !0;
            },
            ready: void 0,
            stop: void 0,
            transform: function (e, t) {
              return t;
            },
          };
        function xc(e) {
          this.options = ee({}, bc, e);
        }
        xc.prototype.run = function () {
          for (
            var e = this.options,
              t = e,
              n =
                void 0 !== t.counterclockwise
                  ? !t.counterclockwise
                  : t.clockwise,
              r = e.cy,
              i = t.eles,
              a = i.nodes().not(":parent"),
              o = On(
                t.boundingBox
                  ? t.boundingBox
                  : { x1: 0, y1: 0, w: r.width(), h: r.height() }
              ),
              s = { x: o.x1 + o.w / 2, y: o.y1 + o.h / 2 },
              l = [],
              u = 0,
              c = 0;
            c < a.length;
            c++
          ) {
            var h = a[c],
              d = void 0;
            (d = t.concentric(h)),
              l.push({ value: d, node: h }),
              (h._private.scratch.concentric = d);
          }
          a.updateStyle();
          for (var p = 0; p < a.length; p++) {
            var g = a[p].layoutDimensions(t);
            u = Math.max(u, g.w, g.h);
          }
          l.sort(function (e, t) {
            return t.value - e.value;
          });
          for (
            var f = t.levelWidth(a), v = [[]], y = v[0], m = 0;
            m < l.length;
            m++
          ) {
            var b = l[m];
            y.length > 0 &&
              Math.abs(y[0].value - b.value) >= f &&
              ((y = []), v.push(y)),
              y.push(b);
          }
          var x = u + t.minNodeSpacing;
          if (!t.avoidOverlap) {
            var w = v.length > 0 && v[0].length > 1,
              E = (Math.min(o.w, o.h) / 2 - x) / (v.length + w ? 1 : 0);
            x = Math.min(x, E);
          }
          for (var T = 0, _ = 0; _ < v.length; _++) {
            var D = v[_],
              C =
                void 0 === t.sweep
                  ? 2 * Math.PI - (2 * Math.PI) / D.length
                  : t.sweep,
              N = (D.dTheta = C / Math.max(1, D.length - 1));
            if (D.length > 1 && t.avoidOverlap) {
              var A = Math.cos(N) - Math.cos(0),
                L = Math.sin(N) - Math.sin(0),
                S = Math.sqrt((x * x) / (A * A + L * L));
              T = Math.max(S, T);
            }
            (D.r = T), (T += x);
          }
          if (t.equidistant) {
            for (var O = 0, k = 0, I = 0; I < v.length; I++) {
              var M = v[I].r - k;
              O = Math.max(O, M);
            }
            k = 0;
            for (var P = 0; P < v.length; P++) {
              var R = v[P];
              0 === P && (k = R.r), (R.r = k), (k += O);
            }
          }
          for (var B = {}, F = 0; F < v.length; F++)
            for (
              var z = v[F], G = z.dTheta, Y = z.r, X = 0;
              X < z.length;
              X++
            ) {
              var V = z[X],
                U = t.startAngle + (n ? 1 : -1) * G * X,
                j = { x: s.x + Y * Math.cos(U), y: s.y + Y * Math.sin(U) };
              B[V.node.id()] = j;
            }
          return (
            i.nodes().layoutPositions(this, t, function (e) {
              var t = e.id();
              return B[t];
            }),
            this
          );
        };
        var wc = {
          ready: function () {},
          stop: function () {},
          animate: !0,
          animationEasing: void 0,
          animationDuration: void 0,
          animateFilter: function (e, t) {
            return !0;
          },
          animationThreshold: 250,
          refresh: 20,
          fit: !0,
          padding: 30,
          boundingBox: void 0,
          nodeDimensionsIncludeLabels: !1,
          randomize: !1,
          componentSpacing: 40,
          nodeRepulsion: function (e) {
            return 2048;
          },
          nodeOverlap: 4,
          idealEdgeLength: function (e) {
            return 32;
          },
          edgeElasticity: function (e) {
            return 32;
          },
          nestingFactor: 1.2,
          gravity: 1,
          numIter: 1e3,
          initialTemp: 1e3,
          coolingFactor: 0.99,
          minTemp: 1,
        };
        function Ec(e) {
          (this.options = ee({}, wc, e)), (this.options.layout = this);
          var t = this.options.eles.nodes(),
            n = this.options.eles.edges().filter(function (e) {
              var n = e.source().data("id"),
                r = e.target().data("id"),
                i = t.some(function (e) {
                  return e.data("id") === n;
                }),
                a = t.some(function (e) {
                  return e.data("id") === r;
                });
              return !i || !a;
            });
          this.options.eles = this.options.eles.not(n);
        }
        (Ec.prototype.run = function () {
          var e = this.options,
            t = e.cy,
            n = this;
          (n.stopped = !1),
            (!0 !== e.animate && !1 !== e.animate) ||
              n.emit({ type: "layoutstart", layout: n }),
            (mc = !0 === e.debug);
          var r = _c(t, n, e);
          mc && Tc(r), e.randomize && Nc(r);
          var i = at(),
            a = function () {
              Lc(r, t, e), !0 === e.fit && t.fit(e.padding);
            },
            o = function (t) {
              return !(
                n.stopped ||
                t >= e.numIter ||
                (Sc(r, e),
                (r.temperature = r.temperature * e.coolingFactor),
                r.temperature < e.minTemp)
              );
            },
            s = function () {
              if (!0 === e.animate || !1 === e.animate)
                a(),
                  n.one("layoutstop", e.stop),
                  n.emit({ type: "layoutstop", layout: n });
              else {
                var t = e.eles.nodes(),
                  i = Ac(r, e, t);
                t.layoutPositions(n, e, i);
              }
            },
            l = 0,
            u = !0;
          if (!0 === e.animate)
            !(function t() {
              for (var n = 0; u && n < e.refresh; ) (u = o(l)), l++, n++;
              u
                ? (at() - i >= e.animationThreshold && a(), it(t))
                : (Xc(r, e), s());
            })();
          else {
            for (; u; ) (u = o(l)), l++;
            Xc(r, e), s();
          }
          return this;
        }),
          (Ec.prototype.stop = function () {
            return (
              (this.stopped = !0),
              this.thread && this.thread.stop(),
              this.emit("layoutstop"),
              this
            );
          }),
          (Ec.prototype.destroy = function () {
            return this.thread && this.thread.stop(), this;
          });
        var Tc,
          _c = function (e, t, n) {
            for (
              var r = n.eles.edges(),
                i = n.eles.nodes(),
                a = On(
                  n.boundingBox
                    ? n.boundingBox
                    : { x1: 0, y1: 0, w: e.width(), h: e.height() }
                ),
                o = {
                  isCompound: e.hasCompoundNodes(),
                  layoutNodes: [],
                  idToIndex: {},
                  nodeSize: i.size(),
                  graphSet: [],
                  indexToGraph: [],
                  layoutEdges: [],
                  edgeSize: r.size(),
                  temperature: n.initialTemp,
                  clientWidth: a.w,
                  clientHeight: a.h,
                  boundingBox: a,
                },
                s = n.eles.components(),
                l = {},
                u = 0;
              u < s.length;
              u++
            )
              for (var c = s[u], h = 0; h < c.length; h++) l[c[h].id()] = u;
            for (u = 0; u < o.nodeSize; u++) {
              var d = (y = i[u]).layoutDimensions(n);
              ((M = {}).isLocked = y.locked()),
                (M.id = y.data("id")),
                (M.parentId = y.data("parent")),
                (M.cmptId = l[y.id()]),
                (M.children = []),
                (M.positionX = y.position("x")),
                (M.positionY = y.position("y")),
                (M.offsetX = 0),
                (M.offsetY = 0),
                (M.height = d.w),
                (M.width = d.h),
                (M.maxX = M.positionX + M.width / 2),
                (M.minX = M.positionX - M.width / 2),
                (M.maxY = M.positionY + M.height / 2),
                (M.minY = M.positionY - M.height / 2),
                (M.padLeft = parseFloat(y.style("padding"))),
                (M.padRight = parseFloat(y.style("padding"))),
                (M.padTop = parseFloat(y.style("padding"))),
                (M.padBottom = parseFloat(y.style("padding"))),
                (M.nodeRepulsion = E(n.nodeRepulsion)
                  ? n.nodeRepulsion(y)
                  : n.nodeRepulsion),
                o.layoutNodes.push(M),
                (o.idToIndex[M.id] = u);
            }
            var p = [],
              g = 0,
              f = -1,
              v = [];
            for (u = 0; u < o.nodeSize; u++) {
              var y,
                m = (y = o.layoutNodes[u]).parentId;
              null != m
                ? o.layoutNodes[o.idToIndex[m]].children.push(y.id)
                : ((p[++f] = y.id), v.push(y.id));
            }
            for (o.graphSet.push(v); g <= f; ) {
              var b = p[g++],
                x = o.idToIndex[b],
                w = o.layoutNodes[x].children;
              if (w.length > 0)
                for (o.graphSet.push(w), u = 0; u < w.length; u++)
                  p[++f] = w[u];
            }
            for (u = 0; u < o.graphSet.length; u++) {
              var T = o.graphSet[u];
              for (h = 0; h < T.length; h++) {
                var _ = o.idToIndex[T[h]];
                o.indexToGraph[_] = u;
              }
            }
            for (u = 0; u < o.edgeSize; u++) {
              var D = r[u],
                C = {};
              (C.id = D.data("id")),
                (C.sourceId = D.data("source")),
                (C.targetId = D.data("target"));
              var N = E(n.idealEdgeLength)
                  ? n.idealEdgeLength(D)
                  : n.idealEdgeLength,
                A = E(n.edgeElasticity)
                  ? n.edgeElasticity(D)
                  : n.edgeElasticity,
                L = o.idToIndex[C.sourceId],
                S = o.idToIndex[C.targetId];
              if (o.indexToGraph[L] != o.indexToGraph[S]) {
                for (
                  var O = Dc(C.sourceId, C.targetId, o),
                    k = o.graphSet[O],
                    I = 0,
                    M = o.layoutNodes[L];
                  -1 === k.indexOf(M.id);

                )
                  (M = o.layoutNodes[o.idToIndex[M.parentId]]), I++;
                for (M = o.layoutNodes[S]; -1 === k.indexOf(M.id); )
                  (M = o.layoutNodes[o.idToIndex[M.parentId]]), I++;
                N *= I * n.nestingFactor;
              }
              (C.idealLength = N), (C.elasticity = A), o.layoutEdges.push(C);
            }
            return o;
          },
          Dc = function (e, t, n) {
            var r = Cc(e, t, 0, n);
            return 2 > r.count ? 0 : r.graph;
          },
          Cc = function e(t, n, r, i) {
            var a = i.graphSet[r];
            if (-1 < a.indexOf(t) && -1 < a.indexOf(n))
              return { count: 2, graph: r };
            for (var o = 0, s = 0; s < a.length; s++) {
              var l = a[s],
                u = i.idToIndex[l],
                c = i.layoutNodes[u].children;
              if (0 !== c.length) {
                var h = e(t, n, i.indexToGraph[i.idToIndex[c[0]]], i);
                if (0 !== h.count) {
                  if (1 !== h.count) return h;
                  if (2 == ++o) break;
                }
              }
            }
            return { count: o, graph: r };
          },
          Nc = function (e, t) {
            for (
              var n = e.clientWidth, r = e.clientHeight, i = 0;
              i < e.nodeSize;
              i++
            ) {
              var a = e.layoutNodes[i];
              0 !== a.children.length ||
                a.isLocked ||
                ((a.positionX = Math.random() * n),
                (a.positionY = Math.random() * r));
            }
          },
          Ac = function (e, t, n) {
            var r = e.boundingBox,
              i = { x1: 1 / 0, x2: -1 / 0, y1: 1 / 0, y2: -1 / 0 };
            return (
              t.boundingBox &&
                (n.forEach(function (t) {
                  var n = e.layoutNodes[e.idToIndex[t.data("id")]];
                  (i.x1 = Math.min(i.x1, n.positionX)),
                    (i.x2 = Math.max(i.x2, n.positionX)),
                    (i.y1 = Math.min(i.y1, n.positionY)),
                    (i.y2 = Math.max(i.y2, n.positionY));
                }),
                (i.w = i.x2 - i.x1),
                (i.h = i.y2 - i.y1)),
              function (n, a) {
                var o = e.layoutNodes[e.idToIndex[n.data("id")]];
                if (t.boundingBox) {
                  var s = (o.positionX - i.x1) / i.w,
                    l = (o.positionY - i.y1) / i.h;
                  return { x: r.x1 + s * r.w, y: r.y1 + l * r.h };
                }
                return { x: o.positionX, y: o.positionY };
              }
            );
          },
          Lc = function (e, t, n) {
            var r = n.layout,
              i = n.eles.nodes(),
              a = Ac(e, n, i);
            i.positions(a),
              !0 !== e.ready &&
                ((e.ready = !0),
                r.one("layoutready", n.ready),
                r.emit({ type: "layoutready", layout: this }));
          },
          Sc = function (e, t, n) {
            Oc(e, t), Rc(e), Bc(e, t), Fc(e), zc(e);
          },
          Oc = function (e, t) {
            for (var n = 0; n < e.graphSet.length; n++)
              for (var r = e.graphSet[n], i = r.length, a = 0; a < i; a++)
                for (
                  var o = e.layoutNodes[e.idToIndex[r[a]]], s = a + 1;
                  s < i;
                  s++
                ) {
                  var l = e.layoutNodes[e.idToIndex[r[s]]];
                  Ic(o, l, e, t);
                }
          },
          kc = function (e) {
            return -e + 2 * e * Math.random();
          },
          Ic = function (e, t, n, r) {
            if (e.cmptId === t.cmptId || n.isCompound) {
              var i = t.positionX - e.positionX,
                a = t.positionY - e.positionY,
                o = 1;
              0 === i && 0 === a && ((i = kc(o)), (a = kc(o)));
              var s = Mc(e, t, i, a);
              if (s > 0)
                var l =
                    ((c = r.nodeOverlap * s) * i) /
                    (v = Math.sqrt(i * i + a * a)),
                  u = (c * a) / v;
              else {
                var c,
                  h = Pc(e, i, a),
                  d = Pc(t, -1 * i, -1 * a),
                  p = d.x - h.x,
                  g = d.y - h.y,
                  f = p * p + g * g,
                  v = Math.sqrt(f);
                (l = ((c = (e.nodeRepulsion + t.nodeRepulsion) / f) * p) / v),
                  (u = (c * g) / v);
              }
              e.isLocked || ((e.offsetX -= l), (e.offsetY -= u)),
                t.isLocked || ((t.offsetX += l), (t.offsetY += u));
            }
          },
          Mc = function (e, t, n, r) {
            if (n > 0) var i = e.maxX - t.minX;
            else i = t.maxX - e.minX;
            if (r > 0) var a = e.maxY - t.minY;
            else a = t.maxY - e.minY;
            return i >= 0 && a >= 0 ? Math.sqrt(i * i + a * a) : 0;
          },
          Pc = function (e, t, n) {
            var r = e.positionX,
              i = e.positionY,
              a = e.height || 1,
              o = e.width || 1,
              s = n / t,
              l = a / o,
              u = {};
            return (0 === t && 0 < n) || (0 === t && 0 > n)
              ? ((u.x = r), (u.y = i + a / 2), u)
              : 0 < t && -1 * l <= s && s <= l
              ? ((u.x = r + o / 2), (u.y = i + (o * n) / 2 / t), u)
              : 0 > t && -1 * l <= s && s <= l
              ? ((u.x = r - o / 2), (u.y = i - (o * n) / 2 / t), u)
              : 0 < n && (s <= -1 * l || s >= l)
              ? ((u.x = r + (a * t) / 2 / n), (u.y = i + a / 2), u)
              : 0 > n && (s <= -1 * l || s >= l)
              ? ((u.x = r - (a * t) / 2 / n), (u.y = i - a / 2), u)
              : u;
          },
          Rc = function (e, t) {
            for (var n = 0; n < e.edgeSize; n++) {
              var r = e.layoutEdges[n],
                i = e.idToIndex[r.sourceId],
                a = e.layoutNodes[i],
                o = e.idToIndex[r.targetId],
                s = e.layoutNodes[o],
                l = s.positionX - a.positionX,
                u = s.positionY - a.positionY;
              if (0 !== l || 0 !== u) {
                var c = Pc(a, l, u),
                  h = Pc(s, -1 * l, -1 * u),
                  d = h.x - c.x,
                  p = h.y - c.y,
                  g = Math.sqrt(d * d + p * p),
                  f = Math.pow(r.idealLength - g, 2) / r.elasticity;
                if (0 !== g)
                  var v = (f * d) / g,
                    y = (f * p) / g;
                else (v = 0), (y = 0);
                a.isLocked || ((a.offsetX += v), (a.offsetY += y)),
                  s.isLocked || ((s.offsetX -= v), (s.offsetY -= y));
              }
            }
          },
          Bc = function (e, t) {
            if (0 !== t.gravity)
              for (var n = 1, r = 0; r < e.graphSet.length; r++) {
                var i = e.graphSet[r],
                  a = i.length;
                if (0 === r)
                  var o = e.clientHeight / 2,
                    s = e.clientWidth / 2;
                else {
                  var l = e.layoutNodes[e.idToIndex[i[0]]],
                    u = e.layoutNodes[e.idToIndex[l.parentId]];
                  (o = u.positionX), (s = u.positionY);
                }
                for (var c = 0; c < a; c++) {
                  var h = e.layoutNodes[e.idToIndex[i[c]]];
                  if (!h.isLocked) {
                    var d = o - h.positionX,
                      p = s - h.positionY,
                      g = Math.sqrt(d * d + p * p);
                    if (g > n) {
                      var f = (t.gravity * d) / g,
                        v = (t.gravity * p) / g;
                      (h.offsetX += f), (h.offsetY += v);
                    }
                  }
                }
              }
          },
          Fc = function (e, t) {
            var n = [],
              r = 0,
              i = -1;
            for (
              n.push.apply(n, e.graphSet[0]), i += e.graphSet[0].length;
              r <= i;

            ) {
              var a = n[r++],
                o = e.idToIndex[a],
                s = e.layoutNodes[o],
                l = s.children;
              if (0 < l.length && !s.isLocked) {
                for (
                  var u = s.offsetX, c = s.offsetY, h = 0;
                  h < l.length;
                  h++
                ) {
                  var d = e.layoutNodes[e.idToIndex[l[h]]];
                  (d.offsetX += u), (d.offsetY += c), (n[++i] = l[h]);
                }
                (s.offsetX = 0), (s.offsetY = 0);
              }
            }
          },
          zc = function (e, t) {
            for (var n = 0; n < e.nodeSize; n++)
              0 < (i = e.layoutNodes[n]).children.length &&
                ((i.maxX = void 0),
                (i.minX = void 0),
                (i.maxY = void 0),
                (i.minY = void 0));
            for (n = 0; n < e.nodeSize; n++)
              if (!(0 < (i = e.layoutNodes[n]).children.length || i.isLocked)) {
                var r = Gc(i.offsetX, i.offsetY, e.temperature);
                (i.positionX += r.x),
                  (i.positionY += r.y),
                  (i.offsetX = 0),
                  (i.offsetY = 0),
                  (i.minX = i.positionX - i.width),
                  (i.maxX = i.positionX + i.width),
                  (i.minY = i.positionY - i.height),
                  (i.maxY = i.positionY + i.height),
                  Yc(i, e);
              }
            for (n = 0; n < e.nodeSize; n++) {
              var i;
              0 < (i = e.layoutNodes[n]).children.length &&
                !i.isLocked &&
                ((i.positionX = (i.maxX + i.minX) / 2),
                (i.positionY = (i.maxY + i.minY) / 2),
                (i.width = i.maxX - i.minX),
                (i.height = i.maxY - i.minY));
            }
          },
          Gc = function (e, t, n) {
            var r = Math.sqrt(e * e + t * t);
            if (r > n) var i = { x: (n * e) / r, y: (n * t) / r };
            else i = { x: e, y: t };
            return i;
          },
          Yc = function e(t, n) {
            var r = t.parentId;
            if (null != r) {
              var i = n.layoutNodes[n.idToIndex[r]],
                a = !1;
              return (
                (null == i.maxX || t.maxX + i.padRight > i.maxX) &&
                  ((i.maxX = t.maxX + i.padRight), (a = !0)),
                (null == i.minX || t.minX - i.padLeft < i.minX) &&
                  ((i.minX = t.minX - i.padLeft), (a = !0)),
                (null == i.maxY || t.maxY + i.padBottom > i.maxY) &&
                  ((i.maxY = t.maxY + i.padBottom), (a = !0)),
                (null == i.minY || t.minY - i.padTop < i.minY) &&
                  ((i.minY = t.minY - i.padTop), (a = !0)),
                a ? e(i, n) : void 0
              );
            }
          },
          Xc = function (e, t) {
            for (var n = e.layoutNodes, r = [], i = 0; i < n.length; i++) {
              var a = n[i],
                o = a.cmptId;
              (r[o] = r[o] || []).push(a);
            }
            var s = 0;
            for (i = 0; i < r.length; i++)
              if ((f = r[i])) {
                (f.x1 = 1 / 0),
                  (f.x2 = -1 / 0),
                  (f.y1 = 1 / 0),
                  (f.y2 = -1 / 0);
                for (var l = 0; l < f.length; l++) {
                  var u = f[l];
                  (f.x1 = Math.min(f.x1, u.positionX - u.width / 2)),
                    (f.x2 = Math.max(f.x2, u.positionX + u.width / 2)),
                    (f.y1 = Math.min(f.y1, u.positionY - u.height / 2)),
                    (f.y2 = Math.max(f.y2, u.positionY + u.height / 2));
                }
                (f.w = f.x2 - f.x1), (f.h = f.y2 - f.y1), (s += f.w * f.h);
              }
            r.sort(function (e, t) {
              return t.w * t.h - e.w * e.h;
            });
            var c = 0,
              h = 0,
              d = 0,
              p = 0,
              g = (Math.sqrt(s) * e.clientWidth) / e.clientHeight;
            for (i = 0; i < r.length; i++) {
              var f;
              if ((f = r[i])) {
                for (l = 0; l < f.length; l++)
                  (u = f[l]).isLocked ||
                    ((u.positionX += c - f.x1), (u.positionY += h - f.y1));
                (c += f.w + t.componentSpacing),
                  (d += f.w + t.componentSpacing),
                  (p = Math.max(p, f.h)),
                  d > g &&
                    ((h += p + t.componentSpacing), (c = 0), (d = 0), (p = 0));
              }
            }
          },
          Vc = {
            fit: !0,
            padding: 30,
            boundingBox: void 0,
            avoidOverlap: !0,
            avoidOverlapPadding: 10,
            nodeDimensionsIncludeLabels: !1,
            spacingFactor: void 0,
            condense: !1,
            rows: void 0,
            cols: void 0,
            position: function (e) {},
            sort: void 0,
            animate: !1,
            animationDuration: 500,
            animationEasing: void 0,
            animateFilter: function (e, t) {
              return !0;
            },
            ready: void 0,
            stop: void 0,
            transform: function (e, t) {
              return t;
            },
          };
        function Uc(e) {
          this.options = ee({}, Vc, e);
        }
        Uc.prototype.run = function () {
          var e = this.options,
            t = e,
            n = e.cy,
            r = t.eles,
            i = r.nodes().not(":parent");
          t.sort && (i = i.sort(t.sort));
          var a = On(
            t.boundingBox
              ? t.boundingBox
              : { x1: 0, y1: 0, w: n.width(), h: n.height() }
          );
          if (0 === a.h || 0 === a.w)
            r.nodes().layoutPositions(this, t, function (e) {
              return { x: a.x1, y: a.y1 };
            });
          else {
            var o = i.size(),
              s = Math.sqrt((o * a.h) / a.w),
              l = Math.round(s),
              u = Math.round((a.w / a.h) * s),
              c = function (e) {
                if (null == e) return Math.min(l, u);
                Math.min(l, u) == l ? (l = e) : (u = e);
              },
              h = function (e) {
                if (null == e) return Math.max(l, u);
                Math.max(l, u) == l ? (l = e) : (u = e);
              },
              d = t.rows,
              p = null != t.cols ? t.cols : t.columns;
            if (null != d && null != p) (l = d), (u = p);
            else if (null != d && null == p) (l = d), (u = Math.ceil(o / l));
            else if (null == d && null != p) (u = p), (l = Math.ceil(o / u));
            else if (u * l > o) {
              var g = c(),
                f = h();
              (g - 1) * f >= o ? c(g - 1) : (f - 1) * g >= o && h(f - 1);
            } else
              for (; u * l < o; ) {
                var v = c(),
                  y = h();
                (y + 1) * v >= o ? h(y + 1) : c(v + 1);
              }
            var m = a.w / u,
              b = a.h / l;
            if ((t.condense && ((m = 0), (b = 0)), t.avoidOverlap))
              for (var x = 0; x < i.length; x++) {
                var w = i[x],
                  E = w._private.position;
                (null != E.x && null != E.y) || ((E.x = 0), (E.y = 0));
                var T = w.layoutDimensions(t),
                  _ = t.avoidOverlapPadding,
                  D = T.w + _,
                  C = T.h + _;
                (m = Math.max(m, D)), (b = Math.max(b, C));
              }
            for (
              var N = {},
                A = function (e, t) {
                  return !!N["c-" + e + "-" + t];
                },
                L = function (e, t) {
                  N["c-" + e + "-" + t] = !0;
                },
                S = 0,
                O = 0,
                k = function () {
                  ++O >= u && ((O = 0), S++);
                },
                I = {},
                M = 0;
              M < i.length;
              M++
            ) {
              var P = i[M],
                R = t.position(P);
              if (R && (void 0 !== R.row || void 0 !== R.col)) {
                var B = { row: R.row, col: R.col };
                if (void 0 === B.col)
                  for (B.col = 0; A(B.row, B.col); ) B.col++;
                else if (void 0 === B.row)
                  for (B.row = 0; A(B.row, B.col); ) B.row++;
                (I[P.id()] = B), L(B.row, B.col);
              }
            }
            var F = function (e, t) {
              var n, r;
              if (e.locked() || e.isParent()) return !1;
              var i = I[e.id()];
              if (i)
                (n = i.col * m + m / 2 + a.x1), (r = i.row * b + b / 2 + a.y1);
              else {
                for (; A(S, O); ) k();
                (n = O * m + m / 2 + a.x1),
                  (r = S * b + b / 2 + a.y1),
                  L(S, O),
                  k();
              }
              return { x: n, y: r };
            };
            i.layoutPositions(this, t, F);
          }
          return this;
        };
        var jc = { ready: function () {}, stop: function () {} };
        function Hc(e) {
          this.options = ee({}, jc, e);
        }
        (Hc.prototype.run = function () {
          var e = this.options,
            t = e.eles,
            n = this;
          return (
            e.cy,
            n.emit("layoutstart"),
            t.nodes().positions(function () {
              return { x: 0, y: 0 };
            }),
            n.one("layoutready", e.ready),
            n.emit("layoutready"),
            n.one("layoutstop", e.stop),
            n.emit("layoutstop"),
            this
          );
        }),
          (Hc.prototype.stop = function () {
            return this;
          });
        var qc = {
          positions: void 0,
          zoom: void 0,
          pan: void 0,
          fit: !0,
          padding: 30,
          spacingFactor: void 0,
          animate: !1,
          animationDuration: 500,
          animationEasing: void 0,
          animateFilter: function (e, t) {
            return !0;
          },
          ready: void 0,
          stop: void 0,
          transform: function (e, t) {
            return t;
          },
        };
        function Wc(e) {
          this.options = ee({}, qc, e);
        }
        Wc.prototype.run = function () {
          var e = this.options,
            t = e.eles.nodes(),
            n = E(e.positions);
          function r(t) {
            if (null == e.positions) return dn(t.position());
            if (n) return e.positions(t);
            var r = e.positions[t._private.data.id];
            return null == r ? null : r;
          }
          return (
            t.layoutPositions(this, e, function (e, t) {
              var n = r(e);
              return !e.locked() && null != n && n;
            }),
            this
          );
        };
        var $c = {
          fit: !0,
          padding: 30,
          boundingBox: void 0,
          animate: !1,
          animationDuration: 500,
          animationEasing: void 0,
          animateFilter: function (e, t) {
            return !0;
          },
          ready: void 0,
          stop: void 0,
          transform: function (e, t) {
            return t;
          },
        };
        function Kc(e) {
          this.options = ee({}, $c, e);
        }
        Kc.prototype.run = function () {
          var e = this.options,
            t = e.cy,
            n = e.eles,
            r = On(
              e.boundingBox
                ? e.boundingBox
                : { x1: 0, y1: 0, w: t.width(), h: t.height() }
            ),
            i = function (e, t) {
              return {
                x: r.x1 + Math.round(Math.random() * r.w),
                y: r.y1 + Math.round(Math.random() * r.h),
              };
            };
          return n.nodes().layoutPositions(this, e, i), this;
        };
        var Zc = [
          { name: "breadthfirst", impl: fc },
          { name: "circle", impl: yc },
          { name: "concentric", impl: xc },
          { name: "cose", impl: Ec },
          { name: "grid", impl: Uc },
          { name: "null", impl: Hc },
          { name: "preset", impl: Wc },
          { name: "random", impl: Kc },
        ];
        function Qc(e) {
          (this.options = e), (this.notifications = 0);
        }
        var Jc = function () {},
          eh = function () {
            throw new Error("A headless instance can not render images");
          };
        Qc.prototype = {
          recalculateRenderedStyle: Jc,
          notify: function () {
            this.notifications++;
          },
          init: Jc,
          isHeadless: function () {
            return !0;
          },
          png: eh,
          jpg: eh,
        };
        var th = {
            arrowShapeWidth: 0.3,
            registerArrowShapes: function () {
              var e = (this.arrowShapes = {}),
                t = this,
                n = function (e, t, n, r, i, a, o) {
                  var s = i.x - n / 2 - o,
                    l = i.x + n / 2 + o,
                    u = i.y - n / 2 - o,
                    c = i.y + n / 2 + o;
                  return s <= e && e <= l && u <= t && t <= c;
                },
                r = function (e, t, n, r, i) {
                  var a = e * Math.cos(r) - t * Math.sin(r),
                    o = (e * Math.sin(r) + t * Math.cos(r)) * n;
                  return { x: a * n + i.x, y: o + i.y };
                },
                i = function (e, t, n, i) {
                  for (var a = [], o = 0; o < e.length; o += 2) {
                    var s = e[o],
                      l = e[o + 1];
                    a.push(r(s, l, t, n, i));
                  }
                  return a;
                },
                a = function (e) {
                  for (var t = [], n = 0; n < e.length; n++) {
                    var r = e[n];
                    t.push(r.x, r.y);
                  }
                  return t;
                },
                o = function (e) {
                  return (
                    e.pstyle("width").pfValue *
                    e.pstyle("arrow-scale").pfValue *
                    2
                  );
                },
                s = function (r, s) {
                  w(s) && (s = e[s]),
                    (e[r] = ee(
                      {
                        name: r,
                        points: [
                          -0.15, -0.3, 0.15, -0.3, 0.15, 0.3, -0.15, 0.3,
                        ],
                        collide: function (e, t, n, r, o, s) {
                          var l = a(i(this.points, n + 2 * s, r, o));
                          return Zn(e, t, l);
                        },
                        roughCollide: n,
                        draw: function (e, n, r, a) {
                          var o = i(this.points, n, r, a);
                          t.arrowShapeImpl("polygon")(e, o);
                        },
                        spacing: function (e) {
                          return 0;
                        },
                        gap: o,
                      },
                      s
                    ));
                };
              s("none", {
                collide: _t,
                roughCollide: _t,
                draw: Ct,
                spacing: Dt,
                gap: Dt,
              }),
                s("triangle", { points: [-0.15, -0.3, 0, 0, 0.15, -0.3] }),
                s("arrow", "triangle"),
                s("triangle-backcurve", {
                  points: e.triangle.points,
                  controlPoint: [0, -0.15],
                  roughCollide: n,
                  draw: function (e, n, a, o, s) {
                    var l = i(this.points, n, a, o),
                      u = this.controlPoint,
                      c = r(u[0], u[1], n, a, o);
                    t.arrowShapeImpl(this.name)(e, l, c);
                  },
                  gap: function (e) {
                    return 0.8 * o(e);
                  },
                }),
                s("triangle-tee", {
                  points: [0, 0, 0.15, -0.3, -0.15, -0.3, 0, 0],
                  pointsTee: [-0.15, -0.4, -0.15, -0.5, 0.15, -0.5, 0.15, -0.4],
                  collide: function (e, t, n, r, o, s, l) {
                    var u = a(i(this.points, n + 2 * l, r, o)),
                      c = a(i(this.pointsTee, n + 2 * l, r, o));
                    return Zn(e, t, u) || Zn(e, t, c);
                  },
                  draw: function (e, n, r, a, o) {
                    var s = i(this.points, n, r, a),
                      l = i(this.pointsTee, n, r, a);
                    t.arrowShapeImpl(this.name)(e, s, l);
                  },
                }),
                s("circle-triangle", {
                  radius: 0.15,
                  pointsTr: [0, -0.15, 0.15, -0.45, -0.15, -0.45, 0, -0.15],
                  collide: function (e, t, n, r, o, s, l) {
                    var u = o,
                      c =
                        Math.pow(u.x - e, 2) + Math.pow(u.y - t, 2) <=
                        Math.pow((n + 2 * l) * this.radius, 2),
                      h = a(i(this.points, n + 2 * l, r, o));
                    return Zn(e, t, h) || c;
                  },
                  draw: function (e, n, r, a, o) {
                    var s = i(this.pointsTr, n, r, a);
                    t.arrowShapeImpl(this.name)(
                      e,
                      s,
                      a.x,
                      a.y,
                      this.radius * n
                    );
                  },
                  spacing: function (e) {
                    return (
                      t.getArrowWidth(
                        e.pstyle("width").pfValue,
                        e.pstyle("arrow-scale").value
                      ) * this.radius
                    );
                  },
                }),
                s("triangle-cross", {
                  points: [0, 0, 0.15, -0.3, -0.15, -0.3, 0, 0],
                  baseCrossLinePts: [
                    -0.15, -0.4, -0.15, -0.4, 0.15, -0.4, 0.15, -0.4,
                  ],
                  crossLinePts: function (e, t) {
                    var n = this.baseCrossLinePts.slice(),
                      r = t / e,
                      i = 3,
                      a = 5;
                    return (n[i] = n[i] - r), (n[a] = n[a] - r), n;
                  },
                  collide: function (e, t, n, r, o, s, l) {
                    var u = a(i(this.points, n + 2 * l, r, o)),
                      c = a(i(this.crossLinePts(n, s), n + 2 * l, r, o));
                    return Zn(e, t, u) || Zn(e, t, c);
                  },
                  draw: function (e, n, r, a, o) {
                    var s = i(this.points, n, r, a),
                      l = i(this.crossLinePts(n, o), n, r, a);
                    t.arrowShapeImpl(this.name)(e, s, l);
                  },
                }),
                s("vee", {
                  points: [-0.15, -0.3, 0, 0, 0.15, -0.3, 0, -0.15],
                  gap: function (e) {
                    return 0.525 * o(e);
                  },
                }),
                s("circle", {
                  radius: 0.15,
                  collide: function (e, t, n, r, i, a, o) {
                    var s = i;
                    return (
                      Math.pow(s.x - e, 2) + Math.pow(s.y - t, 2) <=
                      Math.pow((n + 2 * o) * this.radius, 2)
                    );
                  },
                  draw: function (e, n, r, i, a) {
                    t.arrowShapeImpl(this.name)(e, i.x, i.y, this.radius * n);
                  },
                  spacing: function (e) {
                    return (
                      t.getArrowWidth(
                        e.pstyle("width").pfValue,
                        e.pstyle("arrow-scale").value
                      ) * this.radius
                    );
                  },
                }),
                s("tee", {
                  points: [-0.15, 0, -0.15, -0.1, 0.15, -0.1, 0.15, 0],
                  spacing: function (e) {
                    return 1;
                  },
                  gap: function (e) {
                    return 1;
                  },
                }),
                s("square", {
                  points: [-0.15, 0, 0.15, 0, 0.15, -0.3, -0.15, -0.3],
                }),
                s("diamond", {
                  points: [-0.15, -0.15, 0, -0.3, 0.15, -0.15, 0, 0],
                  gap: function (e) {
                    return (
                      e.pstyle("width").pfValue * e.pstyle("arrow-scale").value
                    );
                  },
                }),
                s("chevron", {
                  points: [
                    0, 0, -0.15, -0.15, -0.1, -0.2, 0, -0.1, 0.1, -0.2, 0.15,
                    -0.15,
                  ],
                  gap: function (e) {
                    return (
                      0.95 *
                      e.pstyle("width").pfValue *
                      e.pstyle("arrow-scale").value
                    );
                  },
                });
            },
          },
          nh = {
            projectIntoViewport: function (e, t) {
              var n = this.cy,
                r = this.findContainerClientCoords(),
                i = r[0],
                a = r[1],
                o = r[4],
                s = n.pan(),
                l = n.zoom();
              return [((e - i) / o - s.x) / l, ((t - a) / o - s.y) / l];
            },
            findContainerClientCoords: function () {
              if (this.containerBB) return this.containerBB;
              var e = this.container,
                t = e.getBoundingClientRect(),
                n = this.cy.window().getComputedStyle(e),
                r = function (e) {
                  return parseFloat(n.getPropertyValue(e));
                },
                i = {
                  left: r("padding-left"),
                  right: r("padding-right"),
                  top: r("padding-top"),
                  bottom: r("padding-bottom"),
                },
                a = {
                  left: r("border-left-width"),
                  right: r("border-right-width"),
                  top: r("border-top-width"),
                  bottom: r("border-bottom-width"),
                },
                o = e.clientWidth,
                s = e.clientHeight,
                l = i.left + i.right,
                u = i.top + i.bottom,
                c = a.left + a.right,
                h = t.width / (o + c),
                d = o - l,
                p = s - u,
                g = t.left + i.left + a.left,
                f = t.top + i.top + a.top;
              return (this.containerBB = [g, f, d, p, h]);
            },
            invalidateContainerClientCoordsCache: function () {
              this.containerBB = null;
            },
            findNearestElement: function (e, t, n, r) {
              return this.findNearestElements(e, t, n, r)[0];
            },
            findNearestElements: function (e, t, n, r) {
              var i,
                a,
                o = this,
                s = this,
                l = s.getCachedZSortedEles(),
                u = [],
                c = s.cy.zoom(),
                h = s.cy.hasCompoundNodes(),
                d = (r ? 24 : 8) / c,
                p = (r ? 8 : 2) / c,
                g = (r ? 8 : 2) / c,
                f = 1 / 0;
              function v(e, t) {
                if (e.isNode()) {
                  if (a) return;
                  (a = e), u.push(e);
                }
                if (e.isEdge() && (null == t || t < f))
                  if (i) {
                    if (
                      i.pstyle("z-compound-depth").value ===
                        e.pstyle("z-compound-depth").value &&
                      i.pstyle("z-compound-depth").value ===
                        e.pstyle("z-compound-depth").value
                    )
                      for (var n = 0; n < u.length; n++)
                        if (u[n].isEdge()) {
                          (u[n] = e), (i = e), (f = null != t ? t : f);
                          break;
                        }
                  } else u.push(e), (i = e), (f = null != t ? t : f);
              }
              function y(n) {
                var r = n.outerWidth() + 2 * p,
                  i = n.outerHeight() + 2 * p,
                  a = r / 2,
                  l = i / 2,
                  u = n.position(),
                  c =
                    "auto" === n.pstyle("corner-radius").value
                      ? "auto"
                      : n.pstyle("corner-radius").pfValue,
                  h = n._private.rscratch;
                if (
                  u.x - a <= e &&
                  e <= u.x + a &&
                  u.y - l <= t &&
                  t <= u.y + l &&
                  s.nodeShapes[o.getNodeShape(n)].checkPoint(
                    e,
                    t,
                    0,
                    r,
                    i,
                    u.x,
                    u.y,
                    c,
                    h
                  )
                )
                  return v(n, 0), !0;
              }
              function m(n) {
                var r,
                  i = n._private,
                  a = i.rscratch,
                  l = n.pstyle("width").pfValue,
                  c = n.pstyle("arrow-scale").value,
                  p = l / 2 + d,
                  g = p * p,
                  f = 2 * p,
                  m = i.source,
                  b = i.target;
                if (
                  "segments" === a.edgeType ||
                  "straight" === a.edgeType ||
                  "haystack" === a.edgeType
                ) {
                  for (var x = a.allpts, w = 0; w + 3 < x.length; w += 2)
                    if (
                      jn(e, t, x[w], x[w + 1], x[w + 2], x[w + 3], f) &&
                      g > (r = Kn(e, t, x[w], x[w + 1], x[w + 2], x[w + 3]))
                    )
                      return v(n, r), !0;
                } else if (
                  "bezier" === a.edgeType ||
                  "multibezier" === a.edgeType ||
                  "self" === a.edgeType ||
                  "compound" === a.edgeType
                )
                  for (x = a.allpts, w = 0; w + 5 < a.allpts.length; w += 4)
                    if (
                      Hn(
                        e,
                        t,
                        x[w],
                        x[w + 1],
                        x[w + 2],
                        x[w + 3],
                        x[w + 4],
                        x[w + 5],
                        f
                      ) &&
                      g >
                        (r = $n(
                          e,
                          t,
                          x[w],
                          x[w + 1],
                          x[w + 2],
                          x[w + 3],
                          x[w + 4],
                          x[w + 5]
                        ))
                    )
                      return v(n, r), !0;
                (m = m || i.source), (b = b || i.target);
                var E = o.getArrowWidth(l, c),
                  T = [
                    {
                      name: "source",
                      x: a.arrowStartX,
                      y: a.arrowStartY,
                      angle: a.srcArrowAngle,
                    },
                    {
                      name: "target",
                      x: a.arrowEndX,
                      y: a.arrowEndY,
                      angle: a.tgtArrowAngle,
                    },
                    {
                      name: "mid-source",
                      x: a.midX,
                      y: a.midY,
                      angle: a.midsrcArrowAngle,
                    },
                    {
                      name: "mid-target",
                      x: a.midX,
                      y: a.midY,
                      angle: a.midtgtArrowAngle,
                    },
                  ];
                for (w = 0; w < T.length; w++) {
                  var _ = T[w],
                    D = s.arrowShapes[n.pstyle(_.name + "-arrow-shape").value],
                    C = n.pstyle("width").pfValue;
                  if (
                    D.roughCollide(
                      e,
                      t,
                      E,
                      _.angle,
                      { x: _.x, y: _.y },
                      C,
                      d
                    ) &&
                    D.collide(e, t, E, _.angle, { x: _.x, y: _.y }, C, d)
                  )
                    return v(n), !0;
                }
                h && u.length > 0 && (y(m), y(b));
              }
              function b(e, t, n) {
                return Gt(e, t, n);
              }
              function x(n, r) {
                var i,
                  a = n._private,
                  o = g;
                (i = r ? r + "-" : ""), n.boundingBox();
                var s = a.labelBounds[r || "main"],
                  l = n.pstyle(i + "label").value;
                if ("yes" === n.pstyle("text-events").strValue && l) {
                  var u = b(a.rscratch, "labelX", r),
                    c = b(a.rscratch, "labelY", r),
                    h = b(a.rscratch, "labelAngle", r),
                    d = n.pstyle(i + "text-margin-x").pfValue,
                    p = n.pstyle(i + "text-margin-y").pfValue,
                    f = s.x1 - o - d,
                    y = s.x2 + o - d,
                    m = s.y1 - o - p,
                    x = s.y2 + o - p;
                  if (h) {
                    var w = Math.cos(h),
                      E = Math.sin(h),
                      T = function (e, t) {
                        return {
                          x: (e -= u) * w - (t -= c) * E + u,
                          y: e * E + t * w + c,
                        };
                      },
                      _ = T(f, m),
                      D = T(f, x),
                      C = T(y, m),
                      N = T(y, x),
                      A = [
                        _.x + d,
                        _.y + p,
                        C.x + d,
                        C.y + p,
                        N.x + d,
                        N.y + p,
                        D.x + d,
                        D.y + p,
                      ];
                    if (Zn(e, t, A)) return v(n), !0;
                  } else if (Yn(s, e, t)) return v(n), !0;
                }
              }
              n && (l = l.interactive);
              for (var w = l.length - 1; w >= 0; w--) {
                var E = l[w];
                E.isNode()
                  ? y(E) || x(E)
                  : m(E) || x(E) || x(E, "source") || x(E, "target");
              }
              return u;
            },
            getAllInBox: function (e, t, n, r) {
              for (
                var i = this.getCachedZSortedEles().interactive,
                  a = [],
                  o = Math.min(e, n),
                  s = Math.max(e, n),
                  l = Math.min(t, r),
                  u = Math.max(t, r),
                  c = On({
                    x1: (e = o),
                    y1: (t = l),
                    x2: (n = s),
                    y2: (r = u),
                  }),
                  h = 0;
                h < i.length;
                h++
              ) {
                var d = i[h];
                if (d.isNode()) {
                  var p = d,
                    g = p.boundingBox({
                      includeNodes: !0,
                      includeEdges: !1,
                      includeLabels: !1,
                    });
                  Gn(c, g) && !Vn(g, c) && a.push(p);
                } else {
                  var f = d,
                    v = f._private,
                    y = v.rscratch;
                  if (
                    null != y.startX &&
                    null != y.startY &&
                    !Yn(c, y.startX, y.startY)
                  )
                    continue;
                  if (
                    null != y.endX &&
                    null != y.endY &&
                    !Yn(c, y.endX, y.endY)
                  )
                    continue;
                  if (
                    "bezier" === y.edgeType ||
                    "multibezier" === y.edgeType ||
                    "self" === y.edgeType ||
                    "compound" === y.edgeType ||
                    "segments" === y.edgeType ||
                    "haystack" === y.edgeType
                  ) {
                    for (
                      var m =
                          v.rstyle.bezierPts ||
                          v.rstyle.linePts ||
                          v.rstyle.haystackPts,
                        b = !0,
                        x = 0;
                      x < m.length;
                      x++
                    )
                      if (!Xn(c, m[x])) {
                        b = !1;
                        break;
                      }
                    b && a.push(f);
                  } else
                    ("haystack" !== y.edgeType && "straight" !== y.edgeType) ||
                      a.push(f);
                }
              }
              return a;
            },
          },
          rh = {
            calculateArrowAngles: function (e) {
              var t,
                n,
                r,
                i,
                a,
                o,
                s = e._private.rscratch,
                l = "haystack" === s.edgeType,
                u = "bezier" === s.edgeType,
                c = "multibezier" === s.edgeType,
                h = "segments" === s.edgeType,
                d = "compound" === s.edgeType,
                p = "self" === s.edgeType;
              if (
                (l
                  ? ((r = s.haystackPts[0]),
                    (i = s.haystackPts[1]),
                    (a = s.haystackPts[2]),
                    (o = s.haystackPts[3]))
                  : ((r = s.arrowStartX),
                    (i = s.arrowStartY),
                    (a = s.arrowEndX),
                    (o = s.arrowEndY)),
                (f = s.midX),
                (v = s.midY),
                h)
              )
                (t = r - s.segpts[0]), (n = i - s.segpts[1]);
              else if (c || d || p || u) {
                var g = s.allpts;
                (t = r - Nn(g[0], g[2], g[4], 0.1)),
                  (n = i - Nn(g[1], g[3], g[5], 0.1));
              } else (t = r - f), (n = i - v);
              s.srcArrowAngle = wn(t, n);
              var f = s.midX,
                v = s.midY;
              if (
                (l && ((f = (r + a) / 2), (v = (i + o) / 2)),
                (t = a - r),
                (n = o - i),
                h)
              )
                if (((g = s.allpts).length / 2) % 2 == 0) {
                  var y = (D = g.length / 2) - 2;
                  (t = g[D] - g[y]), (n = g[D + 1] - g[y + 1]);
                } else
                  s.isRound
                    ? ((t = s.midVector[1]), (n = -s.midVector[0]))
                    : ((y = (D = g.length / 2 - 1) - 2),
                      (t = g[D] - g[y]),
                      (n = g[D + 1] - g[y + 1]));
              else if (c || d || p) {
                var m,
                  b,
                  x,
                  w,
                  g = s.allpts;
                if ((s.ctrlpts.length / 2) % 2 == 0) {
                  var E = 2 + (T = 2 + (_ = g.length / 2 - 1));
                  (m = Nn(g[_], g[T], g[E], 0)),
                    (b = Nn(g[_ + 1], g[T + 1], g[E + 1], 0)),
                    (x = Nn(g[_], g[T], g[E], 1e-4)),
                    (w = Nn(g[_ + 1], g[T + 1], g[E + 1], 1e-4));
                } else {
                  var T, _;
                  (E = 2 + (T = g.length / 2 - 1)),
                    (m = Nn(g[(_ = T - 2)], g[T], g[E], 0.4999)),
                    (b = Nn(g[_ + 1], g[T + 1], g[E + 1], 0.4999)),
                    (x = Nn(g[_], g[T], g[E], 0.5)),
                    (w = Nn(g[_ + 1], g[T + 1], g[E + 1], 0.5));
                }
                (t = x - m), (n = w - b);
              }
              if (
                ((s.midtgtArrowAngle = wn(t, n)),
                (s.midDispX = t),
                (s.midDispY = n),
                (t *= -1),
                (n *= -1),
                h)
              )
                if (((g = s.allpts).length / 2) % 2 == 0);
                else if (!s.isRound) {
                  var D,
                    C = 2 + (D = g.length / 2 - 1);
                  (t = -(g[C] - g[D])), (n = -(g[C + 1] - g[D + 1]));
                }
              if (((s.midsrcArrowAngle = wn(t, n)), h))
                (t = a - s.segpts[s.segpts.length - 2]),
                  (n = o - s.segpts[s.segpts.length - 1]);
              else if (c || d || p || u) {
                var N = (g = s.allpts).length;
                (t = a - Nn(g[N - 6], g[N - 4], g[N - 2], 0.9)),
                  (n = o - Nn(g[N - 5], g[N - 3], g[N - 1], 0.9));
              } else (t = a - f), (n = o - v);
              s.tgtArrowAngle = wn(t, n);
            },
          };
        rh.getArrowWidth = rh.getArrowHeight = function (e, t) {
          var n = (this.arrowWidthCache = this.arrowWidthCache || {}),
            r = n[e + ", " + t];
          return (
            r ||
            ((r = Math.max(Math.pow(13.37 * e, 0.9), 29) * t),
            (n[e + ", " + t] = r),
            r)
          );
        };
        var ih,
          ah,
          oh,
          sh,
          lh,
          uh,
          ch,
          hh,
          dh,
          ph,
          gh,
          fh,
          vh,
          yh,
          mh,
          bh,
          xh,
          wh = {},
          Eh = {},
          Th = function (e, t, n) {
            (n.x = t.x - e.x),
              (n.y = t.y - e.y),
              (n.len = Math.sqrt(n.x * n.x + n.y * n.y)),
              (n.nx = n.x / n.len),
              (n.ny = n.y / n.len),
              (n.ang = Math.atan2(n.ny, n.nx));
          },
          _h = function (e, t) {
            (t.x = -1 * e.x),
              (t.y = -1 * e.y),
              (t.nx = -1 * e.nx),
              (t.ny = -1 * e.ny),
              (t.ang = e.ang > 0 ? -(Math.PI - e.ang) : Math.PI + e.ang);
          },
          Dh = function (e, t, n, r, i) {
            if (
              (e !== xh ? Th(t, e, wh) : _h(Eh, wh),
              Th(t, n, Eh),
              (oh = wh.nx * Eh.ny - wh.ny * Eh.nx),
              (sh = wh.nx * Eh.nx - wh.ny * -Eh.ny),
              (ch = Math.asin(Math.max(-1, Math.min(1, oh)))),
              Math.abs(ch) < 1e-6)
            )
              return (ih = t.x), (ah = t.y), void (dh = gh = 0);
            (lh = 1),
              (uh = !1),
              sh < 0
                ? ch < 0
                  ? (ch = Math.PI + ch)
                  : ((ch = Math.PI - ch), (lh = -1), (uh = !0))
                : ch > 0 && ((lh = -1), (uh = !0)),
              (gh = void 0 !== t.radius ? t.radius : r),
              (hh = ch / 2),
              (fh = Math.min(wh.len / 2, Eh.len / 2)),
              i
                ? (ph = Math.abs((Math.cos(hh) * gh) / Math.sin(hh))) > fh
                  ? ((ph = fh),
                    (dh = Math.abs((ph * Math.sin(hh)) / Math.cos(hh))))
                  : (dh = gh)
                : ((ph = Math.min(fh, gh)),
                  (dh = Math.abs((ph * Math.sin(hh)) / Math.cos(hh)))),
              (mh = t.x + Eh.nx * ph),
              (bh = t.y + Eh.ny * ph),
              (ih = mh - Eh.ny * dh * lh),
              (ah = bh + Eh.nx * dh * lh),
              (vh = t.x + wh.nx * ph),
              (yh = t.y + wh.ny * ph),
              (xh = t);
          };
        function Ch(e, t) {
          0 === t.radius
            ? e.lineTo(t.cx, t.cy)
            : e.arc(
                t.cx,
                t.cy,
                t.radius,
                t.startAngle,
                t.endAngle,
                t.counterClockwise
              );
        }
        function Nh(e, t, n, r) {
          var i =
            !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4];
          return 0 === r || 0 === t.radius
            ? {
                cx: t.x,
                cy: t.y,
                radius: 0,
                startX: t.x,
                startY: t.y,
                stopX: t.x,
                stopY: t.y,
                startAngle: void 0,
                endAngle: void 0,
                counterClockwise: void 0,
              }
            : (Dh(e, t, n, r, i),
              {
                cx: ih,
                cy: ah,
                radius: dh,
                startX: vh,
                startY: yh,
                stopX: mh,
                stopY: bh,
                startAngle: wh.ang + (Math.PI / 2) * lh,
                endAngle: Eh.ang - (Math.PI / 2) * lh,
                counterClockwise: uh,
              });
        }
        var Ah = {};
        function Lh(e) {
          var t = [];
          if (null != e) {
            for (var n = 0; n < e.length; n += 2) {
              var r = e[n],
                i = e[n + 1];
              t.push({ x: r, y: i });
            }
            return t;
          }
        }
        (Ah.findMidptPtsEtc = function (e, t) {
          var n,
            r = t.posPts,
            i = t.intersectionPts,
            a = t.vectorNormInverse,
            o = e.pstyle("source-endpoint"),
            l = e.pstyle("target-endpoint"),
            u = null != o.units && null != l.units,
            c = function (e, t, n, r) {
              var i = r - t,
                a = n - e,
                o = Math.sqrt(a * a + i * i);
              return { x: -i / o, y: a / o };
            };
          switch (e.pstyle("edge-distances").value) {
            case "node-position":
              n = r;
              break;
            case "intersection":
              n = i;
              break;
            case "endpoints":
              if (u) {
                var h = s(this.manualEndptToPx(e.source()[0], o), 2),
                  d = h[0],
                  p = h[1],
                  g = s(this.manualEndptToPx(e.target()[0], l), 2),
                  f = g[0],
                  v = g[1],
                  y = { x1: d, y1: p, x2: f, y2: v };
                (a = c(d, p, f, v)), (n = y);
              } else
                Lt(
                  "Edge ".concat(
                    e.id(),
                    " has edge-distances:endpoints specified without manual endpoints specified via source-endpoint and target-endpoint.  Falling back on edge-distances:intersection (default)."
                  )
                ),
                  (n = i);
          }
          return { midptPts: n, vectorNormInverse: a };
        }),
          (Ah.findHaystackPoints = function (e) {
            for (var t = 0; t < e.length; t++) {
              var n = e[t],
                r = n._private,
                i = r.rscratch;
              if (!i.haystack) {
                var a = 2 * Math.random() * Math.PI;
                (i.source = { x: Math.cos(a), y: Math.sin(a) }),
                  (a = 2 * Math.random() * Math.PI),
                  (i.target = { x: Math.cos(a), y: Math.sin(a) });
              }
              var o = r.source,
                s = r.target,
                l = o.position(),
                u = s.position(),
                c = o.width(),
                h = s.width(),
                d = o.height(),
                p = s.height(),
                g = n.pstyle("haystack-radius").value / 2;
              (i.haystackPts = i.allpts =
                [
                  i.source.x * c * g + l.x,
                  i.source.y * d * g + l.y,
                  i.target.x * h * g + u.x,
                  i.target.y * p * g + u.y,
                ]),
                (i.midX = (i.allpts[0] + i.allpts[2]) / 2),
                (i.midY = (i.allpts[1] + i.allpts[3]) / 2),
                (i.edgeType = "haystack"),
                (i.haystack = !0),
                this.storeEdgeProjections(n),
                this.calculateArrowAngles(n),
                this.recalculateEdgeLabelProjections(n),
                this.calculateLabelAngles(n);
            }
          }),
          (Ah.findSegmentsPoints = function (e, t) {
            var n = e._private.rscratch,
              r = e.pstyle("segment-weights"),
              i = e.pstyle("segment-distances"),
              a = e.pstyle("segment-radii"),
              o = e.pstyle("radius-type"),
              s = Math.min(r.pfValue.length, i.pfValue.length),
              l = a.pfValue[a.pfValue.length - 1],
              u = o.pfValue[o.pfValue.length - 1];
            (n.edgeType = "segments"),
              (n.segpts = []),
              (n.radii = []),
              (n.isArcRadius = []);
            for (var c = 0; c < s; c++) {
              var h = r.pfValue[c],
                d = i.pfValue[c],
                p = 1 - h,
                g = h,
                f = this.findMidptPtsEtc(e, t),
                v = f.midptPts,
                y = f.vectorNormInverse,
                m = { x: v.x1 * p + v.x2 * g, y: v.y1 * p + v.y2 * g };
              n.segpts.push(m.x + y.x * d, m.y + y.y * d),
                n.radii.push(void 0 !== a.pfValue[c] ? a.pfValue[c] : l),
                n.isArcRadius.push(
                  "arc-radius" === (void 0 !== o.pfValue[c] ? o.pfValue[c] : u)
                );
            }
          }),
          (Ah.findLoopPoints = function (e, t, n, r) {
            var i = e._private.rscratch,
              a = t.dirCounts,
              o = t.srcPos,
              s = e.pstyle("control-point-distances"),
              l = s ? s.pfValue[0] : void 0,
              u = e.pstyle("loop-direction").pfValue,
              c = e.pstyle("loop-sweep").pfValue,
              h = e.pstyle("control-point-step-size").pfValue;
            i.edgeType = "self";
            var d = n,
              p = h;
            r && ((d = 0), (p = l));
            var g = u - Math.PI / 2,
              f = g - c / 2,
              v = g + c / 2,
              y = String(u + "_" + c);
            (d = void 0 === a[y] ? (a[y] = 0) : ++a[y]),
              (i.ctrlpts = [
                o.x + 1.4 * Math.cos(f) * p * (d / 3 + 1),
                o.y + 1.4 * Math.sin(f) * p * (d / 3 + 1),
                o.x + 1.4 * Math.cos(v) * p * (d / 3 + 1),
                o.y + 1.4 * Math.sin(v) * p * (d / 3 + 1),
              ]);
          }),
          (Ah.findCompoundLoopPoints = function (e, t, n, r) {
            var i = e._private.rscratch;
            i.edgeType = "compound";
            var a = t.srcPos,
              o = t.tgtPos,
              s = t.srcW,
              l = t.srcH,
              u = t.tgtW,
              c = t.tgtH,
              h = e.pstyle("control-point-step-size").pfValue,
              d = e.pstyle("control-point-distances"),
              p = d ? d.pfValue[0] : void 0,
              g = n,
              f = h;
            r && ((g = 0), (f = p));
            var v = 50,
              y = { x: a.x - s / 2, y: a.y - l / 2 },
              m = { x: o.x - u / 2, y: o.y - c / 2 },
              b = { x: Math.min(y.x, m.x), y: Math.min(y.y, m.y) },
              x = 0.5,
              w = Math.max(x, Math.log(0.01 * s)),
              E = Math.max(x, Math.log(0.01 * u));
            i.ctrlpts = [
              b.x,
              b.y - (1 + Math.pow(v, 1.12) / 100) * f * (g / 3 + 1) * w,
              b.x - (1 + Math.pow(v, 1.12) / 100) * f * (g / 3 + 1) * E,
              b.y,
            ];
          }),
          (Ah.findStraightEdgePoints = function (e) {
            e._private.rscratch.edgeType = "straight";
          }),
          (Ah.findBezierPoints = function (e, t, n, r, i) {
            var a = e._private.rscratch,
              o = e.pstyle("control-point-step-size").pfValue,
              s = e.pstyle("control-point-distances"),
              l = e.pstyle("control-point-weights"),
              u = s && l ? Math.min(s.value.length, l.value.length) : 1,
              c = s ? s.pfValue[0] : void 0,
              h = l.value[0],
              d = r;
            (a.edgeType = d ? "multibezier" : "bezier"), (a.ctrlpts = []);
            for (var p = 0; p < u; p++) {
              var g = (0.5 - t.eles.length / 2 + n) * o * (i ? -1 : 1),
                f = void 0,
                v = Tn(g);
              d && ((c = s ? s.pfValue[p] : o), (h = l.value[p]));
              var y =
                  void 0 !== (f = r ? c : void 0 !== c ? v * c : void 0)
                    ? f
                    : g,
                m = 1 - h,
                b = h,
                x = this.findMidptPtsEtc(e, t),
                w = x.midptPts,
                E = x.vectorNormInverse,
                T = { x: w.x1 * m + w.x2 * b, y: w.y1 * m + w.y2 * b };
              a.ctrlpts.push(T.x + E.x * y, T.y + E.y * y);
            }
          }),
          (Ah.findTaxiPoints = function (e, t) {
            var n = e._private.rscratch;
            n.edgeType = "segments";
            var r = "vertical",
              i = "horizontal",
              a = "leftward",
              o = "rightward",
              s = "downward",
              l = "upward",
              u = "auto",
              c = t.posPts,
              h = t.srcW,
              d = t.srcH,
              p = t.tgtW,
              g = t.tgtH,
              f = "node-position" !== e.pstyle("edge-distances").value,
              v = e.pstyle("taxi-direction").value,
              y = v,
              m = e.pstyle("taxi-turn"),
              b = "%" === m.units,
              x = m.pfValue,
              w = x < 0,
              E = e.pstyle("taxi-turn-min-distance").pfValue,
              T = f ? (h + p) / 2 : 0,
              _ = f ? (d + g) / 2 : 0,
              D = c.x2 - c.x1,
              C = c.y2 - c.y1,
              N = function (e, t) {
                return e > 0 ? Math.max(e - t, 0) : Math.min(e + t, 0);
              },
              A = N(D, T),
              L = N(C, _),
              S = !1;
            y === u
              ? (v = Math.abs(A) > Math.abs(L) ? i : r)
              : y === l || y === s
              ? ((v = r), (S = !0))
              : (y !== a && y !== o) || ((v = i), (S = !0));
            var O,
              k = v === r,
              I = k ? L : A,
              M = k ? C : D,
              P = Tn(M),
              R = !1;
            (S && (b || w)) ||
              !(
                (y === s && M < 0) ||
                (y === l && M > 0) ||
                (y === a && M > 0) ||
                (y === o && M < 0)
              ) ||
              ((I = (P *= -1) * Math.abs(I)), (R = !0));
            var B = function (e) {
                return Math.abs(e) < E || Math.abs(e) >= Math.abs(I);
              },
              F = B(
                (O = b ? (x < 0 ? 1 + x : x) * I : (x < 0 ? I : 0) + x * P)
              ),
              z = B(Math.abs(I) - Math.abs(O));
            if ((!F && !z) || R)
              if (k) {
                var G = c.y1 + O + (f ? (d / 2) * P : 0),
                  Y = c.x1,
                  X = c.x2;
                n.segpts = [Y, G, X, G];
              } else {
                var V = c.x1 + O + (f ? (h / 2) * P : 0),
                  U = c.y1,
                  j = c.y2;
                n.segpts = [V, U, V, j];
              }
            else if (k) {
              var H = Math.abs(M) <= d / 2,
                q = Math.abs(D) <= p / 2;
              if (H) {
                var W = (c.x1 + c.x2) / 2,
                  $ = c.y1,
                  K = c.y2;
                n.segpts = [W, $, W, K];
              } else if (q) {
                var Z = (c.y1 + c.y2) / 2,
                  Q = c.x1,
                  J = c.x2;
                n.segpts = [Q, Z, J, Z];
              } else n.segpts = [c.x1, c.y2];
            } else {
              var ee = Math.abs(M) <= h / 2,
                te = Math.abs(C) <= g / 2;
              if (ee) {
                var ne = (c.y1 + c.y2) / 2,
                  re = c.x1,
                  ie = c.x2;
                n.segpts = [re, ne, ie, ne];
              } else if (te) {
                var ae = (c.x1 + c.x2) / 2,
                  oe = c.y1,
                  se = c.y2;
                n.segpts = [ae, oe, ae, se];
              } else n.segpts = [c.x2, c.y1];
            }
            if (n.isRound) {
              var le = e.pstyle("taxi-radius").value,
                ue = "arc-radius" === e.pstyle("radius-type").value[0];
              (n.radii = new Array(n.segpts.length / 2).fill(le)),
                (n.isArcRadius = new Array(n.segpts.length / 2).fill(ue));
            }
          }),
          (Ah.tryToCorrectInvalidPoints = function (e, t) {
            var n = e._private.rscratch;
            if ("bezier" === n.edgeType) {
              var r = t.srcPos,
                i = t.tgtPos,
                a = t.srcW,
                o = t.srcH,
                s = t.tgtW,
                l = t.tgtH,
                u = t.srcShape,
                c = t.tgtShape,
                h = t.srcCornerRadius,
                d = t.tgtCornerRadius,
                p = t.srcRs,
                g = t.tgtRs,
                f = !C(n.startX) || !C(n.startY),
                v = !C(n.arrowStartX) || !C(n.arrowStartY),
                y = !C(n.endX) || !C(n.endY),
                m = !C(n.arrowEndX) || !C(n.arrowEndY),
                b =
                  this.getArrowWidth(
                    e.pstyle("width").pfValue,
                    e.pstyle("arrow-scale").value
                  ) *
                  this.arrowShapeWidth *
                  3,
                x = _n(
                  { x: n.ctrlpts[0], y: n.ctrlpts[1] },
                  { x: n.startX, y: n.startY }
                ),
                w = x < b,
                E = _n(
                  { x: n.ctrlpts[0], y: n.ctrlpts[1] },
                  { x: n.endX, y: n.endY }
                ),
                T = E < b,
                _ = !1;
              if (f || v || w) {
                _ = !0;
                var D = { x: n.ctrlpts[0] - r.x, y: n.ctrlpts[1] - r.y },
                  N = Math.sqrt(D.x * D.x + D.y * D.y),
                  A = { x: D.x / N, y: D.y / N },
                  L = Math.max(a, o),
                  S = {
                    x: n.ctrlpts[0] + 2 * A.x * L,
                    y: n.ctrlpts[1] + 2 * A.y * L,
                  },
                  O = u.intersectLine(r.x, r.y, a, o, S.x, S.y, 0, h, p);
                w
                  ? ((n.ctrlpts[0] = n.ctrlpts[0] + A.x * (b - x)),
                    (n.ctrlpts[1] = n.ctrlpts[1] + A.y * (b - x)))
                  : ((n.ctrlpts[0] = O[0] + A.x * b),
                    (n.ctrlpts[1] = O[1] + A.y * b));
              }
              if (y || m || T) {
                _ = !0;
                var k = { x: n.ctrlpts[0] - i.x, y: n.ctrlpts[1] - i.y },
                  I = Math.sqrt(k.x * k.x + k.y * k.y),
                  M = { x: k.x / I, y: k.y / I },
                  P = Math.max(a, o),
                  R = {
                    x: n.ctrlpts[0] + 2 * M.x * P,
                    y: n.ctrlpts[1] + 2 * M.y * P,
                  },
                  B = c.intersectLine(i.x, i.y, s, l, R.x, R.y, 0, d, g);
                T
                  ? ((n.ctrlpts[0] = n.ctrlpts[0] + M.x * (b - E)),
                    (n.ctrlpts[1] = n.ctrlpts[1] + M.y * (b - E)))
                  : ((n.ctrlpts[0] = B[0] + M.x * b),
                    (n.ctrlpts[1] = B[1] + M.y * b));
              }
              _ && this.findEndpoints(e);
            }
          }),
          (Ah.storeAllpts = function (e) {
            var t = e._private.rscratch;
            if (
              "multibezier" === t.edgeType ||
              "bezier" === t.edgeType ||
              "self" === t.edgeType ||
              "compound" === t.edgeType
            ) {
              (t.allpts = []), t.allpts.push(t.startX, t.startY);
              for (var n = 0; n + 1 < t.ctrlpts.length; n += 2)
                t.allpts.push(t.ctrlpts[n], t.ctrlpts[n + 1]),
                  n + 3 < t.ctrlpts.length &&
                    t.allpts.push(
                      (t.ctrlpts[n] + t.ctrlpts[n + 2]) / 2,
                      (t.ctrlpts[n + 1] + t.ctrlpts[n + 3]) / 2
                    );
              var r, i;
              t.allpts.push(t.endX, t.endY),
                (t.ctrlpts.length / 2) % 2 == 0
                  ? ((r = t.allpts.length / 2 - 1),
                    (t.midX = t.allpts[r]),
                    (t.midY = t.allpts[r + 1]))
                  : ((r = t.allpts.length / 2 - 3),
                    (i = 0.5),
                    (t.midX = Nn(
                      t.allpts[r],
                      t.allpts[r + 2],
                      t.allpts[r + 4],
                      i
                    )),
                    (t.midY = Nn(
                      t.allpts[r + 1],
                      t.allpts[r + 3],
                      t.allpts[r + 5],
                      i
                    )));
            } else if ("straight" === t.edgeType)
              (t.allpts = [t.startX, t.startY, t.endX, t.endY]),
                (t.midX =
                  (t.startX + t.endX + t.arrowStartX + t.arrowEndX) / 4),
                (t.midY =
                  (t.startY + t.endY + t.arrowStartY + t.arrowEndY) / 4);
            else if ("segments" === t.edgeType) {
              if (
                ((t.allpts = []),
                t.allpts.push(t.startX, t.startY),
                t.allpts.push.apply(t.allpts, t.segpts),
                t.allpts.push(t.endX, t.endY),
                t.isRound)
              ) {
                t.roundCorners = [];
                for (var a = 2; a + 3 < t.allpts.length; a += 2) {
                  var o = t.radii[a / 2 - 1],
                    s = t.isArcRadius[a / 2 - 1];
                  t.roundCorners.push(
                    Nh(
                      { x: t.allpts[a - 2], y: t.allpts[a - 1] },
                      { x: t.allpts[a], y: t.allpts[a + 1], radius: o },
                      { x: t.allpts[a + 2], y: t.allpts[a + 3] },
                      o,
                      s
                    )
                  );
                }
              }
              if (t.segpts.length % 4 == 0) {
                var l = t.segpts.length / 2,
                  u = l - 2;
                (t.midX = (t.segpts[u] + t.segpts[l]) / 2),
                  (t.midY = (t.segpts[u + 1] + t.segpts[l + 1]) / 2);
              } else {
                var c = t.segpts.length / 2 - 1;
                if (t.isRound) {
                  var h = { x: t.segpts[c], y: t.segpts[c + 1] },
                    d = t.roundCorners[c / 2],
                    p = [h.x - d.cx, h.y - d.cy],
                    g =
                      d.radius /
                      Math.sqrt(Math.pow(p[0], 2) + Math.pow(p[1], 2));
                  (p = p.map(function (e) {
                    return e * g;
                  })),
                    (t.midX = d.cx + p[0]),
                    (t.midY = d.cy + p[1]),
                    (t.midVector = p);
                } else (t.midX = t.segpts[c]), (t.midY = t.segpts[c + 1]);
              }
            }
          }),
          (Ah.checkForInvalidEdgeWarning = function (e) {
            var t = e[0]._private.rscratch;
            t.nodesOverlap ||
            (C(t.startX) && C(t.startY) && C(t.endX) && C(t.endY))
              ? (t.loggedErr = !1)
              : t.loggedErr ||
                ((t.loggedErr = !0),
                Lt(
                  "Edge `" +
                    e.id() +
                    "` has invalid endpoints and so it is impossible to draw.  Adjust your edge style (e.g. control points) accordingly or use an alternative edge type.  This is expected behaviour when the source node and the target node overlap."
                ));
          }),
          (Ah.findEdgeControlPoints = function (e) {
            var t = this;
            if (e && 0 !== e.length) {
              for (
                var n = this,
                  r = n.cy.hasCompoundNodes(),
                  i = {
                    map: new Vt(),
                    get: function (e) {
                      var t = this.map.get(e[0]);
                      return null != t ? t.get(e[1]) : null;
                    },
                    set: function (e, t) {
                      var n = this.map.get(e[0]);
                      null == n && ((n = new Vt()), this.map.set(e[0], n)),
                        n.set(e[1], t);
                    },
                  },
                  a = [],
                  o = [],
                  s = 0;
                s < e.length;
                s++
              ) {
                var l = e[s],
                  u = l._private,
                  c = l.pstyle("curve-style").value;
                if (!l.removed() && l.takesUpSpace())
                  if ("haystack" !== c) {
                    var h =
                        "unbundled-bezier" === c ||
                        c.endsWith("segments") ||
                        "straight" === c ||
                        "straight-triangle" === c ||
                        c.endsWith("taxi"),
                      d = "unbundled-bezier" === c || "bezier" === c,
                      p = u.source,
                      g = u.target,
                      f = [p.poolIndex(), g.poolIndex()].sort(),
                      v = i.get(f);
                    null == v && ((v = { eles: [] }), i.set(f, v), a.push(f)),
                      v.eles.push(l),
                      h && (v.hasUnbundled = !0),
                      d && (v.hasBezier = !0);
                  } else o.push(l);
              }
              for (
                var y = function (e) {
                    var o = a[e],
                      s = i.get(o),
                      l = void 0;
                    if (!s.hasUnbundled) {
                      var u = s.eles[0].parallelEdges().filter(function (e) {
                        return e.isBundledBezier();
                      });
                      Ft(s.eles),
                        u.forEach(function (e) {
                          return s.eles.push(e);
                        }),
                        s.eles.sort(function (e, t) {
                          return e.poolIndex() - t.poolIndex();
                        });
                    }
                    var c = s.eles[0],
                      h = c.source(),
                      d = c.target();
                    if (h.poolIndex() > d.poolIndex()) {
                      var p = h;
                      (h = d), (d = p);
                    }
                    var g = (s.srcPos = h.position()),
                      f = (s.tgtPos = d.position()),
                      v = (s.srcW = h.outerWidth()),
                      y = (s.srcH = h.outerHeight()),
                      m = (s.tgtW = d.outerWidth()),
                      b = (s.tgtH = d.outerHeight()),
                      x = (s.srcShape = n.nodeShapes[t.getNodeShape(h)]),
                      w = (s.tgtShape = n.nodeShapes[t.getNodeShape(d)]),
                      E = (s.srcCornerRadius =
                        "auto" === h.pstyle("corner-radius").value
                          ? "auto"
                          : h.pstyle("corner-radius").pfValue),
                      T = (s.tgtCornerRadius =
                        "auto" === d.pstyle("corner-radius").value
                          ? "auto"
                          : d.pstyle("corner-radius").pfValue),
                      _ = (s.tgtRs = d._private.rscratch),
                      D = (s.srcRs = h._private.rscratch);
                    s.dirCounts = {
                      north: 0,
                      west: 0,
                      south: 0,
                      east: 0,
                      northwest: 0,
                      southwest: 0,
                      northeast: 0,
                      southeast: 0,
                    };
                    for (var N = 0; N < s.eles.length; N++) {
                      var A = s.eles[N],
                        L = A[0]._private.rscratch,
                        S = A.pstyle("curve-style").value,
                        O =
                          "unbundled-bezier" === S ||
                          S.endsWith("segments") ||
                          S.endsWith("taxi"),
                        k = !h.same(A.source());
                      if (
                        !s.calculatedIntersection &&
                        h !== d &&
                        (s.hasBezier || s.hasUnbundled)
                      ) {
                        s.calculatedIntersection = !0;
                        var I = x.intersectLine(
                            g.x,
                            g.y,
                            v,
                            y,
                            f.x,
                            f.y,
                            0,
                            E,
                            D
                          ),
                          M = (s.srcIntn = I),
                          P = w.intersectLine(
                            f.x,
                            f.y,
                            m,
                            b,
                            g.x,
                            g.y,
                            0,
                            T,
                            _
                          ),
                          R = (s.tgtIntn = P),
                          B = (s.intersectionPts = {
                            x1: I[0],
                            x2: P[0],
                            y1: I[1],
                            y2: P[1],
                          }),
                          F = (s.posPts = {
                            x1: g.x,
                            x2: f.x,
                            y1: g.y,
                            y2: f.y,
                          }),
                          z = P[1] - I[1],
                          G = P[0] - I[0],
                          Y = Math.sqrt(G * G + z * z),
                          X = (s.vector = { x: G, y: z }),
                          V = (s.vectorNorm = { x: X.x / Y, y: X.y / Y }),
                          U = { x: -V.y, y: V.x };
                        (s.nodesOverlap =
                          !C(Y) ||
                          w.checkPoint(I[0], I[1], 0, m, b, f.x, f.y, T, _) ||
                          x.checkPoint(P[0], P[1], 0, v, y, g.x, g.y, E, D)),
                          (s.vectorNormInverse = U),
                          (l = {
                            nodesOverlap: s.nodesOverlap,
                            dirCounts: s.dirCounts,
                            calculatedIntersection: !0,
                            hasBezier: s.hasBezier,
                            hasUnbundled: s.hasUnbundled,
                            eles: s.eles,
                            srcPos: f,
                            tgtPos: g,
                            srcW: m,
                            srcH: b,
                            tgtW: v,
                            tgtH: y,
                            srcIntn: R,
                            tgtIntn: M,
                            srcShape: w,
                            tgtShape: x,
                            posPts: { x1: F.x2, y1: F.y2, x2: F.x1, y2: F.y1 },
                            intersectionPts: {
                              x1: B.x2,
                              y1: B.y2,
                              x2: B.x1,
                              y2: B.y1,
                            },
                            vector: { x: -X.x, y: -X.y },
                            vectorNorm: { x: -V.x, y: -V.y },
                            vectorNormInverse: { x: -U.x, y: -U.y },
                          });
                      }
                      var j = k ? l : s;
                      (L.nodesOverlap = j.nodesOverlap),
                        (L.srcIntn = j.srcIntn),
                        (L.tgtIntn = j.tgtIntn),
                        (L.isRound = S.startsWith("round")),
                        r &&
                        (h.isParent() ||
                          h.isChild() ||
                          d.isParent() ||
                          d.isChild()) &&
                        (h.parents().anySame(d) ||
                          d.parents().anySame(h) ||
                          (h.same(d) && h.isParent()))
                          ? t.findCompoundLoopPoints(A, j, N, O)
                          : h === d
                          ? t.findLoopPoints(A, j, N, O)
                          : S.endsWith("segments")
                          ? t.findSegmentsPoints(A, j)
                          : S.endsWith("taxi")
                          ? t.findTaxiPoints(A, j)
                          : "straight" === S ||
                            (!O &&
                              s.eles.length % 2 == 1 &&
                              N === Math.floor(s.eles.length / 2))
                          ? t.findStraightEdgePoints(A)
                          : t.findBezierPoints(A, j, N, O, k),
                        t.findEndpoints(A),
                        t.tryToCorrectInvalidPoints(A, j),
                        t.checkForInvalidEdgeWarning(A),
                        t.storeAllpts(A),
                        t.storeEdgeProjections(A),
                        t.calculateArrowAngles(A),
                        t.recalculateEdgeLabelProjections(A),
                        t.calculateLabelAngles(A);
                    }
                  },
                  m = 0;
                m < a.length;
                m++
              )
                y(m);
              this.findHaystackPoints(o);
            }
          }),
          (Ah.getSegmentPoints = function (e) {
            var t = e[0]._private.rscratch;
            if ("segments" === t.edgeType)
              return this.recalculateRenderedStyle(e), Lh(t.segpts);
          }),
          (Ah.getControlPoints = function (e) {
            var t = e[0]._private.rscratch,
              n = t.edgeType;
            if (
              "bezier" === n ||
              "multibezier" === n ||
              "self" === n ||
              "compound" === n
            )
              return this.recalculateRenderedStyle(e), Lh(t.ctrlpts);
          }),
          (Ah.getEdgeMidpoint = function (e) {
            var t = e[0]._private.rscratch;
            return this.recalculateRenderedStyle(e), { x: t.midX, y: t.midY };
          });
        var Sh = {
            manualEndptToPx: function (e, t) {
              var n = this,
                r = e.position(),
                i = e.outerWidth(),
                a = e.outerHeight(),
                o = e._private.rscratch;
              if (2 === t.value.length) {
                var s = [t.pfValue[0], t.pfValue[1]];
                return (
                  "%" === t.units[0] && (s[0] = s[0] * i),
                  "%" === t.units[1] && (s[1] = s[1] * a),
                  (s[0] += r.x),
                  (s[1] += r.y),
                  s
                );
              }
              var l = t.pfValue[0];
              l = -Math.PI / 2 + l;
              var u = 2 * Math.max(i, a),
                c = [r.x + Math.cos(l) * u, r.y + Math.sin(l) * u];
              return n.nodeShapes[this.getNodeShape(e)].intersectLine(
                r.x,
                r.y,
                i,
                a,
                c[0],
                c[1],
                0,
                "auto" === e.pstyle("corner-radius").value
                  ? "auto"
                  : e.pstyle("corner-radius").pfValue,
                o
              );
            },
            findEndpoints: function (e) {
              var t,
                n,
                r,
                i,
                a,
                o = this,
                s = e.source()[0],
                l = e.target()[0],
                u = s.position(),
                c = l.position(),
                h = e.pstyle("target-arrow-shape").value,
                d = e.pstyle("source-arrow-shape").value,
                p = e.pstyle("target-distance-from-node").pfValue,
                g = e.pstyle("source-distance-from-node").pfValue,
                f = s._private.rscratch,
                v = l._private.rscratch,
                y = e.pstyle("curve-style").value,
                m = e._private.rscratch,
                b = m.edgeType,
                x = "self" === b || "compound" === b,
                w = "bezier" === b || "multibezier" === b || x,
                E = "bezier" !== b,
                T = "straight" === b || "segments" === b,
                _ = "segments" === b,
                D = w || E || T,
                N = x || "taxi" === y,
                A = e.pstyle("source-endpoint"),
                L = N ? "outside-to-node" : A.value,
                S =
                  "auto" === s.pstyle("corner-radius").value
                    ? "auto"
                    : s.pstyle("corner-radius").pfValue,
                O = e.pstyle("target-endpoint"),
                k = N ? "outside-to-node" : O.value,
                I =
                  "auto" === l.pstyle("corner-radius").value
                    ? "auto"
                    : l.pstyle("corner-radius").pfValue;
              if (((m.srcManEndpt = A), (m.tgtManEndpt = O), w)) {
                var M = [m.ctrlpts[0], m.ctrlpts[1]];
                (n = E
                  ? [
                      m.ctrlpts[m.ctrlpts.length - 2],
                      m.ctrlpts[m.ctrlpts.length - 1],
                    ]
                  : M),
                  (r = M);
              } else if (T) {
                var P = _ ? m.segpts.slice(0, 2) : [c.x, c.y];
                (n = _ ? m.segpts.slice(m.segpts.length - 2) : [u.x, u.y]),
                  (r = P);
              }
              if ("inside-to-node" === k) t = [c.x, c.y];
              else if (O.units) t = this.manualEndptToPx(l, O);
              else if ("outside-to-line" === k) t = m.tgtIntn;
              else if (
                ("outside-to-node" === k || "outside-to-node-or-label" === k
                  ? (i = n)
                  : ("outside-to-line" !== k &&
                      "outside-to-line-or-label" !== k) ||
                    (i = [u.x, u.y]),
                (t = o.nodeShapes[this.getNodeShape(l)].intersectLine(
                  c.x,
                  c.y,
                  l.outerWidth(),
                  l.outerHeight(),
                  i[0],
                  i[1],
                  0,
                  I,
                  v
                )),
                "outside-to-node-or-label" === k ||
                  "outside-to-line-or-label" === k)
              ) {
                var R = l._private.rscratch,
                  B = R.labelWidth,
                  F = R.labelHeight,
                  z = R.labelX,
                  G = R.labelY,
                  Y = B / 2,
                  X = F / 2,
                  V = l.pstyle("text-valign").value;
                "top" === V ? (G -= X) : "bottom" === V && (G += X);
                var U = l.pstyle("text-halign").value;
                "left" === U ? (z -= Y) : "right" === U && (z += Y);
                var j = sr(
                  i[0],
                  i[1],
                  [z - Y, G - X, z + Y, G - X, z + Y, G + X, z - Y, G + X],
                  c.x,
                  c.y
                );
                if (j.length > 0) {
                  var H = u,
                    q = Dn(H, fn(t)),
                    W = Dn(H, fn(j)),
                    $ = q;
                  W < q && ((t = j), ($ = W)),
                    j.length > 2 &&
                      Dn(H, { x: j[2], y: j[3] }) < $ &&
                      (t = [j[2], j[3]]);
                }
              }
              var K = ur(t, n, o.arrowShapes[h].spacing(e) + p),
                Z = ur(t, n, o.arrowShapes[h].gap(e) + p);
              if (
                ((m.endX = Z[0]),
                (m.endY = Z[1]),
                (m.arrowEndX = K[0]),
                (m.arrowEndY = K[1]),
                "inside-to-node" === L)
              )
                t = [u.x, u.y];
              else if (A.units) t = this.manualEndptToPx(s, A);
              else if ("outside-to-line" === L) t = m.srcIntn;
              else if (
                ("outside-to-node" === L || "outside-to-node-or-label" === L
                  ? (a = r)
                  : ("outside-to-line" !== L &&
                      "outside-to-line-or-label" !== L) ||
                    (a = [c.x, c.y]),
                (t = o.nodeShapes[this.getNodeShape(s)].intersectLine(
                  u.x,
                  u.y,
                  s.outerWidth(),
                  s.outerHeight(),
                  a[0],
                  a[1],
                  0,
                  S,
                  f
                )),
                "outside-to-node-or-label" === L ||
                  "outside-to-line-or-label" === L)
              ) {
                var Q = s._private.rscratch,
                  J = Q.labelWidth,
                  ee = Q.labelHeight,
                  te = Q.labelX,
                  ne = Q.labelY,
                  re = J / 2,
                  ie = ee / 2,
                  ae = s.pstyle("text-valign").value;
                "top" === ae ? (ne -= ie) : "bottom" === ae && (ne += ie);
                var oe = s.pstyle("text-halign").value;
                "left" === oe ? (te -= re) : "right" === oe && (te += re);
                var se = sr(
                  a[0],
                  a[1],
                  [
                    te - re,
                    ne - ie,
                    te + re,
                    ne - ie,
                    te + re,
                    ne + ie,
                    te - re,
                    ne + ie,
                  ],
                  u.x,
                  u.y
                );
                if (se.length > 0) {
                  var le = c,
                    ue = Dn(le, fn(t)),
                    ce = Dn(le, fn(se)),
                    he = ue;
                  ce < ue && ((t = [se[0], se[1]]), (he = ce)),
                    se.length > 2 &&
                      Dn(le, { x: se[2], y: se[3] }) < he &&
                      (t = [se[2], se[3]]);
                }
              }
              var de = ur(t, r, o.arrowShapes[d].spacing(e) + g),
                pe = ur(t, r, o.arrowShapes[d].gap(e) + g);
              (m.startX = pe[0]),
                (m.startY = pe[1]),
                (m.arrowStartX = de[0]),
                (m.arrowStartY = de[1]),
                D &&
                  (C(m.startX) && C(m.startY) && C(m.endX) && C(m.endY)
                    ? (m.badLine = !1)
                    : (m.badLine = !0));
            },
            getSourceEndpoint: function (e) {
              var t = e[0]._private.rscratch;
              return (
                this.recalculateRenderedStyle(e),
                "haystack" === t.edgeType
                  ? { x: t.haystackPts[0], y: t.haystackPts[1] }
                  : { x: t.arrowStartX, y: t.arrowStartY }
              );
            },
            getTargetEndpoint: function (e) {
              var t = e[0]._private.rscratch;
              return (
                this.recalculateRenderedStyle(e),
                "haystack" === t.edgeType
                  ? { x: t.haystackPts[2], y: t.haystackPts[3] }
                  : { x: t.arrowEndX, y: t.arrowEndY }
              );
            },
          },
          Oh = {};
        function kh(e, t, n) {
          for (
            var r = function (e, t, n, r) {
                return Nn(e, t, n, r);
              },
              i = t._private.rstyle.bezierPts,
              a = 0;
            a < e.bezierProjPcts.length;
            a++
          ) {
            var o = e.bezierProjPcts[a];
            i.push({ x: r(n[0], n[2], n[4], o), y: r(n[1], n[3], n[5], o) });
          }
        }
        (Oh.storeEdgeProjections = function (e) {
          var t = e._private,
            n = t.rscratch,
            r = n.edgeType;
          if (
            ((t.rstyle.bezierPts = null),
            (t.rstyle.linePts = null),
            (t.rstyle.haystackPts = null),
            "multibezier" === r ||
              "bezier" === r ||
              "self" === r ||
              "compound" === r)
          ) {
            t.rstyle.bezierPts = [];
            for (var i = 0; i + 5 < n.allpts.length; i += 4)
              kh(this, e, n.allpts.slice(i, i + 6));
          } else if ("segments" === r) {
            var a = (t.rstyle.linePts = []);
            for (i = 0; i + 1 < n.allpts.length; i += 2)
              a.push({ x: n.allpts[i], y: n.allpts[i + 1] });
          } else if ("haystack" === r) {
            var o = n.haystackPts;
            t.rstyle.haystackPts = [
              { x: o[0], y: o[1] },
              { x: o[2], y: o[3] },
            ];
          }
          t.rstyle.arrowWidth =
            this.getArrowWidth(
              e.pstyle("width").pfValue,
              e.pstyle("arrow-scale").value
            ) * this.arrowShapeWidth;
        }),
          (Oh.recalculateEdgeProjections = function (e) {
            this.findEdgeControlPoints(e);
          });
        var Ih = {
            recalculateNodeLabelProjection: function (e) {
              var t = e.pstyle("label").strValue;
              if (!P(t)) {
                var n,
                  r,
                  i = e._private,
                  a = e.width(),
                  o = e.height(),
                  s = e.padding(),
                  l = e.position(),
                  u = e.pstyle("text-halign").strValue,
                  c = e.pstyle("text-valign").strValue,
                  h = i.rscratch,
                  d = i.rstyle;
                switch (u) {
                  case "left":
                    n = l.x - a / 2 - s;
                    break;
                  case "right":
                    n = l.x + a / 2 + s;
                    break;
                  default:
                    n = l.x;
                }
                switch (c) {
                  case "top":
                    r = l.y - o / 2 - s;
                    break;
                  case "bottom":
                    r = l.y + o / 2 + s;
                    break;
                  default:
                    r = l.y;
                }
                (h.labelX = n),
                  (h.labelY = r),
                  (d.labelX = n),
                  (d.labelY = r),
                  this.calculateLabelAngles(e),
                  this.applyLabelDimensions(e);
              }
            },
          },
          Mh = function (e, t) {
            var n = Math.atan(t / e);
            return 0 === e && n < 0 && (n *= -1), n;
          },
          Ph = function (e, t) {
            var n = t.x - e.x,
              r = t.y - e.y;
            return Mh(n, r);
          },
          Rh = function (e, t, n, r) {
            var i = Sn(0, r - 0.001, 1),
              a = Sn(0, r + 0.001, 1),
              o = An(e, t, n, i),
              s = An(e, t, n, a);
            return Ph(o, s);
          };
        (Ih.recalculateEdgeLabelProjections = function (e) {
          var t,
            n = e._private,
            r = n.rscratch,
            i = this,
            a = {
              mid: e.pstyle("label").strValue,
              source: e.pstyle("source-label").strValue,
              target: e.pstyle("target-label").strValue,
            };
          if (a.mid || a.source || a.target) {
            t = { x: r.midX, y: r.midY };
            var o = function (e, t, r) {
              Yt(n.rscratch, e, t, r), Yt(n.rstyle, e, t, r);
            };
            o("labelX", null, t.x), o("labelY", null, t.y);
            var s = Mh(r.midDispX, r.midDispY);
            o("labelAutoAngle", null, s);
            var l = function e() {
                if (e.cache) return e.cache;
                for (var t = [], a = 0; a + 5 < r.allpts.length; a += 4) {
                  var o = { x: r.allpts[a], y: r.allpts[a + 1] },
                    s = { x: r.allpts[a + 2], y: r.allpts[a + 3] },
                    l = { x: r.allpts[a + 4], y: r.allpts[a + 5] };
                  t.push({
                    p0: o,
                    p1: s,
                    p2: l,
                    startDist: 0,
                    length: 0,
                    segments: [],
                  });
                }
                var u = n.rstyle.bezierPts,
                  c = i.bezierProjPcts.length;
                function h(e, t, n, r, i) {
                  var a = _n(t, n),
                    o = e.segments[e.segments.length - 1],
                    s = {
                      p0: t,
                      p1: n,
                      t0: r,
                      t1: i,
                      startDist: o ? o.startDist + o.length : 0,
                      length: a,
                    };
                  e.segments.push(s), (e.length += a);
                }
                for (var d = 0; d < t.length; d++) {
                  var p = t[d],
                    g = t[d - 1];
                  g && (p.startDist = g.startDist + g.length),
                    h(p, p.p0, u[d * c], 0, i.bezierProjPcts[0]);
                  for (var f = 0; f < c - 1; f++)
                    h(
                      p,
                      u[d * c + f],
                      u[d * c + f + 1],
                      i.bezierProjPcts[f],
                      i.bezierProjPcts[f + 1]
                    );
                  h(p, u[d * c + c - 1], p.p2, i.bezierProjPcts[c - 1], 1);
                }
                return (e.cache = t);
              },
              u = function (n) {
                var i,
                  s = "source" === n;
                if (a[n]) {
                  var u = e.pstyle(n + "-text-offset").pfValue;
                  switch (r.edgeType) {
                    case "self":
                    case "compound":
                    case "bezier":
                    case "multibezier":
                      for (
                        var c, h = l(), d = 0, p = 0, g = 0;
                        g < h.length;
                        g++
                      ) {
                        for (
                          var f = h[s ? g : h.length - 1 - g], v = 0;
                          v < f.segments.length;
                          v++
                        ) {
                          var y = f.segments[s ? v : f.segments.length - 1 - v],
                            m =
                              g === h.length - 1 && v === f.segments.length - 1;
                          if (((d = p), (p += y.length) >= u || m)) {
                            c = { cp: f, segment: y };
                            break;
                          }
                        }
                        if (c) break;
                      }
                      var b = c.cp,
                        x = c.segment,
                        w = (u - d) / x.length,
                        E = x.t1 - x.t0,
                        T = s ? x.t0 + E * w : x.t1 - E * w;
                      (T = Sn(0, T, 1)),
                        (t = An(b.p0, b.p1, b.p2, T)),
                        (i = Rh(b.p0, b.p1, b.p2, T));
                      break;
                    case "straight":
                    case "segments":
                    case "haystack":
                      for (
                        var _, D, C, N, A = 0, L = r.allpts.length, S = 0;
                        S + 3 < L &&
                        (s
                          ? ((C = { x: r.allpts[S], y: r.allpts[S + 1] }),
                            (N = { x: r.allpts[S + 2], y: r.allpts[S + 3] }))
                          : ((C = {
                              x: r.allpts[L - 2 - S],
                              y: r.allpts[L - 1 - S],
                            }),
                            (N = {
                              x: r.allpts[L - 4 - S],
                              y: r.allpts[L - 3 - S],
                            })),
                        (D = A),
                        !((A += _ = _n(C, N)) >= u));
                        S += 2
                      );
                      var O = (u - D) / _;
                      (O = Sn(0, O, 1)), (t = Ln(C, N, O)), (i = Ph(C, N));
                  }
                  o("labelX", n, t.x),
                    o("labelY", n, t.y),
                    o("labelAutoAngle", n, i);
                }
              };
            u("source"), u("target"), this.applyLabelDimensions(e);
          }
        }),
          (Ih.applyLabelDimensions = function (e) {
            this.applyPrefixedLabelDimensions(e),
              e.isEdge() &&
                (this.applyPrefixedLabelDimensions(e, "source"),
                this.applyPrefixedLabelDimensions(e, "target"));
          }),
          (Ih.applyPrefixedLabelDimensions = function (e, t) {
            var n = e._private,
              r = this.getLabelText(e, t),
              i = this.calculateLabelDimensions(e, r),
              a = e.pstyle("line-height").pfValue,
              o = e.pstyle("text-wrap").strValue,
              s = Gt(n.rscratch, "labelWrapCachedLines", t) || [],
              l = "wrap" !== o ? 1 : Math.max(s.length, 1),
              u = i.height / l,
              c = u * a,
              h = i.width,
              d = i.height + (l - 1) * (a - 1) * u;
            Yt(n.rstyle, "labelWidth", t, h),
              Yt(n.rscratch, "labelWidth", t, h),
              Yt(n.rstyle, "labelHeight", t, d),
              Yt(n.rscratch, "labelHeight", t, d),
              Yt(n.rscratch, "labelLineHeight", t, c);
          }),
          (Ih.getLabelText = function (e, t) {
            var n = e._private,
              r = t ? t + "-" : "",
              i = e.pstyle(r + "label").strValue,
              a = e.pstyle("text-transform").value,
              o = function (e, r) {
                return r ? (Yt(n.rscratch, e, t, r), r) : Gt(n.rscratch, e, t);
              };
            if (!i) return "";
            "none" == a ||
              ("uppercase" == a
                ? (i = i.toUpperCase())
                : "lowercase" == a && (i = i.toLowerCase()));
            var s = e.pstyle("text-wrap").value;
            if ("wrap" === s) {
              var l = o("labelKey");
              if (null != l && o("labelWrapKey") === l)
                return o("labelWrapCachedText");
              for (
                var u = "\u200b",
                  c = i.split("\n"),
                  h = e.pstyle("text-max-width").pfValue,
                  d = "anywhere" === e.pstyle("text-overflow-wrap").value,
                  g = [],
                  f = /[\s\u200b]+|$/g,
                  v = 0;
                v < c.length;
                v++
              ) {
                var y = c[v],
                  m = this.calculateLabelDimensions(e, y).width;
                if (d) {
                  var b = y.split("").join(u);
                  y = b;
                }
                if (m > h) {
                  var x,
                    w = "",
                    E = 0,
                    T = p(y.matchAll(f));
                  try {
                    for (T.s(); !(x = T.n()).done; ) {
                      var _ = x.value,
                        D = _[0],
                        C = y.substring(E, _.index);
                      E = _.index + D.length;
                      var N = 0 === w.length ? C : w + C + D;
                      this.calculateLabelDimensions(e, N).width <= h
                        ? (w += C + D)
                        : (w && g.push(w), (w = C + D));
                    }
                  } catch (I) {
                    T.e(I);
                  } finally {
                    T.f();
                  }
                  w.match(/^[\s\u200b]+$/) || g.push(w);
                } else g.push(y);
              }
              o("labelWrapCachedLines", g),
                (i = o("labelWrapCachedText", g.join("\n"))),
                o("labelWrapKey", l);
            } else if ("ellipsis" === s) {
              var A = e.pstyle("text-max-width").pfValue,
                L = "",
                S = "\u2026",
                O = !1;
              if (this.calculateLabelDimensions(e, i).width < A) return i;
              for (
                var k = 0;
                k < i.length &&
                !(this.calculateLabelDimensions(e, L + i[k] + S).width > A);
                k++
              )
                (L += i[k]), k === i.length - 1 && (O = !0);
              return O || (L += S), L;
            }
            return i;
          }),
          (Ih.getLabelJustification = function (e) {
            var t = e.pstyle("text-justification").strValue,
              n = e.pstyle("text-halign").strValue;
            if ("auto" !== t) return t;
            if (!e.isNode()) return "center";
            switch (n) {
              case "left":
                return "right";
              case "right":
                return "left";
              default:
                return "center";
            }
          }),
          (Ih.calculateLabelDimensions = function (e, t) {
            var n = this,
              r = n.cy.window().document,
              i = vt(t, e._private.labelDimsKey),
              a = n.labelDimCache || (n.labelDimCache = []),
              o = a[i];
            if (null != o) return o;
            var s = 0,
              l = e.pstyle("font-style").strValue,
              u = e.pstyle("font-size").pfValue,
              c = e.pstyle("font-family").strValue,
              h = e.pstyle("font-weight").strValue,
              d = this.labelCalcCanvas,
              p = this.labelCalcCanvasContext;
            if (!d) {
              (d = this.labelCalcCanvas = r.createElement("canvas")),
                (p = this.labelCalcCanvasContext = d.getContext("2d"));
              var g = d.style;
              (g.position = "absolute"),
                (g.left = "-9999px"),
                (g.top = "-9999px"),
                (g.zIndex = "-1"),
                (g.visibility = "hidden"),
                (g.pointerEvents = "none");
            }
            p.font = ""
              .concat(l, " ")
              .concat(h, " ")
              .concat(u, "px ")
              .concat(c);
            for (
              var f = 0, v = 0, y = t.split("\n"), m = 0;
              m < y.length;
              m++
            ) {
              var b = y[m],
                x = p.measureText(b),
                w = Math.ceil(x.width),
                E = u;
              (f = Math.max(w, f)), (v += E);
            }
            return (f += s), (v += s), (a[i] = { width: f, height: v });
          }),
          (Ih.calculateLabelAngle = function (e, t) {
            var n = e._private.rscratch,
              r = e.isEdge(),
              i = t ? t + "-" : "",
              a = e.pstyle(i + "text-rotation"),
              o = a.strValue;
            return "none" === o
              ? 0
              : r && "autorotate" === o
              ? n.labelAutoAngle
              : "autorotate" === o
              ? 0
              : a.pfValue;
          }),
          (Ih.calculateLabelAngles = function (e) {
            var t = this,
              n = e.isEdge(),
              r = e._private.rscratch;
            (r.labelAngle = t.calculateLabelAngle(e)),
              n &&
                ((r.sourceLabelAngle = t.calculateLabelAngle(e, "source")),
                (r.targetLabelAngle = t.calculateLabelAngle(e, "target")));
          });
        var Bh = {},
          Fh = 28,
          zh = !1;
        Bh.getNodeShape = function (e) {
          var t = this,
            n = e.pstyle("shape").value;
          if ("cutrectangle" === n && (e.width() < Fh || e.height() < Fh))
            return (
              zh ||
                (Lt(
                  "The `cutrectangle` node shape can not be used at small sizes so `rectangle` is used instead"
                ),
                (zh = !0)),
              "rectangle"
            );
          if (e.isParent())
            return "rectangle" === n ||
              "roundrectangle" === n ||
              "round-rectangle" === n ||
              "cutrectangle" === n ||
              "cut-rectangle" === n ||
              "barrel" === n
              ? n
              : "rectangle";
          if ("polygon" === n) {
            var r = e.pstyle("shape-polygon-points").value;
            return t.nodeShapes.makePolygon(r).name;
          }
          return n;
        };
        var Gh = {
            registerCalculationListeners: function () {
              var e = this.cy,
                t = e.collection(),
                n = this,
                r = function (e) {
                  var n =
                    !(arguments.length > 1 && void 0 !== arguments[1]) ||
                    arguments[1];
                  if ((t.merge(e), n))
                    for (var r = 0; r < e.length; r++) {
                      var i = e[r]._private.rstyle;
                      (i.clean = !1), (i.cleanConnected = !1);
                    }
                };
              n.binder(e)
                .on("bounds.* dirty.*", function (e) {
                  var t = e.target;
                  r(t);
                })
                .on("style.* background.*", function (e) {
                  var t = e.target;
                  r(t, !1);
                });
              var i = function (i) {
                if (i) {
                  var a = n.onUpdateEleCalcsFns;
                  t.cleanStyle();
                  for (var o = 0; o < t.length; o++) {
                    var s = t[o],
                      l = s._private.rstyle;
                    s.isNode() &&
                      !l.cleanConnected &&
                      (r(s.connectedEdges()), (l.cleanConnected = !0));
                  }
                  if (a) for (var u = 0; u < a.length; u++) (0, a[u])(i, t);
                  n.recalculateRenderedStyle(t), (t = e.collection());
                }
              };
              (n.flushRenderedStyleQueue = function () {
                i(!0);
              }),
                n.beforeRender(i, n.beforeRenderPriorities.eleCalcs);
            },
            onUpdateEleCalcs: function (e) {
              (this.onUpdateEleCalcsFns = this.onUpdateEleCalcsFns || []).push(
                e
              );
            },
            recalculateRenderedStyle: function (e, t) {
              var n = function (e) {
                  return e._private.rstyle.cleanConnected;
                },
                r = [],
                i = [];
              if (!this.destroyed) {
                void 0 === t && (t = !0);
                for (var a = 0; a < e.length; a++) {
                  var o = e[a],
                    s = o._private,
                    l = s.rstyle;
                  !o.isEdge() ||
                    (n(o.source()) && n(o.target())) ||
                    (l.clean = !1),
                    (t && l.clean) ||
                      o.removed() ||
                      ("none" !== o.pstyle("display").value &&
                        ("nodes" === s.group ? i.push(o) : r.push(o),
                        (l.clean = !0)));
                }
                for (var u = 0; u < i.length; u++) {
                  var c = i[u],
                    h = c._private.rstyle,
                    d = c.position();
                  this.recalculateNodeLabelProjection(c),
                    (h.nodeX = d.x),
                    (h.nodeY = d.y),
                    (h.nodeW = c.pstyle("width").pfValue),
                    (h.nodeH = c.pstyle("height").pfValue);
                }
                this.recalculateEdgeProjections(r);
                for (var p = 0; p < r.length; p++) {
                  var g = r[p]._private,
                    f = g.rstyle,
                    v = g.rscratch;
                  (f.srcX = v.arrowStartX),
                    (f.srcY = v.arrowStartY),
                    (f.tgtX = v.arrowEndX),
                    (f.tgtY = v.arrowEndY),
                    (f.midX = v.midX),
                    (f.midY = v.midY),
                    (f.labelAngle = v.labelAngle),
                    (f.sourceLabelAngle = v.sourceLabelAngle),
                    (f.targetLabelAngle = v.targetLabelAngle);
                }
              }
            },
          },
          Yh = {
            updateCachedGrabbedEles: function () {
              var e = this.cachedZSortedEles;
              if (e) {
                (e.drag = []), (e.nondrag = []);
                for (var t = [], n = 0; n < e.length; n++) {
                  var r = (i = e[n])._private.rscratch;
                  i.grabbed() && !i.isParent()
                    ? t.push(i)
                    : r.inDragLayer
                    ? e.drag.push(i)
                    : e.nondrag.push(i);
                }
                for (n = 0; n < t.length; n++) {
                  var i = t[n];
                  e.drag.push(i);
                }
              }
            },
            invalidateCachedZSortedEles: function () {
              this.cachedZSortedEles = null;
            },
            getCachedZSortedEles: function (e) {
              if (e || !this.cachedZSortedEles) {
                var t = this.cy.mutableElements().toArray();
                t.sort(Ql),
                  (t.interactive = t.filter(function (e) {
                    return e.interactive();
                  })),
                  (this.cachedZSortedEles = t),
                  this.updateCachedGrabbedEles();
              } else t = this.cachedZSortedEles;
              return t;
            },
          },
          Xh = {};
        [nh, rh, Ah, Sh, Oh, Ih, Bh, Gh, Yh].forEach(function (e) {
          ee(Xh, e);
        });
        var Vh = {
            getCachedImage: function (e, t, n) {
              var r = this,
                i = (r.imageCache = r.imageCache || {}),
                a = i[e];
              if (a)
                return (
                  a.image.complete || a.image.addEventListener("load", n),
                  a.image
                );
              var o = ((a = i[e] = i[e] || {}).image = new Image());
              o.addEventListener("load", n),
                o.addEventListener("error", function () {
                  o.error = !0;
                });
              var s = "data:";
              return (
                e.substring(0, s.length).toLowerCase() === s ||
                  ((t = "null" === t ? null : t), (o.crossOrigin = t)),
                (o.src = e),
                o
              );
            },
          },
          Uh = {
            registerBinding: function (e, t, n, r) {
              var i = Array.prototype.slice.apply(arguments, [1]),
                a = this.binder(e);
              return a.on.apply(a, i);
            },
            binder: function (e) {
              var t = this,
                n = t.cy.window(),
                r =
                  e === n || e === n.document || e === n.document.body || R(e);
              if (null == t.supportsPassiveEvents) {
                var i = !1;
                try {
                  var a = Object.defineProperty({}, "passive", {
                    get: function () {
                      return (i = !0), !0;
                    },
                  });
                  n.addEventListener("test", null, a);
                } catch (s) {}
                t.supportsPassiveEvents = i;
              }
              var o = function (n, i, a) {
                var o = Array.prototype.slice.call(arguments);
                return (
                  r &&
                    t.supportsPassiveEvents &&
                    (o[2] = { capture: null != a && a, passive: !1, once: !1 }),
                  t.bindings.push({ target: e, args: o }),
                  (e.addEventListener || e.on).apply(e, o),
                  this
                );
              };
              return { on: o, addEventListener: o, addListener: o, bind: o };
            },
            nodeIsDraggable: function (e) {
              return e && e.isNode() && !e.locked() && e.grabbable();
            },
            nodeIsGrabbable: function (e) {
              return this.nodeIsDraggable(e) && e.interactive();
            },
            load: function () {
              var e = this,
                t = e.cy.window(),
                n = function (e) {
                  return e.selected();
                },
                r = function (t, n, r, i) {
                  null == t && (t = e.cy);
                  for (var a = 0; a < n.length; a++) {
                    var o = n[a];
                    t.emit({ originalEvent: r, type: o, position: i });
                  }
                },
                i = function (e) {
                  return e.shiftKey || e.metaKey || e.ctrlKey;
                },
                a = function (t, n) {
                  var r = !0;
                  if (e.cy.hasCompoundNodes() && t && t.pannable()) {
                    for (var i = 0; n && i < n.length; i++)
                      if (
                        (t = n[i]).isNode() &&
                        t.isParent() &&
                        !t.pannable()
                      ) {
                        r = !1;
                        break;
                      }
                  } else r = !0;
                  return r;
                },
                o = function (e) {
                  e[0]._private.grabbed = !0;
                },
                s = function (e) {
                  e[0]._private.grabbed = !1;
                },
                l = function (e) {
                  e[0]._private.rscratch.inDragLayer = !0;
                },
                u = function (e) {
                  e[0]._private.rscratch.inDragLayer = !1;
                },
                c = function (e) {
                  e[0]._private.rscratch.isGrabTarget = !0;
                },
                h = function (e) {
                  e[0]._private.rscratch.isGrabTarget = !1;
                },
                d = function (e, t) {
                  var n = t.addToList;
                  n.has(e) ||
                    !e.grabbable() ||
                    e.locked() ||
                    (n.merge(e), o(e));
                },
                p = function (e, t) {
                  if (
                    e.cy().hasCompoundNodes() &&
                    (null != t.inDragLayer || null != t.addToList)
                  ) {
                    var n = e.descendants();
                    t.inDragLayer &&
                      (n.forEach(l), n.connectedEdges().forEach(l)),
                      t.addToList && d(n, t);
                  }
                },
                g = function (t, n) {
                  n = n || {};
                  var r = t.cy().hasCompoundNodes();
                  n.inDragLayer &&
                    (t.forEach(l),
                    t
                      .neighborhood()
                      .stdFilter(function (e) {
                        return !r || e.isEdge();
                      })
                      .forEach(l)),
                    n.addToList &&
                      t.forEach(function (e) {
                        d(e, n);
                      }),
                    p(t, n),
                    y(t, { inDragLayer: n.inDragLayer }),
                    e.updateCachedGrabbedEles();
                },
                f = g,
                v = function (t) {
                  t &&
                    (e.getCachedZSortedEles().forEach(function (e) {
                      s(e), u(e), h(e);
                    }),
                    e.updateCachedGrabbedEles());
                },
                y = function (e, t) {
                  if (
                    (null != t.inDragLayer || null != t.addToList) &&
                    e.cy().hasCompoundNodes()
                  ) {
                    var n = e.ancestors().orphans();
                    if (!n.same(e)) {
                      var r = n
                          .descendants()
                          .spawnSelf()
                          .merge(n)
                          .unmerge(e)
                          .unmerge(e.descendants()),
                        i = r.connectedEdges();
                      t.inDragLayer && (i.forEach(l), r.forEach(l)),
                        t.addToList &&
                          r.forEach(function (e) {
                            d(e, t);
                          });
                    }
                  }
                },
                m = function () {
                  null != document.activeElement &&
                    null != document.activeElement.blur &&
                    document.activeElement.blur();
                },
                b = "undefined" != typeof MutationObserver,
                x = "undefined" != typeof ResizeObserver;
              b
                ? ((e.removeObserver = new MutationObserver(function (t) {
                    for (var n = 0; n < t.length; n++) {
                      var r = t[n].removedNodes;
                      if (r)
                        for (var i = 0; i < r.length; i++)
                          if (r[i] === e.container) {
                            e.destroy();
                            break;
                          }
                    }
                  })),
                  e.container.parentNode &&
                    e.removeObserver.observe(e.container.parentNode, {
                      childList: !0,
                    }))
                : e.registerBinding(
                    e.container,
                    "DOMNodeRemoved",
                    function (t) {
                      e.destroy();
                    }
                  );
              var w = et(function () {
                e.cy.resize();
              }, 100);
              b &&
                ((e.styleObserver = new MutationObserver(w)),
                e.styleObserver.observe(e.container, { attributes: !0 })),
                e.registerBinding(t, "resize", w),
                x &&
                  ((e.resizeObserver = new ResizeObserver(w)),
                  e.resizeObserver.observe(e.container));
              var E = function (e, t) {
                  for (; null != e; ) t(e), (e = e.parentNode);
                },
                T = function () {
                  e.invalidateContainerClientCoordsCache();
                };
              E(e.container, function (t) {
                e.registerBinding(t, "transitionend", T),
                  e.registerBinding(t, "animationend", T),
                  e.registerBinding(t, "scroll", T);
              }),
                e.registerBinding(e.container, "contextmenu", function (e) {
                  e.preventDefault();
                });
              var _,
                D,
                N,
                A = function () {
                  return 0 !== e.selection[4];
                },
                L = function (t) {
                  for (
                    var n = e.findContainerClientCoords(),
                      r = n[0],
                      i = n[1],
                      a = n[2],
                      o = n[3],
                      s = t.touches ? t.touches : [t],
                      l = !1,
                      u = 0;
                    u < s.length;
                    u++
                  ) {
                    var c = s[u];
                    if (
                      r <= c.clientX &&
                      c.clientX <= r + a &&
                      i <= c.clientY &&
                      c.clientY <= i + o
                    ) {
                      l = !0;
                      break;
                    }
                  }
                  if (!l) return !1;
                  for (
                    var h = e.container, d = t.target.parentNode, p = !1;
                    d;

                  ) {
                    if (d === h) {
                      p = !0;
                      break;
                    }
                    d = d.parentNode;
                  }
                  return !!p;
                };
              e.registerBinding(
                e.container,
                "mousedown",
                function (t) {
                  if (L(t) && (1 !== e.hoverData.which || 1 === t.which)) {
                    t.preventDefault(),
                      m(),
                      (e.hoverData.capture = !0),
                      (e.hoverData.which = t.which);
                    var n = e.cy,
                      i = [t.clientX, t.clientY],
                      a = e.projectIntoViewport(i[0], i[1]),
                      o = e.selection,
                      s = e.findNearestElements(a[0], a[1], !0, !1),
                      l = s[0],
                      u = e.dragData.possibleDragElements;
                    (e.hoverData.mdownPos = a), (e.hoverData.mdownGPos = i);
                    var h = function () {
                      (e.hoverData.tapholdCancelled = !1),
                        clearTimeout(e.hoverData.tapholdTimeout),
                        (e.hoverData.tapholdTimeout = setTimeout(function () {
                          if (!e.hoverData.tapholdCancelled) {
                            var r = e.hoverData.down;
                            r
                              ? r.emit({
                                  originalEvent: t,
                                  type: "taphold",
                                  position: { x: a[0], y: a[1] },
                                })
                              : n.emit({
                                  originalEvent: t,
                                  type: "taphold",
                                  position: { x: a[0], y: a[1] },
                                });
                          }
                        }, e.tapholdDuration));
                    };
                    if (3 == t.which) {
                      e.hoverData.cxtStarted = !0;
                      var d = {
                        originalEvent: t,
                        type: "cxttapstart",
                        position: { x: a[0], y: a[1] },
                      };
                      l
                        ? (l.activate(), l.emit(d), (e.hoverData.down = l))
                        : n.emit(d),
                        (e.hoverData.downTime = new Date().getTime()),
                        (e.hoverData.cxtDragged = !1);
                    } else if (1 == t.which) {
                      if (
                        (l && l.activate(), null != l && e.nodeIsGrabbable(l))
                      ) {
                        var p = function (e) {
                            return {
                              originalEvent: t,
                              type: e,
                              position: { x: a[0], y: a[1] },
                            };
                          },
                          v = function (e) {
                            e.emit(p("grab"));
                          };
                        if ((c(l), l.selected())) {
                          u = e.dragData.possibleDragElements = n.collection();
                          var y = n.$(function (t) {
                            return (
                              t.isNode() && t.selected() && e.nodeIsGrabbable(t)
                            );
                          });
                          g(y, { addToList: u }),
                            l.emit(p("grabon")),
                            y.forEach(v);
                        } else
                          (u = e.dragData.possibleDragElements =
                            n.collection()),
                            f(l, { addToList: u }),
                            l.emit(p("grabon")).emit(p("grab"));
                        e.redrawHint("eles", !0), e.redrawHint("drag", !0);
                      }
                      (e.hoverData.down = l),
                        (e.hoverData.downs = s),
                        (e.hoverData.downTime = new Date().getTime()),
                        r(l, ["mousedown", "tapstart", "vmousedown"], t, {
                          x: a[0],
                          y: a[1],
                        }),
                        null == l
                          ? ((o[4] = 1),
                            (e.data.bgActivePosistion = { x: a[0], y: a[1] }),
                            e.redrawHint("select", !0),
                            e.redraw())
                          : l.pannable() && (o[4] = 1),
                        h();
                    }
                    (o[0] = o[2] = a[0]), (o[1] = o[3] = a[1]);
                  }
                },
                !1
              ),
                e.registerBinding(
                  t,
                  "mousemove",
                  function (t) {
                    if (e.hoverData.capture || L(t)) {
                      var n = !1,
                        o = e.cy,
                        s = o.zoom(),
                        l = [t.clientX, t.clientY],
                        u = e.projectIntoViewport(l[0], l[1]),
                        c = e.hoverData.mdownPos,
                        h = e.hoverData.mdownGPos,
                        d = e.selection,
                        p = null;
                      e.hoverData.draggingEles ||
                        e.hoverData.dragging ||
                        e.hoverData.selecting ||
                        (p = e.findNearestElement(u[0], u[1], !0, !1));
                      var f,
                        y = e.hoverData.last,
                        m = e.hoverData.down,
                        b = [u[0] - d[2], u[1] - d[3]],
                        x = e.dragData.possibleDragElements;
                      if (h) {
                        var w = l[0] - h[0],
                          E = w * w,
                          T = l[1] - h[1],
                          _ = E + T * T;
                        e.hoverData.isOverThresholdDrag = f =
                          _ >= e.desktopTapThreshold2;
                      }
                      var D = i(t);
                      f && (e.hoverData.tapholdCancelled = !0);
                      var N = function () {
                        var t = (e.hoverData.dragDelta =
                          e.hoverData.dragDelta || []);
                        0 === t.length
                          ? (t.push(b[0]), t.push(b[1]))
                          : ((t[0] += b[0]), (t[1] += b[1]));
                      };
                      (n = !0),
                        r(p, ["mousemove", "vmousemove", "tapdrag"], t, {
                          x: u[0],
                          y: u[1],
                        });
                      var A = function () {
                        (e.data.bgActivePosistion = void 0),
                          e.hoverData.selecting ||
                            o.emit({
                              originalEvent: t,
                              type: "boxstart",
                              position: { x: u[0], y: u[1] },
                            }),
                          (d[4] = 1),
                          (e.hoverData.selecting = !0),
                          e.redrawHint("select", !0),
                          e.redraw();
                      };
                      if (3 === e.hoverData.which) {
                        if (f) {
                          var S = {
                            originalEvent: t,
                            type: "cxtdrag",
                            position: { x: u[0], y: u[1] },
                          };
                          m ? m.emit(S) : o.emit(S),
                            (e.hoverData.cxtDragged = !0),
                            (e.hoverData.cxtOver &&
                              p === e.hoverData.cxtOver) ||
                              (e.hoverData.cxtOver &&
                                e.hoverData.cxtOver.emit({
                                  originalEvent: t,
                                  type: "cxtdragout",
                                  position: { x: u[0], y: u[1] },
                                }),
                              (e.hoverData.cxtOver = p),
                              p &&
                                p.emit({
                                  originalEvent: t,
                                  type: "cxtdragover",
                                  position: { x: u[0], y: u[1] },
                                }));
                        }
                      } else if (e.hoverData.dragging) {
                        if (
                          ((n = !0),
                          o.panningEnabled() && o.userPanningEnabled())
                        ) {
                          var O;
                          if (e.hoverData.justStartedPan) {
                            var k = e.hoverData.mdownPos;
                            (O = {
                              x: (u[0] - k[0]) * s,
                              y: (u[1] - k[1]) * s,
                            }),
                              (e.hoverData.justStartedPan = !1);
                          } else O = { x: b[0] * s, y: b[1] * s };
                          o.panBy(O),
                            o.emit("dragpan"),
                            (e.hoverData.dragged = !0);
                        }
                        u = e.projectIntoViewport(t.clientX, t.clientY);
                      } else if (1 != d[4] || (null != m && !m.pannable())) {
                        if (
                          (m && m.pannable() && m.active() && m.unactivate(),
                          (m && m.grabbed()) ||
                            p == y ||
                            (y &&
                              r(y, ["mouseout", "tapdragout"], t, {
                                x: u[0],
                                y: u[1],
                              }),
                            p &&
                              r(p, ["mouseover", "tapdragover"], t, {
                                x: u[0],
                                y: u[1],
                              }),
                            (e.hoverData.last = p)),
                          m)
                        )
                          if (f) {
                            if (o.boxSelectionEnabled() && D)
                              m &&
                                m.grabbed() &&
                                (v(x),
                                m.emit("freeon"),
                                x.emit("free"),
                                e.dragData.didDrag &&
                                  (m.emit("dragfreeon"), x.emit("dragfree"))),
                                A();
                            else if (m && m.grabbed() && e.nodeIsDraggable(m)) {
                              var I = !e.dragData.didDrag;
                              I && e.redrawHint("eles", !0),
                                (e.dragData.didDrag = !0),
                                e.hoverData.draggingEles ||
                                  g(x, { inDragLayer: !0 });
                              var M = { x: 0, y: 0 };
                              if (
                                C(b[0]) &&
                                C(b[1]) &&
                                ((M.x += b[0]), (M.y += b[1]), I)
                              ) {
                                var P = e.hoverData.dragDelta;
                                P &&
                                  C(P[0]) &&
                                  C(P[1]) &&
                                  ((M.x += P[0]), (M.y += P[1]));
                              }
                              (e.hoverData.draggingEles = !0),
                                x.silentShift(M).emit("position drag"),
                                e.redrawHint("drag", !0),
                                e.redraw();
                            }
                          } else N();
                        n = !0;
                      } else
                        f &&
                          (e.hoverData.dragging ||
                          !o.boxSelectionEnabled() ||
                          (!D && o.panningEnabled() && o.userPanningEnabled())
                            ? !e.hoverData.selecting &&
                              o.panningEnabled() &&
                              o.userPanningEnabled() &&
                              a(m, e.hoverData.downs) &&
                              ((e.hoverData.dragging = !0),
                              (e.hoverData.justStartedPan = !0),
                              (d[4] = 0),
                              (e.data.bgActivePosistion = fn(c)),
                              e.redrawHint("select", !0),
                              e.redraw())
                            : A(),
                          m && m.pannable() && m.active() && m.unactivate());
                      return (
                        (d[2] = u[0]),
                        (d[3] = u[1]),
                        n
                          ? (t.stopPropagation && t.stopPropagation(),
                            t.preventDefault && t.preventDefault(),
                            !1)
                          : void 0
                      );
                    }
                  },
                  !1
                ),
                e.registerBinding(
                  t,
                  "mouseup",
                  function (t) {
                    if (
                      (1 !== e.hoverData.which ||
                        1 === t.which ||
                        !e.hoverData.capture) &&
                      e.hoverData.capture
                    ) {
                      e.hoverData.capture = !1;
                      var a = e.cy,
                        o = e.projectIntoViewport(t.clientX, t.clientY),
                        s = e.selection,
                        l = e.findNearestElement(o[0], o[1], !0, !1),
                        u = e.dragData.possibleDragElements,
                        c = e.hoverData.down,
                        h = i(t);
                      if (
                        (e.data.bgActivePosistion &&
                          (e.redrawHint("select", !0), e.redraw()),
                        (e.hoverData.tapholdCancelled = !0),
                        (e.data.bgActivePosistion = void 0),
                        c && c.unactivate(),
                        3 === e.hoverData.which)
                      ) {
                        var d = {
                          originalEvent: t,
                          type: "cxttapend",
                          position: { x: o[0], y: o[1] },
                        };
                        if (
                          (c ? c.emit(d) : a.emit(d), !e.hoverData.cxtDragged)
                        ) {
                          var p = {
                            originalEvent: t,
                            type: "cxttap",
                            position: { x: o[0], y: o[1] },
                          };
                          c ? c.emit(p) : a.emit(p);
                        }
                        (e.hoverData.cxtDragged = !1),
                          (e.hoverData.which = null);
                      } else if (1 === e.hoverData.which) {
                        if (
                          (r(l, ["mouseup", "tapend", "vmouseup"], t, {
                            x: o[0],
                            y: o[1],
                          }),
                          e.dragData.didDrag ||
                            e.hoverData.dragged ||
                            e.hoverData.selecting ||
                            e.hoverData.isOverThresholdDrag ||
                            (r(c, ["click", "tap", "vclick"], t, {
                              x: o[0],
                              y: o[1],
                            }),
                            (D = !1),
                            t.timeStamp - N <= a.multiClickDebounceTime()
                              ? (_ && clearTimeout(_),
                                (D = !0),
                                (N = null),
                                r(c, ["dblclick", "dbltap", "vdblclick"], t, {
                                  x: o[0],
                                  y: o[1],
                                }))
                              : ((_ = setTimeout(function () {
                                  D ||
                                    r(
                                      c,
                                      ["oneclick", "onetap", "voneclick"],
                                      t,
                                      { x: o[0], y: o[1] }
                                    );
                                }, a.multiClickDebounceTime())),
                                (N = t.timeStamp))),
                          null != c ||
                            e.dragData.didDrag ||
                            e.hoverData.selecting ||
                            e.hoverData.dragged ||
                            i(t) ||
                            (a.$(n).unselect(["tapunselect"]),
                            u.length > 0 && e.redrawHint("eles", !0),
                            (e.dragData.possibleDragElements = u =
                              a.collection())),
                          l != c ||
                            e.dragData.didDrag ||
                            e.hoverData.selecting ||
                            (null != l &&
                              l._private.selectable &&
                              (e.hoverData.dragging ||
                                ("additive" === a.selectionType() || h
                                  ? l.selected()
                                    ? l.unselect(["tapunselect"])
                                    : l.select(["tapselect"])
                                  : h ||
                                    (a
                                      .$(n)
                                      .unmerge(l)
                                      .unselect(["tapunselect"]),
                                    l.select(["tapselect"]))),
                              e.redrawHint("eles", !0))),
                          e.hoverData.selecting)
                        ) {
                          var g = a.collection(
                            e.getAllInBox(s[0], s[1], s[2], s[3])
                          );
                          e.redrawHint("select", !0),
                            g.length > 0 && e.redrawHint("eles", !0),
                            a.emit({
                              type: "boxend",
                              originalEvent: t,
                              position: { x: o[0], y: o[1] },
                            });
                          var f = function (e) {
                            return e.selectable() && !e.selected();
                          };
                          "additive" === a.selectionType() ||
                            h ||
                            a.$(n).unmerge(g).unselect(),
                            g
                              .emit("box")
                              .stdFilter(f)
                              .select()
                              .emit("boxselect"),
                            e.redraw();
                        }
                        if (
                          (e.hoverData.dragging &&
                            ((e.hoverData.dragging = !1),
                            e.redrawHint("select", !0),
                            e.redrawHint("eles", !0),
                            e.redraw()),
                          !s[4])
                        ) {
                          e.redrawHint("drag", !0), e.redrawHint("eles", !0);
                          var y = c && c.grabbed();
                          v(u),
                            y &&
                              (c.emit("freeon"),
                              u.emit("free"),
                              e.dragData.didDrag &&
                                (c.emit("dragfreeon"), u.emit("dragfree")));
                        }
                      }
                      (s[4] = 0),
                        (e.hoverData.down = null),
                        (e.hoverData.cxtStarted = !1),
                        (e.hoverData.draggingEles = !1),
                        (e.hoverData.selecting = !1),
                        (e.hoverData.isOverThresholdDrag = !1),
                        (e.dragData.didDrag = !1),
                        (e.hoverData.dragged = !1),
                        (e.hoverData.dragDelta = []),
                        (e.hoverData.mdownPos = null),
                        (e.hoverData.mdownGPos = null),
                        (e.hoverData.which = null);
                    }
                  },
                  !1
                );
              var S,
                O,
                k,
                I,
                M,
                P,
                R,
                B,
                F,
                z,
                G,
                Y,
                X,
                V = function (t) {
                  if (!e.scrollingPage) {
                    var n = e.cy,
                      r = n.zoom(),
                      i = n.pan(),
                      a = e.projectIntoViewport(t.clientX, t.clientY),
                      o = [a[0] * r + i.x, a[1] * r + i.y];
                    if (
                      e.hoverData.draggingEles ||
                      e.hoverData.dragging ||
                      e.hoverData.cxtStarted ||
                      A()
                    )
                      t.preventDefault();
                    else if (
                      n.panningEnabled() &&
                      n.userPanningEnabled() &&
                      n.zoomingEnabled() &&
                      n.userZoomingEnabled()
                    ) {
                      var s;
                      t.preventDefault(),
                        (e.data.wheelZooming = !0),
                        clearTimeout(e.data.wheelTimeout),
                        (e.data.wheelTimeout = setTimeout(function () {
                          (e.data.wheelZooming = !1),
                            e.redrawHint("eles", !0),
                            e.redraw();
                        }, 150)),
                        (s =
                          null != t.deltaY
                            ? t.deltaY / -250
                            : null != t.wheelDeltaY
                            ? t.wheelDeltaY / 1e3
                            : t.wheelDelta / 1e3),
                        (s *= e.wheelSensitivity),
                        1 === t.deltaMode && (s *= 33);
                      var l = n.zoom() * Math.pow(10, s);
                      "gesturechange" === t.type &&
                        (l = e.gestureStartZoom * t.scale),
                        n.zoom({
                          level: l,
                          renderedPosition: { x: o[0], y: o[1] },
                        }),
                        n.emit(
                          "gesturechange" === t.type
                            ? "pinchzoom"
                            : "scrollzoom"
                        );
                    }
                  }
                };
              e.registerBinding(e.container, "wheel", V, !0),
                e.registerBinding(
                  t,
                  "scroll",
                  function (t) {
                    (e.scrollingPage = !0),
                      clearTimeout(e.scrollingPageTimeout),
                      (e.scrollingPageTimeout = setTimeout(function () {
                        e.scrollingPage = !1;
                      }, 250));
                  },
                  !0
                ),
                e.registerBinding(
                  e.container,
                  "gesturestart",
                  function (t) {
                    (e.gestureStartZoom = e.cy.zoom()),
                      e.hasTouchStarted || t.preventDefault();
                  },
                  !0
                ),
                e.registerBinding(
                  e.container,
                  "gesturechange",
                  function (t) {
                    e.hasTouchStarted || V(t);
                  },
                  !0
                ),
                e.registerBinding(
                  e.container,
                  "mouseout",
                  function (t) {
                    var n = e.projectIntoViewport(t.clientX, t.clientY);
                    e.cy.emit({
                      originalEvent: t,
                      type: "mouseout",
                      position: { x: n[0], y: n[1] },
                    });
                  },
                  !1
                ),
                e.registerBinding(
                  e.container,
                  "mouseover",
                  function (t) {
                    var n = e.projectIntoViewport(t.clientX, t.clientY);
                    e.cy.emit({
                      originalEvent: t,
                      type: "mouseover",
                      position: { x: n[0], y: n[1] },
                    });
                  },
                  !1
                );
              var U,
                j,
                H,
                q,
                W,
                $,
                K,
                Z = function (e, t, n, r) {
                  return Math.sqrt((n - e) * (n - e) + (r - t) * (r - t));
                },
                Q = function (e, t, n, r) {
                  return (n - e) * (n - e) + (r - t) * (r - t);
                };
              if (
                (e.registerBinding(
                  e.container,
                  "touchstart",
                  (U = function (t) {
                    if (((e.hasTouchStarted = !0), L(t))) {
                      m(),
                        (e.touchData.capture = !0),
                        (e.data.bgActivePosistion = void 0);
                      var n = e.cy,
                        i = e.touchData.now,
                        a = e.touchData.earlier;
                      if (t.touches[0]) {
                        var o = e.projectIntoViewport(
                          t.touches[0].clientX,
                          t.touches[0].clientY
                        );
                        (i[0] = o[0]), (i[1] = o[1]);
                      }
                      if (
                        (t.touches[1] &&
                          ((o = e.projectIntoViewport(
                            t.touches[1].clientX,
                            t.touches[1].clientY
                          )),
                          (i[2] = o[0]),
                          (i[3] = o[1])),
                        t.touches[2] &&
                          ((o = e.projectIntoViewport(
                            t.touches[2].clientX,
                            t.touches[2].clientY
                          )),
                          (i[4] = o[0]),
                          (i[5] = o[1])),
                        t.touches[1])
                      ) {
                        (e.touchData.singleTouchMoved = !0),
                          v(e.dragData.touchDragEles);
                        var s = e.findContainerClientCoords();
                        (F = s[0]),
                          (z = s[1]),
                          (G = s[2]),
                          (Y = s[3]),
                          (S = t.touches[0].clientX - F),
                          (O = t.touches[0].clientY - z),
                          (k = t.touches[1].clientX - F),
                          (I = t.touches[1].clientY - z),
                          (X =
                            0 <= S &&
                            S <= G &&
                            0 <= k &&
                            k <= G &&
                            0 <= O &&
                            O <= Y &&
                            0 <= I &&
                            I <= Y);
                        var l = n.pan(),
                          u = n.zoom();
                        (M = Z(S, O, k, I)),
                          (P = Q(S, O, k, I)),
                          (B = [
                            ((R = [(S + k) / 2, (O + I) / 2])[0] - l.x) / u,
                            (R[1] - l.y) / u,
                          ]);
                        var h = 200;
                        if (P < h * h && !t.touches[2]) {
                          var d = e.findNearestElement(i[0], i[1], !0, !0),
                            p = e.findNearestElement(i[2], i[3], !0, !0);
                          return (
                            d && d.isNode()
                              ? (d
                                  .activate()
                                  .emit({
                                    originalEvent: t,
                                    type: "cxttapstart",
                                    position: { x: i[0], y: i[1] },
                                  }),
                                (e.touchData.start = d))
                              : p && p.isNode()
                              ? (p
                                  .activate()
                                  .emit({
                                    originalEvent: t,
                                    type: "cxttapstart",
                                    position: { x: i[0], y: i[1] },
                                  }),
                                (e.touchData.start = p))
                              : n.emit({
                                  originalEvent: t,
                                  type: "cxttapstart",
                                  position: { x: i[0], y: i[1] },
                                }),
                            e.touchData.start &&
                              (e.touchData.start._private.grabbed = !1),
                            (e.touchData.cxt = !0),
                            (e.touchData.cxtDragged = !1),
                            (e.data.bgActivePosistion = void 0),
                            void e.redraw()
                          );
                        }
                      }
                      if (t.touches[2])
                        n.boxSelectionEnabled() && t.preventDefault();
                      else if (t.touches[1]);
                      else if (t.touches[0]) {
                        var y = e.findNearestElements(i[0], i[1], !0, !0),
                          b = y[0];
                        if (
                          null != b &&
                          (b.activate(),
                          (e.touchData.start = b),
                          (e.touchData.starts = y),
                          e.nodeIsGrabbable(b))
                        ) {
                          var x = (e.dragData.touchDragEles = n.collection()),
                            w = null;
                          e.redrawHint("eles", !0),
                            e.redrawHint("drag", !0),
                            b.selected()
                              ? ((w = n.$(function (t) {
                                  return t.selected() && e.nodeIsGrabbable(t);
                                })),
                                g(w, { addToList: x }))
                              : f(b, { addToList: x }),
                            c(b);
                          var E = function (e) {
                            return {
                              originalEvent: t,
                              type: e,
                              position: { x: i[0], y: i[1] },
                            };
                          };
                          b.emit(E("grabon")),
                            w
                              ? w.forEach(function (e) {
                                  e.emit(E("grab"));
                                })
                              : b.emit(E("grab"));
                        }
                        r(b, ["touchstart", "tapstart", "vmousedown"], t, {
                          x: i[0],
                          y: i[1],
                        }),
                          null == b &&
                            ((e.data.bgActivePosistion = { x: o[0], y: o[1] }),
                            e.redrawHint("select", !0),
                            e.redraw()),
                          (e.touchData.singleTouchMoved = !1),
                          (e.touchData.singleTouchStartTime = +new Date()),
                          clearTimeout(e.touchData.tapholdTimeout),
                          (e.touchData.tapholdTimeout = setTimeout(function () {
                            !1 !== e.touchData.singleTouchMoved ||
                              e.pinching ||
                              e.touchData.selecting ||
                              r(e.touchData.start, ["taphold"], t, {
                                x: i[0],
                                y: i[1],
                              });
                          }, e.tapholdDuration));
                      }
                      if (t.touches.length >= 1) {
                        for (
                          var T = (e.touchData.startPosition = [
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                            ]),
                            _ = 0;
                          _ < i.length;
                          _++
                        )
                          T[_] = a[_] = i[_];
                        var D = t.touches[0];
                        e.touchData.startGPosition = [D.clientX, D.clientY];
                      }
                    }
                  }),
                  !1
                ),
                e.registerBinding(
                  t,
                  "touchmove",
                  (j = function (t) {
                    var n = e.touchData.capture;
                    if (n || L(t)) {
                      var i = e.selection,
                        o = e.cy,
                        s = e.touchData.now,
                        l = e.touchData.earlier,
                        u = o.zoom();
                      if (t.touches[0]) {
                        var c = e.projectIntoViewport(
                          t.touches[0].clientX,
                          t.touches[0].clientY
                        );
                        (s[0] = c[0]), (s[1] = c[1]);
                      }
                      t.touches[1] &&
                        ((c = e.projectIntoViewport(
                          t.touches[1].clientX,
                          t.touches[1].clientY
                        )),
                        (s[2] = c[0]),
                        (s[3] = c[1])),
                        t.touches[2] &&
                          ((c = e.projectIntoViewport(
                            t.touches[2].clientX,
                            t.touches[2].clientY
                          )),
                          (s[4] = c[0]),
                          (s[5] = c[1]));
                      var h,
                        d = e.touchData.startGPosition;
                      if (n && t.touches[0] && d) {
                        for (var p = [], f = 0; f < s.length; f++)
                          p[f] = s[f] - l[f];
                        var y = t.touches[0].clientX - d[0],
                          m = y * y,
                          b = t.touches[0].clientY - d[1];
                        h = m + b * b >= e.touchTapThreshold2;
                      }
                      if (n && e.touchData.cxt) {
                        t.preventDefault();
                        var x = t.touches[0].clientX - F,
                          w = t.touches[0].clientY - z,
                          E = t.touches[1].clientX - F,
                          T = t.touches[1].clientY - z,
                          _ = Q(x, w, E, T),
                          D = 150,
                          N = 1.5;
                        if (_ / P >= N * N || _ >= D * D) {
                          (e.touchData.cxt = !1),
                            (e.data.bgActivePosistion = void 0),
                            e.redrawHint("select", !0);
                          var A = {
                            originalEvent: t,
                            type: "cxttapend",
                            position: { x: s[0], y: s[1] },
                          };
                          e.touchData.start
                            ? (e.touchData.start.unactivate().emit(A),
                              (e.touchData.start = null))
                            : o.emit(A);
                        }
                      }
                      if (n && e.touchData.cxt) {
                        (A = {
                          originalEvent: t,
                          type: "cxtdrag",
                          position: { x: s[0], y: s[1] },
                        }),
                          (e.data.bgActivePosistion = void 0),
                          e.redrawHint("select", !0),
                          e.touchData.start
                            ? e.touchData.start.emit(A)
                            : o.emit(A),
                          e.touchData.start &&
                            (e.touchData.start._private.grabbed = !1),
                          (e.touchData.cxtDragged = !0);
                        var R = e.findNearestElement(s[0], s[1], !0, !0);
                        (e.touchData.cxtOver && R === e.touchData.cxtOver) ||
                          (e.touchData.cxtOver &&
                            e.touchData.cxtOver.emit({
                              originalEvent: t,
                              type: "cxtdragout",
                              position: { x: s[0], y: s[1] },
                            }),
                          (e.touchData.cxtOver = R),
                          R &&
                            R.emit({
                              originalEvent: t,
                              type: "cxtdragover",
                              position: { x: s[0], y: s[1] },
                            }));
                      } else if (n && t.touches[2] && o.boxSelectionEnabled())
                        t.preventDefault(),
                          (e.data.bgActivePosistion = void 0),
                          (this.lastThreeTouch = +new Date()),
                          e.touchData.selecting ||
                            o.emit({
                              originalEvent: t,
                              type: "boxstart",
                              position: { x: s[0], y: s[1] },
                            }),
                          (e.touchData.selecting = !0),
                          (e.touchData.didSelect = !0),
                          (i[4] = 1),
                          i && 0 !== i.length && void 0 !== i[0]
                            ? ((i[2] = (s[0] + s[2] + s[4]) / 3),
                              (i[3] = (s[1] + s[3] + s[5]) / 3))
                            : ((i[0] = (s[0] + s[2] + s[4]) / 3),
                              (i[1] = (s[1] + s[3] + s[5]) / 3),
                              (i[2] = (s[0] + s[2] + s[4]) / 3 + 1),
                              (i[3] = (s[1] + s[3] + s[5]) / 3 + 1)),
                          e.redrawHint("select", !0),
                          e.redraw();
                      else if (
                        n &&
                        t.touches[1] &&
                        !e.touchData.didSelect &&
                        o.zoomingEnabled() &&
                        o.panningEnabled() &&
                        o.userZoomingEnabled() &&
                        o.userPanningEnabled()
                      ) {
                        if (
                          (t.preventDefault(),
                          (e.data.bgActivePosistion = void 0),
                          e.redrawHint("select", !0),
                          (ne = e.dragData.touchDragEles))
                        ) {
                          e.redrawHint("drag", !0);
                          for (var G = 0; G < ne.length; G++) {
                            var Y = ne[G]._private;
                            (Y.grabbed = !1), (Y.rscratch.inDragLayer = !1);
                          }
                        }
                        var V = e.touchData.start,
                          U =
                            ((x = t.touches[0].clientX - F),
                            (w = t.touches[0].clientY - z),
                            (E = t.touches[1].clientX - F),
                            (T = t.touches[1].clientY - z),
                            Z(x, w, E, T)),
                          j = U / M;
                        if (X) {
                          var H = (x - S + (E - k)) / 2,
                            q = (w - O + (T - I)) / 2,
                            W = o.zoom(),
                            $ = W * j,
                            K = o.pan(),
                            J = B[0] * W + K.x,
                            ee = B[1] * W + K.y,
                            te = {
                              x: (-$ / W) * (J - K.x - H) + J,
                              y: (-$ / W) * (ee - K.y - q) + ee,
                            };
                          if (V && V.active()) {
                            var ne = e.dragData.touchDragEles;
                            v(ne),
                              e.redrawHint("drag", !0),
                              e.redrawHint("eles", !0),
                              V.unactivate().emit("freeon"),
                              ne.emit("free"),
                              e.dragData.didDrag &&
                                (V.emit("dragfreeon"), ne.emit("dragfree"));
                          }
                          o.viewport({
                            zoom: $,
                            pan: te,
                            cancelOnFailedZoom: !0,
                          }),
                            o.emit("pinchzoom"),
                            (M = U),
                            (S = x),
                            (O = w),
                            (k = E),
                            (I = T),
                            (e.pinching = !0);
                        }
                        t.touches[0] &&
                          ((c = e.projectIntoViewport(
                            t.touches[0].clientX,
                            t.touches[0].clientY
                          )),
                          (s[0] = c[0]),
                          (s[1] = c[1])),
                          t.touches[1] &&
                            ((c = e.projectIntoViewport(
                              t.touches[1].clientX,
                              t.touches[1].clientY
                            )),
                            (s[2] = c[0]),
                            (s[3] = c[1])),
                          t.touches[2] &&
                            ((c = e.projectIntoViewport(
                              t.touches[2].clientX,
                              t.touches[2].clientY
                            )),
                            (s[4] = c[0]),
                            (s[5] = c[1]));
                      } else if (t.touches[0] && !e.touchData.didSelect) {
                        var re = e.touchData.start,
                          ie = e.touchData.last;
                        if (
                          (e.hoverData.draggingEles ||
                            e.swipePanning ||
                            (R = e.findNearestElement(s[0], s[1], !0, !0)),
                          n && null != re && t.preventDefault(),
                          n && null != re && e.nodeIsDraggable(re))
                        )
                          if (h) {
                            ne = e.dragData.touchDragEles;
                            var ae = !e.dragData.didDrag;
                            ae && g(ne, { inDragLayer: !0 }),
                              (e.dragData.didDrag = !0);
                            var oe = { x: 0, y: 0 };
                            C(p[0]) &&
                              C(p[1]) &&
                              ((oe.x += p[0]),
                              (oe.y += p[1]),
                              ae &&
                                (e.redrawHint("eles", !0),
                                (se = e.touchData.dragDelta) &&
                                  C(se[0]) &&
                                  C(se[1]) &&
                                  ((oe.x += se[0]), (oe.y += se[1])))),
                              (e.hoverData.draggingEles = !0),
                              ne.silentShift(oe).emit("position drag"),
                              e.redrawHint("drag", !0),
                              e.touchData.startPosition[0] == l[0] &&
                                e.touchData.startPosition[1] == l[1] &&
                                e.redrawHint("eles", !0),
                              e.redraw();
                          } else {
                            var se;
                            0 ===
                            (se = e.touchData.dragDelta =
                              e.touchData.dragDelta || []).length
                              ? (se.push(p[0]), se.push(p[1]))
                              : ((se[0] += p[0]), (se[1] += p[1]));
                          }
                        if (
                          (r(
                            re || R,
                            ["touchmove", "tapdrag", "vmousemove"],
                            t,
                            { x: s[0], y: s[1] }
                          ),
                          (re && re.grabbed()) ||
                            R == ie ||
                            (ie &&
                              ie.emit({
                                originalEvent: t,
                                type: "tapdragout",
                                position: { x: s[0], y: s[1] },
                              }),
                            R &&
                              R.emit({
                                originalEvent: t,
                                type: "tapdragover",
                                position: { x: s[0], y: s[1] },
                              })),
                          (e.touchData.last = R),
                          n)
                        )
                          for (G = 0; G < s.length; G++)
                            s[G] &&
                              e.touchData.startPosition[G] &&
                              h &&
                              (e.touchData.singleTouchMoved = !0);
                        n &&
                          (null == re || re.pannable()) &&
                          o.panningEnabled() &&
                          o.userPanningEnabled() &&
                          (a(re, e.touchData.starts) &&
                            (t.preventDefault(),
                            e.data.bgActivePosistion ||
                              (e.data.bgActivePosistion = fn(
                                e.touchData.startPosition
                              )),
                            e.swipePanning
                              ? (o.panBy({ x: p[0] * u, y: p[1] * u }),
                                o.emit("dragpan"))
                              : h &&
                                ((e.swipePanning = !0),
                                o.panBy({ x: y * u, y: b * u }),
                                o.emit("dragpan"),
                                re &&
                                  (re.unactivate(),
                                  e.redrawHint("select", !0),
                                  (e.touchData.start = null)))),
                          (c = e.projectIntoViewport(
                            t.touches[0].clientX,
                            t.touches[0].clientY
                          )),
                          (s[0] = c[0]),
                          (s[1] = c[1]));
                      }
                      for (f = 0; f < s.length; f++) l[f] = s[f];
                      n &&
                        t.touches.length > 0 &&
                        !e.hoverData.draggingEles &&
                        !e.swipePanning &&
                        null != e.data.bgActivePosistion &&
                        ((e.data.bgActivePosistion = void 0),
                        e.redrawHint("select", !0),
                        e.redraw());
                    }
                  }),
                  !1
                ),
                e.registerBinding(
                  t,
                  "touchcancel",
                  (H = function (t) {
                    var n = e.touchData.start;
                    (e.touchData.capture = !1), n && n.unactivate();
                  })
                ),
                e.registerBinding(
                  t,
                  "touchend",
                  (q = function (t) {
                    var i = e.touchData.start;
                    if (e.touchData.capture) {
                      0 === t.touches.length && (e.touchData.capture = !1),
                        t.preventDefault();
                      var a = e.selection;
                      (e.swipePanning = !1), (e.hoverData.draggingEles = !1);
                      var o,
                        s = e.cy,
                        l = s.zoom(),
                        u = e.touchData.now,
                        c = e.touchData.earlier;
                      if (t.touches[0]) {
                        var h = e.projectIntoViewport(
                          t.touches[0].clientX,
                          t.touches[0].clientY
                        );
                        (u[0] = h[0]), (u[1] = h[1]);
                      }
                      if (
                        (t.touches[1] &&
                          ((h = e.projectIntoViewport(
                            t.touches[1].clientX,
                            t.touches[1].clientY
                          )),
                          (u[2] = h[0]),
                          (u[3] = h[1])),
                        t.touches[2] &&
                          ((h = e.projectIntoViewport(
                            t.touches[2].clientX,
                            t.touches[2].clientY
                          )),
                          (u[4] = h[0]),
                          (u[5] = h[1])),
                        i && i.unactivate(),
                        e.touchData.cxt)
                      ) {
                        if (
                          ((o = {
                            originalEvent: t,
                            type: "cxttapend",
                            position: { x: u[0], y: u[1] },
                          }),
                          i ? i.emit(o) : s.emit(o),
                          !e.touchData.cxtDragged)
                        ) {
                          var d = {
                            originalEvent: t,
                            type: "cxttap",
                            position: { x: u[0], y: u[1] },
                          };
                          i ? i.emit(d) : s.emit(d);
                        }
                        return (
                          e.touchData.start &&
                            (e.touchData.start._private.grabbed = !1),
                          (e.touchData.cxt = !1),
                          (e.touchData.start = null),
                          void e.redraw()
                        );
                      }
                      if (
                        !t.touches[2] &&
                        s.boxSelectionEnabled() &&
                        e.touchData.selecting
                      ) {
                        e.touchData.selecting = !1;
                        var p = s.collection(
                          e.getAllInBox(a[0], a[1], a[2], a[3])
                        );
                        (a[0] = void 0),
                          (a[1] = void 0),
                          (a[2] = void 0),
                          (a[3] = void 0),
                          (a[4] = 0),
                          e.redrawHint("select", !0),
                          s.emit({
                            type: "boxend",
                            originalEvent: t,
                            position: { x: u[0], y: u[1] },
                          });
                        var g = function (e) {
                          return e.selectable() && !e.selected();
                        };
                        p.emit("box").stdFilter(g).select().emit("boxselect"),
                          p.nonempty() && e.redrawHint("eles", !0),
                          e.redraw();
                      }
                      if ((null != i && i.unactivate(), t.touches[2]))
                        (e.data.bgActivePosistion = void 0),
                          e.redrawHint("select", !0);
                      else if (t.touches[1]);
                      else if (t.touches[0]);
                      else if (!t.touches[0]) {
                        (e.data.bgActivePosistion = void 0),
                          e.redrawHint("select", !0);
                        var f = e.dragData.touchDragEles;
                        if (null != i) {
                          var y = i._private.grabbed;
                          v(f),
                            e.redrawHint("drag", !0),
                            e.redrawHint("eles", !0),
                            y &&
                              (i.emit("freeon"),
                              f.emit("free"),
                              e.dragData.didDrag &&
                                (i.emit("dragfreeon"), f.emit("dragfree"))),
                            r(
                              i,
                              ["touchend", "tapend", "vmouseup", "tapdragout"],
                              t,
                              { x: u[0], y: u[1] }
                            ),
                            i.unactivate(),
                            (e.touchData.start = null);
                        } else {
                          var m = e.findNearestElement(u[0], u[1], !0, !0);
                          r(
                            m,
                            ["touchend", "tapend", "vmouseup", "tapdragout"],
                            t,
                            { x: u[0], y: u[1] }
                          );
                        }
                        var b = e.touchData.startPosition[0] - u[0],
                          x = b * b,
                          w = e.touchData.startPosition[1] - u[1],
                          E = (x + w * w) * l * l;
                        e.touchData.singleTouchMoved ||
                          (i || s.$(":selected").unselect(["tapunselect"]),
                          r(i, ["tap", "vclick"], t, { x: u[0], y: u[1] }),
                          (W = !1),
                          t.timeStamp - K <= s.multiClickDebounceTime()
                            ? ($ && clearTimeout($),
                              (W = !0),
                              (K = null),
                              r(i, ["dbltap", "vdblclick"], t, {
                                x: u[0],
                                y: u[1],
                              }))
                            : (($ = setTimeout(function () {
                                W ||
                                  r(i, ["onetap", "voneclick"], t, {
                                    x: u[0],
                                    y: u[1],
                                  });
                              }, s.multiClickDebounceTime())),
                              (K = t.timeStamp))),
                          null != i &&
                            !e.dragData.didDrag &&
                            i._private.selectable &&
                            E < e.touchTapThreshold2 &&
                            !e.pinching &&
                            ("single" === s.selectionType()
                              ? (s.$(n).unmerge(i).unselect(["tapunselect"]),
                                i.select(["tapselect"]))
                              : i.selected()
                              ? i.unselect(["tapunselect"])
                              : i.select(["tapselect"]),
                            e.redrawHint("eles", !0)),
                          (e.touchData.singleTouchMoved = !0);
                      }
                      for (var T = 0; T < u.length; T++) c[T] = u[T];
                      (e.dragData.didDrag = !1),
                        0 === t.touches.length &&
                          ((e.touchData.dragDelta = []),
                          (e.touchData.startPosition = [
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                          ]),
                          (e.touchData.startGPosition = null),
                          (e.touchData.didSelect = !1)),
                        t.touches.length < 2 &&
                          (1 === t.touches.length &&
                            (e.touchData.startGPosition = [
                              t.touches[0].clientX,
                              t.touches[0].clientY,
                            ]),
                          (e.pinching = !1),
                          e.redrawHint("eles", !0),
                          e.redraw());
                    }
                  }),
                  !1
                ),
                "undefined" == typeof TouchEvent)
              ) {
                var J = [],
                  ee = function (e) {
                    return {
                      clientX: e.clientX,
                      clientY: e.clientY,
                      force: 1,
                      identifier: e.pointerId,
                      pageX: e.pageX,
                      pageY: e.pageY,
                      radiusX: e.width / 2,
                      radiusY: e.height / 2,
                      screenX: e.screenX,
                      screenY: e.screenY,
                      target: e.target,
                    };
                  },
                  te = function (e) {
                    return { event: e, touch: ee(e) };
                  },
                  ne = function (e) {
                    J.push(te(e));
                  },
                  re = function (e) {
                    for (var t = 0; t < J.length; t++)
                      if (J[t].event.pointerId === e.pointerId)
                        return void J.splice(t, 1);
                  },
                  ie = function (e) {
                    var t = J.filter(function (t) {
                      return t.event.pointerId === e.pointerId;
                    })[0];
                    (t.event = e), (t.touch = ee(e));
                  },
                  ae = function (e) {
                    e.touches = J.map(function (e) {
                      return e.touch;
                    });
                  },
                  oe = function (e) {
                    return "mouse" === e.pointerType || 4 === e.pointerType;
                  };
                e.registerBinding(e.container, "pointerdown", function (e) {
                  oe(e) || (e.preventDefault(), ne(e), ae(e), U(e));
                }),
                  e.registerBinding(e.container, "pointerup", function (e) {
                    oe(e) || (re(e), ae(e), q(e));
                  }),
                  e.registerBinding(e.container, "pointercancel", function (e) {
                    oe(e) || (re(e), ae(e), H(e));
                  }),
                  e.registerBinding(e.container, "pointermove", function (e) {
                    oe(e) || (e.preventDefault(), ie(e), ae(e), j(e));
                  });
              }
            },
          },
          jh = {
            generatePolygon: function (e, t) {
              return (this.nodeShapes[e] = {
                renderer: this,
                name: e,
                points: t,
                draw: function (e, t, n, r, i, a) {
                  this.renderer.nodeShapeImpl(
                    "polygon",
                    e,
                    t,
                    n,
                    r,
                    i,
                    this.points
                  );
                },
                intersectLine: function (e, t, n, r, i, a, o, s) {
                  return sr(i, a, this.points, e, t, n / 2, r / 2, o);
                },
                checkPoint: function (e, t, n, r, i, a, o, s) {
                  return Qn(e, t, this.points, a, o, r, i, [0, -1], n);
                },
              });
            },
            generateEllipse: function () {
              return (this.nodeShapes.ellipse = {
                renderer: this,
                name: "ellipse",
                draw: function (e, t, n, r, i, a) {
                  this.renderer.nodeShapeImpl(this.name, e, t, n, r, i);
                },
                intersectLine: function (e, t, n, r, i, a, o, s) {
                  return nr(i, a, e, t, n / 2 + o, r / 2 + o);
                },
                checkPoint: function (e, t, n, r, i, a, o, s) {
                  return rr(e, t, r, i, a, o, n);
                },
              });
            },
            generateRoundPolygon: function (e, t) {
              return (this.nodeShapes[e] = {
                renderer: this,
                name: e,
                points: t,
                getOrCreateCorners: function (e, n, r, i, a, o, s) {
                  if (
                    void 0 !== o[s] &&
                    o[s + "-cx"] === e &&
                    o[s + "-cy"] === n
                  )
                    return o[s];
                  (o[s] = new Array(t.length / 2)),
                    (o[s + "-cx"] = e),
                    (o[s + "-cy"] = n);
                  var l = r / 2,
                    u = i / 2;
                  a = "auto" === a ? gr(r, i) : a;
                  for (
                    var c = new Array(t.length / 2), h = 0;
                    h < t.length / 2;
                    h++
                  )
                    c[h] = { x: e + l * t[2 * h], y: n + u * t[2 * h + 1] };
                  var d,
                    p,
                    g,
                    f,
                    v = c.length;
                  for (p = c[v - 1], d = 0; d < v; d++)
                    (g = c[d % v]),
                      (f = c[(d + 1) % v]),
                      (o[s][d] = Nh(p, g, f, a)),
                      (p = g),
                      (g = f);
                  return o[s];
                },
                draw: function (e, t, n, r, i, a, o) {
                  this.renderer.nodeShapeImpl(
                    "round-polygon",
                    e,
                    t,
                    n,
                    r,
                    i,
                    this.points,
                    this.getOrCreateCorners(t, n, r, i, a, o, "drawCorners")
                  );
                },
                intersectLine: function (e, t, n, r, i, a, o, s, l) {
                  return lr(
                    i,
                    a,
                    this.points,
                    e,
                    t,
                    n,
                    r,
                    o,
                    this.getOrCreateCorners(e, t, n, r, s, l, "corners")
                  );
                },
                checkPoint: function (e, t, n, r, i, a, o, s, l) {
                  return Jn(
                    e,
                    t,
                    this.points,
                    a,
                    o,
                    r,
                    i,
                    this.getOrCreateCorners(a, o, r, i, s, l, "corners")
                  );
                },
              });
            },
            generateRoundRectangle: function () {
              return (this.nodeShapes["round-rectangle"] =
                this.nodeShapes.roundrectangle =
                  {
                    renderer: this,
                    name: "round-rectangle",
                    points: cr(4, 0),
                    draw: function (e, t, n, r, i, a) {
                      this.renderer.nodeShapeImpl(
                        this.name,
                        e,
                        t,
                        n,
                        r,
                        i,
                        this.points,
                        a
                      );
                    },
                    intersectLine: function (e, t, n, r, i, a, o, s) {
                      return Un(i, a, e, t, n, r, o, s);
                    },
                    checkPoint: function (e, t, n, r, i, a, o, s) {
                      var l = r / 2,
                        u = i / 2;
                      s = "auto" === s ? pr(r, i) : s;
                      var c = 2 * (s = Math.min(l, u, s));
                      return !!(
                        Qn(e, t, this.points, a, o, r, i - c, [0, -1], n) ||
                        Qn(e, t, this.points, a, o, r - c, i, [0, -1], n) ||
                        rr(e, t, c, c, a - l + s, o - u + s, n) ||
                        rr(e, t, c, c, a + l - s, o - u + s, n) ||
                        rr(e, t, c, c, a + l - s, o + u - s, n) ||
                        rr(e, t, c, c, a - l + s, o + u - s, n)
                      );
                    },
                  });
            },
            generateCutRectangle: function () {
              return (this.nodeShapes["cut-rectangle"] =
                this.nodeShapes.cutrectangle =
                  {
                    renderer: this,
                    name: "cut-rectangle",
                    cornerLength: fr(),
                    points: cr(4, 0),
                    draw: function (e, t, n, r, i, a) {
                      this.renderer.nodeShapeImpl(
                        this.name,
                        e,
                        t,
                        n,
                        r,
                        i,
                        null,
                        a
                      );
                    },
                    generateCutTrianglePts: function (e, t, n, r, i) {
                      var a = "auto" === i ? this.cornerLength : i,
                        o = t / 2,
                        s = e / 2,
                        l = n - s,
                        u = n + s,
                        c = r - o,
                        h = r + o;
                      return {
                        topLeft: [l, c + a, l + a, c, l + a, c + a],
                        topRight: [u - a, c, u, c + a, u - a, c + a],
                        bottomRight: [u, h - a, u - a, h, u - a, h - a],
                        bottomLeft: [l + a, h, l, h - a, l + a, h - a],
                      };
                    },
                    intersectLine: function (e, t, n, r, i, a, o, s) {
                      var l = this.generateCutTrianglePts(
                          n + 2 * o,
                          r + 2 * o,
                          e,
                          t,
                          s
                        ),
                        u = [].concat.apply(
                          [],
                          [
                            l.topLeft.splice(0, 4),
                            l.topRight.splice(0, 4),
                            l.bottomRight.splice(0, 4),
                            l.bottomLeft.splice(0, 4),
                          ]
                        );
                      return sr(i, a, u, e, t);
                    },
                    checkPoint: function (e, t, n, r, i, a, o, s) {
                      var l = "auto" === s ? this.cornerLength : s;
                      if (Qn(e, t, this.points, a, o, r, i - 2 * l, [0, -1], n))
                        return !0;
                      if (Qn(e, t, this.points, a, o, r - 2 * l, i, [0, -1], n))
                        return !0;
                      var u = this.generateCutTrianglePts(r, i, a, o);
                      return (
                        Zn(e, t, u.topLeft) ||
                        Zn(e, t, u.topRight) ||
                        Zn(e, t, u.bottomRight) ||
                        Zn(e, t, u.bottomLeft)
                      );
                    },
                  });
            },
            generateBarrel: function () {
              return (this.nodeShapes.barrel = {
                renderer: this,
                name: "barrel",
                points: cr(4, 0),
                draw: function (e, t, n, r, i, a) {
                  this.renderer.nodeShapeImpl(this.name, e, t, n, r, i);
                },
                intersectLine: function (e, t, n, r, i, a, o, s) {
                  var l = 0.15,
                    u = 0.5,
                    c = 0.85,
                    h = this.generateBarrelBezierPts(
                      n + 2 * o,
                      r + 2 * o,
                      e,
                      t
                    ),
                    d = function (e) {
                      var t = An(
                          { x: e[0], y: e[1] },
                          { x: e[2], y: e[3] },
                          { x: e[4], y: e[5] },
                          l
                        ),
                        n = An(
                          { x: e[0], y: e[1] },
                          { x: e[2], y: e[3] },
                          { x: e[4], y: e[5] },
                          u
                        ),
                        r = An(
                          { x: e[0], y: e[1] },
                          { x: e[2], y: e[3] },
                          { x: e[4], y: e[5] },
                          c
                        );
                      return [
                        e[0],
                        e[1],
                        t.x,
                        t.y,
                        n.x,
                        n.y,
                        r.x,
                        r.y,
                        e[4],
                        e[5],
                      ];
                    },
                    p = [].concat(
                      d(h.topLeft),
                      d(h.topRight),
                      d(h.bottomRight),
                      d(h.bottomLeft)
                    );
                  return sr(i, a, p, e, t);
                },
                generateBarrelBezierPts: function (e, t, n, r) {
                  var i = t / 2,
                    a = e / 2,
                    o = n - a,
                    s = n + a,
                    l = r - i,
                    u = r + i,
                    c = yr(e, t),
                    h = c.heightOffset,
                    d = c.widthOffset,
                    p = c.ctrlPtOffsetPct * e,
                    g = {
                      topLeft: [o, l + h, o + p, l, o + d, l],
                      topRight: [s - d, l, s - p, l, s, l + h],
                      bottomRight: [s, u - h, s - p, u, s - d, u],
                      bottomLeft: [o + d, u, o + p, u, o, u - h],
                    };
                  return (
                    (g.topLeft.isTop = !0),
                    (g.topRight.isTop = !0),
                    (g.bottomLeft.isBottom = !0),
                    (g.bottomRight.isBottom = !0),
                    g
                  );
                },
                checkPoint: function (e, t, n, r, i, a, o, s) {
                  var l = yr(r, i),
                    u = l.heightOffset,
                    c = l.widthOffset;
                  if (Qn(e, t, this.points, a, o, r, i - 2 * u, [0, -1], n))
                    return !0;
                  if (Qn(e, t, this.points, a, o, r - 2 * c, i, [0, -1], n))
                    return !0;
                  for (
                    var h = this.generateBarrelBezierPts(r, i, a, o),
                      d = function (e, t, n) {
                        var r = n[4],
                          i = n[2],
                          a = n[0],
                          o = n[5],
                          s = n[1],
                          l = Math.min(r, a),
                          u = Math.max(r, a),
                          c = Math.min(o, s),
                          h = Math.max(o, s);
                        if (l <= e && e <= u && c <= t && t <= h) {
                          var d = vr(r, i, a),
                            p = qn(d[0], d[1], d[2], e).filter(function (e) {
                              return 0 <= e && e <= 1;
                            });
                          if (p.length > 0) return p[0];
                        }
                        return null;
                      },
                      p = Object.keys(h),
                      g = 0;
                    g < p.length;
                    g++
                  ) {
                    var f = h[p[g]],
                      v = d(e, t, f);
                    if (null != v) {
                      var y = f[5],
                        m = f[3],
                        b = f[1],
                        x = Nn(y, m, b, v);
                      if (f.isTop && x <= t) return !0;
                      if (f.isBottom && t <= x) return !0;
                    }
                  }
                  return !1;
                },
              });
            },
            generateBottomRoundrectangle: function () {
              return (this.nodeShapes["bottom-round-rectangle"] =
                this.nodeShapes.bottomroundrectangle =
                  {
                    renderer: this,
                    name: "bottom-round-rectangle",
                    points: cr(4, 0),
                    draw: function (e, t, n, r, i, a) {
                      this.renderer.nodeShapeImpl(
                        this.name,
                        e,
                        t,
                        n,
                        r,
                        i,
                        this.points,
                        a
                      );
                    },
                    intersectLine: function (e, t, n, r, i, a, o, s) {
                      var l = t - (r / 2 + o),
                        u = or(
                          i,
                          a,
                          e,
                          t,
                          e - (n / 2 + o),
                          l,
                          e + (n / 2 + o),
                          l,
                          !1
                        );
                      return u.length > 0 ? u : Un(i, a, e, t, n, r, o, s);
                    },
                    checkPoint: function (e, t, n, r, i, a, o, s) {
                      var l = 2 * (s = "auto" === s ? pr(r, i) : s);
                      if (Qn(e, t, this.points, a, o, r, i - l, [0, -1], n))
                        return !0;
                      if (Qn(e, t, this.points, a, o, r - l, i, [0, -1], n))
                        return !0;
                      var u = r / 2 + 2 * n,
                        c = i / 2 + 2 * n;
                      return (
                        !!Zn(e, t, [
                          a - u,
                          o - c,
                          a - u,
                          o,
                          a + u,
                          o,
                          a + u,
                          o - c,
                        ]) ||
                        !!rr(e, t, l, l, a + r / 2 - s, o + i / 2 - s, n) ||
                        !!rr(e, t, l, l, a - r / 2 + s, o + i / 2 - s, n)
                      );
                    },
                  });
            },
            registerNodeShapes: function () {
              var e = (this.nodeShapes = {}),
                t = this;
              this.generateEllipse(),
                this.generatePolygon("triangle", cr(3, 0)),
                this.generateRoundPolygon("round-triangle", cr(3, 0)),
                this.generatePolygon("rectangle", cr(4, 0)),
                (e.square = e.rectangle),
                this.generateRoundRectangle(),
                this.generateCutRectangle(),
                this.generateBarrel(),
                this.generateBottomRoundrectangle();
              var n = [0, 1, 1, 0, 0, -1, -1, 0];
              this.generatePolygon("diamond", n),
                this.generateRoundPolygon("round-diamond", n),
                this.generatePolygon("pentagon", cr(5, 0)),
                this.generateRoundPolygon("round-pentagon", cr(5, 0)),
                this.generatePolygon("hexagon", cr(6, 0)),
                this.generateRoundPolygon("round-hexagon", cr(6, 0)),
                this.generatePolygon("heptagon", cr(7, 0)),
                this.generateRoundPolygon("round-heptagon", cr(7, 0)),
                this.generatePolygon("octagon", cr(8, 0)),
                this.generateRoundPolygon("round-octagon", cr(8, 0));
              var r = new Array(20),
                i = dr(5, 0),
                a = dr(5, Math.PI / 5),
                o = 0.5 * (3 - Math.sqrt(5));
              o *= 1.57;
              for (var s = 0; s < a.length / 2; s++)
                (a[2 * s] *= o), (a[2 * s + 1] *= o);
              for (s = 0; s < 5; s++)
                (r[4 * s] = i[2 * s]),
                  (r[4 * s + 1] = i[2 * s + 1]),
                  (r[4 * s + 2] = a[2 * s]),
                  (r[4 * s + 3] = a[2 * s + 1]);
              (r = hr(r)),
                this.generatePolygon("star", r),
                this.generatePolygon("vee", [-1, -1, 0, -0.333, 1, -1, 0, 1]),
                this.generatePolygon(
                  "rhomboid",
                  [-1, -1, 0.333, -1, 1, 1, -0.333, 1]
                ),
                this.generatePolygon(
                  "right-rhomboid",
                  [-0.333, -1, 1, -1, 0.333, 1, -1, 1]
                ),
                (this.nodeShapes.concavehexagon = this.generatePolygon(
                  "concave-hexagon",
                  [-1, -0.95, -0.75, 0, -1, 0.95, 1, 0.95, 0.75, 0, 1, -0.95]
                ));
              var l = [-1, -1, 0.25, -1, 1, 0, 0.25, 1, -1, 1];
              this.generatePolygon("tag", l),
                this.generateRoundPolygon("round-tag", l),
                (e.makePolygon = function (e) {
                  var n,
                    r = "polygon-" + e.join("$");
                  return (n = this[r]) ? n : t.generatePolygon(r, e);
                });
            },
          },
          Hh = {
            timeToRender: function () {
              return this.redrawTotalTime / this.redrawCount;
            },
            redraw: function (e) {
              e = e || Pt();
              var t = this;
              void 0 === t.averageRedrawTime && (t.averageRedrawTime = 0),
                void 0 === t.lastRedrawTime && (t.lastRedrawTime = 0),
                void 0 === t.lastDrawTime && (t.lastDrawTime = 0),
                (t.requestedFrame = !0),
                (t.renderOptions = e);
            },
            beforeRender: function (e, t) {
              if (!this.destroyed) {
                null == t && Nt("Priority is not optional for beforeRender");
                var n = this.beforeRenderCallbacks;
                n.push({ fn: e, priority: t }),
                  n.sort(function (e, t) {
                    return t.priority - e.priority;
                  });
              }
            },
          },
          qh = function (e, t, n) {
            for (var r = e.beforeRenderCallbacks, i = 0; i < r.length; i++)
              r[i].fn(t, n);
          };
        Hh.startRenderLoop = function () {
          var e = this,
            t = e.cy;
          if (!e.renderLoopStarted) {
            e.renderLoopStarted = !0;
            var n = function n(r) {
              if (!e.destroyed) {
                if (t.batching());
                else if (e.requestedFrame && !e.skipFrame) {
                  qh(e, !0, r);
                  var i = at();
                  e.render(e.renderOptions);
                  var a = (e.lastDrawTime = at());
                  void 0 === e.averageRedrawTime &&
                    (e.averageRedrawTime = a - i),
                    void 0 === e.redrawCount && (e.redrawCount = 0),
                    e.redrawCount++,
                    void 0 === e.redrawTotalTime && (e.redrawTotalTime = 0);
                  var o = a - i;
                  (e.redrawTotalTime += o),
                    (e.lastRedrawTime = o),
                    (e.averageRedrawTime = e.averageRedrawTime / 2 + o / 2),
                    (e.requestedFrame = !1);
                } else qh(e, !1, r);
                (e.skipFrame = !1), it(n);
              }
            };
            it(n);
          }
        };
        var Wh = function (e) {
            this.init(e);
          },
          $h = Wh.prototype;
        ($h.clientFunctions = [
          "redrawHint",
          "render",
          "renderTo",
          "matchCanvasSize",
          "nodeShapeImpl",
          "arrowShapeImpl",
        ]),
          ($h.init = function (e) {
            var t = this;
            (t.options = e), (t.cy = e.cy);
            var n = (t.container = e.cy.container()),
              r = t.cy.window();
            if (r) {
              var i = r.document,
                a = i.head,
                o = "__________cytoscape_stylesheet",
                s = "__________cytoscape_container",
                l = null != i.getElementById(o);
              if (
                (n.className.indexOf(s) < 0 &&
                  (n.className = (n.className || "") + " " + s),
                !l)
              ) {
                var u = i.createElement("style");
                (u.id = o),
                  (u.textContent = "." + s + " { position: relative; }"),
                  a.insertBefore(u, a.children[0]);
              }
              "static" === r.getComputedStyle(n).getPropertyValue("position") &&
                Lt(
                  "A Cytoscape container has style position:static and so can not use UI extensions properly"
                );
            }
            (t.selection = [void 0, void 0, void 0, void 0, 0]),
              (t.bezierProjPcts = [0.05, 0.225, 0.4, 0.5, 0.6, 0.775, 0.95]),
              (t.hoverData = {
                down: null,
                last: null,
                downTime: null,
                triggerMode: null,
                dragging: !1,
                initialPan: [null, null],
                capture: !1,
              }),
              (t.dragData = { possibleDragElements: [] }),
              (t.touchData = {
                start: null,
                capture: !1,
                startPosition: [null, null, null, null, null, null],
                singleTouchStartTime: null,
                singleTouchMoved: !0,
                now: [null, null, null, null, null, null],
                earlier: [null, null, null, null, null, null],
              }),
              (t.redraws = 0),
              (t.showFps = e.showFps),
              (t.debug = e.debug),
              (t.hideEdgesOnViewport = e.hideEdgesOnViewport),
              (t.textureOnViewport = e.textureOnViewport),
              (t.wheelSensitivity = e.wheelSensitivity),
              (t.motionBlurEnabled = e.motionBlur),
              (t.forcedPixelRatio = C(e.pixelRatio) ? e.pixelRatio : null),
              (t.motionBlur = e.motionBlur),
              (t.motionBlurOpacity = e.motionBlurOpacity),
              (t.motionBlurTransparency = 1 - t.motionBlurOpacity),
              (t.motionBlurPxRatio = 1),
              (t.mbPxRBlurry = 1),
              (t.minMbLowQualFrames = 4),
              (t.fullQualityMb = !1),
              (t.clearedForMotionBlur = []),
              (t.desktopTapThreshold = e.desktopTapThreshold),
              (t.desktopTapThreshold2 =
                e.desktopTapThreshold * e.desktopTapThreshold),
              (t.touchTapThreshold = e.touchTapThreshold),
              (t.touchTapThreshold2 =
                e.touchTapThreshold * e.touchTapThreshold),
              (t.tapholdDuration = 500),
              (t.bindings = []),
              (t.beforeRenderCallbacks = []),
              (t.beforeRenderPriorities = {
                animations: 400,
                eleCalcs: 300,
                eleTxrDeq: 200,
                lyrTxrDeq: 150,
                lyrTxrSkip: 100,
              }),
              t.registerNodeShapes(),
              t.registerArrowShapes(),
              t.registerCalculationListeners();
          }),
          ($h.notify = function (e, t) {
            var n = this,
              r = n.cy;
            this.destroyed ||
              ("init" !== e
                ? "destroy" !== e
                  ? (("add" === e ||
                      "remove" === e ||
                      ("move" === e && r.hasCompoundNodes()) ||
                      "load" === e ||
                      "zorder" === e ||
                      "mount" === e) &&
                      n.invalidateCachedZSortedEles(),
                    "viewport" === e && n.redrawHint("select", !0),
                    ("load" !== e && "resize" !== e && "mount" !== e) ||
                      (n.invalidateContainerClientCoordsCache(),
                      n.matchCanvasSize(n.container)),
                    n.redrawHint("eles", !0),
                    n.redrawHint("drag", !0),
                    this.startRenderLoop(),
                    this.redraw())
                  : n.destroy()
                : n.load());
          }),
          ($h.destroy = function () {
            var e = this;
            (e.destroyed = !0), e.cy.stopAnimationLoop();
            for (var t = 0; t < e.bindings.length; t++) {
              var n = e.bindings[t],
                r = n.target;
              (r.off || r.removeEventListener).apply(r, n.args);
            }
            if (
              ((e.bindings = []),
              (e.beforeRenderCallbacks = []),
              (e.onUpdateEleCalcsFns = []),
              e.removeObserver && e.removeObserver.disconnect(),
              e.styleObserver && e.styleObserver.disconnect(),
              e.resizeObserver && e.resizeObserver.disconnect(),
              e.labelCalcDiv)
            )
              try {
                document.body.removeChild(e.labelCalcDiv);
              } catch (i) {}
          }),
          ($h.isHeadless = function () {
            return !1;
          }),
          [th, Xh, Vh, Uh, jh, Hh].forEach(function (e) {
            ee($h, e);
          });
        var Kh = 1e3 / 60,
          Zh = {
            setupDequeueing: function (e) {
              return function () {
                var t = this,
                  n = this.renderer;
                if (!t.dequeueingSetup) {
                  t.dequeueingSetup = !0;
                  var r = et(function () {
                      n.redrawHint("eles", !0),
                        n.redrawHint("drag", !0),
                        n.redraw();
                    }, e.deqRedrawThreshold),
                    i = function (i, a) {
                      var o = at(),
                        s = n.averageRedrawTime,
                        l = n.lastRedrawTime,
                        u = [],
                        c = n.cy.extent(),
                        h = n.getPixelRatio();
                      for (i || n.flushRenderedStyleQueue(); ; ) {
                        var d = at(),
                          p = d - o,
                          g = d - a;
                        if (l < Kh) {
                          var f = Kh - (i ? s : 0);
                          if (g >= e.deqFastCost * f) break;
                        } else if (i) {
                          if (p >= e.deqCost * l || p >= e.deqAvgCost * s)
                            break;
                        } else if (g >= e.deqNoDrawCost * Kh) break;
                        var v = e.deq(t, h, c);
                        if (!(v.length > 0)) break;
                        for (var y = 0; y < v.length; y++) u.push(v[y]);
                      }
                      u.length > 0 &&
                        (e.onDeqd(t, u),
                        !i && e.shouldRedraw(t, u, h, c) && r());
                    },
                    a = e.priority || Ct;
                  n.beforeRender(i, a(t));
                }
              };
            },
          },
          Qh = (function () {
            function e(n) {
              var r =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : _t;
              t(this, e),
                (this.idsByKey = new Vt()),
                (this.keyForId = new Vt()),
                (this.cachesByLvl = new Vt()),
                (this.lvls = []),
                (this.getKey = n),
                (this.doesEleInvalidateKey = r);
            }
            return (
              a(e, [
                {
                  key: "getIdsFor",
                  value: function (e) {
                    null == e && Nt("Can not get id list for null key");
                    var t = this.idsByKey,
                      n = this.idsByKey.get(e);
                    return n || ((n = new Ht()), t.set(e, n)), n;
                  },
                },
                {
                  key: "addIdForKey",
                  value: function (e, t) {
                    null != e && this.getIdsFor(e).add(t);
                  },
                },
                {
                  key: "deleteIdForKey",
                  value: function (e, t) {
                    null != e && this.getIdsFor(e).delete(t);
                  },
                },
                {
                  key: "getNumberOfIdsForKey",
                  value: function (e) {
                    return null == e ? 0 : this.getIdsFor(e).size;
                  },
                },
                {
                  key: "updateKeyMappingFor",
                  value: function (e) {
                    var t = e.id(),
                      n = this.keyForId.get(t),
                      r = this.getKey(e);
                    this.deleteIdForKey(n, t),
                      this.addIdForKey(r, t),
                      this.keyForId.set(t, r);
                  },
                },
                {
                  key: "deleteKeyMappingFor",
                  value: function (e) {
                    var t = e.id(),
                      n = this.keyForId.get(t);
                    this.deleteIdForKey(n, t), this.keyForId.delete(t);
                  },
                },
                {
                  key: "keyHasChangedFor",
                  value: function (e) {
                    var t = e.id();
                    return this.keyForId.get(t) !== this.getKey(e);
                  },
                },
                {
                  key: "isInvalid",
                  value: function (e) {
                    return (
                      this.keyHasChangedFor(e) || this.doesEleInvalidateKey(e)
                    );
                  },
                },
                {
                  key: "getCachesAt",
                  value: function (e) {
                    var t = this.cachesByLvl,
                      n = this.lvls,
                      r = t.get(e);
                    return r || ((r = new Vt()), t.set(e, r), n.push(e)), r;
                  },
                },
                {
                  key: "getCache",
                  value: function (e, t) {
                    return this.getCachesAt(t).get(e);
                  },
                },
                {
                  key: "get",
                  value: function (e, t) {
                    var n = this.getKey(e),
                      r = this.getCache(n, t);
                    return null != r && this.updateKeyMappingFor(e), r;
                  },
                },
                {
                  key: "getForCachedKey",
                  value: function (e, t) {
                    var n = this.keyForId.get(e.id());
                    return this.getCache(n, t);
                  },
                },
                {
                  key: "hasCache",
                  value: function (e, t) {
                    return this.getCachesAt(t).has(e);
                  },
                },
                {
                  key: "has",
                  value: function (e, t) {
                    var n = this.getKey(e);
                    return this.hasCache(n, t);
                  },
                },
                {
                  key: "setCache",
                  value: function (e, t, n) {
                    (n.key = e), this.getCachesAt(t).set(e, n);
                  },
                },
                {
                  key: "set",
                  value: function (e, t, n) {
                    var r = this.getKey(e);
                    this.setCache(r, t, n), this.updateKeyMappingFor(e);
                  },
                },
                {
                  key: "deleteCache",
                  value: function (e, t) {
                    this.getCachesAt(t).delete(e);
                  },
                },
                {
                  key: "delete",
                  value: function (e, t) {
                    var n = this.getKey(e);
                    this.deleteCache(n, t);
                  },
                },
                {
                  key: "invalidateKey",
                  value: function (e) {
                    var t = this;
                    this.lvls.forEach(function (n) {
                      return t.deleteCache(e, n);
                    });
                  },
                },
                {
                  key: "invalidate",
                  value: function (e) {
                    var t = e.id(),
                      n = this.keyForId.get(t);
                    this.deleteKeyMappingFor(e);
                    var r = this.doesEleInvalidateKey(e);
                    return (
                      r && this.invalidateKey(n),
                      r || 0 === this.getNumberOfIdsForKey(n)
                    );
                  },
                },
              ]),
              e
            );
          })(),
          Jh = 25,
          ed = 50,
          td = -4,
          nd = 3,
          rd = 7.99,
          id = 8,
          ad = 1024,
          od = 1024,
          sd = 1024,
          ld = 0.2,
          ud = 0.8,
          cd = 10,
          hd = 0.15,
          dd = 0.1,
          pd = 0.9,
          gd = 0.9,
          fd = 100,
          vd = 1,
          yd = {
            dequeue: "dequeue",
            downscale: "downscale",
            highQuality: "highQuality",
          },
          md = Rt({
            getKey: null,
            doesEleInvalidateKey: _t,
            drawElement: null,
            getBoundingBox: null,
            getRotationPoint: null,
            getRotationOffset: null,
            isVisible: Tt,
            allowEdgeTxrCaching: !0,
            allowParentTxrCaching: !0,
          }),
          bd = function (e, t) {
            var n = this;
            (n.renderer = e), (n.onDequeues = []);
            var r = md(t);
            ee(n, r),
              (n.lookup = new Qh(r.getKey, r.doesEleInvalidateKey)),
              n.setupDequeueing();
          },
          xd = bd.prototype;
        (xd.reasons = yd),
          (xd.getTextureQueue = function (e) {
            var t = this;
            return (
              (t.eleImgCaches = t.eleImgCaches || {}),
              (t.eleImgCaches[e] = t.eleImgCaches[e] || [])
            );
          }),
          (xd.getRetiredTextureQueue = function (e) {
            var t = this,
              n = (t.eleImgCaches.retired = t.eleImgCaches.retired || {});
            return (n[e] = n[e] || []);
          }),
          (xd.getElementQueue = function () {
            var e = this;
            return (e.eleCacheQueue =
              e.eleCacheQueue ||
              new Zt(function (e, t) {
                return t.reqs - e.reqs;
              }));
          }),
          (xd.getElementKeyToQueue = function () {
            var e = this;
            return (e.eleKeyToCacheQueue = e.eleKeyToCacheQueue || {});
          }),
          (xd.getElement = function (e, t, n, r, i) {
            var a = this,
              o = this.renderer,
              s = o.cy.zoom(),
              l = this.lookup;
            if (
              !t ||
              0 === t.w ||
              0 === t.h ||
              isNaN(t.w) ||
              isNaN(t.h) ||
              !e.visible() ||
              e.removed()
            )
              return null;
            if (
              (!a.allowEdgeTxrCaching && e.isEdge()) ||
              (!a.allowParentTxrCaching && e.isParent())
            )
              return null;
            if ((null == r && (r = Math.ceil(En(s * n))), r < td)) r = td;
            else if (s >= rd || r > nd) return null;
            var u = Math.pow(2, r),
              c = t.h * u,
              h = t.w * u,
              d = o.eleTextBiggerThanMin(e, u);
            if (!this.isVisible(e, d)) return null;
            var p,
              g = l.get(e, r);
            if (
              (g &&
                g.invalidated &&
                ((g.invalidated = !1), (g.texture.invalidatedWidth -= g.width)),
              g)
            )
              return g;
            if (
              ((p = c <= Jh ? Jh : c <= ed ? ed : Math.ceil(c / ed) * ed),
              c > sd || h > od)
            )
              return null;
            var f = a.getTextureQueue(p),
              v = f[f.length - 2],
              y = function () {
                return a.recycleTexture(p, h) || a.addTexture(p, h);
              };
            v || (v = f[f.length - 1]),
              v || (v = y()),
              v.width - v.usedWidth < h && (v = y());
            for (
              var m,
                b = function (e) {
                  return e && e.scaledLabelShown === d;
                },
                x = i && i === yd.dequeue,
                w = i && i === yd.highQuality,
                E = i && i === yd.downscale,
                T = r + 1;
              T <= nd;
              T++
            ) {
              var _ = l.get(e, T);
              if (_) {
                m = _;
                break;
              }
            }
            var D = m && m.level === r + 1 ? m : null,
              C = function () {
                v.context.drawImage(
                  D.texture.canvas,
                  D.x,
                  0,
                  D.width,
                  D.height,
                  v.usedWidth,
                  0,
                  h,
                  c
                );
              };
            if (
              (v.context.setTransform(1, 0, 0, 1, 0, 0),
              v.context.clearRect(v.usedWidth, 0, h, p),
              b(D))
            )
              C();
            else if (b(m)) {
              if (!w) return a.queueElement(e, m.level - 1), m;
              for (var N = m.level; N > r; N--)
                D = a.getElement(e, t, n, N, yd.downscale);
              C();
            } else {
              var A;
              if (!x && !w && !E)
                for (var L = r - 1; L >= td; L--) {
                  var S = l.get(e, L);
                  if (S) {
                    A = S;
                    break;
                  }
                }
              if (b(A)) return a.queueElement(e, r), A;
              v.context.translate(v.usedWidth, 0),
                v.context.scale(u, u),
                this.drawElement(v.context, e, t, d, !1),
                v.context.scale(1 / u, 1 / u),
                v.context.translate(-v.usedWidth, 0);
            }
            return (
              (g = {
                x: v.usedWidth,
                texture: v,
                level: r,
                scale: u,
                width: h,
                height: c,
                scaledLabelShown: d,
              }),
              (v.usedWidth += Math.ceil(h + id)),
              v.eleCaches.push(g),
              l.set(e, r, g),
              a.checkTextureFullness(v),
              g
            );
          }),
          (xd.invalidateElements = function (e) {
            for (var t = 0; t < e.length; t++) this.invalidateElement(e[t]);
          }),
          (xd.invalidateElement = function (e) {
            var t = this,
              n = t.lookup,
              r = [];
            if (n.isInvalid(e)) {
              for (var i = td; i <= nd; i++) {
                var a = n.getForCachedKey(e, i);
                a && r.push(a);
              }
              if (n.invalidate(e))
                for (var o = 0; o < r.length; o++) {
                  var s = r[o],
                    l = s.texture;
                  (l.invalidatedWidth += s.width),
                    (s.invalidated = !0),
                    t.checkTextureUtility(l);
                }
              t.removeFromQueue(e);
            }
          }),
          (xd.checkTextureUtility = function (e) {
            e.invalidatedWidth >= ld * e.width && this.retireTexture(e);
          }),
          (xd.checkTextureFullness = function (e) {
            var t = this.getTextureQueue(e.height);
            e.usedWidth / e.width > ud && e.fullnessChecks >= cd
              ? Bt(t, e)
              : e.fullnessChecks++;
          }),
          (xd.retireTexture = function (e) {
            var t = this,
              n = e.height,
              r = t.getTextureQueue(n),
              i = this.lookup;
            Bt(r, e), (e.retired = !0);
            for (var a = e.eleCaches, o = 0; o < a.length; o++) {
              var s = a[o];
              i.deleteCache(s.key, s.level);
            }
            Ft(a), t.getRetiredTextureQueue(n).push(e);
          }),
          (xd.addTexture = function (e, t) {
            var n = this,
              r = {};
            return (
              n.getTextureQueue(e).push(r),
              (r.eleCaches = []),
              (r.height = e),
              (r.width = Math.max(ad, t)),
              (r.usedWidth = 0),
              (r.invalidatedWidth = 0),
              (r.fullnessChecks = 0),
              (r.canvas = n.renderer.makeOffscreenCanvas(r.width, r.height)),
              (r.context = r.canvas.getContext("2d")),
              r
            );
          }),
          (xd.recycleTexture = function (e, t) {
            for (
              var n = this,
                r = n.getTextureQueue(e),
                i = n.getRetiredTextureQueue(e),
                a = 0;
              a < i.length;
              a++
            ) {
              var o = i[a];
              if (o.width >= t)
                return (
                  (o.retired = !1),
                  (o.usedWidth = 0),
                  (o.invalidatedWidth = 0),
                  (o.fullnessChecks = 0),
                  Ft(o.eleCaches),
                  o.context.setTransform(1, 0, 0, 1, 0, 0),
                  o.context.clearRect(0, 0, o.width, o.height),
                  Bt(i, o),
                  r.push(o),
                  o
                );
            }
          }),
          (xd.queueElement = function (e, t) {
            var n = this,
              r = n.getElementQueue(),
              i = n.getElementKeyToQueue(),
              a = this.getKey(e),
              o = i[a];
            if (o)
              (o.level = Math.max(o.level, t)),
                o.eles.merge(e),
                o.reqs++,
                r.updateItem(o);
            else {
              var s = { eles: e.spawn().merge(e), level: t, reqs: 1, key: a };
              r.push(s), (i[a] = s);
            }
          }),
          (xd.dequeue = function (e) {
            for (
              var t = this,
                n = t.getElementQueue(),
                r = t.getElementKeyToQueue(),
                i = [],
                a = t.lookup,
                o = 0;
              o < vd && n.size() > 0;
              o++
            ) {
              var s = n.pop(),
                l = s.key,
                u = s.eles[0],
                c = a.hasCache(u, s.level);
              if (((r[l] = null), !c)) {
                i.push(s);
                var h = t.getBoundingBox(u);
                t.getElement(u, h, e, s.level, yd.dequeue);
              }
            }
            return i;
          }),
          (xd.removeFromQueue = function (e) {
            var t = this,
              n = t.getElementQueue(),
              r = t.getElementKeyToQueue(),
              i = this.getKey(e),
              a = r[i];
            null != a &&
              (1 === a.eles.length
                ? ((a.reqs = Et), n.updateItem(a), n.pop(), (r[i] = null))
                : a.eles.unmerge(e));
          }),
          (xd.onDequeue = function (e) {
            this.onDequeues.push(e);
          }),
          (xd.offDequeue = function (e) {
            Bt(this.onDequeues, e);
          }),
          (xd.setupDequeueing = Zh.setupDequeueing({
            deqRedrawThreshold: fd,
            deqCost: hd,
            deqAvgCost: dd,
            deqNoDrawCost: pd,
            deqFastCost: gd,
            deq: function (e, t, n) {
              return e.dequeue(t, n);
            },
            onDeqd: function (e, t) {
              for (var n = 0; n < e.onDequeues.length; n++)
                (0, e.onDequeues[n])(t);
            },
            shouldRedraw: function (e, t, n, r) {
              for (var i = 0; i < t.length; i++)
                for (var a = t[i].eles, o = 0; o < a.length; o++) {
                  var s = a[o].boundingBox();
                  if (Gn(s, r)) return !0;
                }
              return !1;
            },
            priority: function (e) {
              return e.renderer.beforeRenderPriorities.eleTxrDeq;
            },
          }));
        var wd = 1,
          Ed = -4,
          Td = 2,
          _d = 3.99,
          Dd = 50,
          Cd = 50,
          Nd = 0.15,
          Ad = 0.1,
          Ld = 0.9,
          Sd = 0.9,
          Od = 1,
          kd = 250,
          Id = 16e6,
          Md = !0,
          Pd = function (e) {
            var t = this,
              n = (t.renderer = e),
              r = n.cy;
            (t.layersByLevel = {}),
              (t.firstGet = !0),
              (t.lastInvalidationTime = at() - 2 * kd),
              (t.skipping = !1),
              (t.eleTxrDeqs = r.collection()),
              (t.scheduleElementRefinement = et(function () {
                t.refineElementTextures(t.eleTxrDeqs),
                  t.eleTxrDeqs.unmerge(t.eleTxrDeqs);
              }, Cd)),
              n.beforeRender(function (e, n) {
                n - t.lastInvalidationTime <= kd
                  ? (t.skipping = !0)
                  : (t.skipping = !1);
              }, n.beforeRenderPriorities.lyrTxrSkip);
            var i = function (e, t) {
              return t.reqs - e.reqs;
            };
            (t.layersQueue = new Zt(i)), t.setupDequeueing();
          },
          Rd = Pd.prototype,
          Bd = 0,
          Fd = Math.pow(2, 53) - 1;
        (Rd.makeLayer = function (e, t) {
          var n = Math.pow(2, t),
            r = Math.ceil(e.w * n),
            i = Math.ceil(e.h * n),
            a = this.renderer.makeOffscreenCanvas(r, i),
            o = {
              id: (Bd = ++Bd % Fd),
              bb: e,
              level: t,
              width: r,
              height: i,
              canvas: a,
              context: a.getContext("2d"),
              eles: [],
              elesQueue: [],
              reqs: 0,
            },
            s = o.context,
            l = -o.bb.x1,
            u = -o.bb.y1;
          return s.scale(n, n), s.translate(l, u), o;
        }),
          (Rd.getLayers = function (e, t, n) {
            var r = this,
              i = r.renderer.cy.zoom(),
              a = r.firstGet;
            if (((r.firstGet = !1), null == n))
              if ((n = Math.ceil(En(i * t))) < Ed) n = Ed;
              else if (i >= _d || n > Td) return null;
            r.validateLayersElesOrdering(n, e);
            var o,
              s,
              l = r.layersByLevel,
              u = Math.pow(2, n),
              c = (l[n] = l[n] || []),
              h = function () {
                var t = function (t) {
                    if (
                      (r.validateLayersElesOrdering(t, e),
                      r.levelIsComplete(t, e))
                    )
                      return (s = l[t]), !0;
                  },
                  i = function (e) {
                    if (!s)
                      for (var r = n + e; Ed <= r && r <= Td && !t(r); r += e);
                  };
                i(1), i(-1);
                for (var a = c.length - 1; a >= 0; a--) {
                  var o = c[a];
                  o.invalid && Bt(c, o);
                }
              };
            if (r.levelIsComplete(n, e)) return c;
            h();
            var d = function () {
                if (!o) {
                  o = On();
                  for (var t = 0; t < e.length; t++) Pn(o, e[t].boundingBox());
                }
                return o;
              },
              p = function (e) {
                var t = (e = e || {}).after;
                if ((d(), o.w * u * (o.h * u) > Id)) return null;
                var i = r.makeLayer(o, n);
                if (null != t) {
                  var a = c.indexOf(t) + 1;
                  c.splice(a, 0, i);
                } else (void 0 === e.insert || e.insert) && c.unshift(i);
                return i;
              };
            if (r.skipping && !a) return null;
            for (
              var g = null, f = e.length / wd, v = !a, y = 0;
              y < e.length;
              y++
            ) {
              var m = e[y],
                b = m._private.rscratch,
                x = (b.imgLayerCaches = b.imgLayerCaches || {}),
                w = x[n];
              if (w) g = w;
              else {
                if (
                  (!g || g.eles.length >= f || !Vn(g.bb, m.boundingBox())) &&
                  !(g = p({ insert: !0, after: g }))
                )
                  return null;
                s || v ? r.queueLayer(g, m) : r.drawEleInLayer(g, m, n, t),
                  g.eles.push(m),
                  (x[n] = g);
              }
            }
            return s || (v ? null : c);
          }),
          (Rd.getEleLevelForLayerLevel = function (e, t) {
            return e;
          }),
          (Rd.drawEleInLayer = function (e, t, n, r) {
            var i = this,
              a = this.renderer,
              o = e.context,
              s = t.boundingBox();
            0 !== s.w &&
              0 !== s.h &&
              t.visible() &&
              ((n = i.getEleLevelForLayerLevel(n, r)),
              a.setImgSmoothing(o, !1),
              a.drawCachedElement(o, t, null, null, n, Md),
              a.setImgSmoothing(o, !0));
          }),
          (Rd.levelIsComplete = function (e, t) {
            var n = this.layersByLevel[e];
            if (!n || 0 === n.length) return !1;
            for (var r = 0, i = 0; i < n.length; i++) {
              var a = n[i];
              if (a.reqs > 0) return !1;
              if (a.invalid) return !1;
              r += a.eles.length;
            }
            return r === t.length;
          }),
          (Rd.validateLayersElesOrdering = function (e, t) {
            var n = this.layersByLevel[e];
            if (n)
              for (var r = 0; r < n.length; r++) {
                for (var i = n[r], a = -1, o = 0; o < t.length; o++)
                  if (i.eles[0] === t[o]) {
                    a = o;
                    break;
                  }
                if (a < 0) this.invalidateLayer(i);
                else {
                  var s = a;
                  for (o = 0; o < i.eles.length; o++)
                    if (i.eles[o] !== t[s + o]) {
                      this.invalidateLayer(i);
                      break;
                    }
                }
              }
          }),
          (Rd.updateElementsInLayers = function (e, t) {
            for (var n = this, r = S(e[0]), i = 0; i < e.length; i++)
              for (
                var a = r ? null : e[i],
                  o = r ? e[i] : e[i].ele,
                  s = o._private.rscratch,
                  l = (s.imgLayerCaches = s.imgLayerCaches || {}),
                  u = Ed;
                u <= Td;
                u++
              ) {
                var c = l[u];
                c &&
                  ((a && n.getEleLevelForLayerLevel(c.level) !== a.level) ||
                    t(c, o, a));
              }
          }),
          (Rd.haveLayers = function () {
            for (var e = this, t = !1, n = Ed; n <= Td; n++) {
              var r = e.layersByLevel[n];
              if (r && r.length > 0) {
                t = !0;
                break;
              }
            }
            return t;
          }),
          (Rd.invalidateElements = function (e) {
            var t = this;
            0 !== e.length &&
              ((t.lastInvalidationTime = at()),
              0 !== e.length &&
                t.haveLayers() &&
                t.updateElementsInLayers(e, function (e, n, r) {
                  t.invalidateLayer(e);
                }));
          }),
          (Rd.invalidateLayer = function (e) {
            if (((this.lastInvalidationTime = at()), !e.invalid)) {
              var t = e.level,
                n = e.eles,
                r = this.layersByLevel[t];
              Bt(r, e),
                (e.elesQueue = []),
                (e.invalid = !0),
                e.replacement && (e.replacement.invalid = !0);
              for (var i = 0; i < n.length; i++) {
                var a = n[i]._private.rscratch.imgLayerCaches;
                a && (a[t] = null);
              }
            }
          }),
          (Rd.refineElementTextures = function (e) {
            var t = this;
            t.updateElementsInLayers(e, function (e, n, r) {
              var i = e.replacement;
              if (
                (i ||
                  (((i = e.replacement = t.makeLayer(e.bb, e.level)).replaces =
                    e),
                  (i.eles = e.eles)),
                !i.reqs)
              )
                for (var a = 0; a < i.eles.length; a++)
                  t.queueLayer(i, i.eles[a]);
            });
          }),
          (Rd.enqueueElementRefinement = function (e) {
            this.eleTxrDeqs.merge(e), this.scheduleElementRefinement();
          }),
          (Rd.queueLayer = function (e, t) {
            var n = this.layersQueue,
              r = e.elesQueue,
              i = (r.hasId = r.hasId || {});
            if (!e.replacement) {
              if (t) {
                if (i[t.id()]) return;
                r.push(t), (i[t.id()] = !0);
              }
              e.reqs ? (e.reqs++, n.updateItem(e)) : ((e.reqs = 1), n.push(e));
            }
          }),
          (Rd.dequeue = function (e) {
            for (
              var t = this, n = t.layersQueue, r = [], i = 0;
              i < Od && 0 !== n.size();

            ) {
              var a = n.peek();
              if (a.replacement) n.pop();
              else if (a.replaces && a !== a.replaces.replacement) n.pop();
              else if (a.invalid) n.pop();
              else {
                var o = a.elesQueue.shift();
                o && (t.drawEleInLayer(a, o, a.level, e), i++),
                  0 === r.length && r.push(!0),
                  0 === a.elesQueue.length &&
                    (n.pop(),
                    (a.reqs = 0),
                    a.replaces && t.applyLayerReplacement(a),
                    t.requestRedraw());
              }
            }
            return r;
          }),
          (Rd.applyLayerReplacement = function (e) {
            var t = this,
              n = t.layersByLevel[e.level],
              r = e.replaces,
              i = n.indexOf(r);
            if (!(i < 0 || r.invalid)) {
              n[i] = e;
              for (var a = 0; a < e.eles.length; a++) {
                var o = e.eles[a]._private,
                  s = (o.imgLayerCaches = o.imgLayerCaches || {});
                s && (s[e.level] = e);
              }
              t.requestRedraw();
            }
          }),
          (Rd.requestRedraw = et(function () {
            var e = this.renderer;
            e.redrawHint("eles", !0), e.redrawHint("drag", !0), e.redraw();
          }, 100)),
          (Rd.setupDequeueing = Zh.setupDequeueing({
            deqRedrawThreshold: Dd,
            deqCost: Nd,
            deqAvgCost: Ad,
            deqNoDrawCost: Ld,
            deqFastCost: Sd,
            deq: function (e, t) {
              return e.dequeue(t);
            },
            onDeqd: Ct,
            shouldRedraw: Tt,
            priority: function (e) {
              return e.renderer.beforeRenderPriorities.lyrTxrDeq;
            },
          }));
        var zd,
          Gd = {};
        function Yd(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            e.lineTo(r.x, r.y);
          }
        }
        function Xd(e, t, n) {
          for (var r, i = 0; i < t.length; i++) {
            var a = t[i];
            0 === i && (r = a), e.lineTo(a.x, a.y);
          }
          e.quadraticCurveTo(n.x, n.y, r.x, r.y);
        }
        function Vd(e, t, n) {
          e.beginPath && e.beginPath();
          for (var r = t, i = 0; i < r.length; i++) {
            var a = r[i];
            e.lineTo(a.x, a.y);
          }
          var o = n,
            s = n[0];
          for (e.moveTo(s.x, s.y), i = 1; i < o.length; i++)
            (a = o[i]), e.lineTo(a.x, a.y);
          e.closePath && e.closePath();
        }
        function Ud(e, t, n, r, i) {
          e.beginPath && e.beginPath(), e.arc(n, r, i, 0, 2 * Math.PI, !1);
          var a = t,
            o = a[0];
          e.moveTo(o.x, o.y);
          for (var s = 0; s < a.length; s++) {
            var l = a[s];
            e.lineTo(l.x, l.y);
          }
          e.closePath && e.closePath();
        }
        function jd(e, t, n, r) {
          e.arc(t, n, r, 0, 2 * Math.PI, !1);
        }
        Gd.arrowShapeImpl = function (e) {
          return (zd ||
            (zd = {
              polygon: Yd,
              "triangle-backcurve": Xd,
              "triangle-tee": Vd,
              "circle-triangle": Ud,
              "triangle-cross": Vd,
              circle: jd,
            }))[e];
        };
        var Hd = {
            drawElement: function (e, t, n, r, i, a) {
              var o = this;
              t.isNode()
                ? o.drawNode(e, t, n, r, i, a)
                : o.drawEdge(e, t, n, r, i, a);
            },
            drawElementOverlay: function (e, t) {
              var n = this;
              t.isNode() ? n.drawNodeOverlay(e, t) : n.drawEdgeOverlay(e, t);
            },
            drawElementUnderlay: function (e, t) {
              var n = this;
              t.isNode() ? n.drawNodeUnderlay(e, t) : n.drawEdgeUnderlay(e, t);
            },
            drawCachedElementPortion: function (e, t, n, r, i, a, o, s) {
              var l = this,
                u = n.getBoundingBox(t);
              if (0 !== u.w && 0 !== u.h) {
                var c = n.getElement(t, u, r, i, a);
                if (null != c) {
                  var h = s(l, t);
                  if (0 === h) return;
                  var d,
                    p,
                    g,
                    f,
                    v,
                    y,
                    m = o(l, t),
                    b = u.x1,
                    x = u.y1,
                    w = u.w,
                    E = u.h;
                  if (0 !== m) {
                    var T = n.getRotationPoint(t);
                    (g = T.x),
                      (f = T.y),
                      e.translate(g, f),
                      e.rotate(m),
                      (v = l.getImgSmoothing(e)) || l.setImgSmoothing(e, !0);
                    var _ = n.getRotationOffset(t);
                    (d = _.x), (p = _.y);
                  } else (d = b), (p = x);
                  1 !== h && ((y = e.globalAlpha), (e.globalAlpha = y * h)),
                    e.drawImage(
                      c.texture.canvas,
                      c.x,
                      0,
                      c.width,
                      c.height,
                      d,
                      p,
                      w,
                      E
                    ),
                    1 !== h && (e.globalAlpha = y),
                    0 !== m &&
                      (e.rotate(-m),
                      e.translate(-g, -f),
                      v || l.setImgSmoothing(e, !1));
                } else n.drawElement(e, t);
              }
            },
          },
          qd = function () {
            return 0;
          },
          Wd = function (e, t) {
            return e.getTextAngle(t, null);
          },
          $d = function (e, t) {
            return e.getTextAngle(t, "source");
          },
          Kd = function (e, t) {
            return e.getTextAngle(t, "target");
          },
          Zd = function (e, t) {
            return t.effectiveOpacity();
          },
          Qd = function (e, t) {
            return t.pstyle("text-opacity").pfValue * t.effectiveOpacity();
          };
        (Hd.drawCachedElement = function (e, t, n, r, i, a) {
          var o = this,
            s = o.data,
            l = s.eleTxrCache,
            u = s.lblTxrCache,
            c = s.slbTxrCache,
            h = s.tlbTxrCache,
            d = t.boundingBox(),
            p = !0 === a ? l.reasons.highQuality : null;
          if (0 !== d.w && 0 !== d.h && t.visible() && (!r || Gn(d, r))) {
            var g = t.isEdge(),
              f = t.element()._private.rscratch.badLine;
            o.drawElementUnderlay(e, t),
              o.drawCachedElementPortion(e, t, l, n, i, p, qd, Zd),
              (g && f) || o.drawCachedElementPortion(e, t, u, n, i, p, Wd, Qd),
              g &&
                !f &&
                (o.drawCachedElementPortion(e, t, c, n, i, p, $d, Qd),
                o.drawCachedElementPortion(e, t, h, n, i, p, Kd, Qd)),
              o.drawElementOverlay(e, t);
          }
        }),
          (Hd.drawElements = function (e, t) {
            for (var n = this, r = 0; r < t.length; r++) {
              var i = t[r];
              n.drawElement(e, i);
            }
          }),
          (Hd.drawCachedElements = function (e, t, n, r) {
            for (var i = this, a = 0; a < t.length; a++) {
              var o = t[a];
              i.drawCachedElement(e, o, n, r);
            }
          }),
          (Hd.drawCachedNodes = function (e, t, n, r) {
            for (var i = this, a = 0; a < t.length; a++) {
              var o = t[a];
              o.isNode() && i.drawCachedElement(e, o, n, r);
            }
          }),
          (Hd.drawLayeredElements = function (e, t, n, r) {
            var i = this,
              a = i.data.lyrTxrCache.getLayers(t, n);
            if (a)
              for (var o = 0; o < a.length; o++) {
                var s = a[o],
                  l = s.bb;
                0 !== l.w &&
                  0 !== l.h &&
                  e.drawImage(s.canvas, l.x1, l.y1, l.w, l.h);
              }
            else i.drawCachedElements(e, t, n, r);
          });
        var Jd = {
            drawEdge: function (e, t, n) {
              var r =
                  !(arguments.length > 3 && void 0 !== arguments[3]) ||
                  arguments[3],
                i =
                  !(arguments.length > 4 && void 0 !== arguments[4]) ||
                  arguments[4],
                a =
                  !(arguments.length > 5 && void 0 !== arguments[5]) ||
                  arguments[5],
                o = this,
                s = t._private.rscratch;
              if (
                (!a || t.visible()) &&
                !s.badLine &&
                null != s.allpts &&
                !isNaN(s.allpts[0])
              ) {
                var l;
                n && ((l = n), e.translate(-l.x1, -l.y1));
                var u = a ? t.pstyle("opacity").value : 1,
                  c = a ? t.pstyle("line-opacity").value : 1,
                  h = t.pstyle("curve-style").value,
                  d = t.pstyle("line-style").value,
                  p = t.pstyle("width").pfValue,
                  g = t.pstyle("line-cap").value,
                  f = t.pstyle("line-outline-width").value,
                  v = t.pstyle("line-outline-color").value,
                  y = u * c,
                  m = u * c,
                  b = function () {
                    var n =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : y;
                    "straight-triangle" === h
                      ? (o.eleStrokeStyle(e, t, n),
                        o.drawEdgeTrianglePath(t, e, s.allpts))
                      : ((e.lineWidth = p),
                        (e.lineCap = g),
                        o.eleStrokeStyle(e, t, n),
                        o.drawEdgePath(t, e, s.allpts, d),
                        (e.lineCap = "butt"));
                  },
                  x = function () {
                    var n =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : y;
                    (e.lineWidth = p + f),
                      (e.lineCap = g),
                      f > 0
                        ? (o.colorStrokeStyle(e, v[0], v[1], v[2], n),
                          "straight-triangle" === h
                            ? o.drawEdgeTrianglePath(t, e, s.allpts)
                            : (o.drawEdgePath(t, e, s.allpts, d),
                              (e.lineCap = "butt")))
                        : (e.lineCap = "butt");
                  },
                  w = function () {
                    i && o.drawEdgeOverlay(e, t);
                  },
                  E = function () {
                    i && o.drawEdgeUnderlay(e, t);
                  },
                  T = function () {
                    var n =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : m;
                    o.drawArrowheads(e, t, n);
                  },
                  _ = function () {
                    o.drawElementText(e, t, null, r);
                  };
                if (
                  ((e.lineJoin = "round"), "yes" === t.pstyle("ghost").value)
                ) {
                  var D = t.pstyle("ghost-offset-x").pfValue,
                    C = t.pstyle("ghost-offset-y").pfValue,
                    N = t.pstyle("ghost-opacity").value,
                    A = y * N;
                  e.translate(D, C), b(A), T(A), e.translate(-D, -C);
                } else x();
                E(), b(), T(), w(), _(), n && e.translate(l.x1, l.y1);
              }
            },
          },
          ep = function (e) {
            if (!["overlay", "underlay"].includes(e))
              throw new Error("Invalid state");
            return function (t, n) {
              if (n.visible()) {
                var r = n.pstyle("".concat(e, "-opacity")).value;
                if (0 !== r) {
                  var i = this,
                    a = i.usePaths(),
                    o = n._private.rscratch,
                    s = 2 * n.pstyle("".concat(e, "-padding")).pfValue,
                    l = n.pstyle("".concat(e, "-color")).value;
                  (t.lineWidth = s),
                    "self" !== o.edgeType || a
                      ? (t.lineCap = "round")
                      : (t.lineCap = "butt"),
                    i.colorStrokeStyle(t, l[0], l[1], l[2], r),
                    i.drawEdgePath(n, t, o.allpts, "solid");
                }
              }
            };
          };
        (Jd.drawEdgeOverlay = ep("overlay")),
          (Jd.drawEdgeUnderlay = ep("underlay")),
          (Jd.drawEdgePath = function (e, t, n, r) {
            var i,
              a = e._private.rscratch,
              o = t,
              s = !1,
              l = this.usePaths(),
              u = e.pstyle("line-dash-pattern").pfValue,
              c = e.pstyle("line-dash-offset").pfValue;
            if (l) {
              var h = n.join("$");
              a.pathCacheKey && a.pathCacheKey === h
                ? ((i = t = a.pathCache), (s = !0))
                : ((i = t = new Path2D()),
                  (a.pathCacheKey = h),
                  (a.pathCache = i));
            }
            if (o.setLineDash)
              switch (r) {
                case "dotted":
                  o.setLineDash([1, 1]);
                  break;
                case "dashed":
                  o.setLineDash(u), (o.lineDashOffset = c);
                  break;
                case "solid":
                  o.setLineDash([]);
              }
            if (!s && !a.badLine)
              switch (
                (t.beginPath && t.beginPath(), t.moveTo(n[0], n[1]), a.edgeType)
              ) {
                case "bezier":
                case "self":
                case "compound":
                case "multibezier":
                  for (var d = 2; d + 3 < n.length; d += 4)
                    t.quadraticCurveTo(n[d], n[d + 1], n[d + 2], n[d + 3]);
                  break;
                case "straight":
                case "haystack":
                  for (var g = 2; g + 1 < n.length; g += 2)
                    t.lineTo(n[g], n[g + 1]);
                  break;
                case "segments":
                  if (a.isRound) {
                    var f,
                      v = p(a.roundCorners);
                    try {
                      for (v.s(); !(f = v.n()).done; ) Ch(t, f.value);
                    } catch (m) {
                      v.e(m);
                    } finally {
                      v.f();
                    }
                    t.lineTo(n[n.length - 2], n[n.length - 1]);
                  } else
                    for (var y = 2; y + 1 < n.length; y += 2)
                      t.lineTo(n[y], n[y + 1]);
              }
            (t = o),
              l ? t.stroke(i) : t.stroke(),
              t.setLineDash && t.setLineDash([]);
          }),
          (Jd.drawEdgeTrianglePath = function (e, t, n) {
            t.fillStyle = t.strokeStyle;
            for (
              var r = e.pstyle("width").pfValue, i = 0;
              i + 1 < n.length;
              i += 2
            ) {
              var a = [n[i + 2] - n[i], n[i + 3] - n[i + 1]],
                o = Math.sqrt(a[0] * a[0] + a[1] * a[1]),
                s = [a[1] / o, -a[0] / o],
                l = [(s[0] * r) / 2, (s[1] * r) / 2];
              t.beginPath(),
                t.moveTo(n[i] - l[0], n[i + 1] - l[1]),
                t.lineTo(n[i] + l[0], n[i + 1] + l[1]),
                t.lineTo(n[i + 2], n[i + 3]),
                t.closePath(),
                t.fill();
            }
          }),
          (Jd.drawArrowheads = function (e, t, n) {
            var r = t._private.rscratch,
              i = "haystack" === r.edgeType;
            i ||
              this.drawArrowhead(
                e,
                t,
                "source",
                r.arrowStartX,
                r.arrowStartY,
                r.srcArrowAngle,
                n
              ),
              this.drawArrowhead(
                e,
                t,
                "mid-target",
                r.midX,
                r.midY,
                r.midtgtArrowAngle,
                n
              ),
              this.drawArrowhead(
                e,
                t,
                "mid-source",
                r.midX,
                r.midY,
                r.midsrcArrowAngle,
                n
              ),
              i ||
                this.drawArrowhead(
                  e,
                  t,
                  "target",
                  r.arrowEndX,
                  r.arrowEndY,
                  r.tgtArrowAngle,
                  n
                );
          }),
          (Jd.drawArrowhead = function (e, t, n, r, i, a, o) {
            if (
              !(
                isNaN(r) ||
                null == r ||
                isNaN(i) ||
                null == i ||
                isNaN(a) ||
                null == a
              )
            ) {
              var s = this,
                l = t.pstyle(n + "-arrow-shape").value;
              if ("none" !== l) {
                var u =
                    "hollow" === t.pstyle(n + "-arrow-fill").value
                      ? "both"
                      : "filled",
                  c = t.pstyle(n + "-arrow-fill").value,
                  h = t.pstyle("width").pfValue,
                  d = t.pstyle(n + "-arrow-width"),
                  p = "match-line" === d.value ? h : d.pfValue;
                "%" === d.units && (p *= h);
                var g = t.pstyle("opacity").value;
                void 0 === o && (o = g);
                var f = e.globalCompositeOperation;
                (1 === o && "hollow" !== c) ||
                  ((e.globalCompositeOperation = "destination-out"),
                  s.colorFillStyle(e, 255, 255, 255, 1),
                  s.colorStrokeStyle(e, 255, 255, 255, 1),
                  s.drawArrowShape(t, e, u, h, l, p, r, i, a),
                  (e.globalCompositeOperation = f));
                var v = t.pstyle(n + "-arrow-color").value;
                s.colorFillStyle(e, v[0], v[1], v[2], o),
                  s.colorStrokeStyle(e, v[0], v[1], v[2], o),
                  s.drawArrowShape(t, e, c, h, l, p, r, i, a);
              }
            }
          }),
          (Jd.drawArrowShape = function (e, t, n, r, i, a, o, s, l) {
            var u,
              c = this,
              h = this.usePaths() && "triangle-cross" !== i,
              d = !1,
              p = t,
              g = { x: o, y: s },
              f = e.pstyle("arrow-scale").value,
              v = this.getArrowWidth(r, f),
              y = c.arrowShapes[i];
            if (h) {
              var m = (c.arrowPathCache = c.arrowPathCache || []),
                b = vt(i),
                x = m[b];
              null != x
                ? ((u = t = x), (d = !0))
                : ((u = t = new Path2D()), (m[b] = u));
            }
            d ||
              (t.beginPath && t.beginPath(),
              h ? y.draw(t, 1, 0, { x: 0, y: 0 }, 1) : y.draw(t, v, l, g, r),
              t.closePath && t.closePath()),
              (t = p),
              h && (t.translate(o, s), t.rotate(l), t.scale(v, v)),
              ("filled" !== n && "both" !== n) || (h ? t.fill(u) : t.fill()),
              ("hollow" !== n && "both" !== n) ||
                ((t.lineWidth = a / (h ? v : 1)),
                (t.lineJoin = "miter"),
                h ? t.stroke(u) : t.stroke()),
              h && (t.scale(1 / v, 1 / v), t.rotate(-l), t.translate(-o, -s));
          });
        var tp = {
            safeDrawImage: function (e, t, n, r, i, a, o, s, l, u) {
              if (!(i <= 0 || a <= 0 || l <= 0 || u <= 0))
                try {
                  e.drawImage(t, n, r, i, a, o, s, l, u);
                } catch (c) {
                  Lt(c);
                }
            },
            drawInscribedImage: function (e, t, n, r, i) {
              var a = this,
                o = n.position(),
                s = o.x,
                l = o.y,
                u = n.cy().style(),
                c = u.getIndexedStyle.bind(u),
                h = c(n, "background-fit", "value", r),
                d = c(n, "background-repeat", "value", r),
                p = n.width(),
                g = n.height(),
                f = 2 * n.padding(),
                v =
                  p +
                  ("inner" === c(n, "background-width-relative-to", "value", r)
                    ? 0
                    : f),
                y =
                  g +
                  ("inner" === c(n, "background-height-relative-to", "value", r)
                    ? 0
                    : f),
                m = n._private.rscratch,
                b = "node" === c(n, "background-clip", "value", r),
                x = c(n, "background-image-opacity", "value", r) * i,
                w = c(n, "background-image-smoothing", "value", r),
                E = n.pstyle("corner-radius").value;
              "auto" !== E && (E = n.pstyle("corner-radius").pfValue);
              var T = t.width || t.cachedW,
                _ = t.height || t.cachedH;
              (null != T && null != _) ||
                (document.body.appendChild(t),
                (T = t.cachedW = t.width || t.offsetWidth),
                (_ = t.cachedH = t.height || t.offsetHeight),
                document.body.removeChild(t));
              var D = T,
                C = _;
              if (
                ("auto" !== c(n, "background-width", "value", r) &&
                  (D =
                    "%" === c(n, "background-width", "units", r)
                      ? c(n, "background-width", "pfValue", r) * v
                      : c(n, "background-width", "pfValue", r)),
                "auto" !== c(n, "background-height", "value", r) &&
                  (C =
                    "%" === c(n, "background-height", "units", r)
                      ? c(n, "background-height", "pfValue", r) * y
                      : c(n, "background-height", "pfValue", r)),
                0 !== D && 0 !== C)
              ) {
                if ("contain" === h)
                  (D *= N = Math.min(v / D, y / C)), (C *= N);
                else if ("cover" === h) {
                  var N;
                  (D *= N = Math.max(v / D, y / C)), (C *= N);
                }
                var A = s - v / 2,
                  L = c(n, "background-position-x", "units", r),
                  S = c(n, "background-position-x", "pfValue", r);
                A += "%" === L ? (v - D) * S : S;
                var O = c(n, "background-offset-x", "units", r),
                  k = c(n, "background-offset-x", "pfValue", r);
                A += "%" === O ? (v - D) * k : k;
                var I = l - y / 2,
                  M = c(n, "background-position-y", "units", r),
                  P = c(n, "background-position-y", "pfValue", r);
                I += "%" === M ? (y - C) * P : P;
                var R = c(n, "background-offset-y", "units", r),
                  B = c(n, "background-offset-y", "pfValue", r);
                (I += "%" === R ? (y - C) * B : B),
                  m.pathCache && ((A -= s), (I -= l), (s = 0), (l = 0));
                var F = e.globalAlpha;
                e.globalAlpha = x;
                var z = a.getImgSmoothing(e),
                  G = !1;
                if (
                  ("no" === w && z
                    ? (a.setImgSmoothing(e, !1), (G = !0))
                    : "yes" !== w || z || (a.setImgSmoothing(e, !0), (G = !0)),
                  "no-repeat" === d)
                )
                  b &&
                    (e.save(),
                    m.pathCache
                      ? e.clip(m.pathCache)
                      : (a.nodeShapes[a.getNodeShape(n)].draw(
                          e,
                          s,
                          l,
                          v,
                          y,
                          E,
                          m
                        ),
                        e.clip())),
                    a.safeDrawImage(e, t, 0, 0, T, _, A, I, D, C),
                    b && e.restore();
                else {
                  var Y = e.createPattern(t, d);
                  (e.fillStyle = Y),
                    a.nodeShapes[a.getNodeShape(n)].draw(e, s, l, v, y, E, m),
                    e.translate(A, I),
                    e.fill(),
                    e.translate(-A, -I);
                }
                (e.globalAlpha = F), G && a.setImgSmoothing(e, z);
              }
            },
          },
          np = {};
        function rp(e, t, n, r, i) {
          var a =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 5,
            o = arguments.length > 6 ? arguments[6] : void 0;
          e.beginPath(),
            e.moveTo(t + a, n),
            e.lineTo(t + r - a, n),
            e.quadraticCurveTo(t + r, n, t + r, n + a),
            e.lineTo(t + r, n + i - a),
            e.quadraticCurveTo(t + r, n + i, t + r - a, n + i),
            e.lineTo(t + a, n + i),
            e.quadraticCurveTo(t, n + i, t, n + i - a),
            e.lineTo(t, n + a),
            e.quadraticCurveTo(t, n, t + a, n),
            e.closePath(),
            o ? e.stroke() : e.fill();
        }
        (np.eleTextBiggerThanMin = function (e, t) {
          if (!t) {
            var n = e.cy().zoom(),
              r = this.getPixelRatio(),
              i = Math.ceil(En(n * r));
            t = Math.pow(2, i);
          }
          return !(
            e.pstyle("font-size").pfValue * t <
            e.pstyle("min-zoomed-font-size").pfValue
          );
        }),
          (np.drawElementText = function (e, t, n, r, i) {
            var a =
                !(arguments.length > 5 && void 0 !== arguments[5]) ||
                arguments[5],
              o = this;
            if (null == r) {
              if (a && !o.eleTextBiggerThanMin(t)) return;
            } else if (!1 === r) return;
            if (t.isNode()) {
              var s = t.pstyle("label");
              if (!s || !s.value) return;
              var l = o.getLabelJustification(t);
              (e.textAlign = l), (e.textBaseline = "bottom");
            } else {
              var u = t.element()._private.rscratch.badLine,
                c = t.pstyle("label"),
                h = t.pstyle("source-label"),
                d = t.pstyle("target-label");
              if (
                u ||
                ((!c || !c.value) && (!h || !h.value) && (!d || !d.value))
              )
                return;
              (e.textAlign = "center"), (e.textBaseline = "bottom");
            }
            var p,
              g = !n;
            n && ((p = n), e.translate(-p.x1, -p.y1)),
              null == i
                ? (o.drawText(e, t, null, g, a),
                  t.isEdge() &&
                    (o.drawText(e, t, "source", g, a),
                    o.drawText(e, t, "target", g, a)))
                : o.drawText(e, t, i, g, a),
              n && e.translate(p.x1, p.y1);
          }),
          (np.getFontCache = function (e) {
            var t;
            this.fontCaches = this.fontCaches || [];
            for (var n = 0; n < this.fontCaches.length; n++)
              if ((t = this.fontCaches[n]).context === e) return t;
            return (t = { context: e }), this.fontCaches.push(t), t;
          }),
          (np.setupTextStyle = function (e, t) {
            var n =
                !(arguments.length > 2 && void 0 !== arguments[2]) ||
                arguments[2],
              r = t.pstyle("font-style").strValue,
              i = t.pstyle("font-size").pfValue + "px",
              a = t.pstyle("font-family").strValue,
              o = t.pstyle("font-weight").strValue,
              s = n ? t.effectiveOpacity() * t.pstyle("text-opacity").value : 1,
              l = t.pstyle("text-outline-opacity").value * s,
              u = t.pstyle("color").value,
              c = t.pstyle("text-outline-color").value;
            (e.font = r + " " + o + " " + i + " " + a),
              (e.lineJoin = "round"),
              this.colorFillStyle(e, u[0], u[1], u[2], s),
              this.colorStrokeStyle(e, c[0], c[1], c[2], l);
          }),
          (np.getTextAngle = function (e, t) {
            var n = e._private.rscratch,
              r = t ? t + "-" : "",
              i = e.pstyle(r + "text-rotation"),
              a = Gt(n, "labelAngle", t);
            return "autorotate" === i.strValue
              ? e.isEdge()
                ? a
                : 0
              : "none" === i.strValue
              ? 0
              : i.pfValue;
          }),
          (np.drawText = function (e, t, n) {
            var r =
                !(arguments.length > 3 && void 0 !== arguments[3]) ||
                arguments[3],
              i =
                !(arguments.length > 4 && void 0 !== arguments[4]) ||
                arguments[4],
              a = t._private.rscratch,
              o = i ? t.effectiveOpacity() : 1;
            if (!i || (0 !== o && 0 !== t.pstyle("text-opacity").value)) {
              "main" === n && (n = null);
              var s,
                l,
                u = Gt(a, "labelX", n),
                c = Gt(a, "labelY", n),
                h = this.getLabelText(t, n);
              if (null != h && "" !== h && !isNaN(u) && !isNaN(c)) {
                this.setupTextStyle(e, t, i);
                var d,
                  p = n ? n + "-" : "",
                  g = Gt(a, "labelWidth", n),
                  f = Gt(a, "labelHeight", n),
                  v = t.pstyle(p + "text-margin-x").pfValue,
                  y = t.pstyle(p + "text-margin-y").pfValue,
                  m = t.isEdge(),
                  b = t.pstyle("text-halign").value,
                  x = t.pstyle("text-valign").value;
                switch (
                  (m && ((b = "center"), (x = "center")),
                  (u += v),
                  (c += y),
                  0 !== (d = r ? this.getTextAngle(t, n) : 0) &&
                    ((s = u),
                    (l = c),
                    e.translate(s, l),
                    e.rotate(d),
                    (u = 0),
                    (c = 0)),
                  x)
                ) {
                  case "top":
                    break;
                  case "center":
                    c += f / 2;
                    break;
                  case "bottom":
                    c += f;
                }
                var w = t.pstyle("text-background-opacity").value,
                  E = t.pstyle("text-border-opacity").value,
                  T = t.pstyle("text-border-width").pfValue,
                  _ = t.pstyle("text-background-padding").pfValue,
                  D =
                    0 ===
                    t.pstyle("text-background-shape").strValue.indexOf("round"),
                  C = 2;
                if (w > 0 || (T > 0 && E > 0)) {
                  var N = u - _;
                  switch (b) {
                    case "left":
                      N -= g;
                      break;
                    case "center":
                      N -= g / 2;
                  }
                  var A = c - f - _,
                    L = g + 2 * _,
                    S = f + 2 * _;
                  if (w > 0) {
                    var O = e.fillStyle,
                      k = t.pstyle("text-background-color").value;
                    (e.fillStyle =
                      "rgba(" +
                      k[0] +
                      "," +
                      k[1] +
                      "," +
                      k[2] +
                      "," +
                      w * o +
                      ")"),
                      D ? rp(e, N, A, L, S, C) : e.fillRect(N, A, L, S),
                      (e.fillStyle = O);
                  }
                  if (T > 0 && E > 0) {
                    var I = e.strokeStyle,
                      M = e.lineWidth,
                      P = t.pstyle("text-border-color").value,
                      R = t.pstyle("text-border-style").value;
                    if (
                      ((e.strokeStyle =
                        "rgba(" +
                        P[0] +
                        "," +
                        P[1] +
                        "," +
                        P[2] +
                        "," +
                        E * o +
                        ")"),
                      (e.lineWidth = T),
                      e.setLineDash)
                    )
                      switch (R) {
                        case "dotted":
                          e.setLineDash([1, 1]);
                          break;
                        case "dashed":
                          e.setLineDash([4, 2]);
                          break;
                        case "double":
                          (e.lineWidth = T / 4), e.setLineDash([]);
                          break;
                        case "solid":
                          e.setLineDash([]);
                      }
                    if (
                      (D
                        ? rp(e, N, A, L, S, C, "stroke")
                        : e.strokeRect(N, A, L, S),
                      "double" === R)
                    ) {
                      var B = T / 2;
                      D
                        ? rp(e, N + B, A + B, L - 2 * B, S - 2 * B, C, "stroke")
                        : e.strokeRect(N + B, A + B, L - 2 * B, S - 2 * B);
                    }
                    e.setLineDash && e.setLineDash([]),
                      (e.lineWidth = M),
                      (e.strokeStyle = I);
                  }
                }
                var F = 2 * t.pstyle("text-outline-width").pfValue;
                if (
                  (F > 0 && (e.lineWidth = F),
                  "wrap" === t.pstyle("text-wrap").value)
                ) {
                  var z = Gt(a, "labelWrapCachedLines", n),
                    G = Gt(a, "labelLineHeight", n),
                    Y = g / 2,
                    X = this.getLabelJustification(t);
                  switch (
                    ("auto" === X ||
                      ("left" === b
                        ? "left" === X
                          ? (u += -g)
                          : "center" === X && (u += -Y)
                        : "center" === b
                        ? "left" === X
                          ? (u += -Y)
                          : "right" === X && (u += Y)
                        : "right" === b &&
                          ("center" === X
                            ? (u += Y)
                            : "right" === X && (u += g))),
                    x)
                  ) {
                    case "top":
                    case "center":
                    case "bottom":
                      c -= (z.length - 1) * G;
                  }
                  for (var V = 0; V < z.length; V++)
                    F > 0 && e.strokeText(z[V], u, c),
                      e.fillText(z[V], u, c),
                      (c += G);
                } else F > 0 && e.strokeText(h, u, c), e.fillText(h, u, c);
                0 !== d && (e.rotate(-d), e.translate(-s, -l));
              }
            }
          });
        var ip = {
            drawNode: function (e, t, n) {
              var r,
                i,
                a =
                  !(arguments.length > 3 && void 0 !== arguments[3]) ||
                  arguments[3],
                o =
                  !(arguments.length > 4 && void 0 !== arguments[4]) ||
                  arguments[4],
                s =
                  !(arguments.length > 5 && void 0 !== arguments[5]) ||
                  arguments[5],
                l = this,
                u = t._private,
                c = u.rscratch,
                h = t.position();
              if (C(h.x) && C(h.y) && (!s || t.visible())) {
                var d,
                  p,
                  g = s ? t.effectiveOpacity() : 1,
                  f = l.usePaths(),
                  v = !1,
                  y = t.padding();
                (r = t.width() + 2 * y),
                  (i = t.height() + 2 * y),
                  n && ((p = n), e.translate(-p.x1, -p.y1));
                for (
                  var m = t.pstyle("background-image").value,
                    b = new Array(m.length),
                    x = new Array(m.length),
                    w = 0,
                    E = 0;
                  E < m.length;
                  E++
                ) {
                  var T = m[E];
                  if ((b[E] = null != T && "none" !== T)) {
                    var _ = t
                      .cy()
                      .style()
                      .getIndexedStyle(
                        t,
                        "background-image-crossorigin",
                        "value",
                        E
                      );
                    w++,
                      (x[E] = l.getCachedImage(T, _, function () {
                        (u.backgroundTimestamp = Date.now()),
                          t.emitAndNotify("background");
                      }));
                  }
                }
                var D = t.pstyle("background-blacken").value,
                  N = t.pstyle("border-width").pfValue,
                  A = t.pstyle("background-opacity").value * g,
                  L = t.pstyle("border-color").value,
                  S = t.pstyle("border-style").value,
                  O = t.pstyle("border-join").value,
                  k = t.pstyle("border-cap").value,
                  I = t.pstyle("border-position").value,
                  M = t.pstyle("border-dash-pattern").pfValue,
                  P = t.pstyle("border-dash-offset").pfValue,
                  R = t.pstyle("border-opacity").value * g,
                  B = t.pstyle("outline-width").pfValue,
                  F = t.pstyle("outline-color").value,
                  z = t.pstyle("outline-style").value,
                  G = t.pstyle("outline-opacity").value * g,
                  Y = t.pstyle("outline-offset").value,
                  X = t.pstyle("corner-radius").value;
                "auto" !== X && (X = t.pstyle("corner-radius").pfValue);
                var V = function () {
                    var n =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : A;
                    l.eleFillStyle(e, t, n);
                  },
                  U = function () {
                    var t =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : R;
                    l.colorStrokeStyle(e, L[0], L[1], L[2], t);
                  },
                  j = function () {
                    var t =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : G;
                    l.colorStrokeStyle(e, F[0], F[1], F[2], t);
                  },
                  H = function (e, t, n, r) {
                    var i,
                      a = (l.nodePathCache = l.nodePathCache || []),
                      o = yt(
                        "polygon" === n ? n + "," + r.join(",") : n,
                        "" + t,
                        "" + e,
                        "" + X
                      ),
                      s = a[o],
                      u = !1;
                    return (
                      null != s
                        ? ((i = s), (u = !0), (c.pathCache = i))
                        : ((i = new Path2D()), (a[o] = c.pathCache = i)),
                      { path: i, cacheHit: u }
                    );
                  },
                  q = t.pstyle("shape").strValue,
                  W = t.pstyle("shape-polygon-points").pfValue;
                if (f) {
                  e.translate(h.x, h.y);
                  var $ = H(r, i, q, W);
                  (d = $.path), (v = $.cacheHit);
                }
                var K = function () {
                    if (!v) {
                      var n = h;
                      f && (n = { x: 0, y: 0 }),
                        l.nodeShapes[l.getNodeShape(t)].draw(
                          d || e,
                          n.x,
                          n.y,
                          r,
                          i,
                          X,
                          c
                        );
                    }
                    f ? e.fill(d) : e.fill();
                  },
                  Z = function () {
                    for (
                      var n =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : g,
                        r =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        i = u.backgrounding,
                        a = 0,
                        o = 0;
                      o < x.length;
                      o++
                    ) {
                      var s = t
                        .cy()
                        .style()
                        .getIndexedStyle(
                          t,
                          "background-image-containment",
                          "value",
                          o
                        );
                      (r && "over" === s) || (!r && "inside" === s)
                        ? a++
                        : b[o] &&
                          x[o].complete &&
                          !x[o].error &&
                          (a++, l.drawInscribedImage(e, x[o], t, o, n));
                    }
                    (u.backgrounding = !(a === w)),
                      i !== u.backgrounding && t.updateStyle(!1);
                  },
                  Q = function () {
                    var n =
                        arguments.length > 0 &&
                        void 0 !== arguments[0] &&
                        arguments[0],
                      a =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : g;
                    l.hasPie(t) &&
                      (l.drawPie(e, t, a),
                      n &&
                        (f ||
                          l.nodeShapes[l.getNodeShape(t)].draw(
                            e,
                            h.x,
                            h.y,
                            r,
                            i,
                            X,
                            c
                          )));
                  },
                  J = function () {
                    var t =
                        (D > 0 ? D : -D) *
                        (arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : g),
                      n = D > 0 ? 0 : 255;
                    0 !== D &&
                      (l.colorFillStyle(e, n, n, n, t),
                      f ? e.fill(d) : e.fill());
                  },
                  ee = function () {
                    if (N > 0) {
                      if (
                        ((e.lineWidth = N),
                        (e.lineCap = k),
                        (e.lineJoin = O),
                        e.setLineDash)
                      )
                        switch (S) {
                          case "dotted":
                            e.setLineDash([1, 1]);
                            break;
                          case "dashed":
                            e.setLineDash(M), (e.lineDashOffset = P);
                            break;
                          case "solid":
                          case "double":
                            e.setLineDash([]);
                        }
                      if ("center" !== I) {
                        if ((e.save(), (e.lineWidth *= 2), "inside" === I))
                          f ? e.clip(d) : e.clip();
                        else {
                          var t = new Path2D();
                          t.rect(-r / 2 - N, -i / 2 - N, r + 2 * N, i + 2 * N),
                            t.addPath(d),
                            e.clip(t, "evenodd");
                        }
                        f ? e.stroke(d) : e.stroke(), e.restore();
                      } else f ? e.stroke(d) : e.stroke();
                      if ("double" === S) {
                        e.lineWidth = N / 3;
                        var n = e.globalCompositeOperation;
                        (e.globalCompositeOperation = "destination-out"),
                          f ? e.stroke(d) : e.stroke(),
                          (e.globalCompositeOperation = n);
                      }
                      e.setLineDash && e.setLineDash([]);
                    }
                  },
                  te = function () {
                    if (B > 0) {
                      if (
                        ((e.lineWidth = B), (e.lineCap = "butt"), e.setLineDash)
                      )
                        switch (z) {
                          case "dotted":
                            e.setLineDash([1, 1]);
                            break;
                          case "dashed":
                            e.setLineDash([4, 2]);
                            break;
                          case "solid":
                          case "double":
                            e.setLineDash([]);
                        }
                      var n = h;
                      f && (n = { x: 0, y: 0 });
                      var a = l.getNodeShape(t),
                        o = N;
                      "inside" === I && (o = 0), "outside" === I && (o *= 2);
                      var s,
                        u = (r + o + (B + Y)) / r,
                        c = (i + o + (B + Y)) / i,
                        d = r * u,
                        p = i * c,
                        g = l.nodeShapes[a].points;
                      if ((f && (s = H(d, p, a, g).path), "ellipse" === a))
                        l.drawEllipsePath(s || e, n.x, n.y, d, p);
                      else if (
                        [
                          "round-diamond",
                          "round-heptagon",
                          "round-hexagon",
                          "round-octagon",
                          "round-pentagon",
                          "round-polygon",
                          "round-triangle",
                          "round-tag",
                        ].includes(a)
                      ) {
                        var v = 0,
                          y = 0,
                          m = 0;
                        "round-diamond" === a
                          ? (v = 1.4 * (o + Y + B))
                          : "round-heptagon" === a
                          ? ((v = 1.075 * (o + Y + B)),
                            (m = -(o / 2 + Y + B) / 35))
                          : "round-hexagon" === a
                          ? (v = 1.12 * (o + Y + B))
                          : "round-pentagon" === a
                          ? ((v = 1.13 * (o + Y + B)),
                            (m = -(o / 2 + Y + B) / 15))
                          : "round-tag" === a
                          ? ((v = 1.12 * (o + Y + B)),
                            (y = 0.07 * (o / 2 + B + Y)))
                          : "round-triangle" === a &&
                            ((v = (o + Y + B) * (Math.PI / 2)),
                            (m = -(o + Y / 2 + B) / Math.PI)),
                          0 !== v &&
                            ((d = r * (u = (r + v) / r)),
                            ["round-hexagon", "round-tag"].includes(a) ||
                              (p = i * (c = (i + v) / i)));
                        for (
                          var b = d / 2,
                            x = p / 2,
                            w =
                              (X = "auto" === X ? gr(d, p) : X) +
                              (o + B + Y) / 2,
                            E = new Array(g.length / 2),
                            T = new Array(g.length / 2),
                            _ = 0;
                          _ < g.length / 2;
                          _++
                        )
                          E[_] = {
                            x: n.x + y + b * g[2 * _],
                            y: n.y + m + x * g[2 * _ + 1],
                          };
                        var D,
                          C,
                          A,
                          L,
                          S = E.length;
                        for (C = E[S - 1], D = 0; D < S; D++)
                          (A = E[D % S]),
                            (L = E[(D + 1) % S]),
                            (T[D] = Nh(C, A, L, w)),
                            (C = A),
                            (A = L);
                        l.drawRoundPolygonPath(
                          s || e,
                          n.x + y,
                          n.y + m,
                          r * u,
                          i * c,
                          g,
                          T
                        );
                      } else
                        ["roundrectangle", "round-rectangle"].includes(a)
                          ? ((X = "auto" === X ? pr(d, p) : X),
                            l.drawRoundRectanglePath(
                              s || e,
                              n.x,
                              n.y,
                              d,
                              p,
                              X + (o + B + Y) / 2
                            ))
                          : ["cutrectangle", "cut-rectangle"].includes(a)
                          ? ((X = "auto" === X ? fr() : X),
                            l.drawCutRectanglePath(
                              s || e,
                              n.x,
                              n.y,
                              d,
                              p,
                              null,
                              X + (o + B + Y) / 4
                            ))
                          : [
                              "bottomroundrectangle",
                              "bottom-round-rectangle",
                            ].includes(a)
                          ? ((X = "auto" === X ? pr(d, p) : X),
                            l.drawBottomRoundRectanglePath(
                              s || e,
                              n.x,
                              n.y,
                              d,
                              p,
                              X + (o + B + Y) / 2
                            ))
                          : "barrel" === a
                          ? l.drawBarrelPath(s || e, n.x, n.y, d, p)
                          : a.startsWith("polygon") ||
                            [
                              "rhomboid",
                              "right-rhomboid",
                              "round-tag",
                              "tag",
                              "vee",
                            ].includes(a)
                          ? ((g = er(tr(g, (o + B + Y) / r))),
                            l.drawPolygonPath(s || e, n.x, n.y, r, i, g))
                          : ((g = er(tr(g, -(o + B + Y) / r))),
                            l.drawPolygonPath(s || e, n.x, n.y, r, i, g));
                      if ((f ? e.stroke(s) : e.stroke(), "double" === z)) {
                        e.lineWidth = o / 3;
                        var O = e.globalCompositeOperation;
                        (e.globalCompositeOperation = "destination-out"),
                          f ? e.stroke(s) : e.stroke(),
                          (e.globalCompositeOperation = O);
                      }
                      e.setLineDash && e.setLineDash([]);
                    }
                  },
                  ne = function () {
                    o && l.drawNodeOverlay(e, t, h, r, i);
                  },
                  re = function () {
                    o && l.drawNodeUnderlay(e, t, h, r, i);
                  },
                  ie = function () {
                    l.drawElementText(e, t, null, a);
                  };
                if ("yes" === t.pstyle("ghost").value) {
                  var ae = t.pstyle("ghost-offset-x").pfValue,
                    oe = t.pstyle("ghost-offset-y").pfValue,
                    se = t.pstyle("ghost-opacity").value,
                    le = se * g;
                  e.translate(ae, oe),
                    j(),
                    te(),
                    V(se * A),
                    K(),
                    Z(le, !0),
                    U(se * R),
                    ee(),
                    Q(0 !== D || 0 !== N),
                    Z(le, !1),
                    J(le),
                    e.translate(-ae, -oe);
                }
                f && e.translate(-h.x, -h.y),
                  re(),
                  f && e.translate(h.x, h.y),
                  j(),
                  te(),
                  V(),
                  K(),
                  Z(g, !0),
                  U(),
                  ee(),
                  Q(0 !== D || 0 !== N),
                  Z(g, !1),
                  J(),
                  f && e.translate(-h.x, -h.y),
                  ie(),
                  ne(),
                  n && e.translate(p.x1, p.y1);
              }
            },
          },
          ap = function (e) {
            if (!["overlay", "underlay"].includes(e))
              throw new Error("Invalid state");
            return function (t, n, r, i, a) {
              var o = this;
              if (n.visible()) {
                var s = n.pstyle("".concat(e, "-padding")).pfValue,
                  l = n.pstyle("".concat(e, "-opacity")).value,
                  u = n.pstyle("".concat(e, "-color")).value,
                  c = n.pstyle("".concat(e, "-shape")).value,
                  h = n.pstyle("".concat(e, "-corner-radius")).value;
                if (l > 0) {
                  if (((r = r || n.position()), null == i || null == a)) {
                    var d = n.padding();
                    (i = n.width() + 2 * d), (a = n.height() + 2 * d);
                  }
                  o.colorFillStyle(t, u[0], u[1], u[2], l),
                    o.nodeShapes[c].draw(t, r.x, r.y, i + 2 * s, a + 2 * s, h),
                    t.fill();
                }
              }
            };
          };
        (ip.drawNodeOverlay = ap("overlay")),
          (ip.drawNodeUnderlay = ap("underlay")),
          (ip.hasPie = function (e) {
            return (e = e[0])._private.hasPie;
          }),
          (ip.drawPie = function (e, t, n, r) {
            (t = t[0]), (r = r || t.position());
            var i = t.cy().style(),
              a = t.pstyle("pie-size"),
              o = r.x,
              s = r.y,
              l = t.width(),
              u = t.height(),
              c = Math.min(l, u) / 2,
              h = 0;
            this.usePaths() && ((o = 0), (s = 0)),
              "%" === a.units
                ? (c *= a.pfValue)
                : void 0 !== a.pfValue && (c = a.pfValue / 2);
            for (var d = 1; d <= i.pieBackgroundN; d++) {
              var p = t.pstyle("pie-" + d + "-background-size").value,
                g = t.pstyle("pie-" + d + "-background-color").value,
                f = t.pstyle("pie-" + d + "-background-opacity").value * n,
                v = p / 100;
              v + h > 1 && (v = 1 - h);
              var y = 1.5 * Math.PI + 2 * Math.PI * h,
                m = y + 2 * Math.PI * v;
              0 === p ||
                h >= 1 ||
                h + v > 1 ||
                (e.beginPath(),
                e.moveTo(o, s),
                e.arc(o, s, c, y, m),
                e.closePath(),
                this.colorFillStyle(e, g[0], g[1], g[2], f),
                e.fill(),
                (h += v));
            }
          });
        var op = {},
          sp = 100;
        (op.getPixelRatio = function () {
          var e = this.data.contexts[0];
          if (null != this.forcedPixelRatio) return this.forcedPixelRatio;
          var t = this.cy.window(),
            n =
              e.backingStorePixelRatio ||
              e.webkitBackingStorePixelRatio ||
              e.mozBackingStorePixelRatio ||
              e.msBackingStorePixelRatio ||
              e.oBackingStorePixelRatio ||
              e.backingStorePixelRatio ||
              1;
          return (t.devicePixelRatio || 1) / n;
        }),
          (op.paintCache = function (e) {
            for (
              var t,
                n = (this.paintCaches = this.paintCaches || []),
                r = !0,
                i = 0;
              i < n.length;
              i++
            )
              if ((t = n[i]).context === e) {
                r = !1;
                break;
              }
            return r && ((t = { context: e }), n.push(t)), t;
          }),
          (op.createGradientStyleFor = function (e, t, n, r, i) {
            var a,
              o = this.usePaths(),
              s = n.pstyle(t + "-gradient-stop-colors").value,
              l = n.pstyle(t + "-gradient-stop-positions").pfValue;
            if ("radial-gradient" === r)
              if (n.isEdge()) {
                var u = n.sourceEndpoint(),
                  c = n.targetEndpoint(),
                  h = n.midpoint(),
                  d = _n(u, h),
                  p = _n(c, h);
                a = e.createRadialGradient(
                  h.x,
                  h.y,
                  0,
                  h.x,
                  h.y,
                  Math.max(d, p)
                );
              } else {
                var g = o ? { x: 0, y: 0 } : n.position(),
                  f = n.paddedWidth(),
                  v = n.paddedHeight();
                a = e.createRadialGradient(
                  g.x,
                  g.y,
                  0,
                  g.x,
                  g.y,
                  Math.max(f, v)
                );
              }
            else if (n.isEdge()) {
              var y = n.sourceEndpoint(),
                m = n.targetEndpoint();
              a = e.createLinearGradient(y.x, y.y, m.x, m.y);
            } else {
              var b = o ? { x: 0, y: 0 } : n.position(),
                x = n.paddedWidth() / 2,
                w = n.paddedHeight() / 2;
              switch (n.pstyle("background-gradient-direction").value) {
                case "to-bottom":
                  a = e.createLinearGradient(b.x, b.y - w, b.x, b.y + w);
                  break;
                case "to-top":
                  a = e.createLinearGradient(b.x, b.y + w, b.x, b.y - w);
                  break;
                case "to-left":
                  a = e.createLinearGradient(b.x + x, b.y, b.x - x, b.y);
                  break;
                case "to-right":
                  a = e.createLinearGradient(b.x - x, b.y, b.x + x, b.y);
                  break;
                case "to-bottom-right":
                case "to-right-bottom":
                  a = e.createLinearGradient(
                    b.x - x,
                    b.y - w,
                    b.x + x,
                    b.y + w
                  );
                  break;
                case "to-top-right":
                case "to-right-top":
                  a = e.createLinearGradient(
                    b.x - x,
                    b.y + w,
                    b.x + x,
                    b.y - w
                  );
                  break;
                case "to-bottom-left":
                case "to-left-bottom":
                  a = e.createLinearGradient(
                    b.x + x,
                    b.y - w,
                    b.x - x,
                    b.y + w
                  );
                  break;
                case "to-top-left":
                case "to-left-top":
                  a = e.createLinearGradient(
                    b.x + x,
                    b.y + w,
                    b.x - x,
                    b.y - w
                  );
              }
            }
            if (!a) return null;
            for (var E = l.length === s.length, T = s.length, _ = 0; _ < T; _++)
              a.addColorStop(
                E ? l[_] : _ / (T - 1),
                "rgba(" +
                  s[_][0] +
                  "," +
                  s[_][1] +
                  "," +
                  s[_][2] +
                  "," +
                  i +
                  ")"
              );
            return a;
          }),
          (op.gradientFillStyle = function (e, t, n, r) {
            var i = this.createGradientStyleFor(e, "background", t, n, r);
            if (!i) return null;
            e.fillStyle = i;
          }),
          (op.colorFillStyle = function (e, t, n, r, i) {
            e.fillStyle = "rgba(" + t + "," + n + "," + r + "," + i + ")";
          }),
          (op.eleFillStyle = function (e, t, n) {
            var r = t.pstyle("background-fill").value;
            if ("linear-gradient" === r || "radial-gradient" === r)
              this.gradientFillStyle(e, t, r, n);
            else {
              var i = t.pstyle("background-color").value;
              this.colorFillStyle(e, i[0], i[1], i[2], n);
            }
          }),
          (op.gradientStrokeStyle = function (e, t, n, r) {
            var i = this.createGradientStyleFor(e, "line", t, n, r);
            if (!i) return null;
            e.strokeStyle = i;
          }),
          (op.colorStrokeStyle = function (e, t, n, r, i) {
            e.strokeStyle = "rgba(" + t + "," + n + "," + r + "," + i + ")";
          }),
          (op.eleStrokeStyle = function (e, t, n) {
            var r = t.pstyle("line-fill").value;
            if ("linear-gradient" === r || "radial-gradient" === r)
              this.gradientStrokeStyle(e, t, r, n);
            else {
              var i = t.pstyle("line-color").value;
              this.colorStrokeStyle(e, i[0], i[1], i[2], n);
            }
          }),
          (op.matchCanvasSize = function (e) {
            var t = this,
              n = t.data,
              r = t.findContainerClientCoords(),
              i = r[2],
              a = r[3],
              o = t.getPixelRatio(),
              s = t.motionBlurPxRatio;
            (e !== t.data.bufferCanvases[t.MOTIONBLUR_BUFFER_NODE] &&
              e !== t.data.bufferCanvases[t.MOTIONBLUR_BUFFER_DRAG]) ||
              (o = s);
            var l,
              u = i * o,
              c = a * o;
            if (u !== t.canvasWidth || c !== t.canvasHeight) {
              t.fontCaches = null;
              var h = n.canvasContainer;
              (h.style.width = i + "px"), (h.style.height = a + "px");
              for (var d = 0; d < t.CANVAS_LAYERS; d++)
                ((l = n.canvases[d]).width = u),
                  (l.height = c),
                  (l.style.width = i + "px"),
                  (l.style.height = a + "px");
              for (d = 0; d < t.BUFFER_COUNT; d++)
                ((l = n.bufferCanvases[d]).width = u),
                  (l.height = c),
                  (l.style.width = i + "px"),
                  (l.style.height = a + "px");
              (t.textureMult = 1),
                o <= 1 &&
                  ((l = n.bufferCanvases[t.TEXTURE_BUFFER]),
                  (t.textureMult = 2),
                  (l.width = u * t.textureMult),
                  (l.height = c * t.textureMult)),
                (t.canvasWidth = u),
                (t.canvasHeight = c);
            }
          }),
          (op.renderTo = function (e, t, n, r) {
            this.render({
              forcedContext: e,
              forcedZoom: t,
              forcedPan: n,
              drawAllLayers: !0,
              forcedPxRatio: r,
            });
          }),
          (op.render = function (e) {
            var t = (e = e || Pt()).forcedContext,
              n = e.drawAllLayers,
              r = e.drawOnlyNodeLayer,
              i = e.forcedZoom,
              a = e.forcedPan,
              o = this,
              s =
                void 0 === e.forcedPxRatio
                  ? this.getPixelRatio()
                  : e.forcedPxRatio,
              l = o.cy,
              u = o.data,
              c = u.canvasNeedsRedraw,
              h =
                o.textureOnViewport &&
                !t &&
                (o.pinching ||
                  o.hoverData.dragging ||
                  o.swipePanning ||
                  o.data.wheelZooming),
              d = void 0 !== e.motionBlur ? e.motionBlur : o.motionBlur,
              p = o.motionBlurPxRatio,
              g = l.hasCompoundNodes(),
              f = o.hoverData.draggingEles,
              v = !(!o.hoverData.selecting && !o.touchData.selecting),
              y = (d = d && !t && o.motionBlurEnabled && !v);
            t ||
              (o.prevPxRatio !== s &&
                (o.invalidateContainerClientCoordsCache(),
                o.matchCanvasSize(o.container),
                o.redrawHint("eles", !0),
                o.redrawHint("drag", !0)),
              (o.prevPxRatio = s)),
              !t && o.motionBlurTimeout && clearTimeout(o.motionBlurTimeout),
              d &&
                (null == o.mbFrames && (o.mbFrames = 0),
                o.mbFrames++,
                o.mbFrames < 3 && (y = !1),
                o.mbFrames > o.minMbLowQualFrames &&
                  (o.motionBlurPxRatio = o.mbPxRBlurry)),
              o.clearingMotionBlur && (o.motionBlurPxRatio = 1),
              o.textureDrawLastFrame &&
                !h &&
                ((c[o.NODE] = !0), (c[o.SELECT_BOX] = !0));
            var m = l.style(),
              b = l.zoom(),
              x = void 0 !== i ? i : b,
              w = l.pan(),
              E = { x: w.x, y: w.y },
              T = { zoom: b, pan: { x: w.x, y: w.y } },
              _ = o.prevViewport;
            void 0 === _ ||
              T.zoom !== _.zoom ||
              T.pan.x !== _.pan.x ||
              T.pan.y !== _.pan.y ||
              (f && !g) ||
              (o.motionBlurPxRatio = 1),
              a && (E = a),
              (x *= s),
              (E.x *= s),
              (E.y *= s);
            var D = o.getCachedZSortedEles();
            function C(e, t, n, r, i) {
              var a = e.globalCompositeOperation;
              (e.globalCompositeOperation = "destination-out"),
                o.colorFillStyle(e, 255, 255, 255, o.motionBlurTransparency),
                e.fillRect(t, n, r, i),
                (e.globalCompositeOperation = a);
            }
            function N(e, r) {
              var s, l, c, h;
              o.clearingMotionBlur ||
              (e !== u.bufferContexts[o.MOTIONBLUR_BUFFER_NODE] &&
                e !== u.bufferContexts[o.MOTIONBLUR_BUFFER_DRAG])
                ? ((s = E), (l = x), (c = o.canvasWidth), (h = o.canvasHeight))
                : ((s = { x: w.x * p, y: w.y * p }),
                  (l = b * p),
                  (c = o.canvasWidth * p),
                  (h = o.canvasHeight * p)),
                e.setTransform(1, 0, 0, 1, 0, 0),
                "motionBlur" === r
                  ? C(e, 0, 0, c, h)
                  : t || (void 0 !== r && !r) || e.clearRect(0, 0, c, h),
                n || (e.translate(s.x, s.y), e.scale(l, l)),
                a && e.translate(a.x, a.y),
                i && e.scale(i, i);
            }
            if ((h || (o.textureDrawLastFrame = !1), h)) {
              if (((o.textureDrawLastFrame = !0), !o.textureCache)) {
                (o.textureCache = {}),
                  (o.textureCache.bb = l.mutableElements().boundingBox()),
                  (o.textureCache.texture =
                    o.data.bufferCanvases[o.TEXTURE_BUFFER]);
                var A = o.data.bufferContexts[o.TEXTURE_BUFFER];
                A.setTransform(1, 0, 0, 1, 0, 0),
                  A.clearRect(
                    0,
                    0,
                    o.canvasWidth * o.textureMult,
                    o.canvasHeight * o.textureMult
                  ),
                  o.render({
                    forcedContext: A,
                    drawOnlyNodeLayer: !0,
                    forcedPxRatio: s * o.textureMult,
                  }),
                  ((T = o.textureCache.viewport =
                    {
                      zoom: l.zoom(),
                      pan: l.pan(),
                      width: o.canvasWidth,
                      height: o.canvasHeight,
                    }).mpan = {
                    x: (0 - T.pan.x) / T.zoom,
                    y: (0 - T.pan.y) / T.zoom,
                  });
              }
              (c[o.DRAG] = !1), (c[o.NODE] = !1);
              var L = u.contexts[o.NODE],
                S = o.textureCache.texture;
              (T = o.textureCache.viewport),
                L.setTransform(1, 0, 0, 1, 0, 0),
                d
                  ? C(L, 0, 0, T.width, T.height)
                  : L.clearRect(0, 0, T.width, T.height);
              var O = m.core("outside-texture-bg-color").value,
                k = m.core("outside-texture-bg-opacity").value;
              o.colorFillStyle(L, O[0], O[1], O[2], k),
                L.fillRect(0, 0, T.width, T.height),
                (b = l.zoom()),
                N(L, !1),
                L.clearRect(
                  T.mpan.x,
                  T.mpan.y,
                  T.width / T.zoom / s,
                  T.height / T.zoom / s
                ),
                L.drawImage(
                  S,
                  T.mpan.x,
                  T.mpan.y,
                  T.width / T.zoom / s,
                  T.height / T.zoom / s
                );
            } else o.textureOnViewport && !t && (o.textureCache = null);
            var I = l.extent(),
              M =
                o.pinching ||
                o.hoverData.dragging ||
                o.swipePanning ||
                o.data.wheelZooming ||
                o.hoverData.draggingEles ||
                o.cy.animated(),
              P = o.hideEdgesOnViewport && M,
              R = [];
            if (
              ((R[o.NODE] =
                (!c[o.NODE] && d && !o.clearedForMotionBlur[o.NODE]) ||
                o.clearingMotionBlur),
              R[o.NODE] && (o.clearedForMotionBlur[o.NODE] = !0),
              (R[o.DRAG] =
                (!c[o.DRAG] && d && !o.clearedForMotionBlur[o.DRAG]) ||
                o.clearingMotionBlur),
              R[o.DRAG] && (o.clearedForMotionBlur[o.DRAG] = !0),
              c[o.NODE] || n || r || R[o.NODE])
            ) {
              var B = d && !R[o.NODE] && 1 !== p;
              N(
                (L =
                  t ||
                  (B
                    ? o.data.bufferContexts[o.MOTIONBLUR_BUFFER_NODE]
                    : u.contexts[o.NODE])),
                d && !B ? "motionBlur" : void 0
              ),
                P
                  ? o.drawCachedNodes(L, D.nondrag, s, I)
                  : o.drawLayeredElements(L, D.nondrag, s, I),
                o.debug && o.drawDebugPoints(L, D.nondrag),
                n || d || (c[o.NODE] = !1);
            }
            if (
              (!r &&
                (c[o.DRAG] || n || R[o.DRAG]) &&
                ((B = d && !R[o.DRAG] && 1 !== p),
                N(
                  (L =
                    t ||
                    (B
                      ? o.data.bufferContexts[o.MOTIONBLUR_BUFFER_DRAG]
                      : u.contexts[o.DRAG])),
                  d && !B ? "motionBlur" : void 0
                ),
                P
                  ? o.drawCachedNodes(L, D.drag, s, I)
                  : o.drawCachedElements(L, D.drag, s, I),
                o.debug && o.drawDebugPoints(L, D.drag),
                n || d || (c[o.DRAG] = !1)),
              o.showFps || (!r && c[o.SELECT_BOX] && !n))
            ) {
              if (
                (N((L = t || u.contexts[o.SELECT_BOX])),
                1 == o.selection[4] &&
                  (o.hoverData.selecting || o.touchData.selecting))
              ) {
                b = o.cy.zoom();
                var F = m.core("selection-box-border-width").value / b;
                (L.lineWidth = F),
                  (L.fillStyle =
                    "rgba(" +
                    m.core("selection-box-color").value[0] +
                    "," +
                    m.core("selection-box-color").value[1] +
                    "," +
                    m.core("selection-box-color").value[2] +
                    "," +
                    m.core("selection-box-opacity").value +
                    ")"),
                  L.fillRect(
                    o.selection[0],
                    o.selection[1],
                    o.selection[2] - o.selection[0],
                    o.selection[3] - o.selection[1]
                  ),
                  F > 0 &&
                    ((L.strokeStyle =
                      "rgba(" +
                      m.core("selection-box-border-color").value[0] +
                      "," +
                      m.core("selection-box-border-color").value[1] +
                      "," +
                      m.core("selection-box-border-color").value[2] +
                      "," +
                      m.core("selection-box-opacity").value +
                      ")"),
                    L.strokeRect(
                      o.selection[0],
                      o.selection[1],
                      o.selection[2] - o.selection[0],
                      o.selection[3] - o.selection[1]
                    ));
              }
              if (u.bgActivePosistion && !o.hoverData.selecting) {
                b = o.cy.zoom();
                var z = u.bgActivePosistion;
                (L.fillStyle =
                  "rgba(" +
                  m.core("active-bg-color").value[0] +
                  "," +
                  m.core("active-bg-color").value[1] +
                  "," +
                  m.core("active-bg-color").value[2] +
                  "," +
                  m.core("active-bg-opacity").value +
                  ")"),
                  L.beginPath(),
                  L.arc(
                    z.x,
                    z.y,
                    m.core("active-bg-size").pfValue / b,
                    0,
                    2 * Math.PI
                  ),
                  L.fill();
              }
              var G = o.lastRedrawTime;
              if (o.showFps && G) {
                G = Math.round(G);
                var Y = Math.round(1e3 / G);
                L.setTransform(1, 0, 0, 1, 0, 0),
                  (L.fillStyle = "rgba(255, 0, 0, 0.75)"),
                  (L.strokeStyle = "rgba(255, 0, 0, 0.75)"),
                  (L.lineWidth = 1),
                  L.fillText("1 frame = " + G + " ms = " + Y + " fps", 0, 20);
                var X = 60;
                L.strokeRect(0, 30, 250, 20),
                  L.fillRect(0, 30, 250 * Math.min(Y / X, 1), 20);
              }
              n || (c[o.SELECT_BOX] = !1);
            }
            if (d && 1 !== p) {
              var V = u.contexts[o.NODE],
                U = o.data.bufferCanvases[o.MOTIONBLUR_BUFFER_NODE],
                j = u.contexts[o.DRAG],
                H = o.data.bufferCanvases[o.MOTIONBLUR_BUFFER_DRAG],
                q = function (e, t, n) {
                  e.setTransform(1, 0, 0, 1, 0, 0),
                    n || !y
                      ? e.clearRect(0, 0, o.canvasWidth, o.canvasHeight)
                      : C(e, 0, 0, o.canvasWidth, o.canvasHeight);
                  var r = p;
                  e.drawImage(
                    t,
                    0,
                    0,
                    o.canvasWidth * r,
                    o.canvasHeight * r,
                    0,
                    0,
                    o.canvasWidth,
                    o.canvasHeight
                  );
                };
              (c[o.NODE] || R[o.NODE]) &&
                (q(V, U, R[o.NODE]), (c[o.NODE] = !1)),
                (c[o.DRAG] || R[o.DRAG]) &&
                  (q(j, H, R[o.DRAG]), (c[o.DRAG] = !1));
            }
            (o.prevViewport = T),
              o.clearingMotionBlur &&
                ((o.clearingMotionBlur = !1),
                (o.motionBlurCleared = !0),
                (o.motionBlur = !0)),
              d &&
                (o.motionBlurTimeout = setTimeout(function () {
                  (o.motionBlurTimeout = null),
                    (o.clearedForMotionBlur[o.NODE] = !1),
                    (o.clearedForMotionBlur[o.DRAG] = !1),
                    (o.motionBlur = !1),
                    (o.clearingMotionBlur = !h),
                    (o.mbFrames = 0),
                    (c[o.NODE] = !0),
                    (c[o.DRAG] = !0),
                    o.redraw();
                }, sp)),
              t || l.emit("render");
          });
        for (
          var lp = {
              drawPolygonPath: function (e, t, n, r, i, a) {
                var o = r / 2,
                  s = i / 2;
                e.beginPath && e.beginPath(),
                  e.moveTo(t + o * a[0], n + s * a[1]);
                for (var l = 1; l < a.length / 2; l++)
                  e.lineTo(t + o * a[2 * l], n + s * a[2 * l + 1]);
                e.closePath();
              },
              drawRoundPolygonPath: function (e, t, n, r, i, a, o) {
                o.forEach(function (t) {
                  return Ch(e, t);
                }),
                  e.closePath();
              },
              drawRoundRectanglePath: function (e, t, n, r, i, a) {
                var o = r / 2,
                  s = i / 2,
                  l = "auto" === a ? pr(r, i) : Math.min(a, s, o);
                e.beginPath && e.beginPath(),
                  e.moveTo(t, n - s),
                  e.arcTo(t + o, n - s, t + o, n, l),
                  e.arcTo(t + o, n + s, t, n + s, l),
                  e.arcTo(t - o, n + s, t - o, n, l),
                  e.arcTo(t - o, n - s, t, n - s, l),
                  e.lineTo(t, n - s),
                  e.closePath();
              },
              drawBottomRoundRectanglePath: function (e, t, n, r, i, a) {
                var o = r / 2,
                  s = i / 2,
                  l = "auto" === a ? pr(r, i) : a;
                e.beginPath && e.beginPath(),
                  e.moveTo(t, n - s),
                  e.lineTo(t + o, n - s),
                  e.lineTo(t + o, n),
                  e.arcTo(t + o, n + s, t, n + s, l),
                  e.arcTo(t - o, n + s, t - o, n, l),
                  e.lineTo(t - o, n - s),
                  e.lineTo(t, n - s),
                  e.closePath();
              },
              drawCutRectanglePath: function (e, t, n, r, i, a, o) {
                var s = r / 2,
                  l = i / 2,
                  u = "auto" === o ? fr() : o;
                e.beginPath && e.beginPath(),
                  e.moveTo(t - s + u, n - l),
                  e.lineTo(t + s - u, n - l),
                  e.lineTo(t + s, n - l + u),
                  e.lineTo(t + s, n + l - u),
                  e.lineTo(t + s - u, n + l),
                  e.lineTo(t - s + u, n + l),
                  e.lineTo(t - s, n + l - u),
                  e.lineTo(t - s, n - l + u),
                  e.closePath();
              },
              drawBarrelPath: function (e, t, n, r, i) {
                var a = r / 2,
                  o = i / 2,
                  s = t - a,
                  l = t + a,
                  u = n - o,
                  c = n + o,
                  h = yr(r, i),
                  d = h.widthOffset,
                  p = h.heightOffset,
                  g = h.ctrlPtOffsetPct * d;
                e.beginPath && e.beginPath(),
                  e.moveTo(s, u + p),
                  e.lineTo(s, c - p),
                  e.quadraticCurveTo(s + g, c, s + d, c),
                  e.lineTo(l - d, c),
                  e.quadraticCurveTo(l - g, c, l, c - p),
                  e.lineTo(l, u + p),
                  e.quadraticCurveTo(l - g, u, l - d, u),
                  e.lineTo(s + d, u),
                  e.quadraticCurveTo(s + g, u, s, u + p),
                  e.closePath();
              },
            },
            up = Math.sin(0),
            cp = Math.cos(0),
            hp = {},
            dp = {},
            pp = Math.PI / 40,
            gp = 0 * Math.PI;
          gp < 2 * Math.PI;
          gp += pp
        )
          (hp[gp] = Math.sin(gp)), (dp[gp] = Math.cos(gp));
        lp.drawEllipsePath = function (e, t, n, r, i) {
          if ((e.beginPath && e.beginPath(), e.ellipse))
            e.ellipse(t, n, r / 2, i / 2, 0, 0, 2 * Math.PI);
          else
            for (
              var a, o, s = r / 2, l = i / 2, u = 0 * Math.PI;
              u < 2 * Math.PI;
              u += pp
            )
              (a = t - s * hp[u] * up + s * dp[u] * cp),
                (o = n + l * dp[u] * up + l * hp[u] * cp),
                0 === u ? e.moveTo(a, o) : e.lineTo(a, o);
          e.closePath();
        };
        var fp = {};
        function vp(e, t) {
          for (
            var n = atob(e),
              r = new ArrayBuffer(n.length),
              i = new Uint8Array(r),
              a = 0;
            a < n.length;
            a++
          )
            i[a] = n.charCodeAt(a);
          return new Blob([r], { type: t });
        }
        function yp(e) {
          var t = e.indexOf(",");
          return e.substr(t + 1);
        }
        function mp(e, t, n) {
          var r = function () {
            return t.toDataURL(n, e.quality);
          };
          switch (e.output) {
            case "blob-promise":
              return new Vi(function (r, i) {
                try {
                  t.toBlob(
                    function (e) {
                      null != e
                        ? r(e)
                        : i(
                            new Error(
                              "`canvas.toBlob()` sent a null value in its callback"
                            )
                          );
                    },
                    n,
                    e.quality
                  );
                } catch (a) {
                  i(a);
                }
              });
            case "blob":
              return vp(yp(r()), n);
            case "base64":
              return yp(r());
            default:
              return r();
          }
        }
        (fp.createBuffer = function (e, t) {
          var n = document.createElement("canvas");
          return (n.width = e), (n.height = t), [n, n.getContext("2d")];
        }),
          (fp.bufferCanvasImage = function (e) {
            var t = this.cy,
              n = t.mutableElements().boundingBox(),
              r = this.findContainerClientCoords(),
              i = e.full ? Math.ceil(n.w) : r[2],
              a = e.full ? Math.ceil(n.h) : r[3],
              o = C(e.maxWidth) || C(e.maxHeight),
              s = this.getPixelRatio(),
              l = 1;
            if (void 0 !== e.scale)
              (i *= e.scale), (a *= e.scale), (l = e.scale);
            else if (o) {
              var u = 1 / 0,
                c = 1 / 0;
              C(e.maxWidth) && (u = (l * e.maxWidth) / i),
                C(e.maxHeight) && (c = (l * e.maxHeight) / a),
                (i *= l = Math.min(u, c)),
                (a *= l);
            }
            o || ((i *= s), (a *= s), (l *= s));
            var h = document.createElement("canvas");
            (h.width = i),
              (h.height = a),
              (h.style.width = i + "px"),
              (h.style.height = a + "px");
            var d = h.getContext("2d");
            if (i > 0 && a > 0) {
              d.clearRect(0, 0, i, a),
                (d.globalCompositeOperation = "source-over");
              var p = this.getCachedZSortedEles();
              if (e.full)
                d.translate(-n.x1 * l, -n.y1 * l),
                  d.scale(l, l),
                  this.drawElements(d, p),
                  d.scale(1 / l, 1 / l),
                  d.translate(n.x1 * l, n.y1 * l);
              else {
                var g = t.pan(),
                  f = { x: g.x * l, y: g.y * l };
                (l *= t.zoom()),
                  d.translate(f.x, f.y),
                  d.scale(l, l),
                  this.drawElements(d, p),
                  d.scale(1 / l, 1 / l),
                  d.translate(-f.x, -f.y);
              }
              e.bg &&
                ((d.globalCompositeOperation = "destination-over"),
                (d.fillStyle = e.bg),
                d.rect(0, 0, i, a),
                d.fill());
            }
            return h;
          }),
          (fp.png = function (e) {
            return mp(e, this.bufferCanvasImage(e), "image/png");
          }),
          (fp.jpg = function (e) {
            return mp(e, this.bufferCanvasImage(e), "image/jpeg");
          });
        var bp = {
            nodeShapeImpl: function (e, t, n, r, i, a, o, s) {
              switch (e) {
                case "ellipse":
                  return this.drawEllipsePath(t, n, r, i, a);
                case "polygon":
                  return this.drawPolygonPath(t, n, r, i, a, o);
                case "round-polygon":
                  return this.drawRoundPolygonPath(t, n, r, i, a, o, s);
                case "roundrectangle":
                case "round-rectangle":
                  return this.drawRoundRectanglePath(t, n, r, i, a, s);
                case "cutrectangle":
                case "cut-rectangle":
                  return this.drawCutRectanglePath(t, n, r, i, a, o, s);
                case "bottomroundrectangle":
                case "bottom-round-rectangle":
                  return this.drawBottomRoundRectanglePath(t, n, r, i, a, s);
                case "barrel":
                  return this.drawBarrelPath(t, n, r, i, a);
              }
            },
          },
          xp = Ep,
          wp = Ep.prototype;
        function Ep(e) {
          var t = this,
            n = t.cy.window().document;
          t.data = {
            canvases: new Array(wp.CANVAS_LAYERS),
            contexts: new Array(wp.CANVAS_LAYERS),
            canvasNeedsRedraw: new Array(wp.CANVAS_LAYERS),
            bufferCanvases: new Array(wp.BUFFER_COUNT),
            bufferContexts: new Array(wp.CANVAS_LAYERS),
          };
          var r = "-webkit-tap-highlight-color",
            i = "rgba(0,0,0,0)";
          t.data.canvasContainer = n.createElement("div");
          var a = t.data.canvasContainer.style;
          (t.data.canvasContainer.style[r] = i),
            (a.position = "relative"),
            (a.zIndex = "0"),
            (a.overflow = "hidden");
          var o = e.cy.container();
          o.appendChild(t.data.canvasContainer), (o.style[r] = i);
          var s = {
            "-webkit-user-select": "none",
            "-moz-user-select": "-moz-none",
            "user-select": "none",
            "-webkit-tap-highlight-color": "rgba(0,0,0,0)",
            "outline-style": "none",
          };
          z() &&
            ((s["-ms-touch-action"] = "none"), (s["touch-action"] = "none"));
          for (var l = 0; l < wp.CANVAS_LAYERS; l++) {
            var u = (t.data.canvases[l] = n.createElement("canvas"));
            (t.data.contexts[l] = u.getContext("2d")),
              Object.keys(s).forEach(function (e) {
                u.style[e] = s[e];
              }),
              (u.style.position = "absolute"),
              u.setAttribute("data-id", "layer" + l),
              (u.style.zIndex = String(wp.CANVAS_LAYERS - l)),
              t.data.canvasContainer.appendChild(u),
              (t.data.canvasNeedsRedraw[l] = !1);
          }
          for (
            t.data.topCanvas = t.data.canvases[0],
              t.data.canvases[wp.NODE].setAttribute(
                "data-id",
                "layer" + wp.NODE + "-node"
              ),
              t.data.canvases[wp.SELECT_BOX].setAttribute(
                "data-id",
                "layer" + wp.SELECT_BOX + "-selectbox"
              ),
              t.data.canvases[wp.DRAG].setAttribute(
                "data-id",
                "layer" + wp.DRAG + "-drag"
              ),
              l = 0;
            l < wp.BUFFER_COUNT;
            l++
          )
            (t.data.bufferCanvases[l] = n.createElement("canvas")),
              (t.data.bufferContexts[l] =
                t.data.bufferCanvases[l].getContext("2d")),
              (t.data.bufferCanvases[l].style.position = "absolute"),
              t.data.bufferCanvases[l].setAttribute("data-id", "buffer" + l),
              (t.data.bufferCanvases[l].style.zIndex = String(-l - 1)),
              (t.data.bufferCanvases[l].style.visibility = "hidden");
          t.pathsEnabled = !0;
          var c = On(),
            h = function (e) {
              return { x: (e.x1 + e.x2) / 2, y: (e.y1 + e.y2) / 2 };
            },
            d = function (e) {
              return { x: -e.w / 2, y: -e.h / 2 };
            },
            p = function (e) {
              var t = e[0]._private;
              return !(t.oldBackgroundTimestamp === t.backgroundTimestamp);
            },
            g = function (e) {
              return e[0]._private.nodeKey;
            },
            f = function (e) {
              return e[0]._private.labelStyleKey;
            },
            v = function (e) {
              return e[0]._private.sourceLabelStyleKey;
            },
            y = function (e) {
              return e[0]._private.targetLabelStyleKey;
            },
            m = function (e, n, r, i, a) {
              return t.drawElement(e, n, r, !1, !1, a);
            },
            b = function (e, n, r, i, a) {
              return t.drawElementText(e, n, r, i, "main", a);
            },
            x = function (e, n, r, i, a) {
              return t.drawElementText(e, n, r, i, "source", a);
            },
            w = function (e, n, r, i, a) {
              return t.drawElementText(e, n, r, i, "target", a);
            },
            E = function (e) {
              return e.boundingBox(), e[0]._private.bodyBounds;
            },
            T = function (e) {
              return e.boundingBox(), e[0]._private.labelBounds.main || c;
            },
            _ = function (e) {
              return e.boundingBox(), e[0]._private.labelBounds.source || c;
            },
            D = function (e) {
              return e.boundingBox(), e[0]._private.labelBounds.target || c;
            },
            C = function (e, t) {
              return t;
            },
            N = function (e) {
              return h(E(e));
            },
            A = function (e, t, n) {
              var r = e ? e + "-" : "";
              return {
                x: t.x + n.pstyle(r + "text-margin-x").pfValue,
                y: t.y + n.pstyle(r + "text-margin-y").pfValue,
              };
            },
            L = function (e, t, n) {
              var r = e[0]._private.rscratch;
              return { x: r[t], y: r[n] };
            },
            S = function (e) {
              return A("", L(e, "labelX", "labelY"), e);
            },
            O = function (e) {
              return A("source", L(e, "sourceLabelX", "sourceLabelY"), e);
            },
            k = function (e) {
              return A("target", L(e, "targetLabelX", "targetLabelY"), e);
            },
            I = function (e) {
              return d(E(e));
            },
            M = function (e) {
              return d(_(e));
            },
            P = function (e) {
              return d(D(e));
            },
            R = function (e) {
              var t = T(e),
                n = d(T(e));
              if (e.isNode()) {
                switch (e.pstyle("text-halign").value) {
                  case "left":
                    n.x = -t.w;
                    break;
                  case "right":
                    n.x = 0;
                }
                switch (e.pstyle("text-valign").value) {
                  case "top":
                    n.y = -t.h;
                    break;
                  case "bottom":
                    n.y = 0;
                }
              }
              return n;
            },
            B = (t.data.eleTxrCache = new bd(t, {
              getKey: g,
              doesEleInvalidateKey: p,
              drawElement: m,
              getBoundingBox: E,
              getRotationPoint: N,
              getRotationOffset: I,
              allowEdgeTxrCaching: !1,
              allowParentTxrCaching: !1,
            })),
            F = (t.data.lblTxrCache = new bd(t, {
              getKey: f,
              drawElement: b,
              getBoundingBox: T,
              getRotationPoint: S,
              getRotationOffset: R,
              isVisible: C,
            })),
            G = (t.data.slbTxrCache = new bd(t, {
              getKey: v,
              drawElement: x,
              getBoundingBox: _,
              getRotationPoint: O,
              getRotationOffset: M,
              isVisible: C,
            })),
            Y = (t.data.tlbTxrCache = new bd(t, {
              getKey: y,
              drawElement: w,
              getBoundingBox: D,
              getRotationPoint: k,
              getRotationOffset: P,
              isVisible: C,
            })),
            X = (t.data.lyrTxrCache = new Pd(t));
          t.onUpdateEleCalcs(function (e, t) {
            B.invalidateElements(t),
              F.invalidateElements(t),
              G.invalidateElements(t),
              Y.invalidateElements(t),
              X.invalidateElements(t);
            for (var n = 0; n < t.length; n++) {
              var r = t[n]._private;
              r.oldBackgroundTimestamp = r.backgroundTimestamp;
            }
          });
          var V = function (e) {
            for (var t = 0; t < e.length; t++)
              X.enqueueElementRefinement(e[t].ele);
          };
          B.onDequeue(V), F.onDequeue(V), G.onDequeue(V), Y.onDequeue(V);
        }
        (wp.CANVAS_LAYERS = 3),
          (wp.SELECT_BOX = 0),
          (wp.DRAG = 1),
          (wp.NODE = 2),
          (wp.BUFFER_COUNT = 3),
          (wp.TEXTURE_BUFFER = 0),
          (wp.MOTIONBLUR_BUFFER_NODE = 1),
          (wp.MOTIONBLUR_BUFFER_DRAG = 2),
          (wp.redrawHint = function (e, t) {
            var n = this;
            switch (e) {
              case "eles":
                n.data.canvasNeedsRedraw[wp.NODE] = t;
                break;
              case "drag":
                n.data.canvasNeedsRedraw[wp.DRAG] = t;
                break;
              case "select":
                n.data.canvasNeedsRedraw[wp.SELECT_BOX] = t;
            }
          });
        var Tp = "undefined" != typeof Path2D;
        (wp.path2dEnabled = function (e) {
          if (void 0 === e) return this.pathsEnabled;
          this.pathsEnabled = !!e;
        }),
          (wp.usePaths = function () {
            return Tp && this.pathsEnabled;
          }),
          (wp.setImgSmoothing = function (e, t) {
            null != e.imageSmoothingEnabled
              ? (e.imageSmoothingEnabled = t)
              : ((e.webkitImageSmoothingEnabled = t),
                (e.mozImageSmoothingEnabled = t),
                (e.msImageSmoothingEnabled = t));
          }),
          (wp.getImgSmoothing = function (e) {
            return null != e.imageSmoothingEnabled
              ? e.imageSmoothingEnabled
              : e.webkitImageSmoothingEnabled ||
                  e.mozImageSmoothingEnabled ||
                  e.msImageSmoothingEnabled;
          }),
          (wp.makeOffscreenCanvas = function (t, n) {
            var r;
            return (
              "undefined" !==
              ("undefined" == typeof OffscreenCanvas
                ? "undefined"
                : e(OffscreenCanvas))
                ? (r = new OffscreenCanvas(t, n))
                : (((r = this.cy
                    .window()
                    .document.createElement("canvas")).width = t),
                  (r.height = n)),
              r
            );
          }),
          [Gd, Hd, Jd, tp, np, ip, op, lp, fp, bp].forEach(function (e) {
            ee(wp, e);
          });
        var _p = [
            { type: "layout", extensions: Zc },
            {
              type: "renderer",
              extensions: [
                { name: "null", impl: Qc },
                { name: "base", impl: Wh },
                { name: "canvas", impl: xp },
              ],
            },
          ],
          Dp = {},
          Cp = {};
        function Np(e, t, n) {
          var r = n,
            i = function (n) {
              Lt(
                "Can not register `" +
                  t +
                  "` for `" +
                  e +
                  "` since `" +
                  n +
                  "` already exists in the prototype and can not be overridden"
              );
            };
          if ("core" === e) {
            if (uc.prototype[t]) return i(t);
            uc.prototype[t] = n;
          } else if ("collection" === e) {
            if (Tu.prototype[t]) return i(t);
            Tu.prototype[t] = n;
          } else if ("layout" === e) {
            for (
              var a = function (e) {
                  (this.options = e),
                    n.call(this, e),
                    _(this._private) || (this._private = {}),
                    (this._private.cy = e.cy),
                    (this._private.listeners = []),
                    this.createEmitter();
                },
                o = (a.prototype = Object.create(n.prototype)),
                s = [],
                l = 0;
              l < s.length;
              l++
            ) {
              var u = s[l];
              o[u] =
                o[u] ||
                function () {
                  return this;
                };
            }
            o.start && !o.run
              ? (o.run = function () {
                  return this.start(), this;
                })
              : !o.start &&
                o.run &&
                (o.start = function () {
                  return this.run(), this;
                });
            var c = n.prototype.stop;
            (o.stop = function () {
              var e = this.options;
              if (e && e.animate) {
                var t = this.animations;
                if (t) for (var n = 0; n < t.length; n++) t[n].stop();
              }
              return c ? c.call(this) : this.emit("layoutstop"), this;
            }),
              o.destroy ||
                (o.destroy = function () {
                  return this;
                }),
              (o.cy = function () {
                return this._private.cy;
              });
            var h = function (e) {
                return e._private.cy;
              },
              d = {
                addEventFields: function (e, t) {
                  (t.layout = e), (t.cy = h(e)), (t.target = e);
                },
                bubble: function () {
                  return !0;
                },
                parent: function (e) {
                  return h(e);
                },
              };
            ee(o, {
              createEmitter: function () {
                return (this._private.emitter = new Gl(d, this)), this;
              },
              emitter: function () {
                return this._private.emitter;
              },
              on: function (e, t) {
                return this.emitter().on(e, t), this;
              },
              one: function (e, t) {
                return this.emitter().one(e, t), this;
              },
              once: function (e, t) {
                return this.emitter().one(e, t), this;
              },
              removeListener: function (e, t) {
                return this.emitter().removeListener(e, t), this;
              },
              removeAllListeners: function () {
                return this.emitter().removeAllListeners(), this;
              },
              emit: function (e, t) {
                return this.emitter().emit(e, t), this;
              },
            }),
              gs.eventAliasesOn(o),
              (r = a);
          } else if ("renderer" === e && "null" !== t && "base" !== t) {
            var p = Ap("renderer", "base"),
              g = p.prototype,
              f = n,
              v = n.prototype,
              y = function () {
                p.apply(this, arguments), f.apply(this, arguments);
              },
              m = y.prototype;
            for (var b in g) {
              var x = g[b];
              if (null != v[b]) return i(b);
              m[b] = x;
            }
            for (var w in v) m[w] = v[w];
            g.clientFunctions.forEach(function (e) {
              m[e] =
                m[e] ||
                function () {
                  Nt(
                    "Renderer does not implement `renderer." +
                      e +
                      "()` on its prototype"
                  );
                };
            }),
              (r = y);
          } else if (
            "__proto__" === e ||
            "constructor" === e ||
            "prototype" === e
          )
            return Nt(
              e +
                " is an illegal type to be registered, possibly lead to prototype pollutions"
            );
          return se({ map: Dp, keys: [e, t], value: r });
        }
        function Ap(e, t) {
          return le({ map: Dp, keys: [e, t] });
        }
        function Lp(e, t, n, r, i) {
          return se({ map: Cp, keys: [e, t, n, r], value: i });
        }
        function Sp(e, t, n, r) {
          return le({ map: Cp, keys: [e, t, n, r] });
        }
        var Op = function () {
          return 2 === arguments.length
            ? Ap.apply(null, arguments)
            : 3 === arguments.length
            ? Np.apply(null, arguments)
            : 4 === arguments.length
            ? Sp.apply(null, arguments)
            : 5 === arguments.length
            ? Lp.apply(null, arguments)
            : void Nt("Invalid extension access syntax");
        };
        (uc.prototype.extension = Op),
          _p.forEach(function (e) {
            e.extensions.forEach(function (t) {
              Np(e.type, t.name, t.impl);
            });
          });
        var kp = function e() {
            if (!(this instanceof e)) return new e();
            this.length = 0;
          },
          Ip = kp.prototype;
        (Ip.instanceString = function () {
          return "stylesheet";
        }),
          (Ip.selector = function (e) {
            return (
              (this[this.length++] = { selector: e, properties: [] }), this
            );
          }),
          (Ip.css = function (e, t) {
            var n = this.length - 1;
            if (w(e)) this[n].properties.push({ name: e, value: t });
            else if (_(e))
              for (var r = e, i = Object.keys(r), a = 0; a < i.length; a++) {
                var o = i[a],
                  s = r[o];
                if (null != s) {
                  var l = rc.properties[o] || rc.properties[X(o)];
                  if (null != l) {
                    var u = l.name,
                      c = s;
                    this[n].properties.push({ name: u, value: c });
                  }
                }
              }
            return this;
          }),
          (Ip.style = Ip.css),
          (Ip.generateStyle = function (e) {
            var t = new rc(e);
            return this.appendToStyle(t);
          }),
          (Ip.appendToStyle = function (e) {
            for (var t = 0; t < this.length; t++) {
              var n = this[t],
                r = n.selector,
                i = n.properties;
              e.selector(r);
              for (var a = 0; a < i.length; a++) {
                var o = i[a];
                e.css(o.name, o.value);
              }
            }
            return e;
          });
        var Mp = "3.30.2",
          Pp = function (e) {
            return (
              void 0 === e && (e = {}),
              _(e) ? new uc(e) : w(e) ? Op.apply(Op, arguments) : void 0
            );
          };
        return (
          (Pp.use = function (e) {
            var t = Array.prototype.slice.call(arguments, 1);
            return t.unshift(Pp), e.apply(null, t), this;
          }),
          (Pp.warnings = function (e) {
            return At(e);
          }),
          (Pp.version = Mp),
          (Pp.stylesheet = Pp.Stylesheet = kp),
          Pp
        );
      })();
    },
    14894: function (e) {
      var t;
      (t = function () {
        return (function (e) {
          var t = {};
          function n(r) {
            if (t[r]) return t[r].exports;
            var i = (t[r] = { i: r, l: !1, exports: {} });
            return e[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports;
          }
          return (
            (n.m = e),
            (n.c = t),
            (n.i = function (e) {
              return e;
            }),
            (n.d = function (e, t, r) {
              n.o(e, t) ||
                Object.defineProperty(e, t, {
                  configurable: !1,
                  enumerable: !0,
                  get: r,
                });
            }),
            (n.n = function (e) {
              var t =
                e && e.__esModule
                  ? function () {
                      return e.default;
                    }
                  : function () {
                      return e;
                    };
              return n.d(t, "a", t), t;
            }),
            (n.o = function (e, t) {
              return Object.prototype.hasOwnProperty.call(e, t);
            }),
            (n.p = ""),
            n((n.s = 26))
          );
        })([
          function (e, t, n) {
            "use strict";
            function r() {}
            (r.QUALITY = 1),
              (r.DEFAULT_CREATE_BENDS_AS_NEEDED = !1),
              (r.DEFAULT_INCREMENTAL = !1),
              (r.DEFAULT_ANIMATION_ON_LAYOUT = !0),
              (r.DEFAULT_ANIMATION_DURING_LAYOUT = !1),
              (r.DEFAULT_ANIMATION_PERIOD = 50),
              (r.DEFAULT_UNIFORM_LEAF_NODE_SIZES = !1),
              (r.DEFAULT_GRAPH_MARGIN = 15),
              (r.NODE_DIMENSIONS_INCLUDE_LABELS = !1),
              (r.SIMPLE_NODE_SIZE = 40),
              (r.SIMPLE_NODE_HALF_SIZE = r.SIMPLE_NODE_SIZE / 2),
              (r.EMPTY_COMPOUND_NODE_SIZE = 40),
              (r.MIN_EDGE_LENGTH = 1),
              (r.WORLD_BOUNDARY = 1e6),
              (r.INITIAL_WORLD_BOUNDARY = r.WORLD_BOUNDARY / 1e3),
              (r.WORLD_CENTER_X = 1200),
              (r.WORLD_CENTER_Y = 900),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            var r = n(2),
              i = n(8),
              a = n(9);
            function o(e, t, n) {
              r.call(this, n),
                (this.isOverlapingSourceAndTarget = !1),
                (this.vGraphObject = n),
                (this.bendpoints = []),
                (this.source = e),
                (this.target = t);
            }
            for (var s in ((o.prototype = Object.create(r.prototype)), r))
              o[s] = r[s];
            (o.prototype.getSource = function () {
              return this.source;
            }),
              (o.prototype.getTarget = function () {
                return this.target;
              }),
              (o.prototype.isInterGraph = function () {
                return this.isInterGraph;
              }),
              (o.prototype.getLength = function () {
                return this.length;
              }),
              (o.prototype.isOverlapingSourceAndTarget = function () {
                return this.isOverlapingSourceAndTarget;
              }),
              (o.prototype.getBendpoints = function () {
                return this.bendpoints;
              }),
              (o.prototype.getLca = function () {
                return this.lca;
              }),
              (o.prototype.getSourceInLca = function () {
                return this.sourceInLca;
              }),
              (o.prototype.getTargetInLca = function () {
                return this.targetInLca;
              }),
              (o.prototype.getOtherEnd = function (e) {
                if (this.source === e) return this.target;
                if (this.target === e) return this.source;
                throw "Node is not incident with this edge";
              }),
              (o.prototype.getOtherEndInGraph = function (e, t) {
                for (
                  var n = this.getOtherEnd(e),
                    r = t.getGraphManager().getRoot();
                  ;

                ) {
                  if (n.getOwner() == t) return n;
                  if (n.getOwner() == r) break;
                  n = n.getOwner().getParent();
                }
                return null;
              }),
              (o.prototype.updateLength = function () {
                var e = new Array(4);
                (this.isOverlapingSourceAndTarget = i.getIntersection(
                  this.target.getRect(),
                  this.source.getRect(),
                  e
                )),
                  this.isOverlapingSourceAndTarget ||
                    ((this.lengthX = e[0] - e[2]),
                    (this.lengthY = e[1] - e[3]),
                    Math.abs(this.lengthX) < 1 &&
                      (this.lengthX = a.sign(this.lengthX)),
                    Math.abs(this.lengthY) < 1 &&
                      (this.lengthY = a.sign(this.lengthY)),
                    (this.length = Math.sqrt(
                      this.lengthX * this.lengthX + this.lengthY * this.lengthY
                    )));
              }),
              (o.prototype.updateLengthSimple = function () {
                (this.lengthX =
                  this.target.getCenterX() - this.source.getCenterX()),
                  (this.lengthY =
                    this.target.getCenterY() - this.source.getCenterY()),
                  Math.abs(this.lengthX) < 1 &&
                    (this.lengthX = a.sign(this.lengthX)),
                  Math.abs(this.lengthY) < 1 &&
                    (this.lengthY = a.sign(this.lengthY)),
                  (this.length = Math.sqrt(
                    this.lengthX * this.lengthX + this.lengthY * this.lengthY
                  ));
              }),
              (e.exports = o);
          },
          function (e, t, n) {
            "use strict";
            e.exports = function (e) {
              this.vGraphObject = e;
            };
          },
          function (e, t, n) {
            "use strict";
            var r = n(2),
              i = n(10),
              a = n(13),
              o = n(0),
              s = n(16),
              l = n(4);
            function u(e, t, n, o) {
              null == n && null == o && (o = t),
                r.call(this, o),
                null != e.graphManager && (e = e.graphManager),
                (this.estimatedSize = i.MIN_VALUE),
                (this.inclusionTreeDepth = i.MAX_VALUE),
                (this.vGraphObject = o),
                (this.edges = []),
                (this.graphManager = e),
                (this.rect =
                  null != n && null != t
                    ? new a(t.x, t.y, n.width, n.height)
                    : new a());
            }
            for (var c in ((u.prototype = Object.create(r.prototype)), r))
              u[c] = r[c];
            (u.prototype.getEdges = function () {
              return this.edges;
            }),
              (u.prototype.getChild = function () {
                return this.child;
              }),
              (u.prototype.getOwner = function () {
                return this.owner;
              }),
              (u.prototype.getWidth = function () {
                return this.rect.width;
              }),
              (u.prototype.setWidth = function (e) {
                this.rect.width = e;
              }),
              (u.prototype.getHeight = function () {
                return this.rect.height;
              }),
              (u.prototype.setHeight = function (e) {
                this.rect.height = e;
              }),
              (u.prototype.getCenterX = function () {
                return this.rect.x + this.rect.width / 2;
              }),
              (u.prototype.getCenterY = function () {
                return this.rect.y + this.rect.height / 2;
              }),
              (u.prototype.getCenter = function () {
                return new l(
                  this.rect.x + this.rect.width / 2,
                  this.rect.y + this.rect.height / 2
                );
              }),
              (u.prototype.getLocation = function () {
                return new l(this.rect.x, this.rect.y);
              }),
              (u.prototype.getRect = function () {
                return this.rect;
              }),
              (u.prototype.getDiagonal = function () {
                return Math.sqrt(
                  this.rect.width * this.rect.width +
                    this.rect.height * this.rect.height
                );
              }),
              (u.prototype.getHalfTheDiagonal = function () {
                return (
                  Math.sqrt(
                    this.rect.height * this.rect.height +
                      this.rect.width * this.rect.width
                  ) / 2
                );
              }),
              (u.prototype.setRect = function (e, t) {
                (this.rect.x = e.x),
                  (this.rect.y = e.y),
                  (this.rect.width = t.width),
                  (this.rect.height = t.height);
              }),
              (u.prototype.setCenter = function (e, t) {
                (this.rect.x = e - this.rect.width / 2),
                  (this.rect.y = t - this.rect.height / 2);
              }),
              (u.prototype.setLocation = function (e, t) {
                (this.rect.x = e), (this.rect.y = t);
              }),
              (u.prototype.moveBy = function (e, t) {
                (this.rect.x += e), (this.rect.y += t);
              }),
              (u.prototype.getEdgeListToNode = function (e) {
                var t = [],
                  n = this;
                return (
                  n.edges.forEach(function (r) {
                    if (r.target == e) {
                      if (r.source != n) throw "Incorrect edge source!";
                      t.push(r);
                    }
                  }),
                  t
                );
              }),
              (u.prototype.getEdgesBetween = function (e) {
                var t = [],
                  n = this;
                return (
                  n.edges.forEach(function (r) {
                    if (r.source != n && r.target != n)
                      throw "Incorrect edge source and/or target";
                    (r.target != e && r.source != e) || t.push(r);
                  }),
                  t
                );
              }),
              (u.prototype.getNeighborsList = function () {
                var e = new Set(),
                  t = this;
                return (
                  t.edges.forEach(function (n) {
                    if (n.source == t) e.add(n.target);
                    else {
                      if (n.target != t) throw "Incorrect incidency!";
                      e.add(n.source);
                    }
                  }),
                  e
                );
              }),
              (u.prototype.withChildren = function () {
                var e = new Set();
                if ((e.add(this), null != this.child))
                  for (var t = this.child.getNodes(), n = 0; n < t.length; n++)
                    t[n].withChildren().forEach(function (t) {
                      e.add(t);
                    });
                return e;
              }),
              (u.prototype.getNoOfChildren = function () {
                var e = 0;
                if (null == this.child) e = 1;
                else
                  for (var t = this.child.getNodes(), n = 0; n < t.length; n++)
                    e += t[n].getNoOfChildren();
                return 0 == e && (e = 1), e;
              }),
              (u.prototype.getEstimatedSize = function () {
                if (this.estimatedSize == i.MIN_VALUE) throw "assert failed";
                return this.estimatedSize;
              }),
              (u.prototype.calcEstimatedSize = function () {
                return null == this.child
                  ? (this.estimatedSize =
                      (this.rect.width + this.rect.height) / 2)
                  : ((this.estimatedSize = this.child.calcEstimatedSize()),
                    (this.rect.width = this.estimatedSize),
                    (this.rect.height = this.estimatedSize),
                    this.estimatedSize);
              }),
              (u.prototype.scatter = function () {
                var e,
                  t,
                  n = -o.INITIAL_WORLD_BOUNDARY,
                  r = o.INITIAL_WORLD_BOUNDARY;
                e = o.WORLD_CENTER_X + s.nextDouble() * (r - n) + n;
                var i = -o.INITIAL_WORLD_BOUNDARY,
                  a = o.INITIAL_WORLD_BOUNDARY;
                (t = o.WORLD_CENTER_Y + s.nextDouble() * (a - i) + i),
                  (this.rect.x = e),
                  (this.rect.y = t);
              }),
              (u.prototype.updateBounds = function () {
                if (null == this.getChild()) throw "assert failed";
                if (0 != this.getChild().getNodes().length) {
                  var e = this.getChild();
                  if (
                    (e.updateBounds(!0),
                    (this.rect.x = e.getLeft()),
                    (this.rect.y = e.getTop()),
                    this.setWidth(e.getRight() - e.getLeft()),
                    this.setHeight(e.getBottom() - e.getTop()),
                    o.NODE_DIMENSIONS_INCLUDE_LABELS)
                  ) {
                    var t = e.getRight() - e.getLeft(),
                      n = e.getBottom() - e.getTop();
                    this.labelWidth > t &&
                      ((this.rect.x -= (this.labelWidth - t) / 2),
                      this.setWidth(this.labelWidth)),
                      this.labelHeight > n &&
                        ("center" == this.labelPos
                          ? (this.rect.y -= (this.labelHeight - n) / 2)
                          : "top" == this.labelPos &&
                            (this.rect.y -= this.labelHeight - n),
                        this.setHeight(this.labelHeight));
                  }
                }
              }),
              (u.prototype.getInclusionTreeDepth = function () {
                if (this.inclusionTreeDepth == i.MAX_VALUE)
                  throw "assert failed";
                return this.inclusionTreeDepth;
              }),
              (u.prototype.transform = function (e) {
                var t = this.rect.x;
                t > o.WORLD_BOUNDARY
                  ? (t = o.WORLD_BOUNDARY)
                  : t < -o.WORLD_BOUNDARY && (t = -o.WORLD_BOUNDARY);
                var n = this.rect.y;
                n > o.WORLD_BOUNDARY
                  ? (n = o.WORLD_BOUNDARY)
                  : n < -o.WORLD_BOUNDARY && (n = -o.WORLD_BOUNDARY);
                var r = new l(t, n),
                  i = e.inverseTransformPoint(r);
                this.setLocation(i.x, i.y);
              }),
              (u.prototype.getLeft = function () {
                return this.rect.x;
              }),
              (u.prototype.getRight = function () {
                return this.rect.x + this.rect.width;
              }),
              (u.prototype.getTop = function () {
                return this.rect.y;
              }),
              (u.prototype.getBottom = function () {
                return this.rect.y + this.rect.height;
              }),
              (u.prototype.getParent = function () {
                return null == this.owner ? null : this.owner.getParent();
              }),
              (e.exports = u);
          },
          function (e, t, n) {
            "use strict";
            function r(e, t) {
              null == e && null == t
                ? ((this.x = 0), (this.y = 0))
                : ((this.x = e), (this.y = t));
            }
            (r.prototype.getX = function () {
              return this.x;
            }),
              (r.prototype.getY = function () {
                return this.y;
              }),
              (r.prototype.setX = function (e) {
                this.x = e;
              }),
              (r.prototype.setY = function (e) {
                this.y = e;
              }),
              (r.prototype.getDifference = function (e) {
                return new DimensionD(this.x - e.x, this.y - e.y);
              }),
              (r.prototype.getCopy = function () {
                return new r(this.x, this.y);
              }),
              (r.prototype.translate = function (e) {
                return (this.x += e.width), (this.y += e.height), this;
              }),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            var r = n(2),
              i = n(10),
              a = n(0),
              o = n(6),
              s = n(3),
              l = n(1),
              u = n(13),
              c = n(12),
              h = n(11);
            function d(e, t, n) {
              r.call(this, n),
                (this.estimatedSize = i.MIN_VALUE),
                (this.margin = a.DEFAULT_GRAPH_MARGIN),
                (this.edges = []),
                (this.nodes = []),
                (this.isConnected = !1),
                (this.parent = e),
                null != t && t instanceof o
                  ? (this.graphManager = t)
                  : null != t &&
                    t instanceof Layout &&
                    (this.graphManager = t.graphManager);
            }
            for (var p in ((d.prototype = Object.create(r.prototype)), r))
              d[p] = r[p];
            (d.prototype.getNodes = function () {
              return this.nodes;
            }),
              (d.prototype.getEdges = function () {
                return this.edges;
              }),
              (d.prototype.getGraphManager = function () {
                return this.graphManager;
              }),
              (d.prototype.getParent = function () {
                return this.parent;
              }),
              (d.prototype.getLeft = function () {
                return this.left;
              }),
              (d.prototype.getRight = function () {
                return this.right;
              }),
              (d.prototype.getTop = function () {
                return this.top;
              }),
              (d.prototype.getBottom = function () {
                return this.bottom;
              }),
              (d.prototype.isConnected = function () {
                return this.isConnected;
              }),
              (d.prototype.add = function (e, t, n) {
                if (null == t && null == n) {
                  var r = e;
                  if (null == this.graphManager)
                    throw "Graph has no graph mgr!";
                  if (this.getNodes().indexOf(r) > -1)
                    throw "Node already in graph!";
                  return (r.owner = this), this.getNodes().push(r), r;
                }
                var i = e;
                if (
                  !(
                    this.getNodes().indexOf(t) > -1 &&
                    this.getNodes().indexOf(n) > -1
                  )
                )
                  throw "Source or target not in graph!";
                if (t.owner != n.owner || t.owner != this)
                  throw "Both owners must be this graph!";
                return t.owner != n.owner
                  ? null
                  : ((i.source = t),
                    (i.target = n),
                    (i.isInterGraph = !1),
                    this.getEdges().push(i),
                    t.edges.push(i),
                    n != t && n.edges.push(i),
                    i);
              }),
              (d.prototype.remove = function (e) {
                var t = e;
                if (e instanceof s) {
                  if (null == t) throw "Node is null!";
                  if (null == t.owner || t.owner != this)
                    throw "Owner graph is invalid!";
                  if (null == this.graphManager)
                    throw "Owner graph manager is invalid!";
                  for (var n = t.edges.slice(), r = n.length, i = 0; i < r; i++)
                    (a = n[i]).isInterGraph
                      ? this.graphManager.remove(a)
                      : a.source.owner.remove(a);
                  if (-1 == (o = this.nodes.indexOf(t)))
                    throw "Node not in owner node list!";
                  this.nodes.splice(o, 1);
                } else if (e instanceof l) {
                  var a;
                  if (null == (a = e)) throw "Edge is null!";
                  if (null == a.source || null == a.target)
                    throw "Source and/or target is null!";
                  if (
                    null == a.source.owner ||
                    null == a.target.owner ||
                    a.source.owner != this ||
                    a.target.owner != this
                  )
                    throw "Source and/or target owner is invalid!";
                  var o,
                    u = a.source.edges.indexOf(a),
                    c = a.target.edges.indexOf(a);
                  if (!(u > -1 && c > -1))
                    throw "Source and/or target doesn't know this edge!";
                  if (
                    (a.source.edges.splice(u, 1),
                    a.target != a.source && a.target.edges.splice(c, 1),
                    -1 == (o = a.source.owner.getEdges().indexOf(a)))
                  )
                    throw "Not in owner's edge list!";
                  a.source.owner.getEdges().splice(o, 1);
                }
              }),
              (d.prototype.updateLeftTop = function () {
                for (
                  var e,
                    t,
                    n,
                    r = i.MAX_VALUE,
                    a = i.MAX_VALUE,
                    o = this.getNodes(),
                    s = o.length,
                    l = 0;
                  l < s;
                  l++
                ) {
                  var u = o[l];
                  r > (e = u.getTop()) && (r = e),
                    a > (t = u.getLeft()) && (a = t);
                }
                return r == i.MAX_VALUE
                  ? null
                  : ((n =
                      null != o[0].getParent().paddingLeft
                        ? o[0].getParent().paddingLeft
                        : this.margin),
                    (this.left = a - n),
                    (this.top = r - n),
                    new c(this.left, this.top));
              }),
              (d.prototype.updateBounds = function (e) {
                for (
                  var t,
                    n,
                    r,
                    a,
                    o,
                    s = i.MAX_VALUE,
                    l = -i.MAX_VALUE,
                    c = i.MAX_VALUE,
                    h = -i.MAX_VALUE,
                    d = this.nodes,
                    p = d.length,
                    g = 0;
                  g < p;
                  g++
                ) {
                  var f = d[g];
                  e && null != f.child && f.updateBounds(),
                    s > (t = f.getLeft()) && (s = t),
                    l < (n = f.getRight()) && (l = n),
                    c > (r = f.getTop()) && (c = r),
                    h < (a = f.getBottom()) && (h = a);
                }
                var v = new u(s, c, l - s, h - c);
                s == i.MAX_VALUE &&
                  ((this.left = this.parent.getLeft()),
                  (this.right = this.parent.getRight()),
                  (this.top = this.parent.getTop()),
                  (this.bottom = this.parent.getBottom())),
                  (o =
                    null != d[0].getParent().paddingLeft
                      ? d[0].getParent().paddingLeft
                      : this.margin),
                  (this.left = v.x - o),
                  (this.right = v.x + v.width + o),
                  (this.top = v.y - o),
                  (this.bottom = v.y + v.height + o);
              }),
              (d.calculateBounds = function (e) {
                for (
                  var t,
                    n,
                    r,
                    a,
                    o = i.MAX_VALUE,
                    s = -i.MAX_VALUE,
                    l = i.MAX_VALUE,
                    c = -i.MAX_VALUE,
                    h = e.length,
                    d = 0;
                  d < h;
                  d++
                ) {
                  var p = e[d];
                  o > (t = p.getLeft()) && (o = t),
                    s < (n = p.getRight()) && (s = n),
                    l > (r = p.getTop()) && (l = r),
                    c < (a = p.getBottom()) && (c = a);
                }
                return new u(o, l, s - o, c - l);
              }),
              (d.prototype.getInclusionTreeDepth = function () {
                return this == this.graphManager.getRoot()
                  ? 1
                  : this.parent.getInclusionTreeDepth();
              }),
              (d.prototype.getEstimatedSize = function () {
                if (this.estimatedSize == i.MIN_VALUE) throw "assert failed";
                return this.estimatedSize;
              }),
              (d.prototype.calcEstimatedSize = function () {
                for (var e = 0, t = this.nodes, n = t.length, r = 0; r < n; r++)
                  e += t[r].calcEstimatedSize();
                return (
                  (this.estimatedSize =
                    0 == e
                      ? a.EMPTY_COMPOUND_NODE_SIZE
                      : e / Math.sqrt(this.nodes.length)),
                  this.estimatedSize
                );
              }),
              (d.prototype.updateConnected = function () {
                var e = this;
                if (0 != this.nodes.length) {
                  var t,
                    n,
                    r = new h(),
                    i = new Set(),
                    a = this.nodes[0];
                  for (
                    a.withChildren().forEach(function (e) {
                      r.push(e), i.add(e);
                    });
                    0 !== r.length;

                  )
                    for (
                      var o = (t = (a = r.shift()).getEdges()).length, s = 0;
                      s < o;
                      s++
                    )
                      null == (n = t[s].getOtherEndInGraph(a, this)) ||
                        i.has(n) ||
                        n.withChildren().forEach(function (e) {
                          r.push(e), i.add(e);
                        });
                  if (((this.isConnected = !1), i.size >= this.nodes.length)) {
                    var l = 0;
                    i.forEach(function (t) {
                      t.owner == e && l++;
                    }),
                      l == this.nodes.length && (this.isConnected = !0);
                  }
                } else this.isConnected = !0;
              }),
              (e.exports = d);
          },
          function (e, t, n) {
            "use strict";
            var r,
              i = n(1);
            function a(e) {
              (r = n(5)),
                (this.layout = e),
                (this.graphs = []),
                (this.edges = []);
            }
            (a.prototype.addRoot = function () {
              var e = this.layout.newGraph(),
                t = this.layout.newNode(null),
                n = this.add(e, t);
              return this.setRootGraph(n), this.rootGraph;
            }),
              (a.prototype.add = function (e, t, n, r, i) {
                if (null == n && null == r && null == i) {
                  if (null == e) throw "Graph is null!";
                  if (null == t) throw "Parent node is null!";
                  if (this.graphs.indexOf(e) > -1)
                    throw "Graph already in this graph mgr!";
                  if ((this.graphs.push(e), null != e.parent))
                    throw "Already has a parent!";
                  if (null != t.child) throw "Already has a child!";
                  return (e.parent = t), (t.child = e), e;
                }
                (i = n), (n = e);
                var a = (r = t).getOwner(),
                  o = i.getOwner();
                if (null == a || a.getGraphManager() != this)
                  throw "Source not in this graph mgr!";
                if (null == o || o.getGraphManager() != this)
                  throw "Target not in this graph mgr!";
                if (a == o) return (n.isInterGraph = !1), a.add(n, r, i);
                if (
                  ((n.isInterGraph = !0),
                  (n.source = r),
                  (n.target = i),
                  this.edges.indexOf(n) > -1)
                )
                  throw "Edge already in inter-graph edge list!";
                if ((this.edges.push(n), null == n.source || null == n.target))
                  throw "Edge source and/or target is null!";
                if (
                  -1 != n.source.edges.indexOf(n) ||
                  -1 != n.target.edges.indexOf(n)
                )
                  throw "Edge already in source and/or target incidency list!";
                return n.source.edges.push(n), n.target.edges.push(n), n;
              }),
              (a.prototype.remove = function (e) {
                if (e instanceof r) {
                  var t = e;
                  if (t.getGraphManager() != this)
                    throw "Graph not in this graph mgr";
                  if (
                    t != this.rootGraph &&
                    (null == t.parent || t.parent.graphManager != this)
                  )
                    throw "Invalid parent node!";
                  for (
                    var n,
                      a = [],
                      o = (a = a.concat(t.getEdges())).length,
                      s = 0;
                    s < o;
                    s++
                  )
                    (n = a[s]), t.remove(n);
                  var l,
                    u = [];
                  for (
                    o = (u = u.concat(t.getNodes())).length, s = 0;
                    s < o;
                    s++
                  )
                    (l = u[s]), t.remove(l);
                  t == this.rootGraph && this.setRootGraph(null);
                  var c = this.graphs.indexOf(t);
                  this.graphs.splice(c, 1), (t.parent = null);
                } else if (e instanceof i) {
                  if (null == (n = e)) throw "Edge is null!";
                  if (!n.isInterGraph) throw "Not an inter-graph edge!";
                  if (null == n.source || null == n.target)
                    throw "Source and/or target is null!";
                  if (
                    -1 == n.source.edges.indexOf(n) ||
                    -1 == n.target.edges.indexOf(n)
                  )
                    throw "Source and/or target doesn't know this edge!";
                  if (
                    ((c = n.source.edges.indexOf(n)),
                    n.source.edges.splice(c, 1),
                    (c = n.target.edges.indexOf(n)),
                    n.target.edges.splice(c, 1),
                    null == n.source.owner ||
                      null == n.source.owner.getGraphManager())
                  )
                    throw "Edge owner graph or owner graph manager is null!";
                  if (-1 == n.source.owner.getGraphManager().edges.indexOf(n))
                    throw "Not in owner graph manager's edge list!";
                  (c = n.source.owner.getGraphManager().edges.indexOf(n)),
                    n.source.owner.getGraphManager().edges.splice(c, 1);
                }
              }),
              (a.prototype.updateBounds = function () {
                this.rootGraph.updateBounds(!0);
              }),
              (a.prototype.getGraphs = function () {
                return this.graphs;
              }),
              (a.prototype.getAllNodes = function () {
                if (null == this.allNodes) {
                  for (
                    var e = [], t = this.getGraphs(), n = t.length, r = 0;
                    r < n;
                    r++
                  )
                    e = e.concat(t[r].getNodes());
                  this.allNodes = e;
                }
                return this.allNodes;
              }),
              (a.prototype.resetAllNodes = function () {
                this.allNodes = null;
              }),
              (a.prototype.resetAllEdges = function () {
                this.allEdges = null;
              }),
              (a.prototype.resetAllNodesToApplyGravitation = function () {
                this.allNodesToApplyGravitation = null;
              }),
              (a.prototype.getAllEdges = function () {
                if (null == this.allEdges) {
                  for (
                    var e = [], t = this.getGraphs(), n = (t.length, 0);
                    n < t.length;
                    n++
                  )
                    e = e.concat(t[n].getEdges());
                  (e = e.concat(this.edges)), (this.allEdges = e);
                }
                return this.allEdges;
              }),
              (a.prototype.getAllNodesToApplyGravitation = function () {
                return this.allNodesToApplyGravitation;
              }),
              (a.prototype.setAllNodesToApplyGravitation = function (e) {
                if (null != this.allNodesToApplyGravitation)
                  throw "assert failed";
                this.allNodesToApplyGravitation = e;
              }),
              (a.prototype.getRoot = function () {
                return this.rootGraph;
              }),
              (a.prototype.setRootGraph = function (e) {
                if (e.getGraphManager() != this)
                  throw "Root not in this graph mgr!";
                (this.rootGraph = e),
                  null == e.parent &&
                    (e.parent = this.layout.newNode("Root node"));
              }),
              (a.prototype.getLayout = function () {
                return this.layout;
              }),
              (a.prototype.isOneAncestorOfOther = function (e, t) {
                if (null == e || null == t) throw "assert failed";
                if (e == t) return !0;
                for (var n, r = e.getOwner(); null != (n = r.getParent()); ) {
                  if (n == t) return !0;
                  if (null == (r = n.getOwner())) break;
                }
                for (r = t.getOwner(); null != (n = r.getParent()); ) {
                  if (n == e) return !0;
                  if (null == (r = n.getOwner())) break;
                }
                return !1;
              }),
              (a.prototype.calcLowestCommonAncestors = function () {
                for (
                  var e,
                    t,
                    n,
                    r,
                    i,
                    a = this.getAllEdges(),
                    o = a.length,
                    s = 0;
                  s < o;
                  s++
                )
                  if (
                    ((t = (e = a[s]).source),
                    (n = e.target),
                    (e.lca = null),
                    (e.sourceInLca = t),
                    (e.targetInLca = n),
                    t != n)
                  ) {
                    for (r = t.getOwner(); null == e.lca; ) {
                      for (
                        e.targetInLca = n, i = n.getOwner();
                        null == e.lca;

                      ) {
                        if (i == r) {
                          e.lca = i;
                          break;
                        }
                        if (i == this.rootGraph) break;
                        if (null != e.lca) throw "assert failed";
                        (e.targetInLca = i.getParent()),
                          (i = e.targetInLca.getOwner());
                      }
                      if (r == this.rootGraph) break;
                      null == e.lca &&
                        ((e.sourceInLca = r.getParent()),
                        (r = e.sourceInLca.getOwner()));
                    }
                    if (null == e.lca) throw "assert failed";
                  } else e.lca = t.getOwner();
              }),
              (a.prototype.calcLowestCommonAncestor = function (e, t) {
                if (e == t) return e.getOwner();
                for (var n = e.getOwner(); null != n; ) {
                  for (var r = t.getOwner(); null != r; ) {
                    if (r == n) return r;
                    r = r.getParent().getOwner();
                  }
                  n = n.getParent().getOwner();
                }
                return n;
              }),
              (a.prototype.calcInclusionTreeDepths = function (e, t) {
                var n;
                null == e && null == t && ((e = this.rootGraph), (t = 1));
                for (var r = e.getNodes(), i = r.length, a = 0; a < i; a++)
                  ((n = r[a]).inclusionTreeDepth = t),
                    null != n.child &&
                      this.calcInclusionTreeDepths(n.child, t + 1);
              }),
              (a.prototype.includesInvalidEdge = function () {
                for (var e, t = this.edges.length, n = 0; n < t; n++)
                  if (
                    ((e = this.edges[n]),
                    this.isOneAncestorOfOther(e.source, e.target))
                  )
                    return !0;
                return !1;
              }),
              (e.exports = a);
          },
          function (e, t, n) {
            "use strict";
            var r = n(0);
            function i() {}
            for (var a in r) i[a] = r[a];
            (i.MAX_ITERATIONS = 2500),
              (i.DEFAULT_EDGE_LENGTH = 50),
              (i.DEFAULT_SPRING_STRENGTH = 0.45),
              (i.DEFAULT_REPULSION_STRENGTH = 4500),
              (i.DEFAULT_GRAVITY_STRENGTH = 0.4),
              (i.DEFAULT_COMPOUND_GRAVITY_STRENGTH = 1),
              (i.DEFAULT_GRAVITY_RANGE_FACTOR = 3.8),
              (i.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = 1.5),
              (i.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION = !0),
              (i.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION = !0),
              (i.DEFAULT_COOLING_FACTOR_INCREMENTAL = 0.3),
              (i.COOLING_ADAPTATION_FACTOR = 0.33),
              (i.ADAPTATION_LOWER_NODE_LIMIT = 1e3),
              (i.ADAPTATION_UPPER_NODE_LIMIT = 5e3),
              (i.MAX_NODE_DISPLACEMENT_INCREMENTAL = 100),
              (i.MAX_NODE_DISPLACEMENT =
                3 * i.MAX_NODE_DISPLACEMENT_INCREMENTAL),
              (i.MIN_REPULSION_DIST = i.DEFAULT_EDGE_LENGTH / 10),
              (i.CONVERGENCE_CHECK_PERIOD = 100),
              (i.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = 0.1),
              (i.MIN_EDGE_LENGTH = 1),
              (i.GRID_CALCULATION_CHECK_PERIOD = 10),
              (e.exports = i);
          },
          function (e, t, n) {
            "use strict";
            var r = n(12);
            function i() {}
            (i.calcSeparationAmount = function (e, t, n, r) {
              if (!e.intersects(t)) throw "assert failed";
              var i = new Array(2);
              this.decideDirectionsForOverlappingNodes(e, t, i),
                (n[0] =
                  Math.min(e.getRight(), t.getRight()) - Math.max(e.x, t.x)),
                (n[1] =
                  Math.min(e.getBottom(), t.getBottom()) - Math.max(e.y, t.y)),
                e.getX() <= t.getX() && e.getRight() >= t.getRight()
                  ? (n[0] += Math.min(
                      t.getX() - e.getX(),
                      e.getRight() - t.getRight()
                    ))
                  : t.getX() <= e.getX() &&
                    t.getRight() >= e.getRight() &&
                    (n[0] += Math.min(
                      e.getX() - t.getX(),
                      t.getRight() - e.getRight()
                    )),
                e.getY() <= t.getY() && e.getBottom() >= t.getBottom()
                  ? (n[1] += Math.min(
                      t.getY() - e.getY(),
                      e.getBottom() - t.getBottom()
                    ))
                  : t.getY() <= e.getY() &&
                    t.getBottom() >= e.getBottom() &&
                    (n[1] += Math.min(
                      e.getY() - t.getY(),
                      t.getBottom() - e.getBottom()
                    ));
              var a = Math.abs(
                (t.getCenterY() - e.getCenterY()) /
                  (t.getCenterX() - e.getCenterX())
              );
              t.getCenterY() === e.getCenterY() &&
                t.getCenterX() === e.getCenterX() &&
                (a = 1);
              var o = a * n[0],
                s = n[1] / a;
              n[0] < s ? (s = n[0]) : (o = n[1]),
                (n[0] = -1 * i[0] * (s / 2 + r)),
                (n[1] = -1 * i[1] * (o / 2 + r));
            }),
              (i.decideDirectionsForOverlappingNodes = function (e, t, n) {
                e.getCenterX() < t.getCenterX() ? (n[0] = -1) : (n[0] = 1),
                  e.getCenterY() < t.getCenterY() ? (n[1] = -1) : (n[1] = 1);
              }),
              (i.getIntersection2 = function (e, t, n) {
                var r = e.getCenterX(),
                  i = e.getCenterY(),
                  a = t.getCenterX(),
                  o = t.getCenterY();
                if (e.intersects(t))
                  return (n[0] = r), (n[1] = i), (n[2] = a), (n[3] = o), !0;
                var s = e.getX(),
                  l = e.getY(),
                  u = e.getRight(),
                  c = e.getX(),
                  h = e.getBottom(),
                  d = e.getRight(),
                  p = e.getWidthHalf(),
                  g = e.getHeightHalf(),
                  f = t.getX(),
                  v = t.getY(),
                  y = t.getRight(),
                  m = t.getX(),
                  b = t.getBottom(),
                  x = t.getRight(),
                  w = t.getWidthHalf(),
                  E = t.getHeightHalf(),
                  T = !1,
                  _ = !1;
                if (r === a) {
                  if (i > o)
                    return (n[0] = r), (n[1] = l), (n[2] = a), (n[3] = b), !1;
                  if (i < o)
                    return (n[0] = r), (n[1] = h), (n[2] = a), (n[3] = v), !1;
                } else if (i === o) {
                  if (r > a)
                    return (n[0] = s), (n[1] = i), (n[2] = y), (n[3] = o), !1;
                  if (r < a)
                    return (n[0] = u), (n[1] = i), (n[2] = f), (n[3] = o), !1;
                } else {
                  var D = e.height / e.width,
                    C = t.height / t.width,
                    N = (o - i) / (a - r),
                    A = void 0,
                    L = void 0,
                    S = void 0,
                    O = void 0,
                    k = void 0,
                    I = void 0;
                  if (
                    (-D === N
                      ? r > a
                        ? ((n[0] = c), (n[1] = h), (T = !0))
                        : ((n[0] = u), (n[1] = l), (T = !0))
                      : D === N &&
                        (r > a
                          ? ((n[0] = s), (n[1] = l), (T = !0))
                          : ((n[0] = d), (n[1] = h), (T = !0))),
                    -C === N
                      ? a > r
                        ? ((n[2] = m), (n[3] = b), (_ = !0))
                        : ((n[2] = y), (n[3] = v), (_ = !0))
                      : C === N &&
                        (a > r
                          ? ((n[2] = f), (n[3] = v), (_ = !0))
                          : ((n[2] = x), (n[3] = b), (_ = !0))),
                    T && _)
                  )
                    return !1;
                  if (
                    (r > a
                      ? i > o
                        ? ((A = this.getCardinalDirection(D, N, 4)),
                          (L = this.getCardinalDirection(C, N, 2)))
                        : ((A = this.getCardinalDirection(-D, N, 3)),
                          (L = this.getCardinalDirection(-C, N, 1)))
                      : i > o
                      ? ((A = this.getCardinalDirection(-D, N, 1)),
                        (L = this.getCardinalDirection(-C, N, 3)))
                      : ((A = this.getCardinalDirection(D, N, 2)),
                        (L = this.getCardinalDirection(C, N, 4))),
                    !T)
                  )
                    switch (A) {
                      case 1:
                        (O = l), (S = r + -g / N), (n[0] = S), (n[1] = O);
                        break;
                      case 2:
                        (S = d), (O = i + p * N), (n[0] = S), (n[1] = O);
                        break;
                      case 3:
                        (O = h), (S = r + g / N), (n[0] = S), (n[1] = O);
                        break;
                      case 4:
                        (S = c), (O = i + -p * N), (n[0] = S), (n[1] = O);
                    }
                  if (!_)
                    switch (L) {
                      case 1:
                        (I = v), (k = a + -E / N), (n[2] = k), (n[3] = I);
                        break;
                      case 2:
                        (k = x), (I = o + w * N), (n[2] = k), (n[3] = I);
                        break;
                      case 3:
                        (I = b), (k = a + E / N), (n[2] = k), (n[3] = I);
                        break;
                      case 4:
                        (k = m), (I = o + -w * N), (n[2] = k), (n[3] = I);
                    }
                }
                return !1;
              }),
              (i.getCardinalDirection = function (e, t, n) {
                return e > t ? n : 1 + (n % 4);
              }),
              (i.getIntersection = function (e, t, n, i) {
                if (null == i) return this.getIntersection2(e, t, n);
                var a,
                  o,
                  s,
                  l,
                  u,
                  c,
                  h,
                  d = e.x,
                  p = e.y,
                  g = t.x,
                  f = t.y,
                  v = n.x,
                  y = n.y,
                  m = i.x,
                  b = i.y;
                return 0 ==
                  (h = (a = f - p) * (l = v - m) - (o = b - y) * (s = d - g))
                  ? null
                  : new r(
                      (s * (c = m * y - v * b) - l * (u = g * p - d * f)) / h,
                      (o * u - a * c) / h
                    );
              }),
              (i.angleOfVector = function (e, t, n, r) {
                var i = void 0;
                return (
                  e !== n
                    ? ((i = Math.atan((r - t) / (n - e))),
                      n < e ? (i += Math.PI) : r < t && (i += this.TWO_PI))
                    : (i = r < t ? this.ONE_AND_HALF_PI : this.HALF_PI),
                  i
                );
              }),
              (i.doIntersect = function (e, t, n, r) {
                var i = e.x,
                  a = e.y,
                  o = t.x,
                  s = t.y,
                  l = n.x,
                  u = n.y,
                  c = r.x,
                  h = r.y,
                  d = (o - i) * (h - u) - (c - l) * (s - a);
                if (0 === d) return !1;
                var p = ((h - u) * (c - i) + (l - c) * (h - a)) / d,
                  g = ((a - s) * (c - i) + (o - i) * (h - a)) / d;
                return 0 < p && p < 1 && 0 < g && g < 1;
              }),
              (i.HALF_PI = 0.5 * Math.PI),
              (i.ONE_AND_HALF_PI = 1.5 * Math.PI),
              (i.TWO_PI = 2 * Math.PI),
              (i.THREE_PI = 3 * Math.PI),
              (e.exports = i);
          },
          function (e, t, n) {
            "use strict";
            function r() {}
            (r.sign = function (e) {
              return e > 0 ? 1 : e < 0 ? -1 : 0;
            }),
              (r.floor = function (e) {
                return e < 0 ? Math.ceil(e) : Math.floor(e);
              }),
              (r.ceil = function (e) {
                return e < 0 ? Math.floor(e) : Math.ceil(e);
              }),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            function r() {}
            (r.MAX_VALUE = 2147483647),
              (r.MIN_VALUE = -2147483648),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            var r = (function () {
                function e(e, t) {
                  for (var n = 0; n < t.length; n++) {
                    var r = t[n];
                    (r.enumerable = r.enumerable || !1),
                      (r.configurable = !0),
                      "value" in r && (r.writable = !0),
                      Object.defineProperty(e, r.key, r);
                  }
                }
                return function (t, n, r) {
                  return n && e(t.prototype, n), r && e(t, r), t;
                };
              })(),
              i = function (e) {
                return { value: e, next: null, prev: null };
              },
              a = function (e, t, n, r) {
                return (
                  null !== e ? (e.next = t) : (r.head = t),
                  null !== n ? (n.prev = t) : (r.tail = t),
                  (t.prev = e),
                  (t.next = n),
                  r.length++,
                  t
                );
              },
              o = function (e, t) {
                var n = e.prev,
                  r = e.next;
                return (
                  null !== n ? (n.next = r) : (t.head = r),
                  null !== r ? (r.prev = n) : (t.tail = n),
                  (e.prev = e.next = null),
                  t.length--,
                  e
                );
              },
              s = (function () {
                function e(t) {
                  var n = this;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, e),
                    (this.length = 0),
                    (this.head = null),
                    (this.tail = null),
                    null != t &&
                      t.forEach(function (e) {
                        return n.push(e);
                      });
                }
                return (
                  r(e, [
                    {
                      key: "size",
                      value: function () {
                        return this.length;
                      },
                    },
                    {
                      key: "insertBefore",
                      value: function (e, t) {
                        return a(t.prev, i(e), t, this);
                      },
                    },
                    {
                      key: "insertAfter",
                      value: function (e, t) {
                        return a(t, i(e), t.next, this);
                      },
                    },
                    {
                      key: "insertNodeBefore",
                      value: function (e, t) {
                        return a(t.prev, e, t, this);
                      },
                    },
                    {
                      key: "insertNodeAfter",
                      value: function (e, t) {
                        return a(t, e, t.next, this);
                      },
                    },
                    {
                      key: "push",
                      value: function (e) {
                        return a(this.tail, i(e), null, this);
                      },
                    },
                    {
                      key: "unshift",
                      value: function (e) {
                        return a(null, i(e), this.head, this);
                      },
                    },
                    {
                      key: "remove",
                      value: function (e) {
                        return o(e, this);
                      },
                    },
                    {
                      key: "pop",
                      value: function () {
                        return o(this.tail, this).value;
                      },
                    },
                    {
                      key: "popNode",
                      value: function () {
                        return o(this.tail, this);
                      },
                    },
                    {
                      key: "shift",
                      value: function () {
                        return o(this.head, this).value;
                      },
                    },
                    {
                      key: "shiftNode",
                      value: function () {
                        return o(this.head, this);
                      },
                    },
                    {
                      key: "get_object_at",
                      value: function (e) {
                        if (e <= this.length()) {
                          for (var t = 1, n = this.head; t < e; )
                            (n = n.next), t++;
                          return n.value;
                        }
                      },
                    },
                    {
                      key: "set_object_at",
                      value: function (e, t) {
                        if (e <= this.length()) {
                          for (var n = 1, r = this.head; n < e; )
                            (r = r.next), n++;
                          r.value = t;
                        }
                      },
                    },
                  ]),
                  e
                );
              })();
            e.exports = s;
          },
          function (e, t, n) {
            "use strict";
            function r(e, t, n) {
              (this.x = null),
                (this.y = null),
                null == e && null == t && null == n
                  ? ((this.x = 0), (this.y = 0))
                  : "number" == typeof e && "number" == typeof t && null == n
                  ? ((this.x = e), (this.y = t))
                  : "Point" == e.constructor.name &&
                    null == t &&
                    null == n &&
                    ((n = e), (this.x = n.x), (this.y = n.y));
            }
            (r.prototype.getX = function () {
              return this.x;
            }),
              (r.prototype.getY = function () {
                return this.y;
              }),
              (r.prototype.getLocation = function () {
                return new r(this.x, this.y);
              }),
              (r.prototype.setLocation = function (e, t, n) {
                "Point" == e.constructor.name && null == t && null == n
                  ? ((n = e), this.setLocation(n.x, n.y))
                  : "number" == typeof e &&
                    "number" == typeof t &&
                    null == n &&
                    (parseInt(e) == e && parseInt(t) == t
                      ? this.move(e, t)
                      : ((this.x = Math.floor(e + 0.5)),
                        (this.y = Math.floor(t + 0.5))));
              }),
              (r.prototype.move = function (e, t) {
                (this.x = e), (this.y = t);
              }),
              (r.prototype.translate = function (e, t) {
                (this.x += e), (this.y += t);
              }),
              (r.prototype.equals = function (e) {
                if ("Point" == e.constructor.name) {
                  var t = e;
                  return this.x == t.x && this.y == t.y;
                }
                return this == e;
              }),
              (r.prototype.toString = function () {
                return (
                  new r().constructor.name +
                  "[x=" +
                  this.x +
                  ",y=" +
                  this.y +
                  "]"
                );
              }),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            function r(e, t, n, r) {
              (this.x = 0),
                (this.y = 0),
                (this.width = 0),
                (this.height = 0),
                null != e &&
                  null != t &&
                  null != n &&
                  null != r &&
                  ((this.x = e),
                  (this.y = t),
                  (this.width = n),
                  (this.height = r));
            }
            (r.prototype.getX = function () {
              return this.x;
            }),
              (r.prototype.setX = function (e) {
                this.x = e;
              }),
              (r.prototype.getY = function () {
                return this.y;
              }),
              (r.prototype.setY = function (e) {
                this.y = e;
              }),
              (r.prototype.getWidth = function () {
                return this.width;
              }),
              (r.prototype.setWidth = function (e) {
                this.width = e;
              }),
              (r.prototype.getHeight = function () {
                return this.height;
              }),
              (r.prototype.setHeight = function (e) {
                this.height = e;
              }),
              (r.prototype.getRight = function () {
                return this.x + this.width;
              }),
              (r.prototype.getBottom = function () {
                return this.y + this.height;
              }),
              (r.prototype.intersects = function (e) {
                return !(
                  this.getRight() < e.x ||
                  this.getBottom() < e.y ||
                  e.getRight() < this.x ||
                  e.getBottom() < this.y
                );
              }),
              (r.prototype.getCenterX = function () {
                return this.x + this.width / 2;
              }),
              (r.prototype.getMinX = function () {
                return this.getX();
              }),
              (r.prototype.getMaxX = function () {
                return this.getX() + this.width;
              }),
              (r.prototype.getCenterY = function () {
                return this.y + this.height / 2;
              }),
              (r.prototype.getMinY = function () {
                return this.getY();
              }),
              (r.prototype.getMaxY = function () {
                return this.getY() + this.height;
              }),
              (r.prototype.getWidthHalf = function () {
                return this.width / 2;
              }),
              (r.prototype.getHeightHalf = function () {
                return this.height / 2;
              }),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            var r =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  };
            function i() {}
            (i.lastID = 0),
              (i.createID = function (e) {
                return i.isPrimitive(e)
                  ? e
                  : (null != e.uniqueID ||
                      ((e.uniqueID = i.getString()), i.lastID++),
                    e.uniqueID);
              }),
              (i.getString = function (e) {
                return null == e && (e = i.lastID), "Object#" + e;
              }),
              (i.isPrimitive = function (e) {
                var t = void 0 === e ? "undefined" : r(e);
                return null == e || ("object" != t && "function" != t);
              }),
              (e.exports = i);
          },
          function (e, t, n) {
            "use strict";
            function r(e) {
              if (Array.isArray(e)) {
                for (var t = 0, n = Array(e.length); t < e.length; t++)
                  n[t] = e[t];
                return n;
              }
              return Array.from(e);
            }
            var i = n(0),
              a = n(6),
              o = n(3),
              s = n(1),
              l = n(5),
              u = n(4),
              c = n(17),
              h = n(27);
            function d(e) {
              h.call(this),
                (this.layoutQuality = i.QUALITY),
                (this.createBendsAsNeeded = i.DEFAULT_CREATE_BENDS_AS_NEEDED),
                (this.incremental = i.DEFAULT_INCREMENTAL),
                (this.animationOnLayout = i.DEFAULT_ANIMATION_ON_LAYOUT),
                (this.animationDuringLayout =
                  i.DEFAULT_ANIMATION_DURING_LAYOUT),
                (this.animationPeriod = i.DEFAULT_ANIMATION_PERIOD),
                (this.uniformLeafNodeSizes = i.DEFAULT_UNIFORM_LEAF_NODE_SIZES),
                (this.edgeToDummyNodes = new Map()),
                (this.graphManager = new a(this)),
                (this.isLayoutFinished = !1),
                (this.isSubLayout = !1),
                (this.isRemoteUse = !1),
                null != e && (this.isRemoteUse = e);
            }
            (d.RANDOM_SEED = 1),
              (d.prototype = Object.create(h.prototype)),
              (d.prototype.getGraphManager = function () {
                return this.graphManager;
              }),
              (d.prototype.getAllNodes = function () {
                return this.graphManager.getAllNodes();
              }),
              (d.prototype.getAllEdges = function () {
                return this.graphManager.getAllEdges();
              }),
              (d.prototype.getAllNodesToApplyGravitation = function () {
                return this.graphManager.getAllNodesToApplyGravitation();
              }),
              (d.prototype.newGraphManager = function () {
                var e = new a(this);
                return (this.graphManager = e), e;
              }),
              (d.prototype.newGraph = function (e) {
                return new l(null, this.graphManager, e);
              }),
              (d.prototype.newNode = function (e) {
                return new o(this.graphManager, e);
              }),
              (d.prototype.newEdge = function (e) {
                return new s(null, null, e);
              }),
              (d.prototype.checkLayoutSuccess = function () {
                return (
                  null == this.graphManager.getRoot() ||
                  0 == this.graphManager.getRoot().getNodes().length ||
                  this.graphManager.includesInvalidEdge()
                );
              }),
              (d.prototype.runLayout = function () {
                var e;
                return (
                  (this.isLayoutFinished = !1),
                  this.tilingPreLayout && this.tilingPreLayout(),
                  this.initParameters(),
                  (e = !this.checkLayoutSuccess() && this.layout()),
                  "during" !== i.ANIMATE &&
                    (e && (this.isSubLayout || this.doPostLayout()),
                    this.tilingPostLayout && this.tilingPostLayout(),
                    (this.isLayoutFinished = !0),
                    e)
                );
              }),
              (d.prototype.doPostLayout = function () {
                this.incremental || this.transform(), this.update();
              }),
              (d.prototype.update2 = function () {
                if (
                  (this.createBendsAsNeeded &&
                    (this.createBendpointsFromDummyNodes(),
                    this.graphManager.resetAllEdges()),
                  !this.isRemoteUse)
                ) {
                  for (
                    var e = this.graphManager.getAllEdges(), t = 0;
                    t < e.length;
                    t++
                  )
                    e[t];
                  var n = this.graphManager.getRoot().getNodes();
                  for (t = 0; t < n.length; t++) n[t];
                  this.update(this.graphManager.getRoot());
                }
              }),
              (d.prototype.update = function (e) {
                if (null == e) this.update2();
                else if (e instanceof o) {
                  var t = e;
                  if (null != t.getChild())
                    for (
                      var n = t.getChild().getNodes(), r = 0;
                      r < n.length;
                      r++
                    )
                      update(n[r]);
                  null != t.vGraphObject && t.vGraphObject.update(t);
                } else if (e instanceof s) {
                  var i = e;
                  null != i.vGraphObject && i.vGraphObject.update(i);
                } else if (e instanceof l) {
                  var a = e;
                  null != a.vGraphObject && a.vGraphObject.update(a);
                }
              }),
              (d.prototype.initParameters = function () {
                this.isSubLayout ||
                  ((this.layoutQuality = i.QUALITY),
                  (this.animationDuringLayout =
                    i.DEFAULT_ANIMATION_DURING_LAYOUT),
                  (this.animationPeriod = i.DEFAULT_ANIMATION_PERIOD),
                  (this.animationOnLayout = i.DEFAULT_ANIMATION_ON_LAYOUT),
                  (this.incremental = i.DEFAULT_INCREMENTAL),
                  (this.createBendsAsNeeded = i.DEFAULT_CREATE_BENDS_AS_NEEDED),
                  (this.uniformLeafNodeSizes =
                    i.DEFAULT_UNIFORM_LEAF_NODE_SIZES)),
                  this.animationDuringLayout && (this.animationOnLayout = !1);
              }),
              (d.prototype.transform = function (e) {
                if (null == e) this.transform(new u(0, 0));
                else {
                  var t = new c(),
                    n = this.graphManager.getRoot().updateLeftTop();
                  if (null != n) {
                    t.setWorldOrgX(e.x),
                      t.setWorldOrgY(e.y),
                      t.setDeviceOrgX(n.x),
                      t.setDeviceOrgY(n.y);
                    for (var r = this.getAllNodes(), i = 0; i < r.length; i++)
                      r[i].transform(t);
                  }
                }
              }),
              (d.prototype.positionNodesRandomly = function (e) {
                if (null == e)
                  this.positionNodesRandomly(this.getGraphManager().getRoot()),
                    this.getGraphManager().getRoot().updateBounds(!0);
                else
                  for (var t, n, r = e.getNodes(), i = 0; i < r.length; i++)
                    null == (n = (t = r[i]).getChild()) ||
                    0 == n.getNodes().length
                      ? t.scatter()
                      : (this.positionNodesRandomly(n), t.updateBounds());
              }),
              (d.prototype.getFlatForest = function () {
                for (
                  var e = [],
                    t = !0,
                    n = this.graphManager.getRoot().getNodes(),
                    i = !0,
                    a = 0;
                  a < n.length;
                  a++
                )
                  null != n[a].getChild() && (i = !1);
                if (!i) return e;
                var o = new Set(),
                  s = [],
                  l = new Map(),
                  u = [];
                for (u = u.concat(n); u.length > 0 && t; ) {
                  for (s.push(u[0]); s.length > 0 && t; ) {
                    var c = s[0];
                    s.splice(0, 1), o.add(c);
                    var h = c.getEdges();
                    for (a = 0; a < h.length; a++) {
                      var d = h[a].getOtherEnd(c);
                      if (l.get(c) != d) {
                        if (o.has(d)) {
                          t = !1;
                          break;
                        }
                        s.push(d), l.set(d, c);
                      }
                    }
                  }
                  if (t) {
                    var p = [].concat(r(o));
                    for (e.push(p), a = 0; a < p.length; a++) {
                      var g = p[a],
                        f = u.indexOf(g);
                      f > -1 && u.splice(f, 1);
                    }
                    (o = new Set()), (l = new Map());
                  } else e = [];
                }
                return e;
              }),
              (d.prototype.createDummyNodesForBendpoints = function (e) {
                for (
                  var t = [],
                    n = e.source,
                    r = this.graphManager.calcLowestCommonAncestor(
                      e.source,
                      e.target
                    ),
                    i = 0;
                  i < e.bendpoints.length;
                  i++
                ) {
                  var a = this.newNode(null);
                  a.setRect(new Point(0, 0), new Dimension(1, 1)), r.add(a);
                  var o = this.newEdge(null);
                  this.graphManager.add(o, n, a), t.add(a), (n = a);
                }
                return (
                  (o = this.newEdge(null)),
                  this.graphManager.add(o, n, e.target),
                  this.edgeToDummyNodes.set(e, t),
                  e.isInterGraph() ? this.graphManager.remove(e) : r.remove(e),
                  t
                );
              }),
              (d.prototype.createBendpointsFromDummyNodes = function () {
                var e = [];
                (e = e.concat(this.graphManager.getAllEdges())),
                  (e = [].concat(r(this.edgeToDummyNodes.keys())).concat(e));
                for (var t = 0; t < e.length; t++) {
                  var n = e[t];
                  if (n.bendpoints.length > 0) {
                    for (
                      var i = this.edgeToDummyNodes.get(n), a = 0;
                      a < i.length;
                      a++
                    ) {
                      var o = i[a],
                        s = new u(o.getCenterX(), o.getCenterY()),
                        l = n.bendpoints.get(a);
                      (l.x = s.x), (l.y = s.y), o.getOwner().remove(o);
                    }
                    this.graphManager.add(n, n.source, n.target);
                  }
                }
              }),
              (d.transform = function (e, t, n, r) {
                if (null != n && null != r) {
                  var i = t;
                  return (
                    e <= 50
                      ? (i -= ((t - t / n) / 50) * (50 - e))
                      : (i += ((t * r - t) / 50) * (e - 50)),
                    i
                  );
                }
                var a, o;
                return (
                  e <= 50
                    ? ((a = (9 * t) / 500), (o = t / 10))
                    : ((a = (9 * t) / 50), (o = -8 * t)),
                  a * e + o
                );
              }),
              (d.findCenterOfTree = function (e) {
                var t = [];
                t = t.concat(e);
                var n = [],
                  r = new Map(),
                  i = !1,
                  a = null;
                (1 != t.length && 2 != t.length) || ((i = !0), (a = t[0]));
                for (var o = 0; o < t.length; o++) {
                  var s = (c = t[o]).getNeighborsList().size;
                  r.set(c, c.getNeighborsList().size), 1 == s && n.push(c);
                }
                var l = [];
                for (l = l.concat(n); !i; ) {
                  var u = [];
                  for (u = u.concat(l), l = [], o = 0; o < t.length; o++) {
                    var c = t[o],
                      h = t.indexOf(c);
                    h >= 0 && t.splice(h, 1),
                      c.getNeighborsList().forEach(function (e) {
                        if (n.indexOf(e) < 0) {
                          var t = r.get(e) - 1;
                          1 == t && l.push(e), r.set(e, t);
                        }
                      });
                  }
                  (n = n.concat(l)),
                    (1 != t.length && 2 != t.length) || ((i = !0), (a = t[0]));
                }
                return a;
              }),
              (d.prototype.setGraphManager = function (e) {
                this.graphManager = e;
              }),
              (e.exports = d);
          },
          function (e, t, n) {
            "use strict";
            function r() {}
            (r.seed = 1),
              (r.x = 0),
              (r.nextDouble = function () {
                return (r.x = 1e4 * Math.sin(r.seed++)), r.x - Math.floor(r.x);
              }),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            var r = n(4);
            function i(e, t) {
              (this.lworldOrgX = 0),
                (this.lworldOrgY = 0),
                (this.ldeviceOrgX = 0),
                (this.ldeviceOrgY = 0),
                (this.lworldExtX = 1),
                (this.lworldExtY = 1),
                (this.ldeviceExtX = 1),
                (this.ldeviceExtY = 1);
            }
            (i.prototype.getWorldOrgX = function () {
              return this.lworldOrgX;
            }),
              (i.prototype.setWorldOrgX = function (e) {
                this.lworldOrgX = e;
              }),
              (i.prototype.getWorldOrgY = function () {
                return this.lworldOrgY;
              }),
              (i.prototype.setWorldOrgY = function (e) {
                this.lworldOrgY = e;
              }),
              (i.prototype.getWorldExtX = function () {
                return this.lworldExtX;
              }),
              (i.prototype.setWorldExtX = function (e) {
                this.lworldExtX = e;
              }),
              (i.prototype.getWorldExtY = function () {
                return this.lworldExtY;
              }),
              (i.prototype.setWorldExtY = function (e) {
                this.lworldExtY = e;
              }),
              (i.prototype.getDeviceOrgX = function () {
                return this.ldeviceOrgX;
              }),
              (i.prototype.setDeviceOrgX = function (e) {
                this.ldeviceOrgX = e;
              }),
              (i.prototype.getDeviceOrgY = function () {
                return this.ldeviceOrgY;
              }),
              (i.prototype.setDeviceOrgY = function (e) {
                this.ldeviceOrgY = e;
              }),
              (i.prototype.getDeviceExtX = function () {
                return this.ldeviceExtX;
              }),
              (i.prototype.setDeviceExtX = function (e) {
                this.ldeviceExtX = e;
              }),
              (i.prototype.getDeviceExtY = function () {
                return this.ldeviceExtY;
              }),
              (i.prototype.setDeviceExtY = function (e) {
                this.ldeviceExtY = e;
              }),
              (i.prototype.transformX = function (e) {
                var t = 0,
                  n = this.lworldExtX;
                return (
                  0 != n &&
                    (t =
                      this.ldeviceOrgX +
                      ((e - this.lworldOrgX) * this.ldeviceExtX) / n),
                  t
                );
              }),
              (i.prototype.transformY = function (e) {
                var t = 0,
                  n = this.lworldExtY;
                return (
                  0 != n &&
                    (t =
                      this.ldeviceOrgY +
                      ((e - this.lworldOrgY) * this.ldeviceExtY) / n),
                  t
                );
              }),
              (i.prototype.inverseTransformX = function (e) {
                var t = 0,
                  n = this.ldeviceExtX;
                return (
                  0 != n &&
                    (t =
                      this.lworldOrgX +
                      ((e - this.ldeviceOrgX) * this.lworldExtX) / n),
                  t
                );
              }),
              (i.prototype.inverseTransformY = function (e) {
                var t = 0,
                  n = this.ldeviceExtY;
                return (
                  0 != n &&
                    (t =
                      this.lworldOrgY +
                      ((e - this.ldeviceOrgY) * this.lworldExtY) / n),
                  t
                );
              }),
              (i.prototype.inverseTransformPoint = function (e) {
                return new r(
                  this.inverseTransformX(e.x),
                  this.inverseTransformY(e.y)
                );
              }),
              (e.exports = i);
          },
          function (e, t, n) {
            "use strict";
            var r = n(15),
              i = n(7),
              a = n(0),
              o = n(8),
              s = n(9);
            function l() {
              r.call(this),
                (this.useSmartIdealEdgeLengthCalculation =
                  i.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION),
                (this.idealEdgeLength = i.DEFAULT_EDGE_LENGTH),
                (this.springConstant = i.DEFAULT_SPRING_STRENGTH),
                (this.repulsionConstant = i.DEFAULT_REPULSION_STRENGTH),
                (this.gravityConstant = i.DEFAULT_GRAVITY_STRENGTH),
                (this.compoundGravityConstant =
                  i.DEFAULT_COMPOUND_GRAVITY_STRENGTH),
                (this.gravityRangeFactor = i.DEFAULT_GRAVITY_RANGE_FACTOR),
                (this.compoundGravityRangeFactor =
                  i.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR),
                (this.displacementThresholdPerNode =
                  (3 * i.DEFAULT_EDGE_LENGTH) / 100),
                (this.coolingFactor = i.DEFAULT_COOLING_FACTOR_INCREMENTAL),
                (this.initialCoolingFactor =
                  i.DEFAULT_COOLING_FACTOR_INCREMENTAL),
                (this.totalDisplacement = 0),
                (this.oldTotalDisplacement = 0),
                (this.maxIterations = i.MAX_ITERATIONS);
            }
            for (var u in ((l.prototype = Object.create(r.prototype)), r))
              l[u] = r[u];
            (l.prototype.initParameters = function () {
              r.prototype.initParameters.call(this, arguments),
                (this.totalIterations = 0),
                (this.notAnimatedIterations = 0),
                (this.useFRGridVariant =
                  i.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION),
                (this.grid = []);
            }),
              (l.prototype.calcIdealEdgeLengths = function () {
                for (
                  var e,
                    t,
                    n,
                    r,
                    o,
                    s,
                    l = this.getGraphManager().getAllEdges(),
                    u = 0;
                  u < l.length;
                  u++
                )
                  ((e = l[u]).idealLength = this.idealEdgeLength),
                    e.isInterGraph &&
                      ((n = e.getSource()),
                      (r = e.getTarget()),
                      (o = e.getSourceInLca().getEstimatedSize()),
                      (s = e.getTargetInLca().getEstimatedSize()),
                      this.useSmartIdealEdgeLengthCalculation &&
                        (e.idealLength += o + s - 2 * a.SIMPLE_NODE_SIZE),
                      (t = e.getLca().getInclusionTreeDepth()),
                      (e.idealLength +=
                        i.DEFAULT_EDGE_LENGTH *
                        i.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR *
                        (n.getInclusionTreeDepth() +
                          r.getInclusionTreeDepth() -
                          2 * t)));
              }),
              (l.prototype.initSpringEmbedder = function () {
                var e = this.getAllNodes().length;
                this.incremental
                  ? (e > i.ADAPTATION_LOWER_NODE_LIMIT &&
                      (this.coolingFactor = Math.max(
                        this.coolingFactor * i.COOLING_ADAPTATION_FACTOR,
                        this.coolingFactor -
                          ((e - i.ADAPTATION_LOWER_NODE_LIMIT) /
                            (i.ADAPTATION_UPPER_NODE_LIMIT -
                              i.ADAPTATION_LOWER_NODE_LIMIT)) *
                            this.coolingFactor *
                            (1 - i.COOLING_ADAPTATION_FACTOR)
                      )),
                    (this.maxNodeDisplacement =
                      i.MAX_NODE_DISPLACEMENT_INCREMENTAL))
                  : (e > i.ADAPTATION_LOWER_NODE_LIMIT
                      ? (this.coolingFactor = Math.max(
                          i.COOLING_ADAPTATION_FACTOR,
                          1 -
                            ((e - i.ADAPTATION_LOWER_NODE_LIMIT) /
                              (i.ADAPTATION_UPPER_NODE_LIMIT -
                                i.ADAPTATION_LOWER_NODE_LIMIT)) *
                              (1 - i.COOLING_ADAPTATION_FACTOR)
                        ))
                      : (this.coolingFactor = 1),
                    (this.initialCoolingFactor = this.coolingFactor),
                    (this.maxNodeDisplacement = i.MAX_NODE_DISPLACEMENT)),
                  (this.maxIterations = Math.max(
                    5 * this.getAllNodes().length,
                    this.maxIterations
                  )),
                  (this.totalDisplacementThreshold =
                    this.displacementThresholdPerNode *
                    this.getAllNodes().length),
                  (this.repulsionRange = this.calcRepulsionRange());
              }),
              (l.prototype.calcSpringForces = function () {
                for (var e, t = this.getAllEdges(), n = 0; n < t.length; n++)
                  (e = t[n]), this.calcSpringForce(e, e.idealLength);
              }),
              (l.prototype.calcRepulsionForces = function () {
                var e,
                  t,
                  n,
                  r,
                  a,
                  o =
                    !(arguments.length > 0 && void 0 !== arguments[0]) ||
                    arguments[0],
                  s =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1],
                  l = this.getAllNodes();
                if (this.useFRGridVariant)
                  for (
                    this.totalIterations % i.GRID_CALCULATION_CHECK_PERIOD ==
                      1 &&
                      o &&
                      this.updateGrid(),
                      a = new Set(),
                      e = 0;
                    e < l.length;
                    e++
                  )
                    (n = l[e]),
                      this.calculateRepulsionForceOfANode(n, a, o, s),
                      a.add(n);
                else
                  for (e = 0; e < l.length; e++)
                    for (n = l[e], t = e + 1; t < l.length; t++)
                      (r = l[t]),
                        n.getOwner() == r.getOwner() &&
                          this.calcRepulsionForce(n, r);
              }),
              (l.prototype.calcGravitationalForces = function () {
                for (
                  var e, t = this.getAllNodesToApplyGravitation(), n = 0;
                  n < t.length;
                  n++
                )
                  (e = t[n]), this.calcGravitationalForce(e);
              }),
              (l.prototype.moveNodes = function () {
                for (var e = this.getAllNodes(), t = 0; t < e.length; t++)
                  e[t].move();
              }),
              (l.prototype.calcSpringForce = function (e, t) {
                var n,
                  r,
                  i,
                  a,
                  o = e.getSource(),
                  s = e.getTarget();
                if (
                  this.uniformLeafNodeSizes &&
                  null == o.getChild() &&
                  null == s.getChild()
                )
                  e.updateLengthSimple();
                else if ((e.updateLength(), e.isOverlapingSourceAndTarget))
                  return;
                0 != (n = e.getLength()) &&
                  ((i = (r = this.springConstant * (n - t)) * (e.lengthX / n)),
                  (a = r * (e.lengthY / n)),
                  (o.springForceX += i),
                  (o.springForceY += a),
                  (s.springForceX -= i),
                  (s.springForceY -= a));
              }),
              (l.prototype.calcRepulsionForce = function (e, t) {
                var n,
                  r,
                  a,
                  l,
                  u,
                  c,
                  h,
                  d = e.getRect(),
                  p = t.getRect(),
                  g = new Array(2),
                  f = new Array(4);
                if (d.intersects(p)) {
                  o.calcSeparationAmount(d, p, g, i.DEFAULT_EDGE_LENGTH / 2),
                    (c = 2 * g[0]),
                    (h = 2 * g[1]);
                  var v =
                    (e.noOfChildren * t.noOfChildren) /
                    (e.noOfChildren + t.noOfChildren);
                  (e.repulsionForceX -= v * c),
                    (e.repulsionForceY -= v * h),
                    (t.repulsionForceX += v * c),
                    (t.repulsionForceY += v * h);
                } else
                  this.uniformLeafNodeSizes &&
                  null == e.getChild() &&
                  null == t.getChild()
                    ? ((n = p.getCenterX() - d.getCenterX()),
                      (r = p.getCenterY() - d.getCenterY()))
                    : (o.getIntersection(d, p, f),
                      (n = f[2] - f[0]),
                      (r = f[3] - f[1])),
                    Math.abs(n) < i.MIN_REPULSION_DIST &&
                      (n = s.sign(n) * i.MIN_REPULSION_DIST),
                    Math.abs(r) < i.MIN_REPULSION_DIST &&
                      (r = s.sign(r) * i.MIN_REPULSION_DIST),
                    (a = n * n + r * r),
                    (l = Math.sqrt(a)),
                    (c =
                      ((u =
                        (this.repulsionConstant *
                          e.noOfChildren *
                          t.noOfChildren) /
                        a) *
                        n) /
                      l),
                    (h = (u * r) / l),
                    (e.repulsionForceX -= c),
                    (e.repulsionForceY -= h),
                    (t.repulsionForceX += c),
                    (t.repulsionForceY += h);
              }),
              (l.prototype.calcGravitationalForce = function (e) {
                var t, n, r, i, a, o, s, l;
                (n = ((t = e.getOwner()).getRight() + t.getLeft()) / 2),
                  (r = (t.getTop() + t.getBottom()) / 2),
                  (i = e.getCenterX() - n),
                  (a = e.getCenterY() - r),
                  (o = Math.abs(i) + e.getWidth() / 2),
                  (s = Math.abs(a) + e.getHeight() / 2),
                  e.getOwner() == this.graphManager.getRoot()
                    ? (o >
                        (l = t.getEstimatedSize() * this.gravityRangeFactor) ||
                        s > l) &&
                      ((e.gravitationForceX = -this.gravityConstant * i),
                      (e.gravitationForceY = -this.gravityConstant * a))
                    : (o >
                        (l =
                          t.getEstimatedSize() *
                          this.compoundGravityRangeFactor) ||
                        s > l) &&
                      ((e.gravitationForceX =
                        -this.gravityConstant *
                        i *
                        this.compoundGravityConstant),
                      (e.gravitationForceY =
                        -this.gravityConstant *
                        a *
                        this.compoundGravityConstant));
              }),
              (l.prototype.isConverged = function () {
                var e,
                  t = !1;
                return (
                  this.totalIterations > this.maxIterations / 3 &&
                    (t =
                      Math.abs(
                        this.totalDisplacement - this.oldTotalDisplacement
                      ) < 2),
                  (e =
                    this.totalDisplacement < this.totalDisplacementThreshold),
                  (this.oldTotalDisplacement = this.totalDisplacement),
                  e || t
                );
              }),
              (l.prototype.animate = function () {
                this.animationDuringLayout &&
                  !this.isSubLayout &&
                  (this.notAnimatedIterations == this.animationPeriod
                    ? (this.update(), (this.notAnimatedIterations = 0))
                    : this.notAnimatedIterations++);
              }),
              (l.prototype.calcNoOfChildrenForAllNodes = function () {
                for (
                  var e, t = this.graphManager.getAllNodes(), n = 0;
                  n < t.length;
                  n++
                )
                  (e = t[n]).noOfChildren = e.getNoOfChildren();
              }),
              (l.prototype.calcGrid = function (e) {
                var t, n;
                (t = parseInt(
                  Math.ceil((e.getRight() - e.getLeft()) / this.repulsionRange)
                )),
                  (n = parseInt(
                    Math.ceil(
                      (e.getBottom() - e.getTop()) / this.repulsionRange
                    )
                  ));
                for (var r = new Array(t), i = 0; i < t; i++)
                  r[i] = new Array(n);
                for (i = 0; i < t; i++)
                  for (var a = 0; a < n; a++) r[i][a] = new Array();
                return r;
              }),
              (l.prototype.addNodeToGrid = function (e, t, n) {
                var r, i, a, o;
                (r = parseInt(
                  Math.floor((e.getRect().x - t) / this.repulsionRange)
                )),
                  (i = parseInt(
                    Math.floor(
                      (e.getRect().width + e.getRect().x - t) /
                        this.repulsionRange
                    )
                  )),
                  (a = parseInt(
                    Math.floor((e.getRect().y - n) / this.repulsionRange)
                  )),
                  (o = parseInt(
                    Math.floor(
                      (e.getRect().height + e.getRect().y - n) /
                        this.repulsionRange
                    )
                  ));
                for (var s = r; s <= i; s++)
                  for (var l = a; l <= o; l++)
                    this.grid[s][l].push(e), e.setGridCoordinates(r, i, a, o);
              }),
              (l.prototype.updateGrid = function () {
                var e,
                  t,
                  n = this.getAllNodes();
                for (
                  this.grid = this.calcGrid(this.graphManager.getRoot()), e = 0;
                  e < n.length;
                  e++
                )
                  (t = n[e]),
                    this.addNodeToGrid(
                      t,
                      this.graphManager.getRoot().getLeft(),
                      this.graphManager.getRoot().getTop()
                    );
              }),
              (l.prototype.calculateRepulsionForceOfANode = function (
                e,
                t,
                n,
                r
              ) {
                if (
                  (this.totalIterations % i.GRID_CALCULATION_CHECK_PERIOD ==
                    1 &&
                    n) ||
                  r
                ) {
                  var a,
                    o = new Set();
                  e.surrounding = new Array();
                  for (
                    var s = this.grid, l = e.startX - 1;
                    l < e.finishX + 2;
                    l++
                  )
                    for (var u = e.startY - 1; u < e.finishY + 2; u++)
                      if (
                        !(l < 0 || u < 0 || l >= s.length || u >= s[0].length)
                      )
                        for (var c = 0; c < s[l][u].length; c++)
                          if (
                            ((a = s[l][u][c]),
                            e.getOwner() == a.getOwner() &&
                              e != a &&
                              !t.has(a) &&
                              !o.has(a))
                          ) {
                            var h =
                                Math.abs(e.getCenterX() - a.getCenterX()) -
                                (e.getWidth() / 2 + a.getWidth() / 2),
                              d =
                                Math.abs(e.getCenterY() - a.getCenterY()) -
                                (e.getHeight() / 2 + a.getHeight() / 2);
                            h <= this.repulsionRange &&
                              d <= this.repulsionRange &&
                              o.add(a);
                          }
                  e.surrounding = [].concat(
                    (function (e) {
                      if (Array.isArray(e)) {
                        for (var t = 0, n = Array(e.length); t < e.length; t++)
                          n[t] = e[t];
                        return n;
                      }
                      return Array.from(e);
                    })(o)
                  );
                }
                for (l = 0; l < e.surrounding.length; l++)
                  this.calcRepulsionForce(e, e.surrounding[l]);
              }),
              (l.prototype.calcRepulsionRange = function () {
                return 0;
              }),
              (e.exports = l);
          },
          function (e, t, n) {
            "use strict";
            var r = n(1),
              i = n(7);
            function a(e, t, n) {
              r.call(this, e, t, n), (this.idealLength = i.DEFAULT_EDGE_LENGTH);
            }
            for (var o in ((a.prototype = Object.create(r.prototype)), r))
              a[o] = r[o];
            e.exports = a;
          },
          function (e, t, n) {
            "use strict";
            var r = n(3);
            function i(e, t, n, i) {
              r.call(this, e, t, n, i),
                (this.springForceX = 0),
                (this.springForceY = 0),
                (this.repulsionForceX = 0),
                (this.repulsionForceY = 0),
                (this.gravitationForceX = 0),
                (this.gravitationForceY = 0),
                (this.displacementX = 0),
                (this.displacementY = 0),
                (this.startX = 0),
                (this.finishX = 0),
                (this.startY = 0),
                (this.finishY = 0),
                (this.surrounding = []);
            }
            for (var a in ((i.prototype = Object.create(r.prototype)), r))
              i[a] = r[a];
            (i.prototype.setGridCoordinates = function (e, t, n, r) {
              (this.startX = e),
                (this.finishX = t),
                (this.startY = n),
                (this.finishY = r);
            }),
              (e.exports = i);
          },
          function (e, t, n) {
            "use strict";
            function r(e, t) {
              (this.width = 0),
                (this.height = 0),
                null !== e &&
                  null !== t &&
                  ((this.height = t), (this.width = e));
            }
            (r.prototype.getWidth = function () {
              return this.width;
            }),
              (r.prototype.setWidth = function (e) {
                this.width = e;
              }),
              (r.prototype.getHeight = function () {
                return this.height;
              }),
              (r.prototype.setHeight = function (e) {
                this.height = e;
              }),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            var r = n(14);
            function i() {
              (this.map = {}), (this.keys = []);
            }
            (i.prototype.put = function (e, t) {
              var n = r.createID(e);
              this.contains(n) || ((this.map[n] = t), this.keys.push(e));
            }),
              (i.prototype.contains = function (e) {
                return r.createID(e), null != this.map[e];
              }),
              (i.prototype.get = function (e) {
                var t = r.createID(e);
                return this.map[t];
              }),
              (i.prototype.keySet = function () {
                return this.keys;
              }),
              (e.exports = i);
          },
          function (e, t, n) {
            "use strict";
            var r = n(14);
            function i() {
              this.set = {};
            }
            (i.prototype.add = function (e) {
              var t = r.createID(e);
              this.contains(t) || (this.set[t] = e);
            }),
              (i.prototype.remove = function (e) {
                delete this.set[r.createID(e)];
              }),
              (i.prototype.clear = function () {
                this.set = {};
              }),
              (i.prototype.contains = function (e) {
                return this.set[r.createID(e)] == e;
              }),
              (i.prototype.isEmpty = function () {
                return 0 === this.size();
              }),
              (i.prototype.size = function () {
                return Object.keys(this.set).length;
              }),
              (i.prototype.addAllTo = function (e) {
                for (
                  var t = Object.keys(this.set), n = t.length, r = 0;
                  r < n;
                  r++
                )
                  e.push(this.set[t[r]]);
              }),
              (i.prototype.size = function () {
                return Object.keys(this.set).length;
              }),
              (i.prototype.addAll = function (e) {
                for (var t = e.length, n = 0; n < t; n++) {
                  var r = e[n];
                  this.add(r);
                }
              }),
              (e.exports = i);
          },
          function (e, t, n) {
            "use strict";
            var r = (function () {
                function e(e, t) {
                  for (var n = 0; n < t.length; n++) {
                    var r = t[n];
                    (r.enumerable = r.enumerable || !1),
                      (r.configurable = !0),
                      "value" in r && (r.writable = !0),
                      Object.defineProperty(e, r.key, r);
                  }
                }
                return function (t, n, r) {
                  return n && e(t.prototype, n), r && e(t, r), t;
                };
              })(),
              i = n(11),
              a = (function () {
                function e(t, n) {
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, e),
                    (null === n && void 0 === n) ||
                      (this.compareFunction = this._defaultCompareFunction);
                  var r = void 0;
                  (r = t instanceof i ? t.size() : t.length),
                    this._quicksort(t, 0, r - 1);
                }
                return (
                  r(e, [
                    {
                      key: "_quicksort",
                      value: function (e, t, n) {
                        if (t < n) {
                          var r = this._partition(e, t, n);
                          this._quicksort(e, t, r),
                            this._quicksort(e, r + 1, n);
                        }
                      },
                    },
                    {
                      key: "_partition",
                      value: function (e, t, n) {
                        for (var r = this._get(e, t), i = t, a = n; ; ) {
                          for (; this.compareFunction(r, this._get(e, a)); )
                            a--;
                          for (; this.compareFunction(this._get(e, i), r); )
                            i++;
                          if (!(i < a)) return a;
                          this._swap(e, i, a), i++, a--;
                        }
                      },
                    },
                    {
                      key: "_get",
                      value: function (e, t) {
                        return e instanceof i ? e.get_object_at(t) : e[t];
                      },
                    },
                    {
                      key: "_set",
                      value: function (e, t, n) {
                        e instanceof i ? e.set_object_at(t, n) : (e[t] = n);
                      },
                    },
                    {
                      key: "_swap",
                      value: function (e, t, n) {
                        var r = this._get(e, t);
                        this._set(e, t, this._get(e, n)), this._set(e, n, r);
                      },
                    },
                    {
                      key: "_defaultCompareFunction",
                      value: function (e, t) {
                        return t > e;
                      },
                    },
                  ]),
                  e
                );
              })();
            e.exports = a;
          },
          function (e, t, n) {
            "use strict";
            var r = (function () {
                function e(e, t) {
                  for (var n = 0; n < t.length; n++) {
                    var r = t[n];
                    (r.enumerable = r.enumerable || !1),
                      (r.configurable = !0),
                      "value" in r && (r.writable = !0),
                      Object.defineProperty(e, r.key, r);
                  }
                }
                return function (t, n, r) {
                  return n && e(t.prototype, n), r && e(t, r), t;
                };
              })(),
              i = (function () {
                function e(t, n) {
                  var r =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 1,
                    i =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : -1,
                    a =
                      arguments.length > 4 && void 0 !== arguments[4]
                        ? arguments[4]
                        : -1;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, e),
                    (this.sequence1 = t),
                    (this.sequence2 = n),
                    (this.match_score = r),
                    (this.mismatch_penalty = i),
                    (this.gap_penalty = a),
                    (this.iMax = t.length + 1),
                    (this.jMax = n.length + 1),
                    (this.grid = new Array(this.iMax));
                  for (var o = 0; o < this.iMax; o++) {
                    this.grid[o] = new Array(this.jMax);
                    for (var s = 0; s < this.jMax; s++) this.grid[o][s] = 0;
                  }
                  this.tracebackGrid = new Array(this.iMax);
                  for (var l = 0; l < this.iMax; l++) {
                    this.tracebackGrid[l] = new Array(this.jMax);
                    for (var u = 0; u < this.jMax; u++)
                      this.tracebackGrid[l][u] = [null, null, null];
                  }
                  (this.alignments = []),
                    (this.score = -1),
                    this.computeGrids();
                }
                return (
                  r(e, [
                    {
                      key: "getScore",
                      value: function () {
                        return this.score;
                      },
                    },
                    {
                      key: "getAlignments",
                      value: function () {
                        return this.alignments;
                      },
                    },
                    {
                      key: "computeGrids",
                      value: function () {
                        for (var e = 1; e < this.jMax; e++)
                          (this.grid[0][e] =
                            this.grid[0][e - 1] + this.gap_penalty),
                            (this.tracebackGrid[0][e] = [!1, !1, !0]);
                        for (var t = 1; t < this.iMax; t++)
                          (this.grid[t][0] =
                            this.grid[t - 1][0] + this.gap_penalty),
                            (this.tracebackGrid[t][0] = [!1, !0, !1]);
                        for (var n = 1; n < this.iMax; n++)
                          for (var r = 1; r < this.jMax; r++) {
                            var i = [
                                this.sequence1[n - 1] === this.sequence2[r - 1]
                                  ? this.grid[n - 1][r - 1] + this.match_score
                                  : this.grid[n - 1][r - 1] +
                                    this.mismatch_penalty,
                                this.grid[n - 1][r] + this.gap_penalty,
                                this.grid[n][r - 1] + this.gap_penalty,
                              ],
                              a = this.arrayAllMaxIndexes(i);
                            (this.grid[n][r] = i[a[0]]),
                              (this.tracebackGrid[n][r] = [
                                a.includes(0),
                                a.includes(1),
                                a.includes(2),
                              ]);
                          }
                        this.score = this.grid[this.iMax - 1][this.jMax - 1];
                      },
                    },
                    {
                      key: "alignmentTraceback",
                      value: function () {
                        var e = [];
                        for (
                          e.push({
                            pos: [this.sequence1.length, this.sequence2.length],
                            seq1: "",
                            seq2: "",
                          });
                          e[0];

                        ) {
                          var t = e[0],
                            n = this.tracebackGrid[t.pos[0]][t.pos[1]];
                          n[0] &&
                            e.push({
                              pos: [t.pos[0] - 1, t.pos[1] - 1],
                              seq1: this.sequence1[t.pos[0] - 1] + t.seq1,
                              seq2: this.sequence2[t.pos[1] - 1] + t.seq2,
                            }),
                            n[1] &&
                              e.push({
                                pos: [t.pos[0] - 1, t.pos[1]],
                                seq1: this.sequence1[t.pos[0] - 1] + t.seq1,
                                seq2: "-" + t.seq2,
                              }),
                            n[2] &&
                              e.push({
                                pos: [t.pos[0], t.pos[1] - 1],
                                seq1: "-" + t.seq1,
                                seq2: this.sequence2[t.pos[1] - 1] + t.seq2,
                              }),
                            0 === t.pos[0] &&
                              0 === t.pos[1] &&
                              this.alignments.push({
                                sequence1: t.seq1,
                                sequence2: t.seq2,
                              }),
                            e.shift();
                        }
                        return this.alignments;
                      },
                    },
                    {
                      key: "getAllIndexes",
                      value: function (e, t) {
                        for (
                          var n = [], r = -1;
                          -1 !== (r = e.indexOf(t, r + 1));

                        )
                          n.push(r);
                        return n;
                      },
                    },
                    {
                      key: "arrayAllMaxIndexes",
                      value: function (e) {
                        return this.getAllIndexes(e, Math.max.apply(null, e));
                      },
                    },
                  ]),
                  e
                );
              })();
            e.exports = i;
          },
          function (e, t, n) {
            "use strict";
            var r = function () {};
            (r.FDLayout = n(18)),
              (r.FDLayoutConstants = n(7)),
              (r.FDLayoutEdge = n(19)),
              (r.FDLayoutNode = n(20)),
              (r.DimensionD = n(21)),
              (r.HashMap = n(22)),
              (r.HashSet = n(23)),
              (r.IGeometry = n(8)),
              (r.IMath = n(9)),
              (r.Integer = n(10)),
              (r.Point = n(12)),
              (r.PointD = n(4)),
              (r.RandomSeed = n(16)),
              (r.RectangleD = n(13)),
              (r.Transform = n(17)),
              (r.UniqueIDGeneretor = n(14)),
              (r.Quicksort = n(24)),
              (r.LinkedList = n(11)),
              (r.LGraphObject = n(2)),
              (r.LGraph = n(5)),
              (r.LEdge = n(1)),
              (r.LGraphManager = n(6)),
              (r.LNode = n(3)),
              (r.Layout = n(15)),
              (r.LayoutConstants = n(0)),
              (r.NeedlemanWunsch = n(25)),
              (e.exports = r);
          },
          function (e, t, n) {
            "use strict";
            function r() {
              this.listeners = [];
            }
            var i = r.prototype;
            (i.addListener = function (e, t) {
              this.listeners.push({ event: e, callback: t });
            }),
              (i.removeListener = function (e, t) {
                for (var n = this.listeners.length; n >= 0; n--) {
                  var r = this.listeners[n];
                  r.event === e &&
                    r.callback === t &&
                    this.listeners.splice(n, 1);
                }
              }),
              (i.emit = function (e, t) {
                for (var n = 0; n < this.listeners.length; n++) {
                  var r = this.listeners[n];
                  e === r.event && r.callback(t);
                }
              }),
              (e.exports = r);
          },
        ]);
      }),
        (e.exports = t());
    },
    23624: (e, t, n) => {
      "use strict";
      n.d(t, { diagram: () => S });
      var r = n(46971),
        i = n(10195),
        a = n(88661),
        o = n.n(a),
        s = n(99704),
        l = n.n(s),
        u = n(74328),
        c = n(47964),
        h = n(87708),
        d =
          (n(23464),
          n(8041),
          n(71651),
          n(83772),
          n(58558),
          n(64446),
          n(46585),
          n(47559),
          n(58390),
          n(11630),
          n(82258),
          (function () {
            var e = function (e, t, n, r) {
                for (n = n || {}, r = e.length; r--; n[e[r]] = t);
                return n;
              },
              t = [1, 4],
              n = [1, 13],
              r = [1, 12],
              i = [1, 15],
              a = [1, 16],
              o = [1, 20],
              s = [1, 19],
              l = [6, 7, 8],
              u = [1, 26],
              c = [1, 24],
              h = [1, 25],
              d = [6, 7, 11],
              p = [1, 6, 13, 15, 16, 19, 22],
              g = [1, 33],
              f = [1, 34],
              v = [1, 6, 7, 11, 13, 15, 16, 19, 22],
              y = {
                trace: function () {},
                yy: {},
                symbols_: {
                  error: 2,
                  start: 3,
                  mindMap: 4,
                  spaceLines: 5,
                  SPACELINE: 6,
                  NL: 7,
                  MINDMAP: 8,
                  document: 9,
                  stop: 10,
                  EOF: 11,
                  statement: 12,
                  SPACELIST: 13,
                  node: 14,
                  ICON: 15,
                  CLASS: 16,
                  nodeWithId: 17,
                  nodeWithoutId: 18,
                  NODE_DSTART: 19,
                  NODE_DESCR: 20,
                  NODE_DEND: 21,
                  NODE_ID: 22,
                  $accept: 0,
                  $end: 1,
                },
                terminals_: {
                  2: "error",
                  6: "SPACELINE",
                  7: "NL",
                  8: "MINDMAP",
                  11: "EOF",
                  13: "SPACELIST",
                  15: "ICON",
                  16: "CLASS",
                  19: "NODE_DSTART",
                  20: "NODE_DESCR",
                  21: "NODE_DEND",
                  22: "NODE_ID",
                },
                productions_: [
                  0,
                  [3, 1],
                  [3, 2],
                  [5, 1],
                  [5, 2],
                  [5, 2],
                  [4, 2],
                  [4, 3],
                  [10, 1],
                  [10, 1],
                  [10, 1],
                  [10, 2],
                  [10, 2],
                  [9, 3],
                  [9, 2],
                  [12, 2],
                  [12, 2],
                  [12, 2],
                  [12, 1],
                  [12, 1],
                  [12, 1],
                  [12, 1],
                  [12, 1],
                  [14, 1],
                  [14, 1],
                  [18, 3],
                  [17, 1],
                  [17, 4],
                ],
                performAction: function (e, t, n, r, i, a, o) {
                  var s = a.length - 1;
                  switch (i) {
                    case 6:
                    case 7:
                      return r;
                    case 8:
                      r.getLogger().trace("Stop NL ");
                      break;
                    case 9:
                      r.getLogger().trace("Stop EOF ");
                      break;
                    case 11:
                      r.getLogger().trace("Stop NL2 ");
                      break;
                    case 12:
                      r.getLogger().trace("Stop EOF2 ");
                      break;
                    case 15:
                      r.getLogger().info("Node: ", a[s].id),
                        r.addNode(
                          a[s - 1].length,
                          a[s].id,
                          a[s].descr,
                          a[s].type
                        );
                      break;
                    case 16:
                      r.getLogger().trace("Icon: ", a[s]),
                        r.decorateNode({ icon: a[s] });
                      break;
                    case 17:
                    case 21:
                      r.decorateNode({ class: a[s] });
                      break;
                    case 18:
                      r.getLogger().trace("SPACELIST");
                      break;
                    case 19:
                      r.getLogger().trace("Node: ", a[s].id),
                        r.addNode(0, a[s].id, a[s].descr, a[s].type);
                      break;
                    case 20:
                      r.decorateNode({ icon: a[s] });
                      break;
                    case 25:
                      r.getLogger().trace("node found ..", a[s - 2]),
                        (this.$ = {
                          id: a[s - 1],
                          descr: a[s - 1],
                          type: r.getType(a[s - 2], a[s]),
                        });
                      break;
                    case 26:
                      this.$ = {
                        id: a[s],
                        descr: a[s],
                        type: r.nodeType.DEFAULT,
                      };
                      break;
                    case 27:
                      r.getLogger().trace("node found ..", a[s - 3]),
                        (this.$ = {
                          id: a[s - 3],
                          descr: a[s - 1],
                          type: r.getType(a[s - 2], a[s]),
                        });
                  }
                },
                table: [
                  { 3: 1, 4: 2, 5: 3, 6: [1, 5], 8: t },
                  { 1: [3] },
                  { 1: [2, 1] },
                  { 4: 6, 6: [1, 7], 7: [1, 8], 8: t },
                  {
                    6: n,
                    7: [1, 10],
                    9: 9,
                    12: 11,
                    13: r,
                    14: 14,
                    15: i,
                    16: a,
                    17: 17,
                    18: 18,
                    19: o,
                    22: s,
                  },
                  e(l, [2, 3]),
                  { 1: [2, 2] },
                  e(l, [2, 4]),
                  e(l, [2, 5]),
                  {
                    1: [2, 6],
                    6: n,
                    12: 21,
                    13: r,
                    14: 14,
                    15: i,
                    16: a,
                    17: 17,
                    18: 18,
                    19: o,
                    22: s,
                  },
                  {
                    6: n,
                    9: 22,
                    12: 11,
                    13: r,
                    14: 14,
                    15: i,
                    16: a,
                    17: 17,
                    18: 18,
                    19: o,
                    22: s,
                  },
                  { 6: u, 7: c, 10: 23, 11: h },
                  e(d, [2, 22], {
                    17: 17,
                    18: 18,
                    14: 27,
                    15: [1, 28],
                    16: [1, 29],
                    19: o,
                    22: s,
                  }),
                  e(d, [2, 18]),
                  e(d, [2, 19]),
                  e(d, [2, 20]),
                  e(d, [2, 21]),
                  e(d, [2, 23]),
                  e(d, [2, 24]),
                  e(d, [2, 26], { 19: [1, 30] }),
                  { 20: [1, 31] },
                  { 6: u, 7: c, 10: 32, 11: h },
                  {
                    1: [2, 7],
                    6: n,
                    12: 21,
                    13: r,
                    14: 14,
                    15: i,
                    16: a,
                    17: 17,
                    18: 18,
                    19: o,
                    22: s,
                  },
                  e(p, [2, 14], { 7: g, 11: f }),
                  e(v, [2, 8]),
                  e(v, [2, 9]),
                  e(v, [2, 10]),
                  e(d, [2, 15]),
                  e(d, [2, 16]),
                  e(d, [2, 17]),
                  { 20: [1, 35] },
                  { 21: [1, 36] },
                  e(p, [2, 13], { 7: g, 11: f }),
                  e(v, [2, 11]),
                  e(v, [2, 12]),
                  { 21: [1, 37] },
                  e(d, [2, 25]),
                  e(d, [2, 27]),
                ],
                defaultActions: { 2: [2, 1], 6: [2, 2] },
                parseError: function (e, t) {
                  if (!t.recoverable) {
                    var n = new Error(e);
                    throw ((n.hash = t), n);
                  }
                  this.trace(e);
                },
                parse: function (e) {
                  var t = this,
                    n = [0],
                    r = [],
                    i = [null],
                    a = [],
                    o = this.table,
                    s = "",
                    l = 0,
                    u = 0,
                    c = a.slice.call(arguments, 1),
                    h = Object.create(this.lexer),
                    d = { yy: {} };
                  for (var p in this.yy)
                    Object.prototype.hasOwnProperty.call(this.yy, p) &&
                      (d.yy[p] = this.yy[p]);
                  h.setInput(e, d.yy),
                    (d.yy.lexer = h),
                    (d.yy.parser = this),
                    void 0 === h.yylloc && (h.yylloc = {});
                  var g = h.yylloc;
                  a.push(g);
                  var f = h.options && h.options.ranges;
                  "function" == typeof d.yy.parseError
                    ? (this.parseError = d.yy.parseError)
                    : (this.parseError =
                        Object.getPrototypeOf(this).parseError);
                  for (var v, y, m, b, x, w, E, T, _, D = {}; ; ) {
                    if (
                      ((y = n[n.length - 1]),
                      this.defaultActions[y]
                        ? (m = this.defaultActions[y])
                        : (null == v &&
                            ((_ = void 0),
                            "number" != typeof (_ = r.pop() || h.lex() || 1) &&
                              (_ instanceof Array && (_ = (r = _).pop()),
                              (_ = t.symbols_[_] || _)),
                            (v = _)),
                          (m = o[y] && o[y][v])),
                      void 0 === m || !m.length || !m[0])
                    ) {
                      var C = "";
                      for (x in ((T = []), o[y]))
                        this.terminals_[x] &&
                          x > 2 &&
                          T.push("'" + this.terminals_[x] + "'");
                      (C = h.showPosition
                        ? "Parse error on line " +
                          (l + 1) +
                          ":\n" +
                          h.showPosition() +
                          "\nExpecting " +
                          T.join(", ") +
                          ", got '" +
                          (this.terminals_[v] || v) +
                          "'"
                        : "Parse error on line " +
                          (l + 1) +
                          ": Unexpected " +
                          (1 == v
                            ? "end of input"
                            : "'" + (this.terminals_[v] || v) + "'")),
                        this.parseError(C, {
                          text: h.match,
                          token: this.terminals_[v] || v,
                          line: h.yylineno,
                          loc: g,
                          expected: T,
                        });
                    }
                    if (m[0] instanceof Array && m.length > 1)
                      throw new Error(
                        "Parse Error: multiple actions possible at state: " +
                          y +
                          ", token: " +
                          v
                      );
                    switch (m[0]) {
                      case 1:
                        n.push(v),
                          i.push(h.yytext),
                          a.push(h.yylloc),
                          n.push(m[1]),
                          (v = null),
                          (u = h.yyleng),
                          (s = h.yytext),
                          (l = h.yylineno),
                          (g = h.yylloc);
                        break;
                      case 2:
                        if (
                          ((w = this.productions_[m[1]][1]),
                          (D.$ = i[i.length - w]),
                          (D._$ = {
                            first_line: a[a.length - (w || 1)].first_line,
                            last_line: a[a.length - 1].last_line,
                            first_column: a[a.length - (w || 1)].first_column,
                            last_column: a[a.length - 1].last_column,
                          }),
                          f &&
                            (D._$.range = [
                              a[a.length - (w || 1)].range[0],
                              a[a.length - 1].range[1],
                            ]),
                          void 0 !==
                            (b = this.performAction.apply(
                              D,
                              [s, u, l, d.yy, m[1], i, a].concat(c)
                            )))
                        )
                          return b;
                        w &&
                          ((n = n.slice(0, -1 * w * 2)),
                          (i = i.slice(0, -1 * w)),
                          (a = a.slice(0, -1 * w))),
                          n.push(this.productions_[m[1]][0]),
                          i.push(D.$),
                          a.push(D._$),
                          (E = o[n[n.length - 2]][n[n.length - 1]]),
                          n.push(E);
                        break;
                      case 3:
                        return !0;
                    }
                  }
                  return !0;
                },
              },
              m = {
                EOF: 1,
                parseError: function (e, t) {
                  if (!this.yy.parser) throw new Error(e);
                  this.yy.parser.parseError(e, t);
                },
                setInput: function (e, t) {
                  return (
                    (this.yy = t || this.yy || {}),
                    (this._input = e),
                    (this._more = this._backtrack = this.done = !1),
                    (this.yylineno = this.yyleng = 0),
                    (this.yytext = this.matched = this.match = ""),
                    (this.conditionStack = ["INITIAL"]),
                    (this.yylloc = {
                      first_line: 1,
                      first_column: 0,
                      last_line: 1,
                      last_column: 0,
                    }),
                    this.options.ranges && (this.yylloc.range = [0, 0]),
                    (this.offset = 0),
                    this
                  );
                },
                input: function () {
                  var e = this._input[0];
                  return (
                    (this.yytext += e),
                    this.yyleng++,
                    this.offset++,
                    (this.match += e),
                    (this.matched += e),
                    e.match(/(?:\r\n?|\n).*/g)
                      ? (this.yylineno++, this.yylloc.last_line++)
                      : this.yylloc.last_column++,
                    this.options.ranges && this.yylloc.range[1]++,
                    (this._input = this._input.slice(1)),
                    e
                  );
                },
                unput: function (e) {
                  var t = e.length,
                    n = e.split(/(?:\r\n?|\n)/g);
                  (this._input = e + this._input),
                    (this.yytext = this.yytext.substr(
                      0,
                      this.yytext.length - t
                    )),
                    (this.offset -= t);
                  var r = this.match.split(/(?:\r\n?|\n)/g);
                  (this.match = this.match.substr(0, this.match.length - 1)),
                    (this.matched = this.matched.substr(
                      0,
                      this.matched.length - 1
                    )),
                    n.length - 1 && (this.yylineno -= n.length - 1);
                  var i = this.yylloc.range;
                  return (
                    (this.yylloc = {
                      first_line: this.yylloc.first_line,
                      last_line: this.yylineno + 1,
                      first_column: this.yylloc.first_column,
                      last_column: n
                        ? (n.length === r.length
                            ? this.yylloc.first_column
                            : 0) +
                          r[r.length - n.length].length -
                          n[0].length
                        : this.yylloc.first_column - t,
                    }),
                    this.options.ranges &&
                      (this.yylloc.range = [i[0], i[0] + this.yyleng - t]),
                    (this.yyleng = this.yytext.length),
                    this
                  );
                },
                more: function () {
                  return (this._more = !0), this;
                },
                reject: function () {
                  return this.options.backtrack_lexer
                    ? ((this._backtrack = !0), this)
                    : this.parseError(
                        "Lexical error on line " +
                          (this.yylineno + 1) +
                          ". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n" +
                          this.showPosition(),
                        { text: "", token: null, line: this.yylineno }
                      );
                },
                less: function (e) {
                  this.unput(this.match.slice(e));
                },
                pastInput: function () {
                  var e = this.matched.substr(
                    0,
                    this.matched.length - this.match.length
                  );
                  return (
                    (e.length > 20 ? "..." : "") +
                    e.substr(-20).replace(/\n/g, "")
                  );
                },
                upcomingInput: function () {
                  var e = this.match;
                  return (
                    e.length < 20 &&
                      (e += this._input.substr(0, 20 - e.length)),
                    (e.substr(0, 20) + (e.length > 20 ? "..." : "")).replace(
                      /\n/g,
                      ""
                    )
                  );
                },
                showPosition: function () {
                  var e = this.pastInput(),
                    t = new Array(e.length + 1).join("-");
                  return e + this.upcomingInput() + "\n" + t + "^";
                },
                test_match: function (e, t) {
                  var n, r, i;
                  if (
                    (this.options.backtrack_lexer &&
                      ((i = {
                        yylineno: this.yylineno,
                        yylloc: {
                          first_line: this.yylloc.first_line,
                          last_line: this.last_line,
                          first_column: this.yylloc.first_column,
                          last_column: this.yylloc.last_column,
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done,
                      }),
                      this.options.ranges &&
                        (i.yylloc.range = this.yylloc.range.slice(0))),
                    (r = e[0].match(/(?:\r\n?|\n).*/g)) &&
                      (this.yylineno += r.length),
                    (this.yylloc = {
                      first_line: this.yylloc.last_line,
                      last_line: this.yylineno + 1,
                      first_column: this.yylloc.last_column,
                      last_column: r
                        ? r[r.length - 1].length -
                          r[r.length - 1].match(/\r?\n?/)[0].length
                        : this.yylloc.last_column + e[0].length,
                    }),
                    (this.yytext += e[0]),
                    (this.match += e[0]),
                    (this.matches = e),
                    (this.yyleng = this.yytext.length),
                    this.options.ranges &&
                      (this.yylloc.range = [
                        this.offset,
                        (this.offset += this.yyleng),
                      ]),
                    (this._more = !1),
                    (this._backtrack = !1),
                    (this._input = this._input.slice(e[0].length)),
                    (this.matched += e[0]),
                    (n = this.performAction.call(
                      this,
                      this.yy,
                      this,
                      t,
                      this.conditionStack[this.conditionStack.length - 1]
                    )),
                    this.done && this._input && (this.done = !1),
                    n)
                  )
                    return n;
                  if (this._backtrack) {
                    for (var a in i) this[a] = i[a];
                    return !1;
                  }
                  return !1;
                },
                next: function () {
                  if (this.done) return this.EOF;
                  var e, t, n, r;
                  this._input || (this.done = !0),
                    this._more || ((this.yytext = ""), (this.match = ""));
                  for (var i = this._currentRules(), a = 0; a < i.length; a++)
                    if (
                      (n = this._input.match(this.rules[i[a]])) &&
                      (!t || n[0].length > t[0].length)
                    ) {
                      if (((t = n), (r = a), this.options.backtrack_lexer)) {
                        if (!1 !== (e = this.test_match(n, i[a]))) return e;
                        if (this._backtrack) {
                          t = !1;
                          continue;
                        }
                        return !1;
                      }
                      if (!this.options.flex) break;
                    }
                  return t
                    ? !1 !== (e = this.test_match(t, i[r])) && e
                    : "" === this._input
                    ? this.EOF
                    : this.parseError(
                        "Lexical error on line " +
                          (this.yylineno + 1) +
                          ". Unrecognized text.\n" +
                          this.showPosition(),
                        { text: "", token: null, line: this.yylineno }
                      );
                },
                lex: function () {
                  var e = this.next();
                  return e || this.lex();
                },
                begin: function (e) {
                  this.conditionStack.push(e);
                },
                popState: function () {
                  return this.conditionStack.length - 1 > 0
                    ? this.conditionStack.pop()
                    : this.conditionStack[0];
                },
                _currentRules: function () {
                  return this.conditionStack.length &&
                    this.conditionStack[this.conditionStack.length - 1]
                    ? this.conditions[
                        this.conditionStack[this.conditionStack.length - 1]
                      ].rules
                    : this.conditions.INITIAL.rules;
                },
                topState: function (e) {
                  return (e =
                    this.conditionStack.length - 1 - Math.abs(e || 0)) >= 0
                    ? this.conditionStack[e]
                    : "INITIAL";
                },
                pushState: function (e) {
                  this.begin(e);
                },
                stateStackSize: function () {
                  return this.conditionStack.length;
                },
                options: { "case-insensitive": !0 },
                performAction: function (e, t, n, r) {
                  switch (n) {
                    case 0:
                      e.getLogger().trace("Found comment", t.yytext);
                      break;
                    case 1:
                      return 8;
                    case 2:
                      this.begin("CLASS");
                      break;
                    case 3:
                      return this.popState(), 16;
                    case 4:
                    case 23:
                      this.popState();
                      break;
                    case 5:
                      e.getLogger().trace("Begin icon"), this.begin("ICON");
                      break;
                    case 6:
                      return e.getLogger().trace("SPACELINE"), 6;
                    case 7:
                      return 7;
                    case 8:
                      return 15;
                    case 9:
                      e.getLogger().trace("end icon"), this.popState();
                      break;
                    case 10:
                      return (
                        e.getLogger().trace("Exploding node"),
                        this.begin("NODE"),
                        19
                      );
                    case 11:
                      return (
                        e.getLogger().trace("Cloud"), this.begin("NODE"), 19
                      );
                    case 12:
                      return (
                        e.getLogger().trace("Explosion Bang"),
                        this.begin("NODE"),
                        19
                      );
                    case 13:
                      return (
                        e.getLogger().trace("Cloud Bang"),
                        this.begin("NODE"),
                        19
                      );
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                      return this.begin("NODE"), 19;
                    case 18:
                      return 13;
                    case 19:
                      return 22;
                    case 20:
                      return 11;
                    case 21:
                      e.getLogger().trace("Starting NSTR"), this.begin("NSTR");
                      break;
                    case 22:
                      return (
                        e.getLogger().trace("description:", t.yytext),
                        "NODE_DESCR"
                      );
                    case 24:
                      return (
                        this.popState(),
                        e.getLogger().trace("node end ))"),
                        "NODE_DEND"
                      );
                    case 25:
                      return (
                        this.popState(),
                        e.getLogger().trace("node end )"),
                        "NODE_DEND"
                      );
                    case 26:
                      return (
                        this.popState(),
                        e.getLogger().trace("node end ...", t.yytext),
                        "NODE_DEND"
                      );
                    case 27:
                    case 30:
                    case 31:
                      return (
                        this.popState(),
                        e.getLogger().trace("node end (("),
                        "NODE_DEND"
                      );
                    case 28:
                    case 29:
                      return (
                        this.popState(),
                        e.getLogger().trace("node end (-"),
                        "NODE_DEND"
                      );
                    case 32:
                    case 33:
                      return (
                        e.getLogger().trace("Long description:", t.yytext), 20
                      );
                  }
                },
                rules: [
                  /^(?:\s*%%.*)/i,
                  /^(?:mindmap\b)/i,
                  /^(?::::)/i,
                  /^(?:.+)/i,
                  /^(?:\n)/i,
                  /^(?:::icon\()/i,
                  /^(?:[\s]+[\n])/i,
                  /^(?:[\n]+)/i,
                  /^(?:[^\)]+)/i,
                  /^(?:\))/i,
                  /^(?:-\))/i,
                  /^(?:\(-)/i,
                  /^(?:\)\))/i,
                  /^(?:\))/i,
                  /^(?:\(\()/i,
                  /^(?:\{\{)/i,
                  /^(?:\()/i,
                  /^(?:\[)/i,
                  /^(?:[\s]+)/i,
                  /^(?:[^\(\[\n\-\)\{\}]+)/i,
                  /^(?:$)/i,
                  /^(?:["])/i,
                  /^(?:[^"]+)/i,
                  /^(?:["])/i,
                  /^(?:[\)]\))/i,
                  /^(?:[\)])/i,
                  /^(?:[\]])/i,
                  /^(?:\}\})/i,
                  /^(?:\(-)/i,
                  /^(?:-\))/i,
                  /^(?:\(\()/i,
                  /^(?:\()/i,
                  /^(?:[^\)\]\(\}]+)/i,
                  /^(?:.+(?!\(\())/i,
                ],
                conditions: {
                  CLASS: { rules: [3, 4], inclusive: !1 },
                  ICON: { rules: [8, 9], inclusive: !1 },
                  NSTR: { rules: [22, 23], inclusive: !1 },
                  NODE: {
                    rules: [21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33],
                    inclusive: !1,
                  },
                  INITIAL: {
                    rules: [
                      0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                      20,
                    ],
                    inclusive: !0,
                  },
                },
              };
            function b() {
              this.yy = {};
            }
            return (y.lexer = m), (b.prototype = y), (y.Parser = b), new b();
          })());
      d.parser = d;
      const p = d,
        g = (e) => (0, r.n)(e, (0, r.g)());
      let f = [],
        v = 0,
        y = {};
      const m = {
          DEFAULT: 0,
          NO_BORDER: 0,
          ROUNDED_RECT: 1,
          RECT: 2,
          CIRCLE: 3,
          CLOUD: 4,
          BANG: 5,
          HEXAGON: 6,
        },
        b = (e, t) => {
          y[e] = t;
        },
        x = (e) => {
          switch (e) {
            case m.DEFAULT:
              return "no-border";
            case m.RECT:
              return "rect";
            case m.ROUNDED_RECT:
              return "rounded-rect";
            case m.CIRCLE:
              return "circle";
            case m.CLOUD:
              return "cloud";
            case m.BANG:
              return "bang";
            case m.HEXAGON:
              return "hexgon";
            default:
              return "no-border";
          }
        };
      let w;
      const E = (e) => y[e],
        T = Object.freeze(
          Object.defineProperty(
            {
              __proto__: null,
              addNode: (e, t, n, i) => {
                r.l.info("addNode", e, t, n, i);
                const a = (0, r.g)(),
                  o = {
                    id: v++,
                    nodeId: g(t),
                    level: e,
                    descr: g(n),
                    type: i,
                    children: [],
                    width: (0, r.g)().mindmap.maxNodeWidth,
                  };
                switch (o.type) {
                  case m.ROUNDED_RECT:
                  case m.RECT:
                  case m.HEXAGON:
                    o.padding = 2 * a.mindmap.padding;
                    break;
                  default:
                    o.padding = a.mindmap.padding;
                }
                const s = (function (e) {
                  for (let t = f.length - 1; t >= 0; t--)
                    if (f[t].level < e) return f[t];
                  return null;
                })(e);
                if (s) s.children.push(o), f.push(o);
                else {
                  if (0 !== f.length) {
                    let e = new Error(
                      'There can be only one root. No parent could be found for ("' +
                        o.descr +
                        '")'
                    );
                    throw (
                      ((e.hash = {
                        text: "branch " + name,
                        token: "branch " + name,
                        line: "1",
                        loc: {
                          first_line: 1,
                          last_line: 1,
                          first_column: 1,
                          last_column: 1,
                        },
                        expected: ['"checkout ' + name + '"'],
                      }),
                      e)
                    );
                  }
                  f.push(o);
                }
              },
              clear: () => {
                (f = []), (v = 0), (y = {});
              },
              decorateNode: (e) => {
                const t = f[f.length - 1];
                e && e.icon && (t.icon = g(e.icon)),
                  e && e.class && (t.class = g(e.class));
              },
              getElementById: E,
              getLogger: () => r.l,
              getMindmap: () => (f.length > 0 ? f[0] : null),
              getNodeById: (e) => f[e],
              getType: (e, t) => {
                switch ((r.l.debug("In get type", e, t), e)) {
                  case "[":
                    return m.RECT;
                  case "(":
                    return ")" === t ? m.ROUNDED_RECT : m.CLOUD;
                  case "((":
                    return m.CIRCLE;
                  case ")":
                    return m.CLOUD;
                  case "))":
                    return m.BANG;
                  case "{{":
                    return m.HEXAGON;
                  default:
                    return m.DEFAULT;
                }
              },
              nodeType: m,
              get parseError() {
                return w;
              },
              sanitizeText: g,
              setElementForId: b,
              setErrorHandler: (e) => {
                w = e;
              },
              type2Str: x,
            },
            Symbol.toStringTag,
            { value: "Module" }
          )
        );
      function _(e, t) {
        e.each(function () {
          var e,
            n = (0, i.Ltv)(this),
            r = n
              .text()
              .split(/(\s+|<br>)/)
              .reverse(),
            a = [],
            o = n.attr("y"),
            s = parseFloat(n.attr("dy")),
            l = n
              .text(null)
              .append("tspan")
              .attr("x", 0)
              .attr("y", o)
              .attr("dy", s + "em");
          for (let i = 0; i < r.length; i++)
            (e = r[r.length - 1 - i]),
              a.push(e),
              l.text(a.join(" ").trim()),
              (l.node().getComputedTextLength() > t || "<br>" === e) &&
                (a.pop(),
                l.text(a.join(" ").trim()),
                (a = "<br>" === e ? [""] : [e]),
                (l = n
                  .append("tspan")
                  .attr("x", 0)
                  .attr("y", o)
                  .attr("dy", "1.1em")
                  .text(e)));
        });
      }
      const D = function (e, t, n, r) {
          const i = n % 11,
            a = e.append("g");
          t.section = i;
          let o = "section-" + i;
          i < 0 && (o += " section-root"),
            a.attr(
              "class",
              (t.class ? t.class + " " : "") + "mindmap-node " + o
            );
          const s = a.append("g"),
            l = a.append("g"),
            u = l
              .append("text")
              .text(t.descr)
              .attr("dy", "1em")
              .attr("alignment-baseline", "middle")
              .attr("dominant-baseline", "middle")
              .attr("text-anchor", "middle")
              .call(_, t.width)
              .node()
              .getBBox(),
            c = r.fontSize.replace ? r.fontSize.replace("px", "") : r.fontSize;
          if (
            ((t.height = u.height + 1.1 * c * 0.5 + t.padding),
            (t.width = u.width + 2 * t.padding),
            t.icon)
          )
            if (t.type === m.CIRCLE) {
              (t.height += 50), (t.width += 50);
              a
                .append("foreignObject")
                .attr("height", "50px")
                .attr("width", t.width)
                .attr("style", "text-align: center;")
                .append("div")
                .attr("class", "icon-container")
                .append("i")
                .attr("class", "node-icon-" + i + " " + t.icon),
                l.attr(
                  "transform",
                  "translate(" +
                    t.width / 2 +
                    ", " +
                    (t.height / 2 - 1.5 * t.padding) +
                    ")"
                );
            } else {
              t.width += 50;
              const e = t.height;
              t.height = Math.max(e, 60);
              const n = Math.abs(t.height - e);
              a
                .append("foreignObject")
                .attr("width", "60px")
                .attr("height", t.height)
                .attr("style", "text-align: center;margin-top:" + n / 2 + "px;")
                .append("div")
                .attr("class", "icon-container")
                .append("i")
                .attr("class", "node-icon-" + i + " " + t.icon),
                l.attr(
                  "transform",
                  "translate(" +
                    (25 + t.width / 2) +
                    ", " +
                    (n / 2 + t.padding / 2) +
                    ")"
                );
            }
          else
            l.attr(
              "transform",
              "translate(" + t.width / 2 + ", " + t.padding / 2 + ")"
            );
          switch (t.type) {
            case m.DEFAULT:
              !(function (e, t, n) {
                e
                  .append("path")
                  .attr("id", "node-" + t.id)
                  .attr("class", "node-bkg node-" + x(t.type))
                  .attr(
                    "d",
                    `M0 ${t.height - 5} v${10 - t.height} q0,-5 5,-5 h${
                      t.width - 10
                    } q5,0 5,5 v${t.height - 5} H0 Z`
                  ),
                  e
                    .append("line")
                    .attr("class", "node-line-" + n)
                    .attr("x1", 0)
                    .attr("y1", t.height)
                    .attr("x2", t.width)
                    .attr("y2", t.height);
              })(s, t, i);
              break;
            case m.ROUNDED_RECT:
              !(function (e, t) {
                e.append("rect")
                  .attr("id", "node-" + t.id)
                  .attr("class", "node-bkg node-" + x(t.type))
                  .attr("height", t.height)
                  .attr("rx", t.padding)
                  .attr("ry", t.padding)
                  .attr("width", t.width);
              })(s, t);
              break;
            case m.RECT:
              !(function (e, t) {
                e.append("rect")
                  .attr("id", "node-" + t.id)
                  .attr("class", "node-bkg node-" + x(t.type))
                  .attr("height", t.height)
                  .attr("width", t.width);
              })(s, t);
              break;
            case m.CIRCLE:
              s.attr(
                "transform",
                "translate(" + t.width / 2 + ", " + +t.height / 2 + ")"
              ),
                (function (e, t) {
                  e.append("circle")
                    .attr("id", "node-" + t.id)
                    .attr("class", "node-bkg node-" + x(t.type))
                    .attr("r", t.width / 2);
                })(s, t);
              break;
            case m.CLOUD:
              !(function (e, t) {
                const n = t.width,
                  r = t.height,
                  i = 0.15 * n,
                  a = 0.25 * n,
                  o = 0.35 * n,
                  s = 0.2 * n;
                e.append("path")
                  .attr("id", "node-" + t.id)
                  .attr("class", "node-bkg node-" + x(t.type))
                  .attr(
                    "d",
                    `M0 0 a${i},${i} 0 0,1 ${0.25 * n},${
                      -1 * n * 0.1
                    }\n      a${o},${o} 1 0,1 ${0.4 * n},${
                      -1 * n * 0.1
                    }\n      a${a},${a} 1 0,1 ${0.35 * n},${
                      1 * n * 0.2
                    }\n\n      a${i},${i} 1 0,1 ${0.15 * n},${
                      1 * r * 0.35
                    }\n      a${s},${s} 1 0,1 ${-1 * n * 0.15},${
                      1 * r * 0.65
                    }\n\n      a${a},${i} 1 0,1 ${-1 * n * 0.25},${
                      0.15 * n
                    }\n      a${o},${o} 1 0,1 ${
                      -1 * n * 0.5
                    },0\n      a${i},${i} 1 0,1 ${-1 * n * 0.25},${
                      -1 * n * 0.15
                    }\n\n      a${i},${i} 1 0,1 ${-1 * n * 0.1},${
                      -1 * r * 0.35
                    }\n      a${s},${s} 1 0,1 ${0.1 * n},${
                      -1 * r * 0.65
                    }\n\n    H0 V0 Z`
                  );
              })(s, t);
              break;
            case m.BANG:
              !(function (e, t) {
                const n = t.width,
                  r = t.height,
                  i = 0.15 * n;
                e.append("path")
                  .attr("id", "node-" + t.id)
                  .attr("class", "node-bkg node-" + x(t.type))
                  .attr(
                    "d",
                    `M0 0 a${i},${i} 1 0,0 ${0.25 * n},${
                      -1 * r * 0.1
                    }\n      a${i},${i} 1 0,0 ${
                      0.25 * n
                    },0\n      a${i},${i} 1 0,0 ${
                      0.25 * n
                    },0\n      a${i},${i} 1 0,0 ${0.25 * n},${
                      1 * r * 0.1
                    }\n\n      a${i},${i} 1 0,0 ${0.15 * n},${
                      1 * r * 0.33
                    }\n      a${0.8 * i},${0.8 * i} 1 0,0 0,${
                      1 * r * 0.34
                    }\n      a${i},${i} 1 0,0 ${-1 * n * 0.15},${
                      1 * r * 0.33
                    }\n\n      a${i},${i} 1 0,0 ${-1 * n * 0.25},${
                      0.15 * r
                    }\n      a${i},${i} 1 0,0 ${
                      -1 * n * 0.25
                    },0\n      a${i},${i} 1 0,0 ${
                      -1 * n * 0.25
                    },0\n      a${i},${i} 1 0,0 ${-1 * n * 0.25},${
                      -1 * r * 0.15
                    }\n\n      a${i},${i} 1 0,0 ${-1 * n * 0.1},${
                      -1 * r * 0.33
                    }\n      a${0.8 * i},${0.8 * i} 1 0,0 0,${
                      -1 * r * 0.34
                    }\n      a${i},${i} 1 0,0 ${0.1 * n},${
                      -1 * r * 0.33
                    }\n\n    H0 V0 Z`
                  );
              })(s, t);
              break;
            case m.HEXAGON:
              !(function (e, t) {
                const n = t.height,
                  r = n / 4,
                  i = t.width - t.padding + 2 * r;
                !(function (e, t, n, r, i) {
                  e.insert("polygon", ":first-child")
                    .attr(
                      "points",
                      r
                        .map(function (e) {
                          return e.x + "," + e.y;
                        })
                        .join(" ")
                    )
                    .attr(
                      "transform",
                      "translate(" + (i.width - t) / 2 + ", " + n + ")"
                    );
                })(
                  e,
                  i,
                  n,
                  [
                    { x: r, y: 0 },
                    { x: i - r, y: 0 },
                    { x: i, y: -n / 2 },
                    { x: i - r, y: -n },
                    { x: r, y: -n },
                    { x: 0, y: -n / 2 },
                  ],
                  t
                );
              })(s, t);
          }
          return b(t.id, a), t.height;
        },
        C = function (e) {
          const t = E(e.id),
            n = e.x || 0,
            r = e.y || 0;
          t.attr("transform", "translate(" + n + "," + r + ")");
        };
      function N(e, t, n, r) {
        D(e, t, n, r),
          t.children &&
            t.children.forEach((t, i) => {
              N(e, t, n < 0 ? i : n, r);
            });
      }
      function A(e, t, n, r) {
        t.add({
          group: "nodes",
          data: {
            id: e.id,
            labelText: e.descr,
            height: e.height,
            width: e.width,
            level: r,
            nodeId: e.id,
            padding: e.padding,
            type: e.type,
          },
          position: { x: e.x, y: e.y },
        }),
          e.children &&
            e.children.forEach((i) => {
              A(i, t, n, r + 1),
                t.add({
                  group: "edges",
                  data: {
                    id: `${e.id}_${i.id}`,
                    source: e.id,
                    target: i.id,
                    depth: r,
                    section: i.section,
                  },
                });
            });
      }
      function L(e, t) {
        return new Promise((n) => {
          const a = (0, i.Ltv)("body")
              .append("div")
              .attr("id", "cy")
              .attr("style", "display:none"),
            s = o()({
              container: document.getElementById("cy"),
              style: [{ selector: "edge", style: { "curve-style": "bezier" } }],
            });
          a.remove(),
            A(e, s, t, 0),
            s.nodes().forEach(function (e) {
              e.layoutDimensions = () => {
                const t = e.data();
                return { w: t.width, h: t.height };
              };
            }),
            s
              .layout({
                name: "cose-bilkent",
                quality: "proof",
                styleEnabled: !1,
                animate: !1,
              })
              .run(),
            s.ready((e) => {
              r.l.info("Ready", e), n(s);
            });
        });
      }
      o().use(l());
      const S = {
        db: T,
        renderer: {
          draw: async (e, t, n, a) => {
            const o = (0, r.g)();
            a.db.clear(),
              a.parser.parse(e),
              r.l.debug("Renering info diagram\n" + e);
            const s = (0, r.g)().securityLevel;
            let l;
            "sandbox" === s && (l = (0, i.Ltv)("#i" + t));
            const u = (
              "sandbox" === s
                ? (0, i.Ltv)(l.nodes()[0].contentDocument.body)
                : (0, i.Ltv)("body")
            ).select("#" + t);
            u.append("g");
            const c = a.db.getMindmap(),
              h = u.append("g");
            h.attr("class", "mindmap-edges");
            const d = u.append("g");
            d.attr("class", "mindmap-nodes"), N(d, c, -1, o);
            const p = await L(c, o);
            !(function (e, t) {
              t.edges().map((t, n) => {
                const i = t.data();
                if (t[0]._private.bodyBounds) {
                  const a = t[0]._private.rscratch;
                  r.l.trace("Edge: ", n, i),
                    e
                      .insert("path")
                      .attr(
                        "d",
                        `M ${a.startX},${a.startY} L ${a.midX},${a.midY} L${a.endX},${a.endY} `
                      )
                      .attr(
                        "class",
                        "edge section-edge-" +
                          i.section +
                          " edge-depth-" +
                          i.depth
                      );
                }
              });
            })(h, p),
              (function (e) {
                e.nodes().map((e, t) => {
                  const n = e.data();
                  (n.x = e.position().x), (n.y = e.position().y), C(n);
                  const i = E(n.nodeId);
                  r.l.info(
                    "Id:",
                    t,
                    "Position: (",
                    e.position().x,
                    ", ",
                    e.position().y,
                    ")",
                    n
                  ),
                    i.attr(
                      "transform",
                      `translate(${e.position().x - n.width / 2}, ${
                        e.position().y - n.height / 2
                      })`
                    ),
                    i.attr("attr", `apa-${t})`);
                });
              })(p),
              (0, r.s)(void 0, u, o.mindmap.padding, o.mindmap.useMaxWidth);
          },
        },
        parser: p,
        styles: (e) =>
          `\n  .edge {\n    stroke-width: 3;\n  }\n  ${((e) => {
            let t = "";
            for (let n = 0; n < e.THEME_COLOR_LIMIT; n++)
              (e["lineColor" + n] = e["lineColor" + n] || e["cScaleInv" + n]),
                (0, u.A)(e["lineColor" + n])
                  ? (e["lineColor" + n] = (0, c.A)(e["lineColor" + n], 20))
                  : (e["lineColor" + n] = (0, h.A)(e["lineColor" + n], 20));
            for (let n = 0; n < e.THEME_COLOR_LIMIT; n++) {
              const r = "" + (17 - 3 * n);
              t += `\n    .section-${n - 1} rect, .section-${
                n - 1
              } path, .section-${n - 1} circle, .section-${
                n - 1
              } polygon, .section-${n - 1} path  {\n      fill: ${
                e["cScale" + n]
              };\n    }\n    .section-${n - 1} text {\n     fill: ${
                e["cScaleLabel" + n]
              };\n    }\n    .node-icon-${
                n - 1
              } {\n      font-size: 40px;\n      color: ${
                e["cScaleLabel" + n]
              };\n    }\n    .section-edge-${n - 1}{\n      stroke: ${
                e["cScale" + n]
              };\n    }\n    .edge-depth-${
                n - 1
              }{\n      stroke-width: ${r};\n    }\n    .section-${
                n - 1
              } line {\n      stroke: ${
                e["cScaleInv" + n]
              } ;\n      stroke-width: 3;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;
            }
            return t;
          })(
            e
          )}\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\n    fill: ${
            e.git0
          };\n  }\n  .section-root text {\n    fill: ${
            e.gitBranchLabel0
          };\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n`,
      };
    },
    74328: (e, t, n) => {
      "use strict";
      n.d(t, { A: () => s });
      var r = n(59622),
        i = n(49173);
      const a = (e) => {
          const { r: t, g: n, b: a } = i.A.parse(e),
            o =
              0.2126 * r.A.channel.toLinear(t) +
              0.7152 * r.A.channel.toLinear(n) +
              0.0722 * r.A.channel.toLinear(a);
          return r.A.lang.round(o);
        },
        o = (e) => a(e) >= 0.5,
        s = (e) => !o(e);
    },
  },
]);
