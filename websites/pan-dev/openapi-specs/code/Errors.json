{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "securitySchemes": {
      "CustomAuthorizer": {
        "in": "header",
        "name": "authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authorizer": {
          "authorizerResultTtlInSeconds": 0,
          "authorizerUri": "arn:aws:apigateway:{Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:{Region}:{AccountId}:function:bc-authorization-v2-authorizer-{UniqueTag}{Alias}/invocations",
          "identitySource": "method.request.header.authorization",
          "type": "request"
        },
        "x-amazon-apigateway-authtype": "custom"
      }
    },
    "schemas": {
      "BasePolicyResponse": {
        "additionalProperties": false,
        "properties": {
          "firstDetected": { "format": "date-time", "type": "string" },
          "policy": { "type": "string" },
          "repository": { "type": "string" },
          "severity": { "$ref": "#/components/schemas/Severity" },
          "violationId": { "type": "string" }
        },
        "required": ["policy", "severity", "firstDetected"],
        "type": "object"
      },
      "BaseViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment"],
        "type": "object"
      },
      "BranchScanFilters": {
        "anyOf": [
          { "$ref": "#/components/schemas/BranchScanScanAllReposFilters" },
          { "$ref": "#/components/schemas/BranchScanMoreThanOneRepoFilters" },
          { "$ref": "#/components/schemas/BranchScanSingleRepoFilters" }
        ]
      },
      "BranchScanMoreThanOneRepoFilters": {
        "additionalProperties": false,
        "properties": {
          "benchmarks": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_BenchmarkEnum_"
            },
            "type": "array"
          },
          "branch": { "type": "string" },
          "checkStatus": { "$ref": "#/components/schemas/CheckStatus" },
          "codeCategories": {
            "items": { "$ref": "#/components/schemas/ProjectsV2CodeCategory" },
            "type": "array"
          },
          "cwes": { "items": { "type": "string" }, "type": "array" },
          "fileTypes": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_FileMetadata-at-type_"
            },
            "type": "array"
          },
          "fixableOnly": { "type": "boolean" },
          "gitUsers": { "items": { "type": "string" }, "type": "array" },
          "iacCategories": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_IncidentConfiguration-at-category_"
            },
            "type": "array"
          },
          "iacLabels": {
            "items": { "$ref": "#/components/schemas/EnumValues_IacLabels_" },
            "type": "array"
          },
          "iacTags": { "items": { "type": "string" }, "type": "array" },
          "licenseType": {
            "items": { "$ref": "#/components/schemas/LicenseEnum" },
            "type": "array"
          },
          "owasp": { "items": { "type": "string" }, "type": "array" },
          "repositories": {
            "items": { "type": "string" },
            "minItems": 2,
            "type": "array"
          },
          "sastLabels": {
            "items": { "$ref": "#/components/schemas/SastLabelValue" },
            "type": "array"
          },
          "secretsRiskFactors": {
            "items": { "$ref": "#/components/schemas/SecretsRiskFactor" },
            "type": "array"
          },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "vulnerabilityRiskFactors": {
            "items": { "$ref": "#/components/schemas/VulnerabilityRiskFactor" },
            "type": "array"
          }
        },
        "required": ["repositories"],
        "type": "object"
      },
      "BranchScanScanAllReposFilters": {
        "additionalProperties": false,
        "properties": {
          "benchmarks": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_BenchmarkEnum_"
            },
            "type": "array"
          },
          "branch": { "type": "string" },
          "checkStatus": { "$ref": "#/components/schemas/CheckStatus" },
          "codeCategories": {
            "items": { "$ref": "#/components/schemas/ProjectsV2CodeCategory" },
            "type": "array"
          },
          "cwes": { "items": { "type": "string" }, "type": "array" },
          "fileTypes": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_FileMetadata-at-type_"
            },
            "type": "array"
          },
          "fixableOnly": { "type": "boolean" },
          "gitUsers": { "items": { "type": "string" }, "type": "array" },
          "iacCategories": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_IncidentConfiguration-at-category_"
            },
            "type": "array"
          },
          "iacLabels": {
            "items": { "$ref": "#/components/schemas/EnumValues_IacLabels_" },
            "type": "array"
          },
          "iacTags": { "items": { "type": "string" }, "type": "array" },
          "licenseType": {
            "items": { "$ref": "#/components/schemas/LicenseEnum" },
            "type": "array"
          },
          "owasp": { "items": { "type": "string" }, "type": "array" },
          "repositories": {
            "items": { "type": "string" },
            "maxItems": 0,
            "minItems": 0,
            "type": "array"
          },
          "sastLabels": {
            "items": { "$ref": "#/components/schemas/SastLabelValue" },
            "type": "array"
          },
          "secretsRiskFactors": {
            "items": { "$ref": "#/components/schemas/SecretsRiskFactor" },
            "type": "array"
          },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "vulnerabilityRiskFactors": {
            "items": { "$ref": "#/components/schemas/VulnerabilityRiskFactor" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BranchScanSingleRepoFilters": {
        "additionalProperties": false,
        "properties": {
          "benchmarks": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_BenchmarkEnum_"
            },
            "type": "array"
          },
          "branch": { "type": "string" },
          "checkStatus": { "$ref": "#/components/schemas/CheckStatus" },
          "codeCategories": {
            "items": { "$ref": "#/components/schemas/ProjectsV2CodeCategory" },
            "type": "array"
          },
          "cwes": { "items": { "type": "string" }, "type": "array" },
          "fileTypes": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_FileMetadata-at-type_"
            },
            "type": "array"
          },
          "fixableOnly": { "type": "boolean" },
          "gitUsers": { "items": { "type": "string" }, "type": "array" },
          "iacCategories": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_IncidentConfiguration-at-category_"
            },
            "type": "array"
          },
          "iacLabels": {
            "items": { "$ref": "#/components/schemas/EnumValues_IacLabels_" },
            "type": "array"
          },
          "iacTags": { "items": { "type": "string" }, "type": "array" },
          "licenseType": {
            "items": { "$ref": "#/components/schemas/LicenseEnum" },
            "type": "array"
          },
          "owasp": { "items": { "type": "string" }, "type": "array" },
          "repositories": {
            "items": { "type": "string" },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "sastLabels": {
            "items": { "$ref": "#/components/schemas/SastLabelValue" },
            "type": "array"
          },
          "secretsRiskFactors": {
            "items": { "$ref": "#/components/schemas/SecretsRiskFactor" },
            "type": "array"
          },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "vulnerabilityRiskFactors": {
            "items": { "$ref": "#/components/schemas/VulnerabilityRiskFactor" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CICDCve": {
        "additionalProperties": false,
        "properties": {
          "CICDRunId": { "format": "double", "type": "number" },
          "bulkSuppression": { "type": "boolean" },
          "id": { "type": "string" },
          "justification": { "$ref": "#/components/schemas/Justification" },
          "repository": { "type": "string" },
          "resourceId": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "id",
          "violationId",
          "resourceId",
          "CICDRunId",
          "repository"
        ],
        "type": "object"
      },
      "CICDLicenseToSuppress": {
        "additionalProperties": false,
        "properties": {
          "bulkSuppression": { "type": "boolean" },
          "causePackageId": { "type": "string" },
          "fileId": { "type": "string" },
          "justification": { "$ref": "#/components/schemas/Justification" },
          "license": { "type": "string" },
          "repository": { "type": "string" },
          "rootPackageId": { "type": "string" },
          "run": { "format": "double", "type": "number" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "justification",
          "causePackageId",
          "rootPackageId",
          "license",
          "run",
          "bulkSuppression",
          "repository",
          "fileId"
        ],
        "type": "object"
      },
      "CICDViolation": {
        "additionalProperties": false,
        "properties": {
          "CICDRunId": { "format": "double", "type": "number" },
          "bulkSuppression": { "type": "boolean" },
          "commentIds": { "items": { "type": "string" }, "type": "array" },
          "creationDate": { "type": "string" },
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "frameworkType": { "type": "string" },
          "justification": { "$ref": "#/components/schemas/Justification" },
          "justificationId": { "nullable": true, "type": "string" },
          "metadataChecksMetadataPath": { "type": "string" },
          "metadataLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "repository": { "type": "string" },
          "resourceId": { "type": "string" },
          "runtimeId": { "nullable": true, "type": "string" },
          "runtimeSourceId": { "nullable": true, "type": "string" },
          "s3FilePath": { "type": "string" },
          "s3FixFilePath": { "nullable": true, "type": "string" },
          "severity": { "type": "string" },
          "status": { "type": "string" },
          "updatedDate": { "type": "string" },
          "vcsCommentLine": { "nullable": true, "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "metadataChecksMetadataPath",
          "metadataLines",
          "violationId",
          "resourceId",
          "frameworkType",
          "s3FilePath",
          "CICDRunId",
          "justificationId",
          "status",
          "repository",
          "s3FixFilePath",
          "creationDate",
          "updatedDate",
          "commentIds",
          "vcsCommentLine",
          "errorLines",
          "severity"
        ],
        "type": "object"
      },
      "CVE": {
        "additionalProperties": false,
        "properties": {
          "causePackageId": { "type": "string" },
          "causePackageName": { "type": "string" },
          "causePackageVersion": { "type": "string" },
          "cveId": { "type": "string" },
          "cveStatus": { "type": "string" },
          "cvss": { "format": "double", "type": "number" },
          "description": { "type": "string" },
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "fixVersion": { "type": "string" },
          "imageName": { "type": "string" },
          "link": { "type": "string" },
          "packageName": { "type": "string" },
          "packageVersion": { "type": "string" },
          "publishedDate": { "format": "date-time", "type": "string" },
          "riskFactors": { "type": "string" },
          "severity": { "type": "string" },
          "status": { "type": "string" },
          "uuid": { "type": "string" },
          "vector": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "cveId",
          "status",
          "cvss",
          "vector",
          "description",
          "severity",
          "packageName",
          "packageVersion",
          "riskFactors",
          "link",
          "publishedDate",
          "causePackageId",
          "causePackageName",
          "causePackageVersion",
          "fixVersion",
          "uuid",
          "cveStatus",
          "violationId"
        ],
        "type": "object"
      },
      "Category": {
        "enum": [
          "IAM",
          "Compute",
          "Monitoring",
          "Networking",
          "Kubernetes",
          "General",
          "Storage",
          "Secrets",
          "Public",
          "Vulnerabilities",
          "Drift",
          "BuildIntegrity",
          "Licenses"
        ],
        "type": "string"
      },
      "CheckStatus": {
        "enum": ["Error", "Passed", "Suppressed", "FixPending"],
        "type": "string"
      },
      "CicdRunsFilters": {
        "additionalProperties": false,
        "properties": {
          "benchmarks": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_BenchmarkEnum_"
            },
            "type": "array"
          },
          "checkStatus": { "$ref": "#/components/schemas/CheckStatus" },
          "codeCategories": {
            "items": { "$ref": "#/components/schemas/ProjectsV2CodeCategory" },
            "type": "array"
          },
          "cwes": { "items": { "type": "string" }, "type": "array" },
          "enforcementLevel": {
            "items": { "$ref": "#/components/schemas/ScanStatuses" },
            "type": "array"
          },
          "fileTypes": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_FileMetadata-at-type_"
            },
            "type": "array"
          },
          "fixableOnly": { "type": "boolean" },
          "gitUsers": { "items": { "type": "string" }, "type": "array" },
          "iacCategories": {
            "items": {
              "$ref": "#/components/schemas/EnumValues_IncidentConfiguration-at-category_"
            },
            "type": "array"
          },
          "iacLabels": {
            "items": { "$ref": "#/components/schemas/EnumValues_IacLabels_" },
            "type": "array"
          },
          "iacTags": { "items": { "type": "string" }, "type": "array" },
          "licenseType": {
            "items": { "$ref": "#/components/schemas/LicenseEnum" },
            "type": "array"
          },
          "owasp": { "items": { "type": "string" }, "type": "array" },
          "repositories": {
            "items": { "type": "string" },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "runId": { "format": "double", "type": "number" },
          "sastLabels": {
            "items": { "$ref": "#/components/schemas/SastLabelValue" },
            "type": "array"
          },
          "secretsRiskFactors": {
            "items": { "$ref": "#/components/schemas/SecretsRiskFactor" },
            "type": "array"
          },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "vulnerabilityRiskFactors": {
            "items": { "$ref": "#/components/schemas/VulnerabilityRiskFactor" },
            "type": "array"
          }
        },
        "required": ["runId"],
        "type": "object"
      },
      "CodeStatus": { "enum": ["hasFix"], "nullable": false, "type": "string" },
      "CvesAccountsViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "accountIds": { "items": { "type": "string" }, "type": "array" },
          "comment": { "type": "string" },
          "cves": { "items": { "type": "string" }, "type": "array" },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "suppressionType",
          "comment",
          "accountIds",
          "cves"
        ],
        "type": "object"
      },
      "CvesViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "accountIds": { "items": { "type": "string" }, "type": "array" },
          "comment": { "type": "string" },
          "cves": {
            "items": {
              "properties": {
                "cve": { "type": "string" },
                "id": { "type": "string" },
                "uuid": { "type": "string" }
              },
              "required": ["uuid", "id", "cve"],
              "type": "object"
            },
            "type": "array"
          },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment", "cves"],
        "type": "object"
      },
      "DefaultBranchViolationToFix": {
        "additionalProperties": false,
        "properties": {
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "fixPath": { "nullable": true, "type": "string" },
          "fixedCode": { "nullable": true, "type": "string" },
          "fixes": {
            "items": { "$ref": "#/components/schemas/SmartFix" },
            "type": "array"
          },
          "frameworkType": { "type": "string" },
          "fullId": { "type": "string" },
          "inspectedKey": { "nullable": true, "type": "string" },
          "metadataChecksMetadataPath": { "type": "string" },
          "metadataLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "owner": { "type": "string" },
          "repoName": { "type": "string" },
          "resourceCode": { "nullable": true, "type": "string" },
          "resourceId": { "type": "string" },
          "runtimeId": { "nullable": true, "type": "string" },
          "runtimeSourceId": { "nullable": true, "type": "string" },
          "s3FilePath": { "type": "string" },
          "selectedFix": { "nullable": true, "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "metadataChecksMetadataPath",
          "metadataLines",
          "violationId",
          "resourceId",
          "frameworkType",
          "s3FilePath",
          "owner",
          "repoName",
          "fullId"
        ],
        "type": "object"
      },
      "EnumValues_BenchmarkEnum_": {
        "enum": [
          "CIS KUBERNETES V1.5",
          "CIS AWS V1.2",
          "CIS AZURE V1.1",
          "PCI-DSS V3.2",
          "NIST-800-53",
          "ISO27001",
          "SOC2",
          "CIS GCP V1.1",
          "HIPAA",
          "FEDRAMP (MODERATE)",
          "PCI-DSS V3.2.1",
          "CIS AWS V1.3",
          "CIS AZURE V1.3",
          "CIS DOCKER V1.2",
          "CIS EKS V1.1",
          "CIS GKE V1.1",
          "CIS KUBERNETES V1.6",
          "SLSA"
        ],
        "nullable": false,
        "type": "string"
      },
      "EnumValues_FileMetadata-at-type_": {
        "enum": [
          "build.gradle",
          "gradle.properties",
          "build.gradle.kts",
          "pom.xml",
          "requirements.txt",
          "package-lock.json",
          "package.json",
          "bower.json",
          "go.sum",
          "go.mod",
          "tf",
          "json",
          "yml",
          "yaml",
          "template",
          ".checkov.baseline",
          "hcl",
          "Dockerfile",
          "gradle-wrapper.properties",
          "METADATA",
          "bicep",
          "Pipfile.lock",
          "Pipfile",
          "yarn.lock",
          "Gemfile",
          "Gemfile.lock",
          "gemspec",
          "env",
          "settings.py",
          "main.py",
          "application.py",
          "config.py",
          "app.js",
          "config.js",
          "dev.js",
          "db.properties",
          "application.properties",
          "private.pem",
          "privatekey.pem",
          "index.php",
          "config.php",
          "config.xml",
          "strings.xml",
          "app.module.ts",
          "environment.ts",
          "tpl",
          "tfvars",
          "unknown",
          "csproj",
          "packages.config",
          "Directory.Packages.props",
          "paket.dependencies",
          "paket.references",
          "paket.lock",
          "sln",
          "config",
          "composer.json",
          "composer.lock"
        ],
        "nullable": false,
        "type": "string"
      },
      "EnumValues_IacLabels_": {
        "enum": ["CustomPolicy", "HasFix"],
        "nullable": false,
        "type": "string"
      },
      "EnumValues_IncidentConfiguration-at-category_": {
        "enum": [
          "IAM",
          "Compute",
          "Monitoring",
          "Networking",
          "Kubernetes",
          "General",
          "Storage",
          "Secrets",
          "Public",
          "Vulnerabilities",
          "Drift",
          "BuildIntegrity",
          "Licenses",
          "Logging",
          "Serverless",
          "Elasticsearch",
          "VCS",
          "Policy3D",
          "Sast",
          "Artifact Integrity Validation",
          "Cider Kill Chain",
          "Credential Hygiene",
          "Data Protection",
          "Dependency Chain Abuse",
          "Dependency Chains",
          "Flow Control Mechanisms",
          "Input Validation",
          "Patches & Updates",
          "Pipeline-Based Access Controls (PBAC)",
          "Pipeline Flow Control",
          "Poisoned Pipeline Execution (PPE)",
          "System Configuration",
          "Supply Chain"
        ],
        "nullable": false,
        "type": "string"
      },
      "ErrorInFile": {
        "additionalProperties": false,
        "properties": {
          "author": { "type": "string" },
          "category": { "$ref": "#/components/schemas/IncidentCategory" },
          "commitHash": { "type": "string" },
          "date": { "format": "date-time", "type": "string" },
          "errorId": { "type": "string" },
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "fileMetadataUuid": { "type": "string" },
          "filePath": { "type": "string" },
          "fixPath": { "type": "string" },
          "frameworkType": { "type": "string" },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "metadataChecksMetadataPath": { "type": "string" },
          "module": { "$ref": "#/components/schemas/module" },
          "resourceCode": { "type": "string" },
          "resourceFixCode": { "type": "string" },
          "resourceId": { "type": "string" },
          "resourceType": { "type": "string" },
          "resourceUuid": { "type": "string" },
          "runtimeFrameworkType": { "type": "string" },
          "runtimeId": { "type": "string" },
          "runtimeSourceId": { "type": "string" },
          "s3FilePath": { "type": "string" },
          "scannerType": { "type": "string" },
          "secretValidationStatus": {
            "$ref": "#/components/schemas/SecretValidationStatus"
          },
          "sourceType": { "$ref": "#/components/schemas/SourceType" },
          "status": { "type": "string" },
          "variableCode": { "type": "string" },
          "variableFixCode": { "type": "string" },
          "variableRendering": {
            "$ref": "#/components/schemas/VariableRendering"
          }
        },
        "required": [
          "filePath",
          "resourceId",
          "resourceCode",
          "resourceType",
          "fixPath",
          "errorId",
          "lines",
          "status",
          "scannerType",
          "sourceType",
          "metadataChecksMetadataPath",
          "frameworkType",
          "variableRendering",
          "module",
          "errorLines",
          "author",
          "commitHash",
          "date",
          "runtimeId",
          "runtimeSourceId",
          "fileMetadataUuid",
          "category",
          "secretValidationStatus"
        ],
        "type": "object"
      },
      "ErrorType": {
        "enum": ["violation", "dockerCve", "packageCve", "organization"],
        "type": "string"
      },
      "ErrorsInFileCount": {
        "additionalProperties": false,
        "properties": {
          "awaitingRemediationCount": { "format": "double", "type": "number" },
          "errorsCount": { "format": "double", "type": "number" },
          "filePath": { "type": "string" },
          "fixedCount": { "format": "double", "type": "number" },
          "openErrorsCount": { "format": "double", "type": "number" },
          "passedCount": { "format": "double", "type": "number" },
          "suppressedErrorsCount": { "format": "double", "type": "number" },
          "type": { "$ref": "#/components/schemas/ErrorType" }
        },
        "required": [
          "filePath",
          "errorsCount",
          "openErrorsCount",
          "suppressedErrorsCount",
          "passedCount",
          "fixedCount",
          "awaitingRemediationCount",
          "type"
        ],
        "type": "object"
      },
      "ErrorsInFileWithPaginationResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ViolationError" },
            "type": "array"
          },
          "hasNext": { "type": "boolean" }
        },
        "required": ["data", "hasNext"],
        "type": "object"
      },
      "ErrorsPoliciesGroupedByResource": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PoliciesByResourceAndTypeResponse"
            },
            "type": "array"
          },
          "hasNext": { "type": "boolean" }
        },
        "required": ["data", "hasNext"],
        "type": "object"
      },
      "FileMetadataWithErrors": {
        "additionalProperties": false,
        "properties": {
          "commitId": { "type": "string" },
          "creationDate": { "type": "string" },
          "errorsCount": { "format": "double", "type": "number" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "prId": { "type": "string" },
          "repositoryId": { "type": "string" },
          "type": { "$ref": "#/components/schemas/FileTypeEnum" },
          "updatedDate": { "type": "string" }
        },
        "required": [
          "id",
          "name",
          "type",
          "commitId",
          "prId",
          "path",
          "repositoryId",
          "creationDate",
          "updatedDate"
        ],
        "type": "object"
      },
      "FileTypeEnum": {
        "enum": [
          "build.gradle",
          "gradle.properties",
          "build.gradle.kts",
          "pom.xml",
          "requirements.txt",
          "package-lock.json",
          "package.json",
          "bower.json",
          "go.sum",
          "go.mod",
          "tf",
          "json",
          "yml",
          "yaml",
          "template",
          ".checkov.baseline",
          "hcl",
          "Dockerfile",
          "gradle-wrapper.properties",
          "METADATA",
          "bicep",
          "Pipfile.lock",
          "Pipfile",
          "yarn.lock",
          "Gemfile",
          "Gemfile.lock",
          "gemspec",
          "env",
          "settings.py",
          "main.py",
          "application.py",
          "config.py",
          "app.js",
          "config.js",
          "dev.js",
          "db.properties",
          "application.properties",
          "private.pem",
          "privatekey.pem",
          "index.php",
          "config.php",
          "config.xml",
          "strings.xml",
          "app.module.ts",
          "environment.ts",
          "tpl",
          "tfvars",
          "unknown",
          "csproj",
          "packages.config",
          "Directory.Packages.props",
          "paket.dependencies",
          "paket.references",
          "paket.lock",
          "sln",
          "config",
          "composer.json",
          "composer.lock"
        ],
        "type": "string"
      },
      "GetErrorsFilesResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ErrorsInFileCount" },
            "type": "array"
          }
        },
        "required": ["data"],
        "type": "object"
      },
      "GetErrorsFilters": {
        "additionalProperties": false,
        "properties": {
          "CICDRunId": { "format": "double", "type": "number" },
          "authors": { "items": { "type": "string" }, "type": "array" },
          "branch": { "nullable": true, "type": "string" },
          "categories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "codeStatus": {
            "items": { "$ref": "#/components/schemas/CodeStatus" },
            "type": "array"
          },
          "excludeCategories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "fileTypes": {
            "items": { "$ref": "#/components/schemas/ProjectFileType" },
            "type": "array"
          },
          "repository": { "type": "string" },
          "repositoryId": { "type": "string" },
          "search": { "$ref": "#/components/schemas/Search" },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "sourceTypes": {
            "items": { "$ref": "#/components/schemas/SourceType" },
            "type": "array"
          },
          "tags": {
            "items": {
              "properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          },
          "types": {
            "items": { "$ref": "#/components/schemas/Type" },
            "type": "array"
          }
        },
        "required": ["repository", "sourceTypes"],
        "type": "object"
      },
      "GetErrorsInFileWithFilters": {
        "additionalProperties": false,
        "properties": {
          "CICDRunId": { "format": "double", "type": "number" },
          "authors": { "items": { "type": "string" }, "type": "array" },
          "branch": { "nullable": true, "type": "string" },
          "categories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "codeStatus": {
            "items": { "$ref": "#/components/schemas/CodeStatus" },
            "type": "array"
          },
          "excludeCategories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "filePath": { "type": "string" },
          "fileTypes": {
            "items": { "$ref": "#/components/schemas/ProjectFileType" },
            "type": "array"
          },
          "repository": { "type": "string" },
          "repositoryId": { "type": "string" },
          "search": { "$ref": "#/components/schemas/Search" },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "sourceTypes": {
            "items": { "$ref": "#/components/schemas/SourceType" },
            "type": "array"
          },
          "tags": {
            "items": {
              "properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          },
          "types": {
            "items": { "$ref": "#/components/schemas/Type" },
            "type": "array"
          }
        },
        "required": ["repository", "sourceTypes", "filePath"],
        "type": "object"
      },
      "GetFileMetadataResponse": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/FileMetadataWithErrors" }
        },
        "required": ["data"],
        "type": "object"
      },
      "GitBlameAuthorsRequestBody": {
        "additionalProperties": false,
        "properties": {
          "repositories": { "items": { "type": "string" }, "type": "array" }
        },
        "type": "object"
      },
      "GitBlameAuthorsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": { "items": { "type": "string" }, "type": "array" },
          "hasNext": { "type": "boolean" }
        },
        "required": ["data", "hasNext"],
        "type": "object"
      },
      "IacLabels": { "enum": ["CustomPolicy", "HasFix"], "type": "string" },
      "IacPolicyResponse": {
        "additionalProperties": false,
        "properties": {
          "firstDetected": { "format": "date-time", "type": "string" },
          "labels": {
            "items": { "$ref": "#/components/schemas/IacLabels" },
            "type": "array"
          },
          "policy": { "type": "string" },
          "repository": { "type": "string" },
          "resourceName": { "type": "string" },
          "resourceScanType": {
            "$ref": "#/components/schemas/ResourceScanType"
          },
          "resourceUuid": { "type": "string" },
          "severity": { "$ref": "#/components/schemas/Severity" },
          "violationId": { "type": "string" }
        },
        "required": ["policy", "severity", "firstDetected", "labels"],
        "type": "object"
      },
      "ImageLabelsValue": {
        "enum": ["Dockerfile Image", "Image Referencer"],
        "type": "string"
      },
      "IncidentCategory": {
        "enum": [
          "IAM",
          "Logging",
          "Monitoring",
          "Networking",
          "Kubernetes",
          "General",
          "Serverless",
          "Elasticsearch",
          "Storage",
          "Secrets",
          "Public",
          "Vulnerabilities",
          "Compute",
          "VCS",
          "BuildIntegrity",
          "Licenses",
          "Drift",
          "Policy3D",
          "Sast",
          "Artifact Integrity Validation",
          "Cider Kill Chain",
          "Credential Hygiene",
          "Data Protection",
          "Dependency Chain Abuse",
          "Dependency Chains",
          "Flow Control Mechanisms",
          "Input Validation",
          "Patches & Updates",
          "Pipeline-Based Access Controls (PBAC)",
          "Pipeline Flow Control",
          "Poisoned Pipeline Execution (PPE)",
          "System Configuration",
          "Supply Chain"
        ],
        "type": "string"
      },
      "Justification": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "createdBy": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" }
        },
        "required": ["comment", "createdBy"],
        "type": "object"
      },
      "LicLabel": {
        "properties": {
          "label": {
            "anyOf": [
              { "$ref": "#/components/schemas/ImageLabelsValue" },
              { "$ref": "#/components/schemas/PacakgeLabelsValue" }
            ]
          },
          "metadata": {
            "properties": { "imageName": { "type": "string" } },
            "type": "object"
          }
        },
        "required": ["label"],
        "type": "object"
      },
      "License": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "license": { "type": "string" },
          "packageId": { "type": "string" },
          "packageName": { "type": "string" },
          "packageVersion": { "type": "string" },
          "parentId": { "type": "string" },
          "status": { "type": "string" }
        },
        "required": [
          "id",
          "status",
          "license",
          "parentId",
          "packageId",
          "packageName",
          "packageVersion"
        ],
        "type": "object"
      },
      "LicenseEnum": {
        "enum": [
          "OSI_APACHE",
          "OSI_ARTISTIC",
          "OSI_BSD",
          "OSI_EFL",
          "OSI_FDL",
          "OSI_LGPL",
          "OSI_ZPL",
          "CC-BY-SA-2.1-JP",
          "GPL-2.0-or-later",
          "AMDPLPA",
          "CC-BY-SA-3.0-DE",
          "ECL-2.0",
          "EPICS",
          "eCos-2.0",
          "GPL-3.0-with-GCC-exception",
          "KiCad-libraries-exception",
          "GFDL-1.3-invariants-or-later",
          "APSL-1.1",
          "MIT",
          "CC-BY-NC-ND-3.0-DE",
          "GPL-3.0",
          "CC-BY-SA-1.0",
          "ADSL",
          "MIT-CMU",
          "Linux-man-pages-copyleft",
          "diffmark",
          "GPL-2.0",
          "HPND",
          "OSL-1.0",
          "ClArtistic",
          "IJG",
          "IPL-1.0",
          "NCGL-UK-2.0",
          "CC-BY-2.5",
          "LGPL-3.0-or-later",
          "LiLiQ-Rplus-1.1",
          "CC0-1.0",
          "Glide",
          "ImageMagick",
          "CECILL-1.1",
          "AGPL-3.0-only",
          "eGenix",
          "ANTLR-PD",
          "CC-BY-NC-SA-4.0",
          "CECILL-C",
          "GFDL-1.3-no-invariants-only",
          "SHL-0.5",
          "MIT-Modern-Variant",
          "CC-BY-3.0-NL",
          "MIT-feh",
          "SMLNJ",
          "CC-BY-ND-2.0",
          "HaskellReport",
          "AGPL-1.0",
          "BitTorrent-1.0",
          "CDL-1.0",
          "SISSL",
          "CC-BY-SA-3.0",
          "C-UDA-1.0",
          "YPL-1.1",
          "AGPL-1.0-or-later",
          "NLOD-2.0",
          "Unlicense",
          "D-FSL-1.0",
          "Linux-OpenIB",
          "GPL-1.0-only",
          "libtiff",
          "Plexus",
          "BSD-1-Clause",
          "MPL-2.0",
          "Intel-ACPI",
          "Barr",
          "OGL-Canada-2.0",
          "ANTLR-PD-fallback",
          "Zed",
          "MIT-open-group",
          "LGPL-2.1-or-later",
          "mpich2",
          "Motosoto",
          "OGDL-Taiwan-1.0",
          "PDDL-1.0",
          "GFDL-1.3-invariants-only",
          "EUPL-1.1",
          "EUPL-1.0",
          "Entessa",
          "CC-BY-NC-ND-2.0",
          "W3C",
          "GFDL-1.2-no-invariants-or-later",
          "Saxpath",
          "GFDL-1.3-only",
          "FreeImage",
          "CNRI-Python",
          "Apache-1.0",
          "OLDAP-1.4",
          "JSON",
          "GPL-3.0-or-later",
          "DSDP",
          "MPL-2.0-no-copyleft-exception",
          "Condor-1.1",
          "Imlib2",
          "iMatix",
          "OLDAP-2.6",
          "Rdisc",
          "LiLiQ-P-1.1",
          "xpp",
          "FDK-AAC",
          "CC-BY-NC-3.0",
          "Jam",
          "GFDL-1.3-no-invariants-or-later",
          "GFDL-1.3-or-later",
          "ICU",
          "LGPL-2.1",
          "AFL-2.1",
          "JasPer-2.0",
          "SSPL-1.0",
          "CC-BY-SA-2.0",
          "BSD-3-Clause-Clear",
          "OSL-2.0",
          "CC-BY-SA-4.0",
          "SISSL-1.2",
          "ODC-By-1.0",
          "ZPL-2.1",
          "QPL-1.0",
          "LGPL-2.0-only",
          "CC-BY-SA-2.5",
          "Zimbra-1.3",
          "MTLL",
          "Eurosym",
          "NPL-1.0",
          "blessing",
          "GFDL-1.3",
          "GPL-1.0+",
          "GFDL-1.1-no-invariants-only",
          "CC-BY-NC-ND-3.0",
          "Xerox",
          "Unicode-TOU",
          "Aladdin",
          "CC-BY-NC-SA-2.5",
          "Artistic-1.0",
          "BSL-1.0",
          "CC-BY-ND-2.5",
          "NetCDF",
          "MulanPSL-2.0",
          "UCL-1.0",
          "PostgreSQL",
          "GFDL-1.1-only",
          "RHeCos-1.1",
          "Sendmail-8.23",
          "psfrag",
          "SNIA",
          "EPL-2.0",
          "0BSD",
          "MPL-1.0",
          "GFDL-1.1-or-later",
          "XFree86-1.1",
          "WTFPL",
          "CDLA-Sharing-1.0",
          "CAL-1.0",
          "CERN-OHL-S-2.0",
          "CC-BY-NC-SA-3.0-DE",
          "CC-BY-NC-1.0",
          "Artistic-2.0",
          "BUSL-1.1",
          "EUPL-1.2",
          "GPL-2.0-with-font-exception",
          "LGPL-2.0+",
          "AGPL-1.0-only",
          "SGI-B-1.0",
          "W3C-20150513",
          "Adobe-2006",
          "xinetd",
          "BSD-3-Clause-No-Military-License",
          "DRL-1.0",
          "LGPL-2.0",
          "MirOS",
          "PolyForm-Small-Business-1.0.0",
          "CDLA-Permissive-2.0",
          "LiLiQ-R-1.1",
          "Vim",
          "curl",
          "OLDAP-2.2.2",
          "CATOSL-1.1",
          "CC-BY-ND-4.0",
          "CC-BY-NC-SA-2.0-UK",
          "APSL-1.0",
          "GPL-2.0-with-classpath-exception",
          "OLDAP-2.0.1",
          "NIST-PD-fallback",
          "Glulxe",
          "NPL-1.1",
          "CC-BY-NC-ND-1.0",
          "CC-BY-NC-2.5",
          "Parity-6.0.0",
          "CC-BY-NC-SA-3.0-IGO",
          "CPAL-1.0",
          "CC-BY-2.5-AU",
          "SWL",
          "LAL-1.2",
          "NRL",
          "OGL-UK-3.0",
          "MS-RL",
          "OSL-2.1",
          "LPL-1.0",
          "OSET-PL-2.1",
          "OFL-1.0-no-RFN",
          "OML",
          "Arphic-1999",
          "BSD-2-Clause",
          "MulanPSL-1.0",
          "EPL-1.0",
          "BSD-4-Clause-Shortened",
          "Elastic-2.0",
          "NLPL",
          "LPPL-1.2",
          "SchemeReport",
          "Multics",
          "Net-SNMP",
          "SHL-0.51",
          "MIT-advertising",
          "GPL-3.0-with-autoconf-exception",
          "MS-PL",
          "wxWindows",
          "ZPL-1.1",
          "ISC",
          "CC-BY-NC-SA-3.0",
          "GPL-2.0-only",
          "Giftware",
          "CPL-1.0",
          "EUDatagrid",
          "SGI-B-1.1",
          "CC-BY-1.0",
          "bzip2-1.0.5",
          "libselinux-1.0",
          "SMPPL",
          "Latex2e",
          "Watcom-1.0",
          "VSL-1.0",
          "CC-BY-NC-SA-1.0",
          "FreeBSD-DOC",
          "Nunit",
          "LPPL-1.0",
          "OLDAP-2.4",
          "TAPR-OHL-1.0",
          "OLDAP-2.3",
          "CECILL-2.0",
          "LPPL-1.3a",
          "Qhull",
          "CNRI-Python-GPL-Compatible",
          "Frameworx-1.0",
          "CDLA-Permissive-1.0",
          "X11-distribute-modifications-variant",
          "EFL-1.0",
          "DOC",
          "GFDL-1.2-or-later",
          "BSD-3-Clause-No-Nuclear-License",
          "LPPL-1.1",
          "CC-BY-3.0-US",
          "TOSL",
          "Spencer-99",
          "copyleft-next-0.3.1",
          "FSFAP",
          "CC-BY-NC-ND-4.0",
          "OLDAP-2.8",
          "Bahyph",
          "Newsletr",
          "CC-BY-NC-4.0",
          "OFL-1.1",
          "TU-Berlin-2.0",
          "GFDL-1.2-invariants-or-later",
          "BSD-2-Clause-NetBSD",
          "Crossword",
          "YPL-1.0",
          "GPL-2.0-with-bison-exception",
          "NIST-PD",
          "IPA",
          "GFDL-1.1-invariants-or-later",
          "CC-BY-NC-ND-3.0-IGO",
          "BSD-Source-Code",
          "BitTorrent-1.1",
          "AFL-3.0",
          "Zend-2.0",
          "GFDL-1.1",
          "HPND-sell-variant",
          "Abstyles",
          "Interbase-1.0",
          "MakeIndex",
          "EFL-2.0",
          "LPL-1.02",
          "OLDAP-2.2",
          "LGPL-3.0-only",
          "LPPL-1.3c",
          "libpng-2.0",
          "Hippocratic-2.1",
          "BSD-3-Clause-No-Nuclear-License-2014",
          "AAL",
          "NOSL",
          "CC-BY-3.0-AT",
          "HTMLTIDY",
          "GPL-1.0-or-later",
          "RPL-1.5",
          "BSD-4-Clause-UC",
          "Wsuipa",
          "Cube",
          "SCEA",
          "IBM-pibs",
          "Borceux",
          "CC-BY-ND-3.0-DE",
          "CC-BY-NC-SA-2.0-FR",
          "Afmparse",
          "CUA-OPL-1.0",
          "CC-BY-SA-3.0-AT",
          "LGPL-2.1+",
          "OLDAP-2.7",
          "GLWTPL",
          "CC-BY-NC-SA-2.0",
          "OCCT-PL",
          "CNRI-Jython",
          "Leptonica",
          "OFL-1.0-RFN",
          "OpenSSL",
          "RSA-MD",
          "TORQUE-1.1",
          "X11",
          "BSD-Protection",
          "JPNIC",
          "App-s2p",
          "GFDL-1.2-only",
          "CPOL-1.02",
          "CC-BY-ND-3.0",
          "GPL-1.0",
          "Zlib",
          "Python-2.0",
          "OLDAP-1.3",
          "Mup",
          "LGPLLR",
          "CC-BY-4.0",
          "OCLC-2.0",
          "OGTSL",
          "DL-DE-BY-2.0",
          "OFL-1.0",
          "GFDL-1.2-invariants-only",
          "Sendmail",
          "CC-BY-NC-3.0-DE",
          "VOSTROM",
          "Beerware",
          "FSFULLR",
          "Fair",
          "BSD-2-Clause-FreeBSD",
          "Community-Spec-1.0",
          "SSH-short",
          "FSFUL",
          "GFDL-1.1-no-invariants-or-later",
          "CrystalStacker",
          "GFDL-1.1-invariants-only",
          "Ruby",
          "BSD-3-Clause-Open-MPI",
          "Baekmuk",
          "Libpng",
          "GD",
          "OLDAP-2.1",
          "Sleepycat",
          "CERN-OHL-P-2.0",
          "GFDL-1.2",
          "CC-BY-2.0",
          "SPL-1.0",
          "OLDAP-1.2",
          "etalab-2.0",
          "TMate",
          "NCSA",
          "NBPL-1.0",
          "Intel",
          "GPL-3.0-only",
          "APSL-2.0",
          "GPL-2.0-with-autoconf-exception",
          "TU-Berlin-1.0",
          "Noweb",
          "SSH-OpenSSH",
          "BSD-3-Clause-Attribution",
          "PSF-2.0",
          "psutils",
          "CERN-OHL-1.2",
          "SimPL-2.0",
          "OLDAP-2.2.1",
          "SGI-B-2.0",
          "GPL-2.0+",
          "COIL-1.0",
          "Naumen",
          "CC-BY-ND-1.0",
          "Unicode-DFS-2016",
          "AFL-1.2",
          "OSL-3.0",
          "OFL-1.1-RFN",
          "SAX-PD",
          "Xnet",
          "AML",
          "Apache-1.1",
          "NAIST-2003",
          "NGPL",
          "ZPL-2.0",
          "OFL-1.1-no-RFN",
          "APSL-1.2",
          "MPL-1.1",
          "BlueOak-1.0.0",
          "Unicode-DFS-2015",
          "PHP-3.01",
          "GL2PS",
          "NTP-0",
          "BSD-4-Clause",
          "TCL",
          "RSCPL",
          "MIT-enna",
          "CERN-OHL-1.1",
          "OSL-1.1",
          "BSD-3-Clause-LBNL",
          "Bitstream-Vera",
          "Adobe-Glyph",
          "MITNFA",
          "CC-BY-3.0-DE",
          "CECILL-1.0",
          "SugarCRM-1.1.3",
          "CAL-1.0-Combined-Work-Exception",
          "BSD-3-Clause",
          "Info-ZIP",
          "LGPL-3.0+",
          "Zimbra-1.4",
          "zlib-acknowledgement",
          "Spencer-94",
          "MIT-0",
          "AGPL-3.0",
          "CC-PDDC",
          "CC-BY-NC-2.0",
          "mplus",
          "ODbL-1.0",
          "RPSL-1.0",
          "APAFML",
          "OGL-UK-1.0",
          "CDDL-1.1",
          "bzip2-1.0.6",
          "LGPL-2.1-only",
          "OGC-1.0",
          "BSD-3-Clause-No-Nuclear-Warranty",
          "ErlPL-1.1",
          "ECL-1.0",
          "CERN-OHL-W-2.0",
          "OGL-UK-2.0",
          "O-UDA-1.0",
          "NTP",
          "NASA-1.3",
          "copyleft-next-0.3.0",
          "TCP-wrappers",
          "Apache-2.0",
          "CC-BY-3.0",
          "CECILL-B",
          "Nokia",
          "GPL-3.0+",
          "GPL-2.0-with-GCC-exception",
          "OPL-1.0",
          "OPUBL-1.0",
          "UPL-1.0",
          "AFL-2.0",
          "LGPL-2.0-or-later",
          "CECILL-2.1",
          "gnuplot",
          "Caldera",
          "PolyForm-Noncommercial-1.0.0",
          "OLDAP-2.0",
          "CDDL-1.0",
          "APL-1.0",
          "dvipdfm",
          "XSkat",
          "Spencer-86",
          "NLOD-1.0",
          "W3C-19980720",
          "BSD-2-Clause-Patent",
          "AMPAS",
          "AGPL-3.0-or-later",
          "RPL-1.1",
          "Parity-7.0.0",
          "OLDAP-1.1",
          "AFL-1.1",
          "Artistic-1.0-cl8",
          "FTL",
          "Dotseqn",
          "CC-BY-NC-ND-2.5",
          "GFDL-1.2-no-invariants-only",
          "PHP-3.0",
          "CC-BY-SA-2.0-UK",
          "BSD-3-Clause-Modification",
          "LAL-1.3",
          "gSOAP-1.3b",
          "StandardML-NJ",
          "NPOSL-3.0",
          "LGPL-3.0",
          "Artistic-1.0-Perl",
          "OLDAP-2.5",
          "BSD-2-Clause-Views"
        ],
        "type": "string"
      },
      "LicenseTypeSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "licenseTypes": { "items": { "type": "string" }, "type": "array" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "suppressionType",
          "comment",
          "licenseTypes"
        ],
        "type": "object"
      },
      "LicensesGroupedByResourceResponse": {
        "additionalProperties": false,
        "properties": {
          "causePackageId": { "type": "string" },
          "causePackageName": { "type": "string" },
          "firstDetected": { "format": "date-time", "type": "string" },
          "isIndirectPackage": { "type": "boolean" },
          "labels": {
            "items": { "$ref": "#/components/schemas/LicLabel" },
            "type": "array"
          },
          "policy": { "type": "string" },
          "repository": { "type": "string" },
          "severity": { "$ref": "#/components/schemas/Severity" },
          "violationId": { "type": "string" }
        },
        "required": [
          "policy",
          "severity",
          "firstDetected",
          "isIndirectPackage",
          "causePackageName",
          "labels"
        ],
        "type": "object"
      },
      "ModuleError": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "fixedCode": { "type": "string" },
          "moduleFile": { "type": "string" },
          "moduleReferences": {
            "items": { "$ref": "#/components/schemas/moduleReferences" },
            "type": "array"
          }
        },
        "required": ["moduleReferences", "moduleFile", "fixedCode", "code"],
        "type": "object"
      },
      "OpenSearchPaginationRequest": {
        "properties": {
          "limit": { "format": "double", "type": "number" },
          "offset": { "format": "double", "type": "number" },
          "searchAfter": { "items": { "type": "string" }, "type": "array" },
          "useSearchAfterPagination": { "type": "boolean" }
        },
        "type": "object"
      },
      "OrganizationAndPolicyToSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "organizationId": { "type": "string" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "suppressionType",
          "comment",
          "organizationId"
        ],
        "type": "object"
      },
      "PacakgeLabelsValue": { "enum": ["Indirect Package"], "type": "string" },
      "PackageLicenseSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "packages": { "items": { "type": "string" }, "type": "array" },
          "suppressByRoot": { "type": "boolean" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "suppressionType",
          "comment",
          "packages",
          "suppressByRoot"
        ],
        "type": "object"
      },
      "PaginationRequest": {
        "properties": {
          "limit": { "format": "double", "type": "number" },
          "offset": { "format": "double", "type": "number" }
        },
        "type": "object"
      },
      "PoliciesByResourceAndTypeResponse": {
        "anyOf": [
          { "$ref": "#/components/schemas/IacPolicyResponse" },
          { "$ref": "#/components/schemas/BasePolicyResponse" },
          { "$ref": "#/components/schemas/VulnerabilitiesResponse" },
          { "$ref": "#/components/schemas/LicensesGroupedByResourceResponse" }
        ]
      },
      "ProjectFileType": {
        "enum": [
          "build.gradle",
          "gradle.properties",
          "build.gradle.kts",
          "pom.xml",
          "requirements.txt",
          "package-lock.json",
          "package.json",
          "bower.json",
          "go.sum",
          "go.mod"
        ],
        "type": "string"
      },
      "ProjectsV2CodeCategory": {
        "enum": [
          "IacMisconfiguration",
          "IacExternalModule",
          "ImageReferencerVul",
          "ImageReferencerLicenses",
          "Vulnerabilities",
          "Licenses",
          "Secrets",
          "BuildIntegrityRepo",
          "BuildIntegrityOrg",
          "BuildIntegrity",
          "Weaknesses"
        ],
        "type": "string"
      },
      "ResourceScanType": {
        "enum": ["Runtime", "Buildtime"],
        "type": "string"
      },
      "ResourceToSuppress": {
        "additionalProperties": false,
        "properties": {
          "accountId": { "type": "string" },
          "id": { "type": "string" }
        },
        "required": ["id", "accountId"],
        "type": "object"
      },
      "ResourceViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "resources": {
            "items": { "$ref": "#/components/schemas/ResourceToSuppress" },
            "type": "array"
          },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment", "resources"],
        "type": "object"
      },
      "SastLabelValue": {
        "enum": ["CustomPolicy", "CWE top 25", "OWASP top 10"],
        "type": "string"
      },
      "ScanStatuses": {
        "enum": ["HARD_FAIL", "SOFT_FAIL", "PASS", "UNKNOWN"],
        "type": "string"
      },
      "Search": {
        "additionalProperties": false,
        "properties": {
          "options": {
            "items": { "enum": ["path", "code"], "type": "string" },
            "type": "array"
          },
          "text": { "type": "string" },
          "title": {
            "enum": ["title", "constructive_title", "descriptive_title"],
            "type": "string"
          }
        },
        "required": ["text", "options"],
        "type": "object"
      },
      "SearchControllerParams": {
        "properties": {
          "scopes": {
            "items": { "$ref": "#/components/schemas/ProjectsV2CodeCategory" },
            "type": "array"
          },
          "term": { "type": "string" }
        },
        "required": ["term"],
        "type": "object"
      },
      "SecretValidationStatus": {
        "enum": ["Privileged", "Valid", "Invalid", "Unknown", "Unavailable"],
        "type": "string"
      },
      "SecretsRiskFactor": {
        "enum": [
          "PublicRepository",
          "PrivateRepository",
          "User",
          "Privileged",
          "Valid",
          "Invalid",
          "Unknown",
          "FoundInHistory"
        ],
        "type": "string"
      },
      "Severity": {
        "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFO"],
        "type": "string"
      },
      "SmartFix": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "fixedCode": { "type": "string" },
          "id": { "type": "string" },
          "inspectedKey": { "type": "string" },
          "percent": { "format": "double", "type": "number" },
          "recommenderType": { "type": "string" },
          "times": { "format": "double", "type": "number" }
        },
        "required": [
          "id",
          "times",
          "percent",
          "inspectedKey",
          "recommenderType"
        ],
        "type": "object"
      },
      "SourceType": {
        "enum": [
          "Github",
          "Bitbucket",
          "Gitlab",
          "AzureRepos",
          "cli",
          "AWS",
          "Azure",
          "GCP",
          "Docker",
          "githubEnterprise",
          "gitlabEnterprise",
          "bitbucketEnterprise",
          "terraformCloud",
          "githubActions",
          "circleci",
          "codebuild",
          "jenkins",
          "tfcRunTasks",
          "tfeRunTasks",
          "admissionController",
          "terraformEnterprise"
        ],
        "type": "string"
      },
      "SourcesViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "accountIds": { "items": { "type": "string" }, "type": "array" },
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment", "accountIds"],
        "type": "object"
      },
      "SubmitActionsMetadata": {
        "additionalProperties": false,
        "properties": {
          "owner": { "type": "string" },
          "pr": { "type": "string" },
          "repoName": { "type": "string" },
          "runNumber": { "format": "double", "type": "number" },
          "sourceBranchName": { "type": "string" }
        },
        "required": ["owner", "repoName", "runNumber"],
        "type": "object"
      },
      "SubmitActionsRequest": {
        "additionalProperties": false,
        "properties": {
          "cvesToSuppress": {
            "items": { "$ref": "#/components/schemas/CICDCve" },
            "type": "array"
          },
          "metadata": { "$ref": "#/components/schemas/SubmitActionsMetadata" },
          "sourceType": { "type": "string" },
          "type": { "$ref": "#/components/schemas/SubmitActionsType" },
          "violationsToFix": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/CICDViolation" },
                { "$ref": "#/components/schemas/DefaultBranchViolationToFix" },
                { "$ref": "#/components/schemas/VulnerabilityToFix" }
              ]
            },
            "type": "array"
          },
          "violationsToSuppress": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/CICDViolation" },
                {
                  "$ref": "#/components/schemas/CvesAccountsViolationToSuppress"
                },
                { "$ref": "#/components/schemas/ResourceViolationToSuppress" },
                { "$ref": "#/components/schemas/TagsViolationToSuppress" },
                { "$ref": "#/components/schemas/SourcesViolationToSuppress" },
                { "$ref": "#/components/schemas/BaseViolationToSuppress" },
                { "$ref": "#/components/schemas/CvesViolationToSuppress" },
                { "$ref": "#/components/schemas/LicenseTypeSuppress" },
                { "$ref": "#/components/schemas/PackageLicenseSuppress" },
                { "$ref": "#/components/schemas/CICDLicenseToSuppress" },
                {
                  "$ref": "#/components/schemas/OrganizationAndPolicyToSuppress"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": ["type", "violationsToFix", "violationsToSuppress"],
        "type": "object"
      },
      "SubmitActionsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/SubmitResponse" }
        },
        "required": ["data"],
        "type": "object"
      },
      "SubmitActionsType": { "enum": ["default", "pr"], "type": "string" },
      "SubmitResponse": {
        "additionalProperties": false,
        "properties": {
          "message": { "type": "string" },
          "remediationsResponse": {
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "required": ["message"],
        "type": "object"
      },
      "SupplyChainFixRequest": {
        "additionalProperties": false,
        "properties": {
          "packagesToFix": { "items": { "type": "string" }, "type": "array" },
          "repositoryId": { "type": "string" },
          "resourcesToFix": { "items": { "type": "string" }, "type": "array" }
        },
        "required": ["repositoryId", "resourcesToFix", "packagesToFix"],
        "type": "object"
      },
      "TagsViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "tags": {
            "items": {
              "properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment", "tags"],
        "type": "object"
      },
      "Type": {
        "enum": [
          "Errors",
          "Suppressed",
          "Passed",
          "Fixed",
          "Awaiting Remediation"
        ],
        "type": "string"
      },
      "VariableRendering": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "path": { "type": "string" }
        },
        "required": ["path", "lines", "code"],
        "type": "object"
      },
      "VariableRenderingError": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "fixedCode": { "type": "string" },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "path": { "type": "string" }
        },
        "required": ["path", "lines", "code", "fixedCode"],
        "type": "object"
      },
      "ViolationError": {
        "additionalProperties": false,
        "properties": {
          "author": { "type": "string" },
          "category": { "$ref": "#/components/schemas/IncidentCategory" },
          "commitHash": { "type": "string" },
          "createdBy": { "type": "string" },
          "cves": {
            "items": { "$ref": "#/components/schemas/CVE" },
            "type": "array"
          },
          "date": { "format": "date-time", "type": "string" },
          "errorId": { "type": "string" },
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "fileMetadataUuid": { "type": "string" },
          "filePath": { "type": "string" },
          "fixPath": { "type": "string" },
          "fixedCode": { "type": "string" },
          "fixes": {
            "items": { "$ref": "#/components/schemas/SmartFix" },
            "type": "array"
          },
          "frameworkType": { "type": "string" },
          "isFixable": { "type": "boolean" },
          "licenses": {
            "items": { "$ref": "#/components/schemas/License" },
            "type": "array"
          },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "metadataChecksMetadataPath": { "type": "string" },
          "module": { "$ref": "#/components/schemas/ModuleError" },
          "resourceCode": { "type": "string" },
          "resourceId": { "type": "string" },
          "resourceType": { "type": "string" },
          "runtimeFrameworkType": { "type": "string" },
          "runtimeId": { "type": "string" },
          "runtimeSourceId": { "type": "string" },
          "scannerType": { "type": "string" },
          "secretValidationStatus": {
            "$ref": "#/components/schemas/SecretValidationStatus"
          },
          "secrets": {
            "items": { "$ref": "#/components/schemas/ErrorInFile" },
            "type": "array"
          },
          "selectedFix": {
            "allOf": [{ "$ref": "#/components/schemas/SmartFix" }],
            "nullable": true
          },
          "sourceType": { "$ref": "#/components/schemas/SourceType" },
          "status": { "type": "string" },
          "variableRendering": {
            "$ref": "#/components/schemas/VariableRenderingError"
          }
        },
        "required": [
          "resourceCode",
          "filePath",
          "resourceId",
          "resourceType",
          "errorId",
          "fixedCode",
          "status",
          "scannerType",
          "metadataChecksMetadataPath",
          "frameworkType",
          "errorLines",
          "fixPath",
          "lines",
          "author",
          "commitHash",
          "date",
          "variableRendering",
          "module",
          "runtimeId",
          "runtimeSourceId",
          "fixes",
          "sourceType",
          "fileMetadataUuid",
          "category",
          "secretValidationStatus"
        ],
        "type": "object"
      },
      "VulLabels": {
        "properties": {
          "label": {
            "anyOf": [
              { "$ref": "#/components/schemas/VulLabelsValue" },
              { "$ref": "#/components/schemas/ImageLabelsValue" },
              { "$ref": "#/components/schemas/PacakgeLabelsValue" }
            ]
          },
          "metadata": {
            "properties": { "imageName": { "type": "string" } },
            "type": "object"
          }
        },
        "required": ["label"],
        "type": "object"
      },
      "VulLabelsValue": {
        "enum": ["Breaking Change Fix", "Public Fix"],
        "type": "string"
      },
      "VulnerabilitiesResponse": {
        "additionalProperties": false,
        "properties": {
          "causePackageId": { "type": "string" },
          "causePackageName": { "type": "string" },
          "cveUuid": { "type": "string" },
          "cvss": { "format": "double", "type": "number" },
          "firstDetected": { "format": "date-time", "type": "string" },
          "fixVersion": { "type": "string" },
          "labels": {
            "items": { "$ref": "#/components/schemas/VulLabels" },
            "type": "array"
          },
          "policy": { "type": "string" },
          "pr": { "type": "string" },
          "repository": { "type": "string" },
          "resourceId": { "type": "string" },
          "riskFactors": { "items": { "type": "string" }, "type": "array" },
          "severity": { "$ref": "#/components/schemas/Severity" },
          "violationId": { "type": "string" }
        },
        "required": [
          "policy",
          "severity",
          "firstDetected",
          "fixVersion",
          "causePackageName",
          "causePackageId",
          "riskFactors",
          "cveUuid",
          "resourceId",
          "cvss",
          "labels"
        ],
        "type": "object"
      },
      "VulnerabilityRiskFactor": {
        "enum": [
          "AttackComplexity",
          "AttackVector",
          "DoS",
          "HasFix",
          "RemoteExecution",
          "ExploitInTheWild",
          "ExploitPOC",
          "IsUsed",
          "ReachableFunction",
          "ManifestInRuntime",
          "RepositoryInRuntime",
          "PackageInRuntime"
        ],
        "type": "string"
      },
      "VulnerabilityToFix": {
        "additionalProperties": false,
        "properties": {
          "frameworkType": { "type": "string" },
          "id": { "type": "string" },
          "owner": { "type": "string" },
          "packageName": { "type": "string" },
          "packageVersion": { "type": "string" },
          "repoName": { "type": "string" },
          "resourceId": { "type": "string" },
          "s3FilePath": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "resourceId",
          "frameworkType",
          "s3FilePath",
          "owner",
          "repoName",
          "packageName",
          "packageVersion"
        ],
        "type": "object"
      },
      "module": {
        "additionalProperties": false,
        "properties": {
          "moduleFile": { "type": "string" },
          "moduleReferences": {
            "items": { "$ref": "#/components/schemas/moduleReferences" },
            "type": "array"
          }
        },
        "required": ["moduleReferences", "moduleFile"],
        "type": "object"
      },
      "moduleReferences": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "displayPath": { "type": "string" },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "name": { "type": "string" },
          "path": { "type": "string" }
        },
        "required": ["name", "path", "displayPath", "lines", "code"],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "The Errors endpoints are listed below.\n",
    "title": "Prisma Cloud Code Errors API Overview",
    "version": "Latest"
  },
  "openapi": "3.0.0",
  "paths": {
    "/code/api/v1/errors/file": {
      "post": {
        "deprecated": true,
        "description": "List errors in files",
        "operationId": "getErrorsInFile",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": { "format": "int32", "minimum": 0, "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetErrorsInFileWithFilters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": [
                        {
                          "author": "author",
                          "category": "IAM",
                          "commitHash": "5c6b5d60",
                          "createdBy": "checkov_terraform",
                          "errorId": "BC_AWS_S3_14",
                          "errorLines": [],
                          "fileMetadataUuid": "de707daa-2ef3-40e1-8bbf-5e39f86b927e",
                          "filePath": "/terraform/aws/s3.tf",
                          "fixPath": "checkov/yourname/yourGithubName/yourRepo/master/fixes/BC_AWS_S3_14/aws_s3_bucket.data/terraform/aws/s3.tf",
                          "fixedCode": "resource \"aws_s3_bucket\" \"data\" { \n  # bucket is public \n bucket        = \"$\n{local.resource_prefix.value}-data\" \n force_destroy = true \n tags = merge({ \n  Name        = \"${local.resource_prefix.value}-data\" \n Environment = local.resource_prefix.value \n }) \n server_side_encryption_configuration { \n rule { \n apply_server_side_encryption_by_default { \n sse_algorithm = \"AES256\" \n } \n } \n }",
                          "fixes": [],
                          "frameworkType": "Terraform",
                          "isFixable": true,
                          "lines": [1, 21],
                          "metadataChecksMetadataPath": "checkov/yourname/yourGithubName/yourRepo/master/checkov_results/terraform/checks_metadata.json",
                          "resourceCode": "resource \"aws_s3_bucket\" \"data\" { \n  # bucket is public \n bucket        = \"$\n{local.resource_prefix.value}-data\" \n force_destroy = true \n tags = merge({ \n  Name        = \"${local.resource_prefix.value}-data\" \n Environment = local.resource_prefix.value \n })",
                          "resourceId": "/terraform/aws/s3.tf:aws_s3_bucket.data",
                          "resourceType": "aws_s3_bucket.data",
                          "runtimeFrameworkType": null,
                          "runtimeId": null,
                          "runtimeSourceId": null,
                          "scannerType": "Checkov",
                          "secretValidationStatus": "Valid",
                          "selectedFix": null,
                          "sourceType": "Github",
                          "status": "OPEN"
                        }
                      ],
                      "hasNext": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorsInFileWithPaginationResponse"
                }
              }
            },
            "description": "Get errors in file"
          },
          "422": { "description": "Request arguments validation error" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Lists All Errors in File Path",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSProjects_READ"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/errors/file\"\n\nquerystring = {\"limit\":\"SOME_INTEGER_VALUE\",\"offset\":\"SOME_INTEGER_VALUE\"}\n\npayload = {\n    \"CICDRunId\": 0,\n    \"authors\": [\"string\"],\n    \"branch\": \"string\",\n    \"categories\": [\"IAM\"],\n    \"codeStatus\": [\"hasFix\"],\n    \"excludeCategories\": [\"IAM\"],\n    \"filePath\": \"string\",\n    \"fileTypes\": [\"build.gradle\"],\n    \"repository\": \"string\",\n    \"repositoryId\": \"string\",\n    \"search\": {\n        \"options\": [\"path\"],\n        \"text\": \"string\",\n        \"title\": \"title\"\n    },\n    \"severities\": [\"CRITICAL\"],\n    \"sourceTypes\": [\"Github\"],\n    \"tags\": [\n        {\n            \"key\": \"string\",\n            \"value\": \"string\"\n        }\n    ],\n    \"types\": [\"Errors\"]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'http://undefinedundefined/code/api/v1/errors/file?limit=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"CICDRunId\":0,\"authors\":[\"string\"],\"branch\":\"string\",\"categories\":[\"IAM\"],\"codeStatus\":[\"hasFix\"],\"excludeCategories\":[\"IAM\"],\"filePath\":\"string\",\"fileTypes\":[\"build.gradle\"],\"repository\":\"string\",\"repositoryId\":\"string\",\"search\":{\"options\":[\"path\"],\"text\":\"string\",\"title\":\"title\"},\"severities\":[\"CRITICAL\"],\"sourceTypes\":[\"Github\"],\"tags\":[{\"key\":\"string\",\"value\":\"string\"}],\"types\":[\"Errors\"]}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/files": {
      "post": {
        "deprecated": true,
        "description": "List files with errors.",
        "operationId": "getErrorsFiles",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetErrorsFilters" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": [
                        {
                          "awaitingRemediationCount": 0,
                          "errorsCount": 0,
                          "filePath": "/terraform/gcp/instances.tf",
                          "fixedCount": 0,
                          "openErrorsCount": 0,
                          "passedCount": 3,
                          "suppressedErrorsCount": 0
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetErrorsFilesResponseBody"
                }
              }
            },
            "description": "Get errors files"
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "Couldn't fetch files with errors" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Lists Files with Errors",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSProjects_READ"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/errors/files\"\n\npayload = {\n    \"CICDRunId\": 0,\n    \"authors\": [\"string\"],\n    \"branch\": \"string\",\n    \"categories\": [\"IAM\"],\n    \"codeStatus\": [\"hasFix\"],\n    \"excludeCategories\": [\"IAM\"],\n    \"fileTypes\": [\"build.gradle\"],\n    \"repository\": \"string\",\n    \"repositoryId\": \"string\",\n    \"search\": {\n        \"options\": [\"path\"],\n        \"text\": \"string\",\n        \"title\": \"title\"\n    },\n    \"severities\": [\"CRITICAL\"],\n    \"sourceTypes\": [\"Github\"],\n    \"tags\": [\n        {\n            \"key\": \"string\",\n            \"value\": \"string\"\n        }\n    ],\n    \"types\": [\"Errors\"]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://undefinedundefined/code/api/v1/errors/files \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"CICDRunId\":0,\"authors\":[\"string\"],\"branch\":\"string\",\"categories\":[\"IAM\"],\"codeStatus\":[\"hasFix\"],\"excludeCategories\":[\"IAM\"],\"fileTypes\":[\"build.gradle\"],\"repository\":\"string\",\"repositoryId\":\"string\",\"search\":{\"options\":[\"path\"],\"text\":\"string\",\"title\":\"title\"},\"severities\":[\"CRITICAL\"],\"sourceTypes\":[\"Github\"],\"tags\":[{\"key\":\"string\",\"value\":\"string\"}],\"types\":[\"Errors\"]}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/files/{uuid}": {
      "get": {
        "deprecated": true,
        "description": "Get the file metadata by UUID based on the customer's repository.",
        "operationId": "getErrorsInFiles",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "include",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": {
                        "commitId": null,
                        "creationDate": "2022-02-21T09:26:36.431Z",
                        "errorsCount": "46",
                        "id": "1ff27bcd-9044-42ab-a773-ba6707cb35a9",
                        "name": "rds.tf",
                        "path": "terraform/aws/rds.tf",
                        "prId": null,
                        "type": "tf",
                        "updatedDate": "2022-02-21T09:26:36.431Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetFileMetadataResponse"
                }
              }
            },
            "description": "Get errors in file"
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "failed to fetch file by UUID" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get File Metadata by UUID",
        "tags": ["Errors"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/errors/files/{uuid}\"\n\nquerystring = {\"include\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://undefinedundefined/code/api/v1/errors/files/{uuid}?include=SOME_STRING_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/errors/getFixedCode": {
      "post": {
        "deprecated": true,
        "description": "Returns a remediated resource code",
        "operationId": "getFixedCode",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "error": {
                    "$ref": "#/components/schemas/DefaultBranchViolationToFix"
                  }
                },
                "required": ["error"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": { "Example 1": {} },
                "schema": { "type": "string" }
              }
            },
            "description": "string representing a fixed resource code"
          },
          "422": { "description": "Request arguments validation error" },
          "500": {
            "description": "Could not get fixed code for customer $CUSTOMER_NAME with error $ERROR"
          }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get Fixed Resource Code using the selectedFix",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSProjects_READ"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/errors/getFixedCode\"\n\npayload = {\"error\": {\n        \"errorLines\": [0],\n        \"fixPath\": \"string\",\n        \"fixedCode\": \"string\",\n        \"fixes\": [\n            {\n                \"code\": \"string\",\n                \"fixedCode\": \"string\",\n                \"id\": \"string\",\n                \"inspectedKey\": \"string\",\n                \"percent\": 0,\n                \"recommenderType\": \"string\",\n                \"times\": 0\n            }\n        ],\n        \"frameworkType\": \"string\",\n        \"fullId\": \"string\",\n        \"inspectedKey\": \"string\",\n        \"metadataChecksMetadataPath\": \"string\",\n        \"metadataLines\": [0],\n        \"owner\": \"string\",\n        \"repoName\": \"string\",\n        \"resourceCode\": \"string\",\n        \"resourceId\": \"string\",\n        \"runtimeId\": \"string\",\n        \"runtimeSourceId\": \"string\",\n        \"s3FilePath\": \"string\",\n        \"selectedFix\": \"string\",\n        \"violationId\": \"string\"\n    }}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://undefinedundefined/code/api/v1/errors/getFixedCode \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"error\":{\"errorLines\":[0],\"fixPath\":\"string\",\"fixedCode\":\"string\",\"fixes\":[{\"code\":\"string\",\"fixedCode\":\"string\",\"id\":\"string\",\"inspectedKey\":\"string\",\"percent\":0,\"recommenderType\":\"string\",\"times\":0}],\"frameworkType\":\"string\",\"fullId\":\"string\",\"inspectedKey\":\"string\",\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"owner\":\"string\",\"repoName\":\"string\",\"resourceCode\":\"string\",\"resourceId\":\"string\",\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\",\"s3FilePath\":\"string\",\"selectedFix\":\"string\",\"violationId\":\"string\"}}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/gitBlameAuthors": {
      "get": {
        "deprecated": true,
        "description": "Get all git blame author names per full repo name (owner and name)",
        "operationId": "getGitBlameAuthors",
        "parameters": [
          {
            "in": "query",
            "name": "fullRepoName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "- Github, Bitbucket, Gitlab, AzureRepos, cli, AWS, Azure, GCP, githubEnterprise,\ngitlabEnterprise, bitbucketEnterprise, terraformCloud, tfcRunTasks, githubActions, circleci, codebuild,\njenkins, kubernetesWorkloads, Kubernetes, admissionController",
            "in": "query",
            "name": "sourceType",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "items": { "type": "string" }, "type": "array" }
              }
            },
            "description": "array of author names"
          },
          "400": {
            "description": "Could not get git blame authors, check GET query params"
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "Could not get git blames authors" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "List Git Authors of a Repository",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSProjects_READ"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/errors/gitBlameAuthors\"\n\nquerystring = {\"fullRepoName\":\"SOME_STRING_VALUE\",\"sourceType\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://undefinedundefined/code/api/v1/errors/gitBlameAuthors?fullRepoName=SOME_STRING_VALUE&sourceType=SOME_STRING_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/errors/submitActions": {
      "post": {
        "deprecated": true,
        "description": "Invokes the suppress fix function in the correct service CI/CD remediations service based on the type of submit (PR or DEFAULT), array of violationsToSuppress, and array of violations to fix.",
        "operationId": "submitActions",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "type": "default",
                "violationsToFix": [
                  {
                    "fixedCode": "",
                    "frameworkType": "Terraform",
                    "fullId": "BC_AWS_S3_14::milkanas/terragoat::/terraform/aws/s3.tf:aws_s3_bucket.data",
                    "metadataChecksMetadataPath": "checkov/milkanast/milkanas/terragoat/master/checkov_results/terraform/checks_metadata.json",
                    "metadataLines": [1, 13],
                    "owner": "milkanas",
                    "repoName": "terragoat",
                    "resourceId": "/terraform/aws/s3.tf:aws_s3_bucket.data",
                    "runtimeId": null,
                    "runtimeSourceId": null,
                    "s3FilePath": "checkov/milkanast/milkanas/terragoat/master/src/terraform/aws/s3.tf",
                    "violationId": "BC_AWS_S3_14"
                  }
                ],
                "violationsToSuppress": [
                  {
                    "comment": "this is justification comment",
                    "resources": [
                      {
                        "accountId": "orevron/terragoat",
                        "id": "BC_GIT_6::orevron/terragoat::/terraform/providers.tf:4ec71f2183bf24b28320d0c2839bdd08c255f0bb"
                      },
                      {
                        "accountId": "orevron/terragoat",
                        "id": "BC_GIT_6::orevron/terragoat::/terraform/lambda.tf:ca61f30c56f9b66c8802632d559a391acd02d01d"
                      }
                    ],
                    "suppressionType": "Resources",
                    "violationId": "BC_AWS_S3_13"
                  }
                ]
              },
              "schema": { "$ref": "#/components/schemas/SubmitActionsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitActionsResponse"
                }
              }
            },
            "description": ""
          },
          "401": { "description": "Insufficient role permissions" },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "type: TYPE not supported." }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Submit Remediation and Suppression Actions",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSProjects_CREATE"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/errors/submitActions\"\n\npayload = {\n    \"cvesToSuppress\": [\n        {\n            \"CICDRunId\": 0,\n            \"bulkSuppression\": True,\n            \"id\": \"string\",\n            \"justification\": {\n                \"comment\": \"string\",\n                \"createdBy\": \"string\",\n                \"expirationTime\": 0\n            },\n            \"repository\": \"string\",\n            \"resourceId\": \"string\",\n            \"violationId\": \"string\"\n        }\n    ],\n    \"metadata\": {\n        \"owner\": \"string\",\n        \"pr\": \"string\",\n        \"repoName\": \"string\",\n        \"runNumber\": 0,\n        \"sourceBranchName\": \"string\"\n    },\n    \"sourceType\": \"string\",\n    \"type\": \"default\",\n    \"violationsToFix\": [\n        {\n            \"CICDRunId\": 0,\n            \"bulkSuppression\": True,\n            \"commentIds\": [\"string\"],\n            \"creationDate\": \"string\",\n            \"errorLines\": [0],\n            \"frameworkType\": \"string\",\n            \"justification\": {\n                \"comment\": \"string\",\n                \"createdBy\": \"string\",\n                \"expirationTime\": 0\n            },\n            \"justificationId\": \"string\",\n            \"metadataChecksMetadataPath\": \"string\",\n            \"metadataLines\": [0],\n            \"repository\": \"string\",\n            \"resourceId\": \"string\",\n            \"runtimeId\": \"string\",\n            \"runtimeSourceId\": \"string\",\n            \"s3FilePath\": \"string\",\n            \"s3FixFilePath\": \"string\",\n            \"severity\": \"string\",\n            \"status\": \"string\",\n            \"updatedDate\": \"string\",\n            \"vcsCommentLine\": \"string\",\n            \"violationId\": \"string\"\n        }\n    ],\n    \"violationsToSuppress\": [\n        {\n            \"CICDRunId\": 0,\n            \"bulkSuppression\": True,\n            \"commentIds\": [\"string\"],\n            \"creationDate\": \"string\",\n            \"errorLines\": [0],\n            \"frameworkType\": \"string\",\n            \"justification\": {\n                \"comment\": \"string\",\n                \"createdBy\": \"string\",\n                \"expirationTime\": 0\n            },\n            \"justificationId\": \"string\",\n            \"metadataChecksMetadataPath\": \"string\",\n            \"metadataLines\": [0],\n            \"repository\": \"string\",\n            \"resourceId\": \"string\",\n            \"runtimeId\": \"string\",\n            \"runtimeSourceId\": \"string\",\n            \"s3FilePath\": \"string\",\n            \"s3FixFilePath\": \"string\",\n            \"severity\": \"string\",\n            \"status\": \"string\",\n            \"updatedDate\": \"string\",\n            \"vcsCommentLine\": \"string\",\n            \"violationId\": \"string\"\n        }\n    ]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://undefinedundefined/code/api/v1/errors/submitActions \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"cvesToSuppress\":[{\"CICDRunId\":0,\"bulkSuppression\":true,\"id\":\"string\",\"justification\":{\"comment\":\"string\",\"createdBy\":\"string\",\"expirationTime\":0},\"repository\":\"string\",\"resourceId\":\"string\",\"violationId\":\"string\"}],\"metadata\":{\"owner\":\"string\",\"pr\":\"string\",\"repoName\":\"string\",\"runNumber\":0,\"sourceBranchName\":\"string\"},\"sourceType\":\"string\",\"type\":\"default\",\"violationsToFix\":[{\"CICDRunId\":0,\"bulkSuppression\":true,\"commentIds\":[\"string\"],\"creationDate\":\"string\",\"errorLines\":[0],\"frameworkType\":\"string\",\"justification\":{\"comment\":\"string\",\"createdBy\":\"string\",\"expirationTime\":0},\"justificationId\":\"string\",\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"repository\":\"string\",\"resourceId\":\"string\",\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\",\"s3FilePath\":\"string\",\"s3FixFilePath\":\"string\",\"severity\":\"string\",\"status\":\"string\",\"updatedDate\":\"string\",\"vcsCommentLine\":\"string\",\"violationId\":\"string\"}],\"violationsToSuppress\":[{\"CICDRunId\":0,\"bulkSuppression\":true,\"commentIds\":[\"string\"],\"creationDate\":\"string\",\"errorLines\":[0],\"frameworkType\":\"string\",\"justification\":{\"comment\":\"string\",\"createdBy\":\"string\",\"expirationTime\":0},\"justificationId\":\"string\",\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"repository\":\"string\",\"resourceId\":\"string\",\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\",\"s3FilePath\":\"string\",\"s3FixFilePath\":\"string\",\"severity\":\"string\",\"status\":\"string\",\"updatedDate\":\"string\",\"vcsCommentLine\":\"string\",\"violationId\":\"string\"}]}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/supply-chain-fix": {
      "post": {
        "deprecated": true,
        "description": "The API is responsible for handling remediations from the supply chain screen. It receives a repository's UUID,\na list of IaC resources UUIDs and a list of packages UUIDs to be remediated, and returns the remediation response when available",
        "operationId": "supply-chain-fix",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "packagesToFix": [
                  "0cbcbeca-1318-4657-8994-6ea413fb9947",
                  "41732c34-6d28-4ea5-8d8a-0ff724884ac4"
                ],
                "repositoryId": "fa3219c3-7da5-41bb-a9a5-b2fb5542fc13",
                "resourcesToFix": [
                  "e8b299db-f08a-4870-9ed9-6d09409e4ce5",
                  "c3eb359e-c499-4b56-a1bb-77770be845ca"
                ]
              },
              "schema": { "$ref": "#/components/schemas/SupplyChainFixRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitActionsResponse"
                }
              }
            },
            "description": ""
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "Could not handle supply chain fix" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Submit Remediation Operations from Supply Chain Screen",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSSupplyChain_CREATE"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/errors/supply-chain-fix\"\n\npayload = {\n    \"packagesToFix\": [\"string\"],\n    \"repositoryId\": \"string\",\n    \"resourcesToFix\": [\"string\"]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://undefinedundefined/code/api/v1/errors/supply-chain-fix \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"packagesToFix\":[\"string\"],\"repositoryId\":\"string\",\"resourcesToFix\":[\"string\"]}'"
          }
        ]
      }
    },
    "/api/v2/code-issues/branch_scan": {
      "post": {
        "operationId": "getPeriodicFindings",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "filters": {
                        "$ref": "#/components/schemas/BranchScanFilters",
                        "description": "Filters to retrieve selective issues. Use the following fields to filter the search results:\n- checkStatus: Security violation status filter. Filter scan results using a status value:\n     - Error: Security violation was detected.\n     - Passed: No security violation\n     - Suppressed: A security issue was identified, but was acknowledged and intentionally suppressed.\n     - FixPending: An automated fix has been issued to the security violation, and is currently being applied to the associated resource.\n- gitUsers: Git user filter. Filter security findings based on the Git user who modified the code or configuration files.\n- codeCategories: The `scopes` search criteria is also available as a filter.\n- secretsRiskFactors: Secrets risk factor filter:\n     - PublicRepository: Secret was found in a public repository.\n     - PrivateRepository: Secret was found in a private repository.\n     - User: User who committed the secret.\n     - Privileged: Secret is for a role with privileged access to a Cloud Service Provider account.\n     - Valid: Secret has been validated as an active secret by the service provider.\n     - Invalid: Secret received an invalid response when used against the service provider’s API.\n     - Unknown: Secret that could not be verified.\n     - FoundInHistory: Secret was found in the Git history but not in the most recent commit.\n- iacCategories (optional): Infrastructure as code categories filter:\n     - IAM (Identity and Access Management): Issues related to IAM configurations.\n     - Logging: Issues related to log management and monitoring.\n     - Monitoring: Issues related to monitoring and observability configurations.\n     - Networking: Issues related to network configurations, such as open ports, insecure protocols, or misconfigured security groups.\n     - Kubernetes: Issues specific to Kubernetes cluster configurations.\n     - General: Issues that do not fit into specific predefined categories. It may include issues related to best practices, compliance checks, or general security hygiene.\n     - Serverless: Issues specific to serverless function configurations, such as function permissions or environment variable protection\n     - Elasticsearch: Issues related to Elasticsearch configurations, such as exposed clusters, lack of encryption, or insecure access controls.\n     - Storage: Issues related to storage configurations, such as public buckets, insecure access policies, or encryption settings.\n     - Secrets: Issues related to the handling and management of sensitive information, such as API keys, passwords, or cryptographic keys.\n     - Public: Issues related to public-facing resources, such as exposed APIs, publicly accessible assets, or misconfigured CDN (Content Delivery Network) settings. Vulnerabilities - Vulnerabilities in your code or infrastructure including issues related to outdated software versions, known security vulnerabilities, or insecure dependencies. Compute - Issues related to compute resources, including virtual machine configurations, instance roles, or container security. VCS (Version Control Systems) -  Issues associated with version control systems, such as Git repositories. Build Integrity - Issues related to the integrity of your build processes or artifacts. It involves ensuring that the build pipeline is secure, free from tampering, and follows secure build practices. Licenses - Issues related to open-source licenses in your codebase. Drift - Issues related to configuration drift, where the actual deployed infrastructure deviates from the desired state defined in the IaC templates. Policy3D - Issues related to 3rd-party policies or standards. It involves evaluating and ensuring compliance with external security policies or regulatory frameworks.\n- severities: Severity filter:\n     - Critical: High-risk vulnerabilities or misconfigurations that could lead to significant security breaches or data leaks. These issues require immediate attention and remediation.\n     - High: Significant security issues that have the potential to be exploited or result in significant damage if left unaddressed. These findings should be addressed as a priority.\n     - Medium: Issues that pose a potential security risk that are less severe than Critical and High. Remediation of these issues should be prioritized, but they may not require immediate attention.\n     - Low: Low severity indicates issues that have a minimal impact on security or are relatively low-risk. While they may not pose an immediate threat, it is still recommended to address them to maintain a robust security posture.\n     - Info: Info severity is used for informational findings or recommendations that do not pose an immediate security risk but provide helpful guidance, best practices, or suggestions for optimization. These findings can be considered as part of ongoing security hygiene efforts.\n- iacTags: Filter violation based on the tag assigned to the resource.\n- fileTypes: File type filter. Use one of the available file type strings to retrieve issues with files of that type.\n- Benchmarks: Benchmarks filter. Use one of the available benchmark strings to retrieve issues based on the corresponding security benchmark or compliance standard.\n- iacLabels: IaC filter. Use one of the following IaC labels to retrieve corresponding issues:\n     - CustomPolicy: whether or not the presented security issue is associated with a custom policy created by the user.\n     - HasFix: whether or not a fix suggestion is provided for the presented security issue.\n- vulnerabilityRiskFactors: Vulnerability Risk Factors filter. Use one of the following vulnerability risk factor labels to retrieve corresponding issues:\n     - Attack Complexity: Level of effort or skill required for an attacker to exploit a vulnerability. A higher complexity indicates that it is more challenging for an attacker to exploit the vulnerability.\n     - Attack Vector: Path or means through which an attacker can exploit a vulnerability. It describes the method or entry point an attacker can use to access the vulnerable system or application.\n     - DoS (Denial of Service): DoS vulnerabilities that can be exploited to disrupt or disable the normal functioning of a system or application.\n     - HasFix: Vulnerabilities that have a fix or solution, such as a patch, update, or recommended mitigation steps to address the vulnerability.\n     - RemoteExecution: Vulnerabilities that can be exploited remotely, without direct physical or local access to the target system.\n     - ExploitInTheWild: Vulnerabilities with reports of active exploits in real-world attacks. If a vulnerability has an exploit in the wild, it means that attackers are actively taking advantage of the vulnerability.\n     - ExploitPOC:  \"Proof of Concept\" exploits are vulnerabilities with a proof of concept code or demonstration that showcases the vulnerability's exploitation.\n- licenseType: License type filter. Use one of the available license type strings to retrieve identified violations affiliated with the specified license type.\n- repositories: Repositories filter for retrieving issues detected the default branch scans specified repositories."
                      },
                      "search": {
                        "$ref": "#/components/schemas/SearchControllerParams",
                        "description": "The `search` field allows you to search for a given term or set of terms across issues of a particular type or types. The `search` field consists of the `term` and the `scopes` fields.\n - term: field is required. It can be a single word, or multiple words joined by the ‘or’ and ‘and’ logical operators.\n - scopes: field is optional. You can provide one or more code categories in this field. The platform searches for the `term` across issues that have the code categories you provide. The following code category scopes are applicable to this endpoint:\n     - IacMisconfiguration: Issues with Infrastructure-as-Code (IaC or iac) templates and scripts that provision and manage cloud resources.\n     - vulnerabilites: Findings related to known security vulnerabilities in open-source packages used in applications that could be exploited by attackers.\n     - buildintegrity: Findings related to the integrity and security of the build pipeline or the software supply chain.\n     - Secrets: Findings related to the handling and management of sensitive information, such as API keys, passwords, or cryptographic keys, within code files.\n     - Licenses: Filter value to retrieve issues related to the non-compliance with license requirements."
                      }
                    },
                    "required": ["filters"],
                    "type": "object"
                  },
                  { "$ref": "#/components/schemas/OpenSearchPaginationRequest" }
                ]
              }
            }
          },
          "description": "- offset: A non-negative integer that indicates the number of items from the start of the results list to skip in the response. The offset parameter, along with the limit parameter, enables you to paginate the results. For example, if you use an offset value of 100 and a limit of 200, the response will contain issues starting from 101 to 300 in the results (matching issues) list. The default value is 0 for no offset, which returns results starting from the first issue.\n- limit: Number of items to return. A non-negative integer that indicates the number of issues from the result list to return. By default, all the matching issues are returned. The default value is 100 and the maximum value is 10000.\n- useSearchAfterPagination: boolean - If true, use searchAfter pagination instead of offset pagination. Offset/limit is not supported for more than 10K records.\n- searchAfter: string array - An opaque cursor for pagination. Used with useSearchAfterPagination and limit. Send it on the second request from the response.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsPoliciesGroupedByResource"
                }
              }
            },
            "description": ""
          },
          "422": { "description": "Request arguments validation error" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get Code Issues from Periodic Scans",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSProjects_READ"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/api/v2/code-issues/branch_scan\"\n\npayload = {\n    \"filters\": {\n        \"benchmarks\": [\"CIS KUBERNETES V1.5\"],\n        \"branch\": \"string\",\n        \"checkStatus\": \"Error\",\n        \"codeCategories\": [\"IacMisconfiguration\"],\n        \"cwes\": [\"string\"],\n        \"fileTypes\": [\"build.gradle\"],\n        \"fixableOnly\": True,\n        \"gitUsers\": [\"string\"],\n        \"iacCategories\": [\"IAM\"],\n        \"iacLabels\": [\"CustomPolicy\"],\n        \"iacTags\": [\"string\"],\n        \"licenseType\": [\"OSI_APACHE\"],\n        \"owasp\": [\"string\"],\n        \"repositories\": [],\n        \"sastLabels\": [\"CustomPolicy\"],\n        \"secretsRiskFactors\": [\"PublicRepository\"],\n        \"severities\": [\"CRITICAL\"],\n        \"vulnerabilityRiskFactors\": [\"AttackComplexity\"]\n    },\n    \"search\": {\n        \"scopes\": [\"IacMisconfiguration\"],\n        \"term\": \"string\"\n    },\n    \"limit\": 0,\n    \"offset\": 0,\n    \"searchAfter\": [\"string\"],\n    \"useSearchAfterPagination\": True\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://undefinedundefined/api/v2/code-issues/branch_scan \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"filters\":{\"benchmarks\":[\"CIS KUBERNETES V1.5\"],\"branch\":\"string\",\"checkStatus\":\"Error\",\"codeCategories\":[\"IacMisconfiguration\"],\"cwes\":[\"string\"],\"fileTypes\":[\"build.gradle\"],\"fixableOnly\":true,\"gitUsers\":[\"string\"],\"iacCategories\":[\"IAM\"],\"iacLabels\":[\"CustomPolicy\"],\"iacTags\":[\"string\"],\"licenseType\":[\"OSI_APACHE\"],\"owasp\":[\"string\"],\"repositories\":[],\"sastLabels\":[\"CustomPolicy\"],\"secretsRiskFactors\":[\"PublicRepository\"],\"severities\":[\"CRITICAL\"],\"vulnerabilityRiskFactors\":[\"AttackComplexity\"]},\"search\":{\"scopes\":[\"IacMisconfiguration\"],\"term\":\"string\"},\"limit\":0,\"offset\":0,\"searchAfter\":[\"string\"],\"useSearchAfterPagination\":true}'"
          }
        ]
      }
    },
    "/api/v2/code-issues/code_review_scan": {
      "post": {
        "operationId": "getCicdFindings",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "filters": {
                        "$ref": "#/components/schemas/CicdRunsFilters",
                        "description": "Filters to retrieve selective issues. Use the following fields to filter the search results:\n- checkStatus: Security violation status filter. Filter scan results using a status value:\n     - Error: Security violation was detected.\n     - Passed: No security violation\n     - Suppressed: A security issue was identified, but was acknowledged and intentionally suppressed.\n     - FixPending: An automated fix has been issued to the security violation, and is currently being applied to the associated resource.\n- gitUsers: Git user filter. Filter security findings based on the Git user who modified the code or configuration files.\n- codeCategories: The `scopes` search criteria is also available as a filter.\n- secretsRiskFactors: Secrets risk factor filter:\n     - PublicRepository: Secret was found in a public repository.\n     - PrivateRepository: Secret was found in a private repository.\n     - User: User who committed the secret.\n     - Privileged: Secret is for a role with privileged access to a Cloud Service Provider account.\n     - Valid: Secret has been validated as an active secret by the service provider.\n     - Invalid: Secret received an invalid response when used against the service provider’s API.\n     - Unknown: Secret that could not be verified.\n     - FoundInHistory: Secret was found in the Git history but not in the most recent commit.\n- iacCategories (optional): Infrastructure as code categories filter:\n     - IAM (Identity and Access Management): Issues related to IAM configurations.\n     - Logging: Issues related to log management and monitoring.\n     - Monitoring: Issues related to monitoring and observability configurations.\n     - Networking: Issues related to network configurations, such as open ports, insecure protocols, or misconfigured security groups.\n     - Kubernetes: Issues specific to Kubernetes cluster configurations.\n     - General: Issues that do not fit into specific predefined categories. It may include issues related to best practices, compliance checks, or general security hygiene.\n     - Serverless: Issues specific to serverless function configurations, such as function permissions or environment variable protection\n     - Elasticsearch: Issues related to Elasticsearch configurations, such as exposed clusters, lack of encryption, or insecure access controls.\n     - Storage: Issues related to storage configurations, such as public buckets, insecure access policies, or encryption settings.\n     - Secrets: Issues related to the handling and management of sensitive information, such as API keys, passwords, or cryptographic keys.\n     - Public: Issues related to public-facing resources, such as exposed APIs, publicly accessible assets, or misconfigured CDN (Content Delivery Network) settings. Vulnerabilities - Vulnerabilities in your code or infrastructure including issues related to outdated software versions, known security vulnerabilities, or insecure dependencies. Compute - Issues related to compute resources, including virtual machine configurations, instance roles, or container security. VCS (Version Control Systems) -  Issues associated with version control systems, such as Git repositories. Build Integrity - Issues related to the integrity of your build processes or artifacts. It involves ensuring that the build pipeline is secure, free from tampering, and follows secure build practices. Licenses - Issues related to open-source licenses in your codebase. Drift - Issues related to configuration drift, where the actual deployed infrastructure deviates from the desired state defined in the IaC templates. Policy3D - Issues related to 3rd-party policies or standards. It involves evaluating and ensuring compliance with external security policies or regulatory frameworks.\n- severities: Severity filter:\n     - Critical: High-risk vulnerabilities or misconfigurations that could lead to significant security breaches or data leaks. These issues require immediate attention and remediation.\n     - High: Significant security issues that have the potential to be exploited or result in significant damage if left unaddressed. These findings should be addressed as a priority.\n     - Medium: Issues that pose a potential security risk that are less severe than Critical and High. Remediation of these issues should be prioritized, but they may not require immediate attention.\n     - Low: Low severity indicates issues that have a minimal impact on security or are relatively low-risk. While they may not pose an immediate threat, it is still recommended to address them to maintain a robust security posture.\n     - Info: Info severity is used for informational findings or recommendations that do not pose an immediate security risk but provide helpful guidance, best practices, or suggestions for optimization. These findings can be considered as part of ongoing security hygiene efforts.\n- iacTags: Filter violation based on the tag assigned to the resource.\n- fileTypes: File type filter. Use one of the available file type strings to retrieve issues with files of that type.\n- Benchmarks: Benchmarks filter. Use one of the available benchmark strings to retrieve issues based on the corresponding security benchmark or compliance standard.\n- iacLabels: IaC filter. Use one of the following IaC labels to retrieve corresponding issues:\n     - CustomPolicy: whether or not the presented security issue is associated with a custom policy created by the user.\n     - HasFix: whether or not a fix suggestion is provided for the presented security issue.\n- vulnerabilityRiskFactors: Vulnerability Risk Factors filter. Use one of the following vulnerability risk factor labels to retrieve corresponding issues:\n     - Attack Complexity: Level of effort or skill required for an attacker to exploit a vulnerability. A higher complexity indicates that it is more challenging for an attacker to exploit the vulnerability.\n     - Attack Vector: Path or means through which an attacker can exploit a vulnerability. It describes the method or entry point an attacker can use to access the vulnerable system or application.\n     - DoS (Denial of Service): DoS vulnerabilities that can be exploited to disrupt or disable the normal functioning of a system or application.\n     - HasFix: Vulnerabilities that have a fix or solution, such as a patch, update, or recommended mitigation steps to address the vulnerability.\n     - RemoteExecution: Vulnerabilities that can be exploited remotely, without direct physical or local access to the target system.\n     - ExploitInTheWild: Vulnerabilities with reports of active exploits in real-world attacks. If a vulnerability has an exploit in the wild, it means that attackers are actively taking advantage of the vulnerability.\n     - ExploitPOC:  \"Proof of Concept\" exploits are vulnerabilities with a proof of concept code or demonstration that showcases the vulnerability's exploitation.\n- licenseType: License type filter. Use one of the available license type strings to retrieve identified violations affiliated with the specified license type.\n- repositories: Repositories filter for retrieving issues detected in PR scans and CICD runs on specific repository.\n- runId (required): Scan ID filter. Provide a PR scan or CICD run ID to retrieve issues from the corresponding PR scan or CICD run.\n- enforcementLevel: Scan Status filter. Use one of the following scan statuses to retrieve corresponding issues:\n     - HARD_FAIL: The HARD_FAIL enforcement level indicates that a policy violation must be addressed, and it will result in a failure condition. When a violation is categorized as HARD_FAIL, it means that it is considered critical and must be resolved before the scan or evaluation can pass.\n     - SOFT_FAIL: The SOFT_FAIL enforcement level represents a policy violation that is not critical but should still be addressed. While a SOFT_FAIL violation does not result in an immediate failure condition, it is considered a warning or advisory, indicating a potential security or compliance issue that needs attention.\n     - PASS: The PASS enforcement level indicates that a policy is being evaluated, and no violations or issues have been identified. When a policy evaluation results in a PASS status, it means that the criteria defined by the policy have been met, and no corrective action is required.\n     - UNKNOWN: The UNKNOWN enforcement level signifies that the status or evaluation of a policy could not be determined. This may occur due to various reasons, such as missing or incomplete information, unsupported configurations, or other limitations in the scanning process."
                      },
                      "search": {
                        "$ref": "#/components/schemas/SearchControllerParams",
                        "description": "The `search` field allows you to search for a given term or set of terms across issues of a particular type or types. The `search` field consists of the `term` and the `scopes` fields.\n - term: field is required. It can be a single word, or multiple words joined by the ‘or’ and ‘and’ logical operators.\n - scopes: field is optional. You can provide one or more code categories in this field. The platform searches for the `term` across issues that have the code categories you provide. The following code category scopes are applicable to this endpoint:\n     - IacMisconfiguration: Issues with Infrastructure-as-Code (IaC or iac) templates and scripts that provision and manage cloud resources.\n     - vulnerabilites: Findings related to known security vulnerabilities in open-source packages used in applications that could be exploited by attackers.\n     - buildintegrity: Findings related to the integrity and security of the build pipeline or the software supply chain.\n     - Secrets: Findings related to the handling and management of sensitive information, such as API keys, passwords, or cryptographic keys, within code files.\n     - Licenses: Filter value to retrieve issues related to the non-compliance with license requirements."
                      }
                    },
                    "required": ["filters"],
                    "type": "object"
                  },
                  { "$ref": "#/components/schemas/PaginationRequest" }
                ]
              }
            }
          },
          "description": "- offset: A non-negative integer that indicates the number of items from the start of the results list to skip in the response. The offset parameter, along with the limit parameter, enables you to paginate the results. For example, if you use an offset value of 100 and a limit of 200, the response will contain issues starting from 101 to 300 in the results (matching issues) list. The default value is 0 for no offset, which returns results starting from the first issue.\n- limit: Number of items to return. A non-negative integer that indicates the number of issues from the result list to return. By default, all the matching issues are returned. The default value is 100 and the maximum value is 10000.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsPoliciesGroupedByResource"
                }
              }
            },
            "description": ""
          },
          "422": { "description": "Request arguments validation error" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get Code Issues from Pull Requests Scans and CICD Runs",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSProjects_READ"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/api/v2/code-issues/code_review_scan\"\n\npayload = {\n    \"filters\": {\n        \"benchmarks\": [\"CIS KUBERNETES V1.5\"],\n        \"checkStatus\": \"Error\",\n        \"codeCategories\": [\"IacMisconfiguration\"],\n        \"cwes\": [\"string\"],\n        \"enforcementLevel\": [\"HARD_FAIL\"],\n        \"fileTypes\": [\"build.gradle\"],\n        \"fixableOnly\": True,\n        \"gitUsers\": [\"string\"],\n        \"iacCategories\": [\"IAM\"],\n        \"iacLabels\": [\"CustomPolicy\"],\n        \"iacTags\": [\"string\"],\n        \"licenseType\": [\"OSI_APACHE\"],\n        \"owasp\": [\"string\"],\n        \"repositories\": [\"string\"],\n        \"runId\": 0,\n        \"sastLabels\": [\"CustomPolicy\"],\n        \"secretsRiskFactors\": [\"PublicRepository\"],\n        \"severities\": [\"CRITICAL\"],\n        \"vulnerabilityRiskFactors\": [\"AttackComplexity\"]\n    },\n    \"search\": {\n        \"scopes\": [\"IacMisconfiguration\"],\n        \"term\": \"string\"\n    },\n    \"limit\": 0,\n    \"offset\": 0\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://undefinedundefined/api/v2/code-issues/code_review_scan \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"filters\":{\"benchmarks\":[\"CIS KUBERNETES V1.5\"],\"checkStatus\":\"Error\",\"codeCategories\":[\"IacMisconfiguration\"],\"cwes\":[\"string\"],\"enforcementLevel\":[\"HARD_FAIL\"],\"fileTypes\":[\"build.gradle\"],\"fixableOnly\":true,\"gitUsers\":[\"string\"],\"iacCategories\":[\"IAM\"],\"iacLabels\":[\"CustomPolicy\"],\"iacTags\":[\"string\"],\"licenseType\":[\"OSI_APACHE\"],\"owasp\":[\"string\"],\"repositories\":[\"string\"],\"runId\":0,\"sastLabels\":[\"CustomPolicy\"],\"secretsRiskFactors\":[\"PublicRepository\"],\"severities\":[\"CRITICAL\"],\"vulnerabilityRiskFactors\":[\"AttackComplexity\"]},\"search\":{\"scopes\":[\"IacMisconfiguration\"],\"term\":\"string\"},\"limit\":0,\"offset\":0}'"
          }
        ]
      }
    },
    "/api/v2/git/blameAuthors": {
      "post": {
        "description": "Get list of repositories authors\n\n| Name             | Required            | Type          | In   | Description                                                                     |\n|------------------|---------------------|---------------|------|---------------------------------------------------------------------------------|\n| repositories     | no - default all user permitted repositories   | array<string>  | body  | array of repositories to get git blame authors for |\n| search           | no                                             | string         | query | repositories to filter by                          |\n| page             | no                                             | number         | query | pagination page number                             |\n| pageSize         | no                                             | number         | query | limit query results                                |\n\nRequest Example 1:\n```json\n { \"repositories\": [\"prismacloudcas/terragoat\", \"prismacloudcas/checkov\"] }\n```\nResponse Example 1:\n```json\n[\n    { \"data\": [\"yoni\", \"yehuda\"], hasNext: false }\n]\n```\n\n\nRequest Example 2:\n```json\n { \"search\": \"prismacloudcas/terragoat\", \"page\": 0, \"pageSize\": 100  }\n```\nResponse Example 2:\n```json\n[\n     { \"data\": [\"yoni\", \"yehuda\"], hasNext: false }\n]\n```",
        "operationId": "getBlameAuthors",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": { "format": "double", "type": "number" }
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": { "format": "double", "type": "number" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitBlameAuthorsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GitBlameAuthorsResponse"
                }
              }
            },
            "description": "array of author names"
          },
          "400": {
            "description": "Could not get git blame authors, check POST query params"
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "Could not get git blames authors" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get Repositories Blame Authors",
        "tags": ["Errors"],
        "x-bc-required-permissions": ["CCSProjects_READ"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/api/v2/git/blameAuthors\"\n\nquerystring = {\"search\":\"SOME_STRING_VALUE\",\"page\":\"SOME_NUMBER_VALUE\",\"pageSize\":\"SOME_NUMBER_VALUE\"}\n\npayload = {\"repositories\": [\"string\"]}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'http://undefinedundefined/api/v2/git/blameAuthors?search=SOME_STRING_VALUE&page=SOME_NUMBER_VALUE&pageSize=SOME_NUMBER_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"repositories\":[\"string\"]}'"
          }
        ]
      }
    }
  },
  "servers": null,
  "tags": [{ "name": "Errors" }]
}
