{
  "openapi": "3.0.1",
  "info": {
    "title": "Prisma Cloud: Managed Security Service Provider (MSSP)",
    "description": "APIs to interact with the MSSP Backend Service\n\n# Authentication\n\n",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://mssp-api.prismacloud.io"
    }
  ],
  "tags": [
    {
      "name": "Policy Group to Tenant Group Management",
      "description": "APIs to interact with the MSSP Backend Service\n\n# Authentication\n\n"
    },
    {
      "name": "Policy Group Lifecycle Endpoints",
      "description": "APIs to interact with the MSSP Backend Service\n\n# Authentication\n\n"
    }
  ],
  "paths": {
    "/api/v1/user/{username}/credential": {
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Change Password",
        "description": "Change password for user",
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many api request"
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/user/{username}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get User by username",
        "description": "Get User by username",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details for given username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsspUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One of the required arguments is missing or fails a constraint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsspUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update an existing user",
        "description": "Update an existing user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/MsspUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsspUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One of the required arguments is missing or fails a constraint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsspUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete an existing user",
        "description": "Delete an existing user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successful"
          },
          "400": {
            "description": "Bad request. One of the required arguments is missing or fails a constraint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/policy-group/{pg-id}": {
      "get": {
        "tags": [
          "Policy Group Lifecycle Endpoints"
        ],
        "summary": "Get the details of an existing policy group",
        "description": "Returns the details of an existing policy group. Will use msspId from the auth token if available.",
        "operationId": "get-policy-group-by-id",
        "parameters": [
          {
            "name": "pg-id",
            "in": "path",
            "description": "the id of the policy group",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "34e2e197-f172-4a04-93a4-39b1532648ab"
          },
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the policy group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e91b486a-e139-4d3b-a9dd-959fd5cffb10"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "put": {
        "tags": [
          "Policy Group Lifecycle Endpoints"
        ],
        "summary": "Update a policy group",
        "description": "Updates a policy group if it doesn't exist. Will use msspId from the auth token if available.",
        "operationId": "update-policy-group",
        "parameters": [
          {
            "name": "pg-id",
            "in": "path",
            "description": "the id of the policy group",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "34e2e197-f172-4a04-93a4-39b1532648ab"
          },
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the tenant group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e91b486a-e139-4d3b-a9dd-959fd5cffb10"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PolicyGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Update Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "delete": {
        "tags": [
          "Policy Group Lifecycle Endpoints"
        ],
        "summary": "Delete an existing policy group",
        "description": "Deletes a policy group if it is empty. Will use msspId from the auth token if available.",
        "operationId": "delete-policy-group",
        "parameters": [
          {
            "name": "pg-id",
            "in": "path",
            "description": "the id of the policy group",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "34e2e197-f172-4a04-93a4-39b1532648ab"
          },
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the policy group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e91b486a-e139-4d3b-a9dd-959fd5cffb10"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete Accepted",
            "headers": {
              "Location": {
                "description": "The relative path to the deleted policy group",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/user/{username}/credential/reset-token/validate": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Validate Forgot Password Token",
        "description": "Triggers the validation of a forgot password token and generating a special JWT upon successful validation of the forgot password token",
        "operationId": "validateToken",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request token / Request token expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many api request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTokenResponse"
                }
              }
            }
          }
        },
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/user": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "List users",
        "description": "List users for given mssp console",
        "operationId": "listUsers",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Token to fetch next page. Max pagesize is 60.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mssp-id",
            "in": "path",
            "description": "The id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsspListUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One of the required arguments is missing or fails a constraint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsspListUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Create a new user",
        "description": "Create a new user under a specific MSSP account",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/MsspUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsspUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One of the required arguments is missing or fails a constraint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflicting username found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsspUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/tos": {
      "post": {
        "tags": [
          "MSSP Account Management"
        ],
        "summary": "Terms of Service",
        "description": "Endpoint used to accept terms of service.",
        "operationId": "tosAcceptance",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "The id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error"
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/tenant-group": {
      "get": {
        "tags": [
          "Tenant Group Lifecycle Endpoints"
        ],
        "summary": "Get the tenant group list for an MSSP",
        "description": "Gets the list of tenant groups for an MSSP. Will use msspId from the auth token if available.",
        "operationId": "getTenantGroupsByMsspId",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the managed tenants belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "pagination token to continue a previous queryif set",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TenantGroupsResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "post": {
        "tags": [
          "Tenant Group Lifecycle Endpoints"
        ],
        "summary": "Create a tenant group",
        "description": "Creates a tenant group if it doesn't exist. Will use msspId from the auth token if available.",
        "operationId": "createTenantGroup",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id mssp the tenant group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TenantGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client error. One of the required arguments in the request body is not correctly supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/tenant-group-policy-group-mapping": {
      "post": {
        "tags": [
          "Policy Group to Tenant Group Management"
        ],
        "summary": "Associate policy groups to selected tenant group",
        "description": "Assign the selected policy groups to selected tenant group. Will use msspId from the auth token if available.",
        "operationId": "add-tenant-group-policy-group-mapping",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the tenant group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e91b486a-e139-4d3b-a9dd-959fd5cffb10"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/TenantGroupPolicyGroupMapRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TenantGroupPolicyGroupMappingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/policy-group": {
      "get": {
        "tags": [
          "Policy Group Lifecycle Endpoints"
        ],
        "summary": "Get the details of all existing policy groups",
        "description": "Returns the details of all existing policy groups. Will use msspId from the auth token if available.",
        "operationId": "get-all-policy-groups",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the policy group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e91b486a-e139-4d3b-a9dd-959fd5cffb10"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "pagination token to continue a previous query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyGroupsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "post": {
        "tags": [
          "Policy Group Lifecycle Endpoints"
        ],
        "summary": "Create a policy group",
        "description": "Creates a policy group if it doesn't exist. Will use msspId from the auth token if available.",
        "operationId": "create-policy-group",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the tenant group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e91b486a-e139-4d3b-a9dd-959fd5cffb10"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PolicyGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "The relative path to the created policy group",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePolicyGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/operation/{request-id}/retry": {
      "post": {
        "tags": [
          "MSSP Operations Retry"
        ],
        "summary": "API to retry failed operation",
        "description": "MSSP user API to retry failed operation",
        "operationId": "retryOperation",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "path",
            "description": "the request id being retried",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/OperationAckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client error. One of the required arguments in the request body is not correctly supplied",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/managed-tenant": {
      "get": {
        "tags": [
          "MSSP Managed Tenant Lifecycle Endpoints"
        ],
        "summary": "Get the managed tenants for an MSSP",
        "description": "Gets the list of managed tenants for an MSSP, optionally filterable by tenant group.",
        "operationId": "getManagedTenants",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the managed tenants belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "the tenant groups the managed tenants belong to, accepts multiple. Maximum limit of 10",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "show_synthetic_tenant",
            "in": "query",
            "description": "show synthetic tenant, defaults to false",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "show_deleted_tenants",
            "in": "query",
            "description": "show deleted tenants, defaults to false",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "pagination token to continue a previous query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedTenantsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client error. One of the required arguments in the request body is not correctly supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "post": {
        "tags": [
          "MSSP Managed Tenant Lifecycle Endpoints"
        ],
        "summary": "Create a new managed tenant",
        "description": "Creates a new managed tenant belonging to the MSSP.",
        "operationId": "createManagedTenant",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateManagedTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted. Tenant Creation has async components",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedTenantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client error. One of the required arguments is missing or fails a constraint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "User Authentication"
        ],
        "summary": "Login with username and password",
        "description": "Login with username and password",
        "operationId": "processLogin",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FormLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One of the required arguments is missing or fails a constraint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormLoginResponse"
                }
              }
            }
          }
        },
        "x-public": "true"
      }
    },
    "/api/v1/license/usage": {
      "post": {
        "tags": [
          "Mssp License Endpoints"
        ],
        "summary": "Get the license Usage for MSSP",
        "description": "Get the license Usage for a MSSP",
        "operationId": "getMsspLicenseUsageV1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MsspLicenseUsageRequestObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/MsspLicenseUsageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed, user doesn't have access to the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}": {
      "get": {
        "tags": [
          "MSSP Account Management"
        ],
        "summary": "Get the details of an existing MSSP",
        "description": "Returns the details of an existing MSSP account",
        "operationId": "getMssp",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/MsspResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/tenant-group/{id}": {
      "get": {
        "tags": [
          "Tenant Group Lifecycle Endpoints"
        ],
        "summary": "Get the tenant group by id",
        "description": "Gets a tenant group by id.",
        "operationId": "getTenantGroupById",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the managed tenants belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "the id of the tenant group",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TenantGroupResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "delete": {
        "tags": [
          "Tenant Group Lifecycle Endpoints"
        ],
        "summary": "Delete an existing tenant group",
        "description": "Deletes a tenant group if it is empty. Will use msspId from the auth token if available.",
        "operationId": "deleteTenantGroupById",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the tenant group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "the id of the tenant group",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletion accepted"
          },
          "404": {
            "description": "The MSSP or tenant group does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "patch": {
        "tags": [
          "Tenant Group Lifecycle Endpoints"
        ],
        "summary": "Modify the tenant group by id",
        "description": "Modifies a tenant group by id.",
        "operationId": "patchTenantGroupById",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the managed tenants belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "the id of the tenant group",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TenantGroupResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/managed-tenant/{tenant-id}": {
      "get": {
        "tags": [
          "MSSP Managed Tenant Lifecycle Endpoints"
        ],
        "summary": "Get the details of an existing managed tenant",
        "description": "Returns the details of an existing MSSP.",
        "operationId": "getManagedTenantById",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the managed tenants belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant-id",
            "in": "path",
            "description": "the prisma id or external tenant id of the managed tenant of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedTenantDetailedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client error. One of the required arguments in the request body is not correctly supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The managed tenant does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "delete": {
        "tags": [
          "MSSP Managed Tenant Lifecycle Endpoints"
        ],
        "summary": "Delete a managed tenant",
        "description": "Marks the requested MSSP as deleted.",
        "operationId": "softDeleteManagedTenant",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the managed tenants belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant-id",
            "in": "path",
            "description": "the prisma id or external tenant if of the managed tenant of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Deletion accepted"
          },
          "404": {
            "description": "The managed tenant does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "patch": {
        "tags": [
          "MSSP Managed Tenant Lifecycle Endpoints"
        ],
        "summary": "Modify an existing managed tenant",
        "description": "Modify select attributes of an existing managed tenant, such as updating its MSSP ID",
        "operationId": "updateManagedTenant",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the managed tenants belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant-id",
            "in": "path",
            "description": "the prisma id or external tenant id of the managed tenant of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/UpdateManagedTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedTenantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client error. One of the required arguments in the request body is not correctly supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The managed tenant does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/user/{username}/credential/reset-token": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Generate password reset token",
        "description": "Triggers the forgot password flow where a password reset token is emailed to a validated user",
        "operationId": "resetToken",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "429": {
            "description": "Too many api request"
          }
        },
        "x-public": "true"
      }
    },
    "/api/v1/stack-mapping": {
      "get": {
        "tags": [
          "Stack Details Endpoint"
        ],
        "summary": "Get list of stacks and api hosts",
        "description": "Returns the list of stacks with display name and apiHosts, and plan types",
        "operationId": "requestStackMapping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/StackMappingPlanTypesListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/token-refresh": {
      "get": {
        "tags": [
          "User Authentication"
        ],
        "summary": "Refresh User JWT",
        "description": "Refresh User JWT",
        "operationId": "refreshToken",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "MSSP Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One of the required arguments is missing or fails a constraint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefreshResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/operation": {
      "get": {
        "tags": [
          "MSSP Account Management"
        ],
        "summary": "Get the operation list for an MSSP",
        "description": "Gets the list of operations for an MSSP.",
        "operationId": "getMsspOperations",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "optional filter by status, accepts \"success\", \"failure\", \"in_progress\"",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IN_PROGRESS",
                  "SUCCESS",
                  "FAILURE"
                ]
              }
            }
          },
          {
            "name": "show_retried",
            "in": "query",
            "description": "optional boolean filter to show retried operations, defaults to false",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "pagination token to continue a previous query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/OperationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/managed-tenant/{tenant-id}/login": {
      "get": {
        "tags": [
          "MSSP Managed Tenant Lifecycle Endpoints"
        ],
        "summary": "Seamless login",
        "description": "Seamless login to managed tenant",
        "operationId": "seamlessLogin",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the managed tenants belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant-id",
            "in": "path",
            "description": "the prisma id or external tenant if of the managed tenant of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "landing_page",
            "in": "query",
            "description": "The landing page for redirection on prisma tenant",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeamlessLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "MsspId doesnt match with token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeamlessLoginResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/license-pool": {
      "get": {
        "tags": [
          "MSSP Account Management"
        ],
        "summary": "Get the license pool details of an existing MSSP",
        "description": "Returns the details of an existing MSSP.",
        "operationId": "getMsspLicensePools",
        "parameters": [
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the id of the MSSP of interest",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/MsspLicensePoolsResponse"
                }
              }
            }
          },
          "404": {
            "description": "The MSSP does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limiting error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/license/info": {
      "get": {
        "tags": [
          "Mssp License Endpoints"
        ],
        "summary": "Get the license info for MSSP",
        "description": "Get the license info for a MSSP",
        "operationId": "getMsspLicenseInfoV1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/MsspLicenseInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed, user doesn't have access to the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/mssp/{mssp-id}/tenant-group-policy-group-mapping/{mapping-id}": {
      "delete": {
        "tags": [
          "Policy Group to Tenant Group Management"
        ],
        "summary": "Delete an association of policy group from tenant group",
        "description": "Deletes a policy group association from a tenant group. Will use msspId from the auth token if available.",
        "operationId": "delete-tenant-group-policy-group-mapping",
        "parameters": [
          {
            "name": "mapping-id",
            "in": "path",
            "description": "the id of the policy group to tenant group mapping. You can get this from tenantGroups[x].id of the policy group response.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "52017d1a-d665-4187-8675-33ee1ac5b365"
          },
          {
            "name": "mssp-id",
            "in": "path",
            "description": "the mssp the policy group belongs to",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e91b486a-e139-4d3b-a9dd-959fd5cffb10"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete Accepted",
            "headers": {
              "Location": {
                "description": "The relative path to the deleted tenant group to policy group mapping",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    },
    "/api/v1/proxy/tenant/{prisma-id}/**": {
      "get": {
        "tags": [
          "Proxy Endpoint Provider"
        ],
        "summary": "summary needed",
        "description": "description needed",
        "operationId": "proxyRequest",
        "parameters": [
          {
            "name": "prisma-id",
            "in": "path",
            "description": "prisma-id of the tenant to be proxied to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "body",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "put": {
        "tags": [
          "Proxy Endpoint Provider"
        ],
        "operationId": "proxyRequest_3",
        "parameters": [
          {
            "name": "prisma-id",
            "in": "path",
            "description": "prisma-id of the tenant to be proxied to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "post": {
        "tags": [
          "Proxy Endpoint Provider"
        ],
        "operationId": "proxyRequest_2",
        "parameters": [
          {
            "name": "prisma-id",
            "in": "path",
            "description": "prisma-id of the tenant to be proxied to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "delete": {
        "tags": [
          "Proxy Endpoint Provider"
        ],
        "operationId": "proxyRequest_5",
        "parameters": [
          {
            "name": "prisma-id",
            "in": "path",
            "description": "prisma-id of the tenant to be proxied to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "options": {
        "tags": [
          "Proxy Endpoint Provider"
        ],
        "operationId": "proxyRequest_6",
        "parameters": [
          {
            "name": "prisma-id",
            "in": "path",
            "description": "prisma-id of the tenant to be proxied to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "head": {
        "tags": [
          "Proxy Endpoint Provider"
        ],
        "operationId": "proxyRequest_1",
        "parameters": [
          {
            "name": "prisma-id",
            "in": "path",
            "description": "prisma-id of the tenant to be proxied to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      },
      "patch": {
        "tags": [
          "Proxy Endpoint Provider"
        ],
        "operationId": "proxyRequest_4",
        "parameters": [
          {
            "name": "prisma-id",
            "in": "path",
            "description": "prisma-id of the tenant to be proxied to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserJwt": []
          }
        ],
        "x-public": "true"
      }
    }
  },
  "components": {
    "schemas": {
      "ChangePasswordRequest": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "New Password"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "MsspUserRequest": {
        "required": [
          "firstName",
          "lastName",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "User name of the user."
          },
          "firstName": {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "description": "First name of the user."
          },
          "lastName": {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "description": "Last name of the user."
          }
        }
      },
      "MsspUserResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PolicyGroupRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string",
            "description": "Name of the policy group."
          },
          "policies": {
            "type": "array",
            "description": "Policies assigned to this policy group.",
            "items": {
              "type": "string",
              "description": "Policies assigned to this policy group."
            }
          }
        }
      },
      "ValidateTokenRequest": {
        "required": [
          "resetToken"
        ],
        "type": "object",
        "properties": {
          "resetToken": {
            "type": "string",
            "description": "Reset password token"
          }
        }
      },
      "ValidateTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Reset Password Restricted JWT"
          }
        }
      },
      "ContactInfo": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 63,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "maxLength": 63,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "CreateMsspRequest": {
        "required": [
          "contactInfo",
          "customerSupportId",
          "licensePool",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "customerSupportId": {
            "type": "string"
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "licensePool": {
            "$ref": "#/components/schemas/MsspLicensePoolRequest"
          }
        }
      },
      "MsspLicensePoolRequest": {
        "required": [
          "credits",
          "endDate",
          "poolName",
          "serialNumber",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string"
          },
          "poolName": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "startDate": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "integer",
            "format": "int64"
          },
          "credits": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateTenantGroupRequest": {
        "required": [
          "groupName"
        ],
        "type": "object",
        "properties": {
          "groupName": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "tenantIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TenantGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "groupName": {
            "type": "string"
          },
          "tenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantIds"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          }
        }
      },
      "TenantIds": {
        "type": "object",
        "properties": {
          "externalTenantId": {
            "type": "string"
          },
          "prismaId": {
            "type": "string"
          }
        }
      },
      "TenantGroupPolicyGroupMapRequest": {
        "required": [
          "mappings"
        ],
        "type": "object",
        "properties": {
          "mappings": {
            "type": "array",
            "description": "Tenant group to Policy groups mappings.",
            "items": {
              "$ref": "#/components/schemas/TenantGroupPolicyGroupMapping"
            }
          }
        }
      },
      "TenantGroupPolicyGroupMapping": {
        "required": [
          "policyGroupIds",
          "tenantGroupId"
        ],
        "type": "object",
        "properties": {
          "tenantGroupId": {
            "type": "string",
            "description": "Tenant group to which the policy groups are mapped.",
            "format": "uuid"
          },
          "policyGroupIds": {
            "type": "array",
            "description": "Policy groups to be mapped.",
            "items": {
              "type": "string",
              "description": "Policy groups to be mapped.",
              "format": "uuid"
            }
          }
        },
        "description": "Tenant group to Policy groups mappings."
      },
      "TenantGroupPolicyGroupMappingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenantGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "policyGroupId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TenantGroupPolicyGroupMappingsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantGroupPolicyGroupMappingResponse"
            }
          }
        }
      },
      "CreatePolicyGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "policies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationAckRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ]
          },
          "errorMessage": {
            "type": "string"
          },
          "tenantUpdate": {
            "$ref": "#/components/schemas/TenantUpdate"
          }
        }
      },
      "TenantUpdate": {
        "type": "object",
        "properties": {
          "prismaId": {
            "type": "integer",
            "format": "int64"
          },
          "externalTenantId": {
            "type": "string"
          },
          "stackName": {
            "type": "string"
          },
          "stackBaseUrl": {
            "type": "string"
          }
        }
      },
      "OperationResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid"
          },
          "msspId": {
            "type": "string",
            "format": "uuid"
          },
          "operationType": {
            "type": "string",
            "enum": [
              "MESSAGE_FAN_OUT",
              "ORCHESTRATOR_REQUEST"
            ]
          },
          "operationName": {
            "type": "string",
            "enum": [
              "PROVISION_TENANT",
              "UPDATE_TENANT",
              "DELETE_TENANT",
              "OFFBOARD_TENANT",
              "REPLICATE_ACTION",
              "CREATE_USER",
              "UPDATE_USER",
              "DELETE_USER",
              "POLICY_MAP",
              "POLICY_UNMAP",
              "SYNC_POLICIES"
            ]
          },
          "operationDescription": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "SUCCESS",
              "FAILURE"
            ]
          },
          "tenantChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantChangeResponse"
            }
          },
          "startedBy": {
            "type": "string"
          },
          "startedAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "isRetryable": {
            "type": "boolean"
          },
          "retryOf": {
            "type": "string",
            "format": "uuid"
          },
          "retriedBy": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TenantChangeResponse": {
        "type": "object",
        "properties": {
          "tenantChangeId": {
            "type": "string",
            "format": "uuid"
          },
          "externalTenantId": {
            "type": "string"
          },
          "tenantPrismaId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "SUCCESS",
              "FAILURE"
            ]
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateManagedTenantRequest": {
        "required": [
          "companyName",
          "contactInfo",
          "licenseInfo",
          "name",
          "planType",
          "region"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "companyName": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "tenantGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "planType": {
            "type": "string",
            "enum": [
              "RS_STANDARD",
              "RS_FOUNDATION",
              "RS_ADVANCED"
            ]
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "licenseInfo": {
            "$ref": "#/components/schemas/LicenseInfo"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleInfoRequest"
            }
          }
        }
      },
      "LicenseInfo": {
        "required": [
          "allocatedCredits",
          "licensePoolId"
        ],
        "type": "object",
        "properties": {
          "licensePoolId": {
            "type": "string"
          },
          "allocatedCredits": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ModuleInfoRequest": {
        "required": [
          "enabled",
          "featureName"
        ],
        "type": "object",
        "properties": {
          "featureName": {
            "pattern": "iam-security",
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "additionalData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "ManagedTenantLicenseResponse": {
        "type": "object",
        "properties": {
          "tenantLicenseId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "licensePoolId": {
            "type": "string"
          },
          "allocatedCredits": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ManagedTenantResponse": {
        "type": "object",
        "properties": {
          "prismaId": {
            "type": "string"
          },
          "externalTenantId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "PROVISIONING",
              "UPDATING",
              "DELETING",
              "DELETED",
              "OFFBOARDING",
              "ERRORED"
            ]
          },
          "isSynthetic": {
            "type": "boolean"
          },
          "wasMigrated": {
            "type": "boolean"
          },
          "msspId": {
            "type": "string"
          },
          "tenantGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "planType": {
            "type": "string",
            "enum": [
              "RS_STANDARD",
              "RS_FOUNDATION",
              "RS_ADVANCED"
            ]
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "stack": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "baseApiUrl": {
            "type": "string"
          },
          "tenantLicense": {
            "$ref": "#/components/schemas/ManagedTenantLicenseResponse"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleInfo"
            }
          },
          "erroredBy": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ModuleInfo": {
        "required": [
          "feature_name"
        ],
        "type": "object",
        "properties": {
          "feature_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "billing_type": {
            "type": "string",
            "enum": [
              "TRIAL",
              "BUY"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "PROVISION_STARTED",
              "PROVISION_SUCCESSFUL",
              "PROVISION_FAILED"
            ]
          },
          "additional_data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "FormLoginRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "username of the user"
          },
          "password": {
            "type": "string",
            "description": "password of the user"
          }
        }
      },
      "FormLoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "msspId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "MsspLicenseUsageResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantLicenseUsage"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "TenantLicenseUsage": {
        "type": "object",
        "properties": {
          "tenantName": {
            "type": "string"
          },
          "prismaId": {
            "type": "string"
          },
          "createdOn": {
            "type": "integer",
            "format": "int64"
          },
          "expiringOn": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "PROVISIONING",
              "UPDATING",
              "DELETING",
              "DELETED",
              "OFFBOARDING",
              "ERRORED"
            ]
          },
          "creditsAllocated": {
            "type": "integer",
            "format": "int32"
          },
          "avgConsumption": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64"
          },
          "externalTenantId": {
            "type": "string"
          }
        }
      },
      "MsspLicenseUsageRequestObject": {
        "required": [
          "licensePoolId"
        ],
        "type": "object",
        "properties": {
          "tenantGroupId": {
            "type": "string"
          },
          "licensePoolId": {
            "type": "string"
          },
          "timeRange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RelativeTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/ToNowTimeRangeConfig"
              }
            ]
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "RelativeTimeDuration": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "enum": [
              "week",
              "month",
              "year"
            ]
          },
          "amount": {
            "type": "integer",
            "description": "Number of time units",
            "format": "int32"
          }
        }
      },
      "RelativeTimeRangeConfig": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigObject"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/RelativeTimeDuration"
              }
            }
          }
        ]
      },
      "TimeRangeConfigObject": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "timeUnit": {
            "type": "string"
          },
          "timeValue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ToNowTimeRangeConfig": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigObject"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "week",
                  "month",
                  "year"
                ]
              }
            }
          }
        ]
      },
      "ScheduleTaskRequest": {
        "type": "object",
        "properties": {
          "scheduledTime": {
            "type": "integer",
            "format": "int64"
          },
          "prismaIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "V1Response": {
        "type": "object"
      },
      "UpdateMsspRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "addLicensePool": {
            "$ref": "#/components/schemas/MsspLicensePoolRequest"
          }
        }
      },
      "MsspResponse": {
        "type": "object",
        "properties": {
          "msspId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "customerSupportId": {
            "type": "string"
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          }
        }
      },
      "UpdateTenantGroupRequest": {
        "required": [
          "groupName"
        ],
        "type": "object",
        "properties": {
          "groupName": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "tenantIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateManagedTenantRequest": {
        "type": "object",
        "properties": {
          "tenantGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "companyName": {
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "licenseInfo": {
            "$ref": "#/components/schemas/LicenseInfo"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleInfoRequest"
            }
          }
        }
      },
      "RecurString": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "recurString": {
            "type": "string"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "webhookUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "scheduledTime": {
            "type": "integer",
            "format": "int64"
          },
          "submitTime": {
            "type": "integer",
            "format": "int64"
          },
          "recur": {
            "$ref": "#/components/schemas/RecurString"
          },
          "matureTime": {
            "type": "integer",
            "format": "int64"
          },
          "cancel": {
            "type": "boolean"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "StackMappingPlanTypesListResponse": {
        "type": "object",
        "properties": {
          "stackMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StackMappingResponse"
            }
          },
          "planTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StackMappingResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "apiHost": {
            "type": "string"
          }
        }
      },
      "MsspListUserResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MsspUserResponse"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "TokenRefreshResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "TenantGroupsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantGroupResponse"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "PolicyGroupListResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "policyCount": {
            "type": "integer",
            "format": "int32"
          },
          "tenantGroupCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PolicyGroupsListResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyGroupListResponse"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "PolicyGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "policies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tenantGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantGroupMappingDetails"
            }
          }
        }
      },
      "TenantGroupMappingDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenantGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantGroupName": {
            "type": "string"
          },
          "tenantCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OperationsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationResponse"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "ManagedTenantsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManagedTenantResponse"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "ManagedTenantDetailedResponse": {
        "type": "object",
        "properties": {
          "prismaId": {
            "type": "string"
          },
          "externalTenantId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "PROVISIONING",
              "UPDATING",
              "DELETING",
              "DELETED",
              "OFFBOARDING",
              "ERRORED"
            ]
          },
          "isSynthetic": {
            "type": "boolean"
          },
          "wasMigrated": {
            "type": "boolean"
          },
          "msspId": {
            "type": "string"
          },
          "tenantGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "planType": {
            "type": "string",
            "enum": [
              "RS_STANDARD",
              "RS_FOUNDATION",
              "RS_ADVANCED"
            ]
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "stack": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "baseApiUrl": {
            "type": "string"
          },
          "tenantLicense": {
            "$ref": "#/components/schemas/ManagedTenantLicenseResponse"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleInfo"
            }
          },
          "erroredBy": {
            "type": "string",
            "format": "uuid"
          },
          "policyGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyGroupInfo"
            }
          }
        }
      },
      "PolicyGroupInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "policyCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SeamlessLoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "MsspLicensePoolResponse": {
        "type": "object",
        "properties": {
          "licensePoolId": {
            "type": "string"
          },
          "poolName": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "msspId": {
            "type": "string"
          },
          "totalCredits": {
            "type": "integer",
            "format": "int32"
          },
          "unallocatedCredits": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "integer",
            "format": "int64"
          },
          "tenantLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManagedTenantLicenseResponse"
            }
          }
        }
      },
      "MsspLicensePoolsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MsspLicensePoolResponse"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "LicensePoolInfo": {
        "type": "object",
        "properties": {
          "licensePoolName": {
            "type": "string"
          },
          "licensePoolId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "numOfTenant": {
            "type": "integer",
            "format": "int32"
          },
          "creditsAllocated": {
            "type": "integer",
            "format": "int32"
          },
          "creditsPurchased": {
            "type": "integer",
            "format": "int32"
          },
          "tenantGroupLicenseInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantGroupLicenseInfo"
            }
          }
        }
      },
      "MsspLicenseInfoResponse": {
        "type": "object",
        "properties": {
          "creditsPurchased": {
            "type": "integer",
            "format": "int32"
          },
          "creditsAllocated": {
            "type": "integer",
            "format": "int32"
          },
          "balanceCredit": {
            "type": "integer",
            "format": "int32"
          },
          "numOfTenant": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "msspLicensePoolInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicensePoolInfo"
            }
          }
        }
      },
      "TenantGroupLicenseInfo": {
        "type": "object",
        "properties": {
          "tenantGroupName": {
            "type": "string"
          },
          "tenantGroupId": {
            "type": "string"
          },
          "numOfTenant": {
            "type": "integer",
            "format": "int32"
          },
          "creditsAllocated": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "JwkResponse": {
        "required": [
          "alg",
          "key_ops",
          "kid",
          "kty"
        ],
        "type": "object",
        "properties": {
          "kid": {
            "type": "string"
          },
          "kty": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          },
          "key_ops": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "e": {
            "type": "string"
          },
          "n": {
            "type": "string"
          }
        }
      },
      "JwksResponse": {
        "required": [
          "keys"
        ],
        "type": "object",
        "properties": {
          "keys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JwkResponse"
            }
          }
        }
      }
    },
    "headers": {
      "prismaId": {
        "description": "x-prisma-tenant-id",
        "style": "simple",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "ServiceJwt": {
        "type": "http",
        "description": "Service to Service communication JWT. Such tokens are available to other microservices",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "UserJwt": {
        "type": "http",
        "description": "JWT for User to Service communication. Such tokens are available to MSSP account users",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "x-tagGroups": [
    {
      "tags": [
        "User Authentication",
        "MSSP Account Management",
        "User Management",
        "MSSP Managed Tenant Lifecycle Endpoints",
        "Tenant Group Lifecycle Endpoints",
        "Policy Group Lifecycle Endpoints",
        "Policy Group to Tenant Group Management",
        "MSSP Operations Retry",
        "Mssp License Endpoints",
        "Stack Details Endpoint",
        "Proxy Endpoint Provider"
      ],
      "name": "public"
    },
    {
      "tags": [
        "Managed Tenant Management Service",
        "MSSP Async Change Management",
        "Licensing Job Schedule Management",
        "OIDC Discovery Endpoint",
        "MSSP Account Management Service Endpoint"
      ],
      "name": "service"
    },
    {
      "tags": [
        "Hard Delete Managed Tenant"
      ],
      "name": "support"
    }
  ]
}
