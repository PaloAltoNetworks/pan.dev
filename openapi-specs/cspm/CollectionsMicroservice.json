{
  "openapi": "3.0.1",
  "info": {
    "title": "Platform: Entitlement Service.",
    "contact": {
      "name": "Slack Us",
      "url": "https://panw-rnd.slack.com/archives/G01PXHBT074"
    },
    "version": "1.0"
  },
  "externalDocs": {
    "description": "Platform Wiki Documentation",
    "url": "https://redlock.atlassian.net/wiki/spaces/RED/pages/3211854036/Entitlement+service"
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ],
  "tags": [
    {
      "name": "Collections",
      "description": "Prisma Cloud Collections allow you to define logical groups of assets within Prisma Cloud which are meaningful to the stakeholders in your cloud environments. You can create Collections to represent applications and services, organize your cloud estate by business units, or maintain focused visibility on the security posture of critical components of your cloud infrastructure."
    }
  ],
  "paths": {
    "/entitlement/api/v1/collection/{id}": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "Get Collection by ID",
        "description": "Returns all details of a Collection.\n:::info\nThis endpoint is available on the Prisma Cloud Darwin release only.\n:::\n",
        "externalDocs": {
          "url": "entitlement/api/v1/collection/#id",
          "x-ga": "false"
        },
        "operationId": "get-collection-by-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Collection Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "API is rate limited",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-ga": "23.10.2-darwin",
        "x-public": "true"
      },
      "put": {
        "tags": [
          "Collections"
        ],
        "summary": "Update Collection",
        "description": "Update Collection or Asset Groups details.\n:::info\nThis endpoint is available on the Prisma Cloud Darwin release only.\n:::\n",
        "externalDocs": {
          "url": "entitlement/api/v1/collection/#id",
          "x-ga": "false"
        },
        "operationId": "update-collection-by-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Collections Data Model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "API is rate limited",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-ga": "23.10.2-darwin",
        "x-public": "true"
      },
      "delete": {
        "tags": [
          "Collections"
        ],
        "summary": "Delete Collection",
        "description": "Deletes a Collection with the specified ID.\n:::info\nThis endpoint is available on the Prisma Cloud Darwin release only.\n:::\n",
        "externalDocs": {
          "url": "entitlement/api/v1/collection/#id",
          "x-ga": "false"
        },
        "operationId": "delete-collection-by-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Collection Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "API is rate limited",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-ga": "23.10.2-darwin",
        "x-public": "true"
      }
    },
    "/entitlement/api/v1/collection": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "Get All Collections",
        "description": "Returns all Collections in a paginated format, sorted by ID desc.\n:::info\nThis endpoint is available on the Prisma Cloud Darwin release only.\n:::\n",
        "externalDocs": {
          "url": "entitlement/api/v1/collection",
          "x-ga": "false"
        },
        "operationId": "get-all-collections",
        "parameters": [
          {
            "name": "exclude_asset_group",
            "in": "query",
            "description": "Exclude AssetGroup from response.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of records per page. Default is 50 and max is 500.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by records based of ID, NAME, LAST_MODIFIED_TS.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Token to fetch next page  Collections.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PrismaCollectionView"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "API is rate limited",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-ga": "23.10.2-darwin",
        "x-public": "true"
      },
      "post": {
        "tags": [
          "Collections"
        ],
        "summary": "Create Collection",
        "description": "Create a new Collection comprising of Asset Group Types. You can use '*' to include all Ids for a given assetGroupType.\n:::info\nThis endpoint is available on the Prisma Cloud Darwin release only.\n:::\n",
        "externalDocs": {
          "url": "entitlement/api/v1/collection",
          "x-ga": "false"
        },
        "operationId": "create-collection",
        "requestBody": {
          "description": "Collections Data Model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collection"
              },
              "examples": {
                "CREATE COLLECTION": {
                  "description": "Create a new Collection comprising of Asset Group Types. You can use '*' to include all Ids for a given assetGroupType. \nIn the below examples all accountIds will be included.",
                  "value": {
                    "name": "test-collection",
                    "description": "test description",
                    "assetGroups": {
                      "accountGroupIds": [
                        "ag1",
                        "ag2"
                      ],
                      "repositoryIds": [
                        "r1",
                        "r2"
                      ],
                      "accountIds": [
                        "*"
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "API is rate limited",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-ga": "23.10.2-darwin",
        "x-public": "true"
      }
    }
  },
  "components": {
    "schemas": {
      "JsonNode": {
        "type": "object",
        "description": "Resource list members. Each member is raw JSON. The content depends on the resource list type. For example, if the resource list type is TAG, then the member  is a JSON array of TAG key/name pairs."
      },
      "ResourceListModel": {
        "required": [
          "members",
          "name",
          "resourceListType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource list id",
            "readOnly": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name"
          },
          "resourceListType": {
            "$ref": "#/components/schemas/ResourceListType"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Last modified by",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "description": "Last modified time",
            "format": "int64",
            "readOnly": true,
            "example": 1652910398
          },
          "members": {
            "$ref": "#/components/schemas/JsonNode"
          }
        },
        "description": "Model for Resource List"
      },
      "ResourceListType": {
        "type": "string",
        "description": "Resource List Type",
        "externalDocs": {
          "description": "TAG, RESOURCE_GROUP, COMPUTE_ACCESS_GROUP are only GA values",
          "url": "NOT_IMPLEMENTED"
        },
        "enum": [
          "TAG",
          "RESOURCE_ID",
          "STRING",
          "IP_ADDRESS",
          "NUMBER",
          "RESOURCE_GROUP",
          "COMPUTE_ACCESS_GROUP"
        ]
      },
      "ErrorDetails": {
        "required": [
          "message",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SpringErrorResponse": {
        "required": [
          "error",
          "httpStatus",
          "message",
          "path",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "httpStatus": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "message": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "AccountGroupModel": {
        "required": [
          "accountIds",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Account Group ID",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Last Modified By",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "description": "Last Modified Time",
            "format": "int64",
            "readOnly": true
          },
          "accountIds": {
            "type": "array",
            "description": "Cloud Account IDs",
            "items": {
              "type": "string",
              "description": "Cloud Account IDs"
            }
          },
          "autoCreated": {
            "type": "boolean",
            "description": "Boolean read-only attribute to indicate if account group is automatically created",
            "readOnly": true
          },
          "cloudAccountCount": {
            "type": "integer",
            "description": "Number of cloud accounts associated with this account group",
            "format": "int32",
            "readOnly": true
          },
          "cloudAccountInfos": {
            "type": "array",
            "description": "Cloud account details of account associated with this account group",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudAccountInfo"
            }
          },
          "parentGroupId": {
            "type": "string",
            "description": "Parent Group ID",
            "readOnly": true
          },
          "childGroupIds": {
            "type": "array",
            "description": "Child Group IDs",
            "items": {
              "type": "string",
              "description": "Child Group IDs"
            }
          }
        },
        "description": "Model for Account Group"
      },
      "CloudAccountInfo": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID"
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "readOnly": true
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Last Modified By",
            "readOnly": true
          }
        },
        "description": "Cloud account info linked to an account group",
        "readOnly": true
      },
      "AssetGroup": {
        "type": "object",
        "properties": {
          "accountGroupIds": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accountIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "repositoryIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "AssetGroup that are part of Collection"
      },
      "Collection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Collection id",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Collection name"
          },
          "description": {
            "type": "string",
            "description": "Collection description"
          },
          "createdBy": {
            "type": "string",
            "description": "User who created the collection",
            "readOnly": true
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "User who last updated the collection ",
            "readOnly": true
          },
          "createdTs": {
            "type": "integer",
            "description": "Collection created date",
            "format": "int64",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "description": "Collection last updated date",
            "format": "int64",
            "readOnly": true
          },
          "assetGroups": {
            "$ref": "#/components/schemas/AssetGroup"
          }
        },
        "description": "Collections Data Model"
      },
      "AccountGroupPage": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroupV1"
            }
          },
          "nextPageToken": {
            "type": "string"
          },
          "nextPageUrl": {
            "type": "string"
          }
        }
      },
      "AccountGroupV1": {
        "required": [
          "accountIds",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Account Group ID",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Last Modified By",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "description": "Last Modified Time",
            "format": "int64",
            "readOnly": true
          },
          "accountIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "Cloud Account IDs",
            "items": {
              "type": "string",
              "description": "Cloud Account IDs"
            }
          },
          "nonOnboardedCloudAccountIds": {
            "title": "This field specifies accounts which have not been on-boarded on PC but have Compute defender deployed",
            "uniqueItems": true,
            "type": "array",
            "description": "Non Onboarded Cloud Account IDs",
            "externalDocs": {
              "description": "Not GAed",
              "url": "NOT_IMPLEMENTED"
            },
            "items": {
              "title": "This field specifies accounts which have not been on-boarded on PC but have Compute defender deployed",
              "type": "string",
              "description": "Non Onboarded Cloud Account IDs",
              "externalDocs": {
                "description": "Not GAed",
                "url": "NOT_IMPLEMENTED"
              }
            }
          },
          "autoCreated": {
            "type": "boolean",
            "description": "Boolean read-only attribute to indicate if account group is automatically created",
            "readOnly": true
          },
          "cloudAccountCount": {
            "type": "integer",
            "description": "Number of cloud accounts associated with this account group",
            "format": "int32",
            "readOnly": true
          },
          "parentGroupId": {
            "type": "string",
            "description": "Parent Group ID",
            "readOnly": true,
            "externalDocs": {
              "description": "Not GAed",
              "url": "NOT_IMPLEMENTED"
            }
          }
        },
        "description": "Model for Account Group"
      },
      "AccountGroupCriteria": {
        "title": "AccountGroup Search Request Filter",
        "type": "object",
        "properties": {
          "accountGroupIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "AccountGroup Ids. Search returns only matching records in the response ",
            "items": {
              "type": "string"
            }
          },
          "includeChildAccountGroups": {
            "type": "boolean",
            "description": "Fetch child account groups for the parent account group ids defined in #accountGroupIds filter. ",
            "default": false
          },
          "excludeAutoCreated": {
            "type": "boolean",
            "description": "Exclude auto created account groups.  Note that if excludeAutoCreated is set to true AUTO_CREATED field will always be included in the response irrespective of the #includefields criteria ",
            "default": false
          }
        }
      },
      "Entity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "FOLDER",
              "ACCOUNT",
              "ORG"
            ]
          },
          "onboarded": {
            "type": "boolean"
          }
        }
      },
      "OnboardRequest": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entity"
            }
          }
        },
        "description": "Model for Account Group"
      },
      "CustomerSupportFilter": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResourceListNames": {
        "required": [
          "resourceListType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource List id"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "resourceListType": {
            "$ref": "#/components/schemas/ResourceListType"
          }
        }
      },
      "AccountGroupMetadataViewModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Account Group ID",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "autoCreated": {
            "type": "boolean",
            "description": "Boolean to indicate if account group is automatically created",
            "readOnly": true
          }
        }
      },
      "AccountGroupViewModel": {
        "required": [
          "accountIds",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Account Group ID",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Last Modified By",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "description": "Last Modified Time",
            "format": "int64",
            "readOnly": true
          },
          "accountIds": {
            "type": "array",
            "description": "Cloud Account IDs",
            "items": {
              "type": "string",
              "description": "Cloud Account IDs"
            }
          },
          "autoCreated": {
            "type": "boolean",
            "description": "Boolean read-only attribute to indicate if account group is automatically created",
            "readOnly": true
          },
          "cloudAccountCount": {
            "type": "integer",
            "description": "Number of cloud accounts associated with this account group",
            "format": "int32",
            "readOnly": true
          },
          "cloudAccountInfos": {
            "type": "array",
            "description": "Cloud account details of account associated with this account group",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudAccountInfo"
            }
          },
          "parentGroupId": {
            "type": "string",
            "description": "Parent Group ID",
            "readOnly": true
          },
          "childGroupIds": {
            "type": "array",
            "description": "Child Group IDs",
            "items": {
              "type": "string",
              "description": "Child Group IDs"
            }
          },
          "accounts": {
            "type": "array",
            "description": "Associated Cloud Accounts",
            "readOnly": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "description": "Associated Cloud Accounts",
                "readOnly": true
              },
              "description": "Associated Cloud Accounts",
              "readOnly": true
            }
          },
          "alertRules": {
            "type": "array",
            "description": "Singly associated alert rules which cannot exist in the system without the account group",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CustomAlertRule"
            }
          },
          "parentInfo": {
            "$ref": "#/components/schemas/AccountGroupMetadataViewModel"
          }
        },
        "description": "Model for Account Group View"
      },
      "CustomAlertRule": {
        "type": "object",
        "properties": {
          "alertId": {
            "type": "string"
          },
          "alertName": {
            "type": "string"
          }
        },
        "description": "Singly associated alert rules which cannot exist in the system without the account group",
        "readOnly": true
      },
      "PrismaCollectionView": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Collection"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "AccountGroupV1Page": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroupV1"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      }
    },
    "headers": {
      "prismaId": {
        "description": "x-prisma-tenant-id",
        "style": "simple",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    }
  },
  "x-tagGroups": [
    {
      "tags": [
        "ResourceLists",
        "AccountGroups",
        "Collections"
      ],
      "name": "public"
    },
    {
      "tags": [
        "ResourceLists Service",
        "AccountGroups Service",
        "Collections Service"
      ],
      "name": "service"
    },
    {
      "tags": [
        "ResourceLists Support"
      ],
      "name": "support"
    }
  ]
}
