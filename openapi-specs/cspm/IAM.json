{
  "openapi": "3.0.1",
  "info": {
    "title": "IAM Security API Overview",
    "description": "Prisma Cloud identity and access management (IAM) security provides:\n* Visiblity&mdash;Query all relevant IAM entities\n* Gonvernance&mdash;Monitor your cloud environment for overly-used permissions\n* Response&mdash;Automatically remediate permissions\n\nThe IAM security endpoints enable you to investigate IAM data programmatically.\n\nSee [Primsa Cloud IAM Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-iam-security/what-is-prisma-cloud-iam-security.html)\nfor more information.\n\n\n### Error Handling\n\nLike other Prisma Cloud public API requests, the IAM security API requests return standard HTTP response codes. \nUnlike most other CSPM API error handling, IAM security API error responses do not include an [x-redlock-status](//prisma-cloud/api/cspm/api-errors)\nin the response header.\n\n\n### Pagination\n\nYou can control the number of items in a response for endpoints that support pagination. \nUse request parameter **limit** to control the maximum number of items in a response. If the response includes\n**data.nextPageToken**, use **data.nextPageToken** as the request parameter **pageToken** in a request for\nthe next page of data. \n\nThe following table summarizes the request parameters for pagination:\n\nRequest Parameter  | Description  \n-----------| -------\n**limit** | Maximum number of items to return in a page.\n**pageToken** | Use the **data.nextPageToken** value from the previous response object to return the next page of data.\n",
    "version": "Latest",
    "contact": {}
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ],
  "tags": [
    {
      "name": "IAM",
      "description": "Prisma Cloud identity and access management (IAM) security provides:\n* Visiblity&mdash;Query all relevant IAM entities\n* Gonvernance&mdash;Monitor your cloud environment for overly-used permissions\n* Response&mdash;Automatically remediate permissions\n\nThe IAM security endpoints enable you to investigate IAM data programmatically.\n\nSee [Primsa Cloud IAM Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-iam-security/what-is-prisma-cloud-iam-security.html)\nfor more information.\n\n\n### Error Handling\n\nLike other Prisma Cloud public API requests, the IAM security API requests return standard HTTP response codes. \nUnlike most other CSPM API error handling, IAM security API error responses do not include an [x-redlock-status](//prisma-cloud/api/cspm/api-errors)\nin the response header.\n\n\n### Pagination\n\nYou can control the number of items in a response for endpoints that support pagination. \nUse request parameter **limit** to control the maximum number of items in a response. If the response includes\n**data.nextPageToken**, use **data.nextPageToken** as the request parameter **pageToken** in a request for\nthe next page of data. \n\nThe following table summarizes the request parameters for pagination:\n\nRequest Parameter  | Description  \n-----------| -------\n**limit** | Maximum number of items to return in a page.\n**pageToken** | Use the **data.nextPageToken** value from the previous response object to return the next page of data.\n"
    }
  ],
  "paths": {
    "/api/v1/permission": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Permissions",
        "description": "Returns the results of a given [IAM query](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-rql-reference/rql-reference/iam-query.html).\n\nIf you set the **Accept** request header to **appliation/json**, the response object contains an array of items with permissions data.\n\nThe request parameter **limit** determines the number of items&mdash;for example, permissions&mdash;in the response object. If the amount of available data is greater than the specified **limit**, use the response object attribute **data.nextPageToken** as the request parameter **pageToken** in [Get Permissions Next Page](/prisma-cloud/api/cspm/get-next-permissions-page-with-post) to request the next page of data.\n\nIf you set the **Accept** request header to **text/csv**, the response is a CSV that contains permissions details.",
        "operationId": "get-permissions-with-post",
        "requestBody": {
          "description": "Model for Permission Search Request DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionSearchRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSearchResponseDto"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorize"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/page": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Permissions Next Page",
        "operationId": "get-next-permissions-page-with-post",
        "description": "Given a request parameter **pageToken**, returns the next page of permissions data. You can find the value for **pageToken** from the response object of a previous request to [Get Permissions](/prisma-cloud/api/cspm/get-permissions-with-post).",
        "requestBody": {
          "description": "Model for Permission Search Page Request DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionSearchPageRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSearchResultDataDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSearchResultDataDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorize"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/access": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Permissions Access",
        "description": "Given a permission ID and an \n[IAM query](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-rql-reference/rql-reference/iam-query.html),\nreturns data about the actual permission usage (last access).\n\n\nThe request parameter **limit** determines the number of items&mdash;that is, last access&mdash;in the response object. \n\n\nIf the amount of available data is greater than the \nspecified **limit**, use the response object attribute **data.nextPageToken** as the request parameter **pageToken** in \n[Get Permissions Access Next Page](/prisma-cloud/api/cspm/get-next-permissions-access-with-post) to request the\nnext page of data.\n",
        "operationId": "get-permissions-access-with-post",
        "requestBody": {
          "description": "Model for Permission Access Request DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionAccessRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionAccessResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/access/page": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Permissions Access Next Page",
        "description": "Given a request parameter **pageToken**, returns the next page of permissions data.\nYou can find the value for **pageToken** from the response object of a previous request to \n[Get Permissions Access](/prisma-cloud/api/cspm/get-permissions-access-with-post)\n",
        "operationId": "get-next-permissions-access-with-post",
        "requestBody": {
          "description": "Model for Permission Access Page Request DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionAccessPageRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionAccessResultDataDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorize"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/alert/remediation": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Remediation",
        "operationId": "get-remediation-with-post",
        "description": "Returns a list of remediations for the specified alert IDs.",
        "requestBody": {
          "description": "Model for RemediationRequestDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemediationRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/alert/search": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "Get IAM Query",
        "operationId": "get-rql-with-get",
        "description": "Returns the IAM query for the specified alert ID.",
        "parameters": [
          {
            "name": "alertId",
            "in": "query",
            "description": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RqlResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/suggest": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Query Suggestions",
        "operationId": "get-suggestions-with-post",
        "description": "Given a partial IAM query, returns suggestions to append to your query either to create a complete valid IAM query or to build a further partial query. Also indicates whether or not the query you input is already a valid IAM query.",
        "requestBody": {
          "description": "Model for SuggestRequestDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    },
    "schemas": {
      "PermissionAccessPageRequestDto": {
        "description": "Model for Permission Access Page Request DTO",
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Maximun number of items to return for the given query. Default is 0.",
            "format": "int32",
            "example": 5
          },
          "pageToken": {
            "type": "string",
            "description": "Page token (default: empty string)",
            "example": "++fdfkjsdlfsdfdFDSFDFSDFdfdssfdFDS"
          }
        }
      },
      "PermissionAccessRequestDto": {
        "description": "Model for Permission Access Request DTO",
        "required": [
          "permissionId",
          "query"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Maximun number of items to return for the given query. Default is 0.",
            "format": "int32",
            "example": 5
          },
          "permissionId": {
            "type": "string",
            "description": "Permission Id",
            "example": "111111"
          },
          "query": {
            "type": "string",
            "description": "Query string",
            "example": "config from iam where ..."
          }
        }
      },
      "PermissionAccessResponseDto": {
        "description": "Model for Permission Access Response DTO",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PermissionAccessResultDataDto"
          }
        }
      },
      "PermissionAccessResultDataDto": {
        "description": "Model for Permission Access Result Data DTO",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Permissions list",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PermissionLastAccessDto"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Next page token",
            "readOnly": true,
            "example": "++fdfkjsdlfsdfdFDSFDFSDFdfdssfdFDS"
          },
          "totalRows": {
            "type": "integer",
            "description": "Total row count",
            "format": "int64",
            "readOnly": true,
            "example": 1243
          }
        }
      },
      "PermissionDto": {
        "description": "Model for Permission DTO",
        "type": "object",
        "properties": {
          "accessedResourcesCount": {
            "type": "integer",
            "description": "Accessed resource count",
            "format": "int64"
          },
          "destCloudAccount": {
            "type": "string",
            "description": "Destination cloud account",
            "example": "123456789"
          },
          "destCloudRegion": {
            "type": "string",
            "description": "Destination cloud region",
            "example": "AWS London"
          },
          "destCloudResourceRrn": {
            "type": "string",
            "description": "Destination cloud resource RRN",
            "example": "rrn::other:eu-west-2:123456789012::my-function"
          },
          "destCloudServiceName": {
            "type": "string",
            "description": "Destination cloud service name",
            "example": "iam"
          },
          "destCloudType": {
            "type": "string",
            "description": "Destination cloud type",
            "example": "AWS"
          },
          "destResourceId": {
            "type": "string",
            "description": "Destination cloud resource id",
            "example": "arn:aws:iam::111111:user/john"
          },
          "destResourceName": {
            "type": "string",
            "description": "Destination cloud resource name",
            "example": "john"
          },
          "destResourceType": {
            "type": "string",
            "description": "Destination cloud resource type",
            "example": "user"
          },
          "effectiveActionName": {
            "type": "string",
            "description": "Effective action name"
          },
          "exceptions": {
            "type": "array",
            "description": "Permission exception list",
            "items": {
              "$ref": "#/components/schemas/PermissionExceptionDto"
            }
          },
          "grantedByCloudEntityId": {
            "type": "string",
            "description": "Granted by cloud entity id",
            "example": "arn:aws:iam::<account>:role/my-role"
          },
          "grantedByCloudEntityName": {
            "type": "string",
            "description": "Granted by cloud entity name",
            "example": "my-role"
          },
          "grantedByCloudEntityRrn": {
            "type": "string",
            "description": "Granted by cloud entity rrn",
            "example": "rrn::other::123456789:AIDAIDAIDAIDAIDAIDAID"
          },
          "grantedByCloudEntityType": {
            "type": "string",
            "description": "Granted by cloud entity type",
            "example": "user"
          },
          "grantedByCloudPolicyId": {
            "type": "string",
            "description": "Granted by cloud policy Id",
            "example": "arn:aws:iam::aws:policy/aws-policy"
          },
          "grantedByCloudPolicyName": {
            "type": "string",
            "description": "Granted by cloud policy name",
            "example": "my-policy"
          },
          "grantedByCloudPolicyRrn": {
            "type": "string",
            "description": "Granted by cloud policy rrn",
            "example": "rrn::iamPolicy::123456789012::arn:aws:iam:eu-west-2"
          },
          "grantedByCloudPolicyType": {
            "type": "string",
            "description": "Granted by cloud policy type",
            "example": "Customer Managed Policy"
          },
          "grantedByCloudType": {
            "type": "string",
            "description": "Granted by cloud type",
            "example": "AWS"
          },
          "id": {
            "type": "string",
            "description": "Message id",
            "example": "13"
          },
          "isWildCardDestCloudResourceName": {
            "type": "boolean",
            "description": "Is destination cloud resource name a wildcard",
            "example": false
          },
          "lastAccessDate": {
            "type": "string",
            "description": "Last accessed data"
          },
          "sourceCloudAccount": {
            "type": "string",
            "description": "Source cloud account",
            "example": "123456789"
          },
          "sourceCloudRegion": {
            "type": "string",
            "description": "Source cloud region",
            "example": "AWS London"
          },
          "sourceCloudResourceRrn": {
            "type": "string",
            "description": "Source cloud resource RRN",
            "example": "rrn::iamUser::123456789012::AIDAIDAIDAIDAIDAIDAID"
          },
          "sourceCloudServiceName": {
            "type": "string",
            "description": "Source cloud service name",
            "example": "iam"
          },
          "sourceCloudType": {
            "type": "string",
            "description": "Source cloud type",
            "example": "AWS"
          },
          "sourceIdpDomain": {
            "type": "string",
            "description": "Source IDP domain"
          },
          "sourceIdpEmail": {
            "type": "string",
            "description": "Source IDP email"
          },
          "sourceIdpGroup": {
            "type": "string",
            "description": "Source IDP group"
          },
          "sourceIdpRrn": {
            "type": "string",
            "description": "Source idp RRN",
            "example": "rrn::other::idp-account-id::idp-user-id"
          },
          "sourceIdpService": {
            "type": "string",
            "description": "Source IDP service",
            "enum": [
              "AZURE_AD",
              "OKTA",
              "UNKNOWN"
            ]
          },
          "sourceIdpUsername": {
            "type": "string",
            "description": "Source IDP user name"
          },
          "sourcePublic": {
            "type": "boolean",
            "description": "Is source public",
            "example": false
          },
          "sourceResourceId": {
            "type": "string",
            "description": "Source cloud resource id",
            "example": "arn:aws:iam::111111:user/john"
          },
          "sourceResourceName": {
            "type": "string",
            "description": "Source cloud resource name",
            "example": "john"
          },
          "sourceResourceType": {
            "type": "string",
            "description": "Source cloud resource type",
            "example": "user"
          }
        }
      },
      "PermissionExceptionDto": {
        "description": "Model for Permission Exception DTO",
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string",
            "description": "Message code",
            "example": "LIMITED_BY_DENY_STATEMENT"
          }
        }
      },
      "PermissionLastAccessDto": {
        "description": "Model for Permission Last Access DTO",
        "type": "object",
        "properties": {
          "destCloudResourceName": {
            "type": "string",
            "description": "Destination cloud resource name",
            "example": "my-function"
          },
          "lastAccessDate": {
            "type": "string",
            "description": "Action last access date in the format of a unix timestamp",
            "example": "1593691785"
          }
        }
      },
      "PermissionSearchPageRequestDto": {
        "description": "Model for Permission Search Page Request DTO",
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Maximun number of items to return"
          },
          "pageToken": {
            "type": "string",
            "description": "Page token from the response object of an earlier request to get permissions."
          }
        }
      },
      "PermissionSearchRequestDto": {
        "description": "Model for Permission Search Request DTO",
        "required": [
          "limit",
          "query"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Request user Id",
            "example": "123456"
          },
          "limit": {
            "type": "integer",
            "description": "Maximun number of items to return for the given query",
            "format": "int32",
            "example": 5
          },
          "query": {
            "type": "string",
            "description": "IAM RQL query",
            "example": "config from iam where ..."
          }
        }
      },
      "PermissionSearchResponseDto": {
        "description": "Model for Permission Search Response DTO",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PermissionSearchResultDataDto"
          },
          "description": {
            "type": "string",
            "description": "Search description",
            "example": "search-description"
          },
          "id": {
            "type": "string",
            "description": "Request user Id",
            "example": "111111"
          },
          "name": {
            "type": "string",
            "description": "Search name",
            "example": "search-name"
          },
          "query": {
            "type": "string",
            "description": "Query string",
            "example": "config from iam where ..."
          },
          "saved": {
            "type": "boolean",
            "description": "Is search saved",
            "example": true
          },
          "searchType": {
            "type": "string",
            "description": "Search type",
            "example": "search-type"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeDto"
          }
        }
      },
      "PermissionSearchResultDataDto": {
        "description": "Model for Permission Search Result Data DTO",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Requested permissions list",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Next page token",
            "example": "++fdfkjsdlfsdfdFDSFDFSDFdfdssfdFDS"
          },
          "searchedDestCloudResourceNames": {
            "uniqueItems": true,
            "type": "array",
            "description": "Searched destination cloud resource names",
            "example": [],
            "items": {
              "type": "string"
            }
          },
          "totalRows": {
            "type": "integer",
            "description": "Total row count",
            "format": "int64",
            "example": 1243
          }
        }
      },
      "RemediationRequestDto": {
        "description": "Model for Remediation Request DTO",
        "required": [
          "alerts"
        ],
        "type": "object",
        "properties": {
          "alerts": {
            "type": "array",
            "description": "List of relevant alerts",
            "example": [
              "I-1234",
              "I-1235"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RemediationResponseDto": {
        "description": "Model for Remediation Response DTO",
        "type": "object",
        "properties": {
          "alertIdVsCliScript": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of relevant remediations",
            "readOnly": true,
            "example": {
              "I-1234": "cli command1",
              "I-1235": "cli command2"
            }
          },
          "cliDescription": {
            "type": "string",
            "description": "Cli Description",
            "readOnly": true,
            "example": "The following are CLI commands required for remediation. Successful execution will limit the relevant permissions of the violating resource.}"
          }
        }
      },
      "RqlResponseDto": {
        "description": "Model for RQL Response DTO",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "query": {
            "type": "string"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeDto"
          }
        }
      },
      "SuggestRequestDto": {
        "description": "Model for Suggest Request DTO",
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Query to validate",
            "example": "config from iam where dest.cloud.type='AWS'"
          }
        }
      },
      "SuggestResponseDto": {
        "description": "Model for Suggest Response DTO",
        "type": "object",
        "properties": {
          "needsOffsetUpdate": {
            "type": "boolean",
            "description": "Should add offset from the query beginning",
            "readOnly": true,
            "example": true
          },
          "offset": {
            "type": "integer",
            "description": "The number of characters of offset from the query beginning",
            "format": "int32",
            "readOnly": true,
            "example": 43
          },
          "suggestions": {
            "uniqueItems": true,
            "type": "array",
            "description": "Suggestion list",
            "readOnly": true,
            "example": [
              "AND"
            ],
            "items": {
              "type": "string"
            }
          },
          "translate": {
            "type": "boolean",
            "description": "Should translate",
            "readOnly": true,
            "example": false
          },
          "valid": {
            "type": "boolean",
            "description": "Is query valid",
            "readOnly": true,
            "example": true
          }
        }
      },
      "TimeRangeDto": {
        "description": "Model for Time Range DTO",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Time range type",
            "example": "to_now"
          },
          "value": {
            "type": "string",
            "description": "Time range value",
            "example": "epoch"
          }
        }
      }
    }
  }
}
