{
  "openapi": "3.0.3",
  "info": {
    "title": "On-demand Alert Notification APIs (Alerts side)",
    "version": "1.0.0"
  },
  "paths": {
    "/alerts/api/v1/notification/ondemand": {
      "post": {
        "summary": "Create On Demand Notification",
        "description": "Create on demand notification for an alert. Supported channels are: \n1. Jira\n2. Email \n3. Slack\n:::info\nThis endpoint is available on the Prisma Cloud Darwin release only.\n:::\n",
        "operationId": "create-Ondemand-Notification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/OnDemandNotificationConfigRequest"
              },
              "examples": {
                "1": {
                  "summary": "On-demand Jira Notification Config Request",
                  "value": {
                    "alertId": "P-17952602",
                    "onDemandNotificationConfig": {
                      "integrationType": "jira",
                      "templateId": "Jira template Id",
                      "recipients": [
                        "integration id for jira or email for email etc."
                      ]
                    }
                  }
                },
                "2": {
                  "summary": "On-demand Email Notification Config Request",
                  "value": {
                    "alertId": "P-486491",
                    "onDemandNotificationConfig": {
                      "integrationType": "email",
                      "recipients": [
                        "xxxx@paloaltonetworks.com",
                        "yyyy@paloaltonetworks.com"
                      ]
                    },
                    "translation": {
                      "body": "Free text message (optional)",
                      "details": {
                        "sender": "John Doe",
                        "recipients": "John Doe, Tom Cruise (optional)",
                        "callbackUrl": "https://app-sam105348.sam.prismacloud.io/alerts/overview?viewId%3Ddefault%26filters%3D%7B%22timeRange%22%3A%7B%22type%22%3A%22to_now%22%2C%22value%22%3A%22epoch%22%7D%2C%22timeRange.type%22%3A%22ALERT_OPENED%22%2C%22alert.status%22%3A%5B%22open%22%5D%2C%22alert.id%22%3A%5B%22A-1002%22%5D%7D%26openAlertId%3DA-363 (optional)",
                        "assetCallbackUrl": "https://kchen-rlp-120271-snap.prismacloud.dev/inventory/assets/asset-explorer?assetId=ceac319a5dbe3e2de706271be29289e9 (optional)"
                      }
                    }
                  }
                },
                "3": {
                  "summary": "On-demand Slack Notification Config Request",
                  "value": {
                    "alertId": "A-292704246",
                    "onDemandNotificationConfig": {
                      "integrationType": "slack",
                      "recipients": [
                        "<slack integration id>"
                      ]
                    },
                    "translation": {
                      "body": "Free text message (optional)",
                      "details": {
                        "callbackUrl": "https://app-sam105348.sam.prismacloud.io/alerts/overview?viewId%3Ddefault%26filters%3D%7B%22timeRange%22%3A%7B%22type%22%3A%22to_now%22%2C%22value%22%3A%22epoch%22%7D%2C%22timeRange.type%22%3A%22ALERT_OPENED%22%2C%22alert.status%22%3A%5B%22open%22%5D%2C%22alert.id%22%3A%5B%22A-1002%22%5D%7D%26openAlertId%3DA-363 (optional)",
                        "assetCallbackUrl": "https://kchen-rlp-120271-snap.prismacloud.dev/inventory/assets/asset-explorer?assetId=ceac319a5dbe3e2de706271be29289e9 (optional)"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NotificationResponse"
                },
                "examples": {
                  "1": {
                    "summary": "On-demand Jira Notification Response",
                    "value": {
                      "success": 1,
                      "failed": 0,
                      "successfulEvents": [
                        {
                          "recipient": {
                            "generatorType": "REALTIME",
                            "integrationType": "jira",
                            "id": "151fbea7-8a64-4367-b500-735b685752bf"
                          },
                          "customerId": 3,
                          "clientId": "CS",
                          "metaData": {
                            "jiraKey": "P-1234(JIRA ID)"
                          },
                          "notificationId": "dd67ac26-b2e2-4775-abbf-a40a6dec6a24"
                        }
                      ],
                      "failedEvents": {}
                    }
                  },
                  "2": {
                    "summary": "On-demand Email Notification Response",
                    "value": {
                      "success": 1,
                      "failed": 0,
                      "successfulEvents": [
                        {
                          "recipient": {
                            "generatorType": "REALTIME",
                            "integrationType": "email",
                            "id": "xxxx@paloaltonetworks.com, yyyy@paloaltonetworks.com"
                          },
                          "customerId": 6,
                          "clientId": "CS",
                          "id": "null#1809667743",
                          "notificationId": "b9f0ac86-cb46-4859-9779-1385f97d4e56"
                        }
                      ],
                      "failedEvents": {}
                    }
                  },
                  "3": {
                    "summary": "On-demand Slack Notification Response",
                    "value": {
                      "success": 1,
                      "failed": 0,
                      "successfulEvents": [
                        {
                          "recipient": {
                            "generatorType": "REALTIME",
                            "integrationType": "slack",
                            "id": "92bf2080-dee0-4145-b4d8-19de27cf1f00"
                          },
                          "customerId": 6,
                          "clientId": "CS",
                          "id": "null#1739477015",
                          "notificationId": "30b98415-10b5-4ed8-a994-e8ff82cca531"
                        }
                      ],
                      "failedEvents": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "1": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "alertId is not defined"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "x-public": "true",
        "x-ga": "24.1.2-darwin",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "OnDemandNotificationConfigRequest": {
        "title": "OnDemandNotificationConfigRequest (/alerts/api/v1/notification/ondemand or /config Request)",
        "type": "object",
        "required": true,
        "properties": {
          "prismaId": {
            "required": false,
            "type": "long"
          },
          "alertId": {
            "required": true,
            "type": "string"
          },
          "onDemandNotificationConfig": {
            "type": "object",
            "required": true,
            "$ref": "#/components/schemas/OnDemandNotificationConfig"
          },
          "translation": {
            "type": "object",
            "required": false,
            "$ref": "#/components/schemas/Translation"
          }
        }
      },
      "OnDemandNotificationConfig": {
        "title": "OnDemandNotificationConfig",
        "type": "object",
        "properties": {
          "id": {
            "required": false,
            "type": "string"
          },
          "clientId": {
            "required": false,
            "type": "string"
          },
          "generatorType": {
            "required": false,
            "type": "string"
          },
          "integrationType": {
            "required": true,
            "type": "string"
          },
          "templateId": {
            "required": true,
            "type": "string"
          },
          "recipients": {
            "required": true,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Translation": {
        "title": "Translation",
        "type": "object",
        "properties": {
          "body": {
            "required": true,
            "type": "string"
          },
          "details": {
            "required": false,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "attachments": {
            "required": false,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "NotificationResponse": {
        "title": "NotificationResponse (/alerts/api/v1/notification/ondemand Response)",
        "type": "object",
        "properties": {
          "success": {
            "type": "integer"
          },
          "failed": {
            "type": "integer"
          },
          "successfulEvents": {
            "type": "object",
            "$ref": "#/components/schemas/SuccessfulEvents"
          },
          "failedEvents": {
            "type": "object"
          }
        }
      },
      "SuccessfulEvents": {
        "title": "SuccessfulEvents (/alerts/api/v1/notification/ondemand Response sub object)",
        "type": "object",
        "properties": {
          "recipient": {
            "type": "object"
          },
          "customerId": {
            "type": "integer"
          },
          "clientId": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          },
          "notificationId": {
            "type": "string"
          }
        }
      },
      "AlertModel": {
        "title": "AlertModel (/alerts/api/v1/notification/metadata Requesst)",
        "type": "object",
        "required": [
          "accountId",
          "clientId",
          "cloudType",
          "customerId",
          "metadataTs",
          "policyTs",
          "policyType",
          "resourceId",
          "resourceTs",
          "stackName",
          "verdict"
        ],
        "properties": {
          "accountId": {
            "type": "string",
            "example": "ACC657432"
          },
          "additionalHash": {
            "type": "integer",
            "format": "int64",
            "example": 553195237
          },
          "alertId": {
            "type": "string"
          },
          "alertRuleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "alertRuleTs": {
            "type": "integer",
            "format": "int64"
          },
          "allowAutoRemediation": {
            "type": "boolean",
            "description": "Allow auto remediation."
          },
          "attributionSupported": {
            "type": "boolean",
            "description": "Attribution supported."
          },
          "clientId": {
            "type": "string",
            "description": "client Id."
          },
          "cloudType": {
            "type": "integer",
            "format": "int32",
            "example": "1 - aws"
          },
          "customerId": {
            "type": "string",
            "example": "11111"
          },
          "externalResourceId": {
            "type": "string",
            "example": "1010101"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoryModel"
            }
          },
          "metadata": {
            "example": "",
            "$ref": "#/components/schemas/JsonNode"
          },
          "metadataTs": {
            "type": "integer",
            "format": "int64"
          },
          "policyId": {
            "type": "string",
            "example": "222233"
          },
          "policyTs": {
            "type": "integer",
            "format": "int64"
          },
          "policyType": {
            "type": "integer",
            "format": "int32",
            "example": "1 - config"
          },
          "reason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "region": {
            "type": "string",
            "example": "us-east-2"
          },
          "resourceAdditionalInfo": {
            "example": "",
            "$ref": "#/components/schemas/JsonNode"
          },
          "resourceApiId": {
            "type": "integer",
            "format": "int32",
            "example": "16"
          },
          "resourceData": {
            "example": "",
            "$ref": "#/components/schemas/JsonNode"
          },
          "resourceDeletedTs": {
            "type": "integer",
            "format": "int64"
          },
          "resourceId": {
            "type": "string",
            "example": "1010101"
          },
          "resourceName": {
            "type": "string",
            "example": "web server"
          },
          "resourceTs": {
            "type": "integer",
            "format": "int64"
          },
          "rrn": {
            "type": "string",
            "example": "rrn:aws:storageObject:us-east-2:1234"
          },
          "stackName": {
            "type": "string",
            "example": "app2"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertTags"
            }
          },
          "url": {
            "type": "string",
            "example": "rrn:aws:storageObject:us-east-2:1234:app-qa-logs:/AWSLogs/1234/2020/04/04/1234.log.gz"
          },
          "verdict": {
            "type": "string",
            "description": "Verdict from Config Scanner used for Create Alerts.",
            "enum": [
              "PASS",
              "FAIL"
            ]
          }
        }
      },
      "HistoryModel": {
        "type": "object",
        "properties": {
          "alertTs": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "reason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "HistoryModel"
      },
      "JsonNode": {
        "type": "object",
        "properties": {
          "array": {
            "type": "boolean"
          },
          "bigDecimal": {
            "type": "boolean"
          },
          "bigInteger": {
            "type": "boolean"
          },
          "binary": {
            "type": "boolean"
          },
          "boolean": {
            "type": "boolean"
          },
          "containerNode": {
            "type": "boolean"
          },
          "double": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          },
          "float": {
            "type": "boolean"
          },
          "floatingPointNumber": {
            "type": "boolean"
          },
          "int": {
            "type": "boolean"
          },
          "integralNumber": {
            "type": "boolean"
          },
          "long": {
            "type": "boolean"
          },
          "missingNode": {
            "type": "boolean"
          },
          "nodeType": {
            "type": "string",
            "enum": [
              "ARRAY",
              "BINARY",
              "BOOLEAN",
              "MISSING",
              "NULL",
              "NUMBER",
              "OBJECT",
              "POJO",
              "STRING"
            ]
          },
          "null": {
            "type": "boolean"
          },
          "number": {
            "type": "boolean"
          },
          "object": {
            "type": "boolean"
          },
          "pojo": {
            "type": "boolean"
          },
          "short": {
            "type": "boolean"
          },
          "textual": {
            "type": "boolean"
          },
          "valueNode": {
            "type": "boolean"
          }
        },
        "title": "JsonNode"
      },
      "AlertTags": {
        "title": "AlertTags",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "NotificationMetadata": {
        "title": "NotificationMetadata (/alert/v1/notification/metadata Response)",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "type": "object",
        "required": true,
        "properties": {
          "error": {
            "type": "object",
            "required": true,
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "required": true,
        "properties": {
          "code": {
            "required": true,
            "type": "string"
          },
          "message": {
            "required": true,
            "type": "string"
          },
          "target": {
            "required": false,
            "type": "string"
          },
          "details": {
            "required": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    }
  },
  "securitySchemes": {
    "oauth_authcode": {
      "description": "Authentication via OAuth2 with authorization code flow",
      "type": "oauth2",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://api-stage.prismacloud.io/_service/auth-server/api/v1/oauth",
          "tokenUrl": "https://api-stage.prismacloud.io/_service/auth-server/api/v1/token_info"
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ]
}
