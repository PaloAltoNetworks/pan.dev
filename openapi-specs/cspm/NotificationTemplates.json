{
  "components": {
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    },
    "schemas": {
      "EventsApiError": {
        "properties": {
          "debugMessage": { "type": "string" },
          "message": { "type": "string" },
          "status": {
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ],
            "type": "string"
          },
          "subErrors": {
            "items": { "$ref": "#/components/schemas/EventsApiSubError" },
            "type": "array"
          },
          "timestamp": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "EventsApiSubError": { "type": "object" },
      "EventsCreateTemplateRequest": {
        "properties": {
          "integrationId": {
            "description": "Integration Id",
            "example": "123e4567-e89b-42d3-a456-55664244",
            "type": "string"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": ["email", "jira", "service_now"],
            "example": "email",
            "type": "string"
          },
          "name": {
            "description": "Template name",
            "example": "sample-template",
            "maxLength": 100,
            "minLength": 5,
            "pattern": "^[A-Za-z0-9](.){0,99}$",
            "type": "string"
          },
          "templateConfig": {
            "additionalProperties": {
              "description": "Template configuration",
              "items": {
                "$ref": "#/components/schemas/EventsNotificationFieldsConfig"
              },
              "type": "array"
            },
            "description": "Template config",
            "type": "object"
          }
        },
        "required": ["integrationType", "name", "templateConfig"],
        "type": "object"
      },
      "EventsFieldConfigOption": {
        "properties": {
          "id": { "description": "Field option ID", "type": "string" },
          "key": { "description": "Field option key", "type": "string" },
          "name": { "description": "Field option name", "type": "string" }
        },
        "type": "object"
      },
      "EventsNotificationFieldsConfig": {
        "properties": {
          "aliasField": { "description": "Alias field", "type": "string" },
          "displayName": { "description": "Display name", "type": "string" },
          "fieldName": { "description": "Field name", "type": "string" },
          "maxLength": {
            "description": "Maximum length",
            "format": "int32",
            "type": "integer"
          },
          "options": {
            "items": { "$ref": "#/components/schemas/EventsFieldConfigOption" },
            "type": "array"
          },
          "redlockMapping": {
            "description": "true = Prisma Cloud will provide the field value for notification",
            "type": "boolean"
          },
          "required": { "description": "true = Required", "type": "boolean" },
          "type": {
            "description": "Type of field",
            "enum": ["list", "text", "array", "bool", "integer"],
            "type": "string"
          },
          "typeaheadUri": {
            "description": "URL used to query suggestions for field value",
            "type": "string"
          },
          "value": { "description": "Field value", "type": "string" }
        },
        "type": "object"
      },
      "EventsNotificationTemplate": {
        "properties": {
          "createdBy": {
            "description": "User who created the notification template",
            "type": "string"
          },
          "createdTs": {
            "description": "Creation Unix timestamp in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "enabled": { "description": "true = Enabled", "type": "boolean" },
          "id": { "description": "Notification template ID", "type": "string" },
          "integrationId": {
            "description": "Integration ID",
            "type": "string"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": ["email", "jira", "service_now"],
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "User who modified template last",
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Modification Unix timestamp in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name. Cannot include special characters ('<', '>', '!', '=', '\\n', '\\r'). Maximum length is 99.\n",
            "type": "string"
          },
          "templateConfig": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/EventsNotificationFieldsConfig"
              },
              "type": "array"
            },
            "type": "object"
          }
        },
        "required": ["customerId", "integrationType", "name"],
        "type": "object"
      },
      "EventsTestTemplateRequest": {
        "properties": {
          "integrationId": {
            "description": "Integration ID",
            "type": "string"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": ["email", "jira", "service_now"],
            "type": "string"
          },
          "name": { "description": "Template name", "type": "string" },
          "templateConfig": {
            "additionalProperties": {
              "description": "Template Config",
              "items": {
                "$ref": "#/components/schemas/EventsNotificationFieldsConfig"
              },
              "type": "array"
            },
            "description": "Template Config",
            "type": "object"
          }
        },
        "required": [
          "integrationId",
          "integrationType",
          "name",
          "templateConfig"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Notification templates allow you to configure notifications about the Prisma Cloud alerts to:\n\n* Email \n* ServiceNow \n* Jira \n",
    "title": "Prisma Cloud Notification Template V1 API",
    "version": "Latest"
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/v1/tenant/{prismaId}/template": {
      "get": {
        "description": "Returns a list of notification templates. \n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account Group Admin\n* Account and Cloud Provisioning Admin\n* Account Group Read Only\n",
        "operationId": "get-all-templates-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/api/cloud/cspm/login#operation/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Comma-separated list of Template IDs",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": { "items": { "type": "string" }, "type": "array" }
          },
          {
            "description": "Comma-separated list of integration types that support notification templates. \nValid values: \n\n* email\n* jira\n* service_now\n",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": { "items": { "type": "string" }, "type": "array" }
          },
          {
            "in": "query",
            "description": "true = Enabled",
            "name": "enabled",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EventsNotificationTemplate"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "429": { "description": "Too Many Requests" },
          "500": { "description": "Internal Server Error" },
          "4XX": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventsApiError" }
              }
            },
            "description": "default response"
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List Templates",
        "tags": ["Notification Templates"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/api/v1/tenant/{prismaId}/template\"\n\nquerystring = {\"id\":\"SOME_ARRAY_VALUE\",\"type\":\"SOME_ARRAY_VALUE\",\"enabled\":\"SOME_BOOLEAN_VALUE\"}\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/api/v1/tenant/{prismaId}/template?id=SOME_ARRAY_VALUE&type=SOME_ARRAY_VALUE&enabled=SOME_BOOLEAN_VALUE' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "post": {
        "description": "Creates a notification template. \nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account and Cloud Provisioning Admin\n",
        "operationId": "create-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/api/cloud/cspm/login#operation/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsCreateTemplateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsNotificationTemplate"
                }
              }
            },
            "description": "OK"
          },
          "429": { "description": "Too Many Requests" },
          "500": { "description": "Internal Server Error" },
          "4XX": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventsApiError" }
              }
            },
            "description": "default response"
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Add Template",
        "tags": ["Notification Templates"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/api/v1/tenant/{prismaId}/template\"\n\npayload = {\n    \"integrationId\": \"123e4567-e89b-42d3-a456-55664244\",\n    \"integrationType\": \"email\",\n    \"name\": \"sample-template\",\n    \"templateConfig\": {\n        \"property1\": [\n            {\n                \"aliasField\": \"string\",\n                \"displayName\": \"string\",\n                \"fieldName\": \"string\",\n                \"maxLength\": 0,\n                \"options\": [\n                    {\n                        \"id\": \"string\",\n                        \"key\": \"string\",\n                        \"name\": \"string\"\n                    }\n                ],\n                \"redlockMapping\": True,\n                \"required\": True,\n                \"type\": \"list\",\n                \"typeaheadUri\": \"string\",\n                \"value\": \"string\"\n            }\n        ],\n        \"property2\": [\n            {\n                \"aliasField\": \"string\",\n                \"displayName\": \"string\",\n                \"fieldName\": \"string\",\n                \"maxLength\": 0,\n                \"options\": [\n                    {\n                        \"id\": \"string\",\n                        \"key\": \"string\",\n                        \"name\": \"string\"\n                    }\n                ],\n                \"redlockMapping\": True,\n                \"required\": True,\n                \"type\": \"list\",\n                \"typeaheadUri\": \"string\",\n                \"value\": \"string\"\n            }\n        ]\n    }\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/api/v1/tenant/{prismaId}/template \\\n  --header 'content-type: application/json' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"integrationId\":\"123e4567-e89b-42d3-a456-55664244\",\"integrationType\":\"email\",\"name\":\"sample-template\",\"templateConfig\":{\"property1\":[{\"aliasField\":\"string\",\"displayName\":\"string\",\"fieldName\":\"string\",\"maxLength\":0,\"options\":[{\"id\":\"string\",\"key\":\"string\",\"name\":\"string\"}],\"redlockMapping\":true,\"required\":true,\"type\":\"list\",\"typeaheadUri\":\"string\",\"value\":\"string\"}],\"property2\":[{\"aliasField\":\"string\",\"displayName\":\"string\",\"fieldName\":\"string\",\"maxLength\":0,\"options\":[{\"id\":\"string\",\"key\":\"string\",\"name\":\"string\"}],\"redlockMapping\":true,\"required\":true,\"type\":\"list\",\"typeaheadUri\":\"string\",\"value\":\"string\"}]}}'"
          }
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/template/{id}": {
      "get": {
        "description": "Returns the notification template with the specified ID. \n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account Group Admin\n* Account and Cloud Provisioning Admin\n* Account Group Read  Only\n",
        "operationId": "get-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/api/cloud/cspm/login#operation/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Template Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsNotificationTemplate"
                }
              }
            },
            "description": "OK"
          },
          "429": { "description": "Too many requests" },
          "500": { "description": "Internal server error" },
          "4XX": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventsApiError" }
              }
            },
            "description": "default response"
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Get Template by ID",
        "tags": ["Notification Templates"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/api/v1/tenant/{prismaId}/template/{id}\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/api/v1/tenant/{prismaId}/template/{id} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "patch": {
        "description": "Updates the template with the specified ID. \nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account and Cloud Provisioning Admin\n",
        "operationId": "update-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/api/cloud/cspm/login#operation/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Template ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsNotificationTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "OK" },
          "429": { "description": "Too Many Requests" },
          "500": { "description": "Internal Server Error" },
          "4XX": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventsApiError" }
              }
            },
            "description": "default response"
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update Template",
        "tags": ["Notification Templates"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/api/v1/tenant/{prismaId}/template/{id}\"\n\npayload = {\n    \"createdBy\": \"string\",\n    \"createdTs\": 0,\n    \"enabled\": True,\n    \"id\": \"string\",\n    \"integrationId\": \"string\",\n    \"integrationType\": \"email\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedTs\": 0,\n    \"name\": \"string\",\n    \"templateConfig\": {\n        \"property1\": [\n            {\n                \"aliasField\": \"string\",\n                \"displayName\": \"string\",\n                \"fieldName\": \"string\",\n                \"maxLength\": 0,\n                \"options\": [\n                    {\n                        \"id\": \"string\",\n                        \"key\": \"string\",\n                        \"name\": \"string\"\n                    }\n                ],\n                \"redlockMapping\": True,\n                \"required\": True,\n                \"type\": \"list\",\n                \"typeaheadUri\": \"string\",\n                \"value\": \"string\"\n            }\n        ],\n        \"property2\": [\n            {\n                \"aliasField\": \"string\",\n                \"displayName\": \"string\",\n                \"fieldName\": \"string\",\n                \"maxLength\": 0,\n                \"options\": [\n                    {\n                        \"id\": \"string\",\n                        \"key\": \"string\",\n                        \"name\": \"string\"\n                    }\n                ],\n                \"redlockMapping\": True,\n                \"required\": True,\n                \"type\": \"list\",\n                \"typeaheadUri\": \"string\",\n                \"value\": \"string\"\n            }\n        ]\n    }\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"PATCH\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PATCH \\\n  --url https://api.prismacloud.io/api/v1/tenant/{prismaId}/template/{id} \\\n  --header 'content-type: application/json' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"createdBy\":\"string\",\"createdTs\":0,\"enabled\":true,\"id\":\"string\",\"integrationId\":\"string\",\"integrationType\":\"email\",\"lastModifiedBy\":\"string\",\"lastModifiedTs\":0,\"name\":\"string\",\"templateConfig\":{\"property1\":[{\"aliasField\":\"string\",\"displayName\":\"string\",\"fieldName\":\"string\",\"maxLength\":0,\"options\":[{\"id\":\"string\",\"key\":\"string\",\"name\":\"string\"}],\"redlockMapping\":true,\"required\":true,\"type\":\"list\",\"typeaheadUri\":\"string\",\"value\":\"string\"}],\"property2\":[{\"aliasField\":\"string\",\"displayName\":\"string\",\"fieldName\":\"string\",\"maxLength\":0,\"options\":[{\"id\":\"string\",\"key\":\"string\",\"name\":\"string\"}],\"redlockMapping\":true,\"required\":true,\"type\":\"list\",\"typeaheadUri\":\"string\",\"value\":\"string\"}]}}'"
          }
        ]
      },
      "delete": {
        "description": "Deletes a template with the specified ID.\n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account and Cloud Provisioning Admin\n",
        "operationId": "delete-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/api/cloud/cspm/login#operation/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Template Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "429": { "description": "Too Many Requests" },
          "500": { "description": "Internal Server Error" },
          "4XX": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventsApiError" }
              }
            },
            "description": "default response"
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Delete Template",
        "tags": ["Notification Templates"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/api/v1/tenant/{prismaId}/template/{id}\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.prismacloud.io/api/v1/tenant/{prismaId}/template/{id} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/template/test": {
      "post": {
        "description": "Runs a test of the notification template for the specified data. \n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account and Cloud Provisioning Admin\n",
        "operationId": "test-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/api/cloud/cspm/login#operation/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Template ID",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsTestTemplateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "OK" },
          "429": { "description": "Too Many Requests" },
          "500": { "description": "Internal Server Error" },
          "4XX": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventsApiError" }
              }
            },
            "description": "default response"
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Test Template",
        "tags": ["Notification Templates"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/api/v1/tenant/{prismaId}/template/test\"\n\nquerystring = {\"id\":\"SOME_STRING_VALUE\"}\n\npayload = {\n    \"integrationId\": \"string\",\n    \"integrationType\": \"email\",\n    \"name\": \"string\",\n    \"templateConfig\": {\n        \"property1\": [\n            {\n                \"aliasField\": \"string\",\n                \"displayName\": \"string\",\n                \"fieldName\": \"string\",\n                \"maxLength\": 0,\n                \"options\": [\n                    {\n                        \"id\": \"string\",\n                        \"key\": \"string\",\n                        \"name\": \"string\"\n                    }\n                ],\n                \"redlockMapping\": True,\n                \"required\": True,\n                \"type\": \"list\",\n                \"typeaheadUri\": \"string\",\n                \"value\": \"string\"\n            }\n        ],\n        \"property2\": [\n            {\n                \"aliasField\": \"string\",\n                \"displayName\": \"string\",\n                \"fieldName\": \"string\",\n                \"maxLength\": 0,\n                \"options\": [\n                    {\n                        \"id\": \"string\",\n                        \"key\": \"string\",\n                        \"name\": \"string\"\n                    }\n                ],\n                \"redlockMapping\": True,\n                \"required\": True,\n                \"type\": \"list\",\n                \"typeaheadUri\": \"string\",\n                \"value\": \"string\"\n            }\n        ]\n    }\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://api.prismacloud.io/api/v1/tenant/{prismaId}/template/test?id=SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"integrationId\":\"string\",\"integrationType\":\"email\",\"name\":\"string\",\"templateConfig\":{\"property1\":[{\"aliasField\":\"string\",\"displayName\":\"string\",\"fieldName\":\"string\",\"maxLength\":0,\"options\":[{\"id\":\"string\",\"key\":\"string\",\"name\":\"string\"}],\"redlockMapping\":true,\"required\":true,\"type\":\"list\",\"typeaheadUri\":\"string\",\"value\":\"string\"}],\"property2\":[{\"aliasField\":\"string\",\"displayName\":\"string\",\"fieldName\":\"string\",\"maxLength\":0,\"options\":[{\"id\":\"string\",\"key\":\"string\",\"name\":\"string\"}],\"redlockMapping\":true,\"required\":true,\"type\":\"list\",\"typeaheadUri\":\"string\",\"value\":\"string\"}]}}'"
          }
        ]
      }
    }
  },
  "servers": [{ "url": "https://api.prismacloud.io" }],
  "tags": [
    {
      "description": "The Notification Template endpoints are listed below.",
      "name": "Notification Templates"
    }
  ]
}
