{
  "components": {
    "requestBodies": {
      "CreateDataPatternRequest": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/CreateDataPatternRequest"
            }
          }
        }
      },
      "DataProfile": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": { "$ref": "#/components/schemas/DataProfile" }
          }
        }
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    },
    "schemas": {
      "AbsoluteTimeRangeConfigModel": {
        "allOf": [
          { "$ref": "#/components/schemas/TimeRangeConfigModel" },
          {
            "description": "Model for AbsoluteTimeRangeConfig",
            "properties": {
              "type": { "example": "absolute", "type": "string" },
              "value": {
                "allOf": [
                  { "$ref": "#/components/schemas/TimeModel" },
                  { "description": "Time range object" }
                ]
              }
            },
            "required": ["value"],
            "type": "object"
          }
        ]
      },
      "CreateDataPatternRequest": {
        "description": "Create/Update Pattern Model with limited input",
        "properties": {
          "delimiter": { "description": "Delimiter", "type": "string" },
          "description": {
            "description": "Pattern description",
            "type": "string"
          },
          "detectionTechnique": {
            "description": "Detection technique",
            "type": "string"
          },
          "entity": { "description": "Entity value", "type": "string" },
          "grammar": { "description": "Grammar value", "type": "string" },
          "name": { "description": "Pattern name", "type": "string" },
          "parentId": { "description": "Parent ID", "type": "string" },
          "proximityKeywords": {
            "description": "List of proximity keywords",
            "items": { "type": "string" },
            "type": "array"
          },
          "regexes": {
            "description": "List of regexes",
            "items": { "$ref": "#/components/schemas/Regexes" },
            "type": "array"
          },
          "rootType": { "description": "Root type", "type": "string" },
          "s3Path": { "description": "S3 path", "type": "string" }
        },
        "required": [
          "delimiter",
          "description",
          "detectionTechnique",
          "entity",
          "grammar",
          "name",
          "parentId",
          "rootType",
          "s3Path"
        ],
        "type": "object"
      },
      "DLPAPIResponse": {
        "description": "Model for response from API",
        "properties": {
          "detail": { "description": "Exception details", "type": "string" },
          "message": { "description": "API response", "type": "string" },
          "name": { "description": "Exception name", "type": "string" }
        },
        "type": "object"
      },
      "DSSDataProfiles": {
        "description": "Model for DLP Data Profiles",
        "properties": {
          "profiles": {
            "description": "Data profiles",
            "items": { "$ref": "#/components/schemas/Profiles" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DSSProfile": {
        "description": "Model for Enable/Disable Data Profiles",
        "properties": {
          "id": { "description": "Profile Id", "type": "string" },
          "profileStatus": {
            "description": "Profile Status (active or disabled)",
            "type": "string"
          }
        },
        "required": ["id", "profileStatus"],
        "type": "object"
      },
      "DataPatternConfidenceLevel": {
        "properties": {
          "name": { "description": "Pattern name", "type": "string" },
          "supportedConfidenceLevels": {
            "description": "List of confidence level",
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataPatternDetails": {
        "description": "DataPatternDetails Model class",
        "properties": {
          "confidenceLevels": {
            "description": "List of confidence level",
            "items": { "type": "string" },
            "type": "array"
          },
          "description": {
            "description": "Pattern description",
            "type": "string"
          },
          "detectionTechnique": {
            "description": "Pattern technique",
            "type": "string"
          },
          "id": { "description": "Pattern id", "type": "string" },
          "name": { "description": "Pattern name", "type": "string" },
          "proximityKeywords": {
            "description": "Proximity keywords",
            "items": { "type": "string" },
            "type": "array"
          },
          "status": { "description": "Pattern status", "type": "string" }
        },
        "type": "object"
      },
      "DataPatternList": {
        "description": "DataPattern List with Filters for UI",
        "properties": {
          "lastUpdatedByFilter": {
            "description": "Last Updated By Filter",
            "items": { "type": "string" },
            "type": "array"
          },
          "modeFilter": {
            "description": "Mode Filter",
            "items": { "type": "string" },
            "type": "array"
          },
          "patterns": {
            "description": "Pattern List",
            "items": { "$ref": "#/components/schemas/DataPatternModel" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataPatternModel": {
        "description": "Data Pattern Model",
        "properties": {
          "confidenceLevels": {
            "description": "List of confidence levels",
            "items": { "type": "string" },
            "type": "array"
          },
          "createdBy": {
            "description": "Created By",
            "readOnly": true,
            "type": "string"
          },
          "delimiter": {
            "description": "Delimiter to separate the regex and weight in UI",
            "type": "string"
          },
          "description": {
            "description": "Pattern Description",
            "type": "string"
          },
          "detectionTechnique": {
            "description": "Detection technique",
            "type": "string"
          },
          "entity": { "description": "Entity", "type": "string" },
          "grammar": { "description": "Grammar", "type": "string" },
          "id": { "description": "Pattern id", "type": "string" },
          "isEditable": {
            "description": "Is Editable",
            "readOnly": true,
            "type": "boolean"
          },
          "mode": {
            "description": "Mode (custom/predefined)",
            "type": "string"
          },
          "name": { "description": "Pattern Name", "type": "string" },
          "parentId": { "description": "Parent ID", "type": "string" },
          "proximityKeywords": {
            "description": "List of Proximity Keywords",
            "items": { "type": "string" },
            "type": "array"
          },
          "regexes": {
            "description": "List of regexes",
            "items": { "$ref": "#/components/schemas/Regexes" },
            "type": "array"
          },
          "rootType": { "description": "Root Type", "type": "string" },
          "s3Path": {
            "description": "S3 Path to the grammar",
            "type": "string"
          },
          "status": { "description": "Pattern status", "type": "string" },
          "updatedAt": {
            "description": "Last updated At",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "updatedBy": {
            "description": "Updated By",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "confidenceLevels",
          "description",
          "detectionTechnique",
          "id",
          "name",
          "proximityKeywords",
          "regexes",
          "status"
        ],
        "type": "object"
      },
      "DataPatternRules": {
        "description": "Data Pattern rules",
        "properties": {
          "confidencLevel": {
            "description": "Confidence level",
            "type": "string"
          },
          "detectionTechnique": {
            "description": "Detection technique",
            "type": "string"
          },
          "id": { "description": "Pattern id", "type": "string" },
          "matchType": { "description": "Match type", "type": "string" },
          "name": { "description": "Pattern name", "type": "string" },
          "occurrenceCount": {
            "description": "Occurrence count",
            "format": "int32",
            "type": "integer"
          },
          "occurrenceHigh": {
            "description": "High Occurrence value",
            "format": "int32",
            "type": "integer"
          },
          "occurrenceLow": {
            "description": "Low Occurrence value",
            "format": "int32",
            "type": "integer"
          },
          "occurrenceOperatorType": {
            "description": "Occurrence type",
            "type": "string"
          },
          "supportedConfidenceLevels": {
            "description": "List of supported confidence levels",
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataPatternRulesOne": {
        "description": "DataProfile Rules",
        "properties": {
          "dataPatternRules": {
            "description": "Pattern rules",
            "items": { "$ref": "#/components/schemas/DataPatternRules" },
            "type": "array"
          },
          "operatorType": {
            "description": "Pattern operator type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataProfile": {
        "description": "Model class for Create and Update Data Profile",
        "properties": {
          "dataPatternsRule1": {
            "allOf": [
              { "$ref": "#/components/schemas/DataPatternRulesOne" },
              { "description": "Profile patterns" }
            ]
          },
          "description": {
            "description": "Profile description",
            "type": "string"
          },
          "id": {
            "description": "Profile id (required during update",
            "format": "int32",
            "type": "integer"
          },
          "name": { "description": "Profile name", "type": "string" },
          "profileStatus": {
            "description": "Profile status",
            "type": "string"
          },
          "profileType": {
            "description": "Profile Type (custom or system)",
            "type": "string"
          },
          "status": { "description": "Status", "type": "string" },
          "types": {
            "description": "Type (basic or advance)",
            "type": "string"
          }
        },
        "required": [
          "dataPatternsRule1",
          "name",
          "profileStatus",
          "profileType",
          "status",
          "types"
        ],
        "type": "object"
      },
      "DataProfileDetails": {
        "description": "DataProfile Model class",
        "properties": {
          "createdAt": {
            "description": "Created at (unix time)",
            "type": "string"
          },
          "createdBy": { "description": "Created by", "type": "string" },
          "dataPatternsRulesOne": {
            "allOf": [
              { "$ref": "#/components/schemas/DataPatternRulesOne" },
              { "description": "Pattern rules" }
            ]
          },
          "description": { "description": "Description", "type": "string" },
          "id": { "description": "DataProfile id", "type": "string" },
          "name": { "description": "DataProfile name", "type": "string" },
          "profileStatus": {
            "description": "Profile status",
            "type": "string"
          },
          "profileType": {
            "description": "DataProfile type",
            "type": "string"
          },
          "status": { "description": "Status", "type": "string" },
          "tenantId": { "description": "Tenant Id", "type": "string" },
          "types": { "description": "Type", "type": "string" },
          "updatedAt": {
            "description": "Updated at (unix time)",
            "type": "string"
          },
          "updatedBy": { "description": "Updated by", "type": "string" }
        },
        "type": "object"
      },
      "DssSnippetConfig": {
        "description": "Update Snippets Configuration",
        "properties": {
          "maskLevel": {
            "description": "Mask Value",
            "enum": ["no_mask", "partial_mask", "full_mask"],
            "type": "string"
          },
          "snippetsEnabled": {
            "description": "Enable/Disable snippets",
            "type": "boolean"
          }
        },
        "required": ["maskLevel", "snippetsEnabled"],
        "type": "object"
      },
      "GetDataPatternFilterRequest": {
        "description": "Get data pattern with filters on mode, updatedBy and time range",
        "properties": {
          "modeFilter": {
            "description": "Mode filter list",
            "items": { "type": "string" },
            "type": "array"
          },
          "timeRange": {
            "allOf": [
              { "$ref": "#/components/schemas/TimeRangeConfigModel" },
              { "description": "Time Range" }
            ]
          },
          "updatedByFilter": {
            "description": "Updated By list",
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Profiles": {
        "description": "Model for Profiles",
        "properties": {
          "createdBy": {
            "description": "Profile created by service",
            "type": "string"
          },
          "id": { "description": "Profile id", "type": "string" },
          "name": { "description": "Profile name", "type": "string" },
          "status": { "description": "Profile status", "type": "string" },
          "type": { "description": "Profile Type", "type": "string" },
          "updatedAt": {
            "description": "Profile Updated time",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Profile updated by service",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Regexes": {
        "description": "Model for regex",
        "properties": {
          "regex": { "description": "Regex", "type": "string" },
          "weight": {
            "description": "Weight",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RelativeTimeDurationModel": {
        "description": "Model for RelativeTimeDuration",
        "properties": {
          "amount": {
            "description": "Number of time units",
            "format": "int32",
            "type": "integer"
          },
          "unit": {
            "description": "Time unit",
            "enum": ["minute", "hour", "day", "week", "month", "year"],
            "type": "string"
          }
        },
        "type": "object"
      },
      "RelativeTimeRangeConfigModel": {
        "allOf": [
          { "$ref": "#/components/schemas/TimeRangeConfigModel" },
          {
            "description": "Model for RelativeTimeRangeConfig",
            "properties": {
              "relativeTimeType": {
                "description": "Direction in which to count time. Default = BACKWARD",
                "enum": ["BACKWARD", "FORWARD"],
                "type": "string"
              },
              "type": { "example": "relative", "type": "string" },
              "value": {
                "allOf": [
                  { "$ref": "#/components/schemas/RelativeTimeDurationModel" },
                  { "description": "Time range object" }
                ]
              }
            },
            "required": ["value"],
            "type": "object"
          }
        ]
      },
      "ResourceConfigurationStatus": {
        "properties": {
          "code": {
            "description": "Configuration Status Code",
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "description": "Status message",
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceInventory": {
        "description": "Data resource inventory model",
        "properties": {
          "resources": {
            "description": "List of storage resources",
            "items": { "$ref": "#/components/schemas/StorageResource" },
            "type": "array"
          },
          "sizeReportingFrequency": {
            "description": "Frequency of the s3 inventory configuration",
            "type": "string"
          },
          "totalRecords": {
            "description": "Total resources",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "StorageResource": {
        "description": "Storage resource model",
        "properties": {
          "accountId": { "description": "Account number", "type": "string" },
          "accountName": {
            "description": "Account name",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "readOnly": true,
            "type": "string"
          },
          "configurationStatus": {
            "allOf": [
              { "$ref": "#/components/schemas/ResourceConfigurationStatus" },
              { "description": "Resource Configuration Status" }
            ]
          },
          "lastEstimate": {
            "description": "Size updated on",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "redlockAccountId": {
            "description": "Prisma Cloud account ID",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "resourceName": { "description": "Resource name", "type": "string" },
          "resourceRrn": {
            "description": "Resource RRN to link to resource page",
            "readOnly": true,
            "type": "string"
          },
          "scanOption": {
            "description": "Scan option exposure only, all",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "scanStatus": {
            "description": "Scan status",
            "readOnly": true,
            "type": "boolean"
          },
          "scanType": {
            "description": "Scan type",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "serviceName": { "description": "Service name", "type": "string" },
          "storageSize": {
            "allOf": [
              { "$ref": "#/components/schemas/StorageSize" },
              { "description": "Storage size", "readOnly": true }
            ]
          }
        },
        "required": ["accountId", "resourceName", "serviceName"],
        "type": "object"
      },
      "StorageSize": {
        "properties": {
          "dssAndWildfireEligibleSize": {
            "description": "Total size eligible for both Data Security scan and Wildfire",
            "format": "int64",
            "type": "integer"
          },
          "dssEligibleSize": {
            "description": "Total size eligible for Data Security scan",
            "format": "int64",
            "type": "integer"
          },
          "isInventoryConfigured": {
            "description": "Status of inventory configuration for current bucket. true = inventory configured",
            "type": "boolean"
          },
          "isScanComplete": {
            "description": "Status of size estimation. true = scan complete",
            "type": "boolean"
          },
          "sensitiveEligiblePubliclyExposed": {
            "description": "Total size for publicly exposed files eligible for DSS scan",
            "format": "int64",
            "type": "integer"
          },
          "size": {
            "description": "Total size",
            "format": "int64",
            "type": "integer"
          },
          "wildfireEligibleSize": {
            "description": "Total size eligible for Wildfire",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeModel": {
        "description": "Model for Time",
        "properties": {
          "endTime": {
            "description": "End timestamp",
            "format": "int64",
            "type": "integer"
          },
          "startTime": {
            "description": "Start timestamp",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeRangeConfigModel": {
        "description": "See the [Time Range Model](/api/cloud/api-time-range-model) for details.\n",
        "discriminator": {
          "mapping": {
            "absolute": "#/components/schemas/AbsoluteTimeRangeConfigModel",
            "relative": "#/components/schemas/RelativeTimeRangeConfigModel",
            "to_now": "#/components/schemas/ToNowTimeRangeConfigModel"
          },
          "propertyName": "type"
        },
        "oneOf": [
          { "$ref": "#/components/schemas/RelativeTimeRangeConfigModel" },
          { "$ref": "#/components/schemas/AbsoluteTimeRangeConfigModel" },
          { "$ref": "#/components/schemas/ToNowTimeRangeConfigModel" }
        ],
        "properties": {
          "type": { "description": "Time type", "type": "string" }
        },
        "required": ["type"],
        "type": "object"
      },
      "ToNowTimeRangeConfigModel": {
        "allOf": [
          { "$ref": "#/components/schemas/TimeRangeConfigModel" },
          {
            "description": "Model for ToNowTimeRangeConfig",
            "properties": {
              "value": {
                "description": "Time range object",
                "enum": [
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR",
                  "EPOCH",
                  "LOGIN"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "UpdateResourceConfig": {
        "description": "Model for Data Security resource scan config",
        "properties": {
          "enableScanning": {
            "description": "Scan status. true = enable scans. false = disable scans",
            "type": "boolean"
          },
          "resources": {
            "description": "List of storage resources",
            "items": { "$ref": "#/components/schemas/StorageResource" },
            "type": "array"
          },
          "scanOption": {
            "description": "Scan option. Required if **enableScanning** is true. 0 = Exposure only, 2 = All ",
            "enum": [0, 2],
            "format": "int32",
            "type": "integer"
          },
          "scanType": {
            "description": "Scan type. Required if **enableScanning** is true. 1 = forward and backward, 2 = forward",
            "enum": [1, 2],
            "format": "int32",
            "type": "integer"
          }
        },
        "required": ["enableScanning", "resources"],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Prisma Cloud Data Security enables you to discover and classify data stored \nin AWS S3 buckets and protect accidental exposure, misuse, or sharing of sensitive data. You can use\nthe data security settings APIs to manage data profiles, data patterns, and snippets.\n\n### Error Handling\n\nAs with other Prisma Cloud public API requests, Data Security Settings API requests return standard \nHTTP response codes. When more details are available, the error response includes the following:\n\nProperty  | Type | Description  \n-----------| ---- | ----------- \nmessage | string | Error message\nname | string | Exception name\ndetail | string  | Exception details      \n\nTo get started with data security, see \n[Prisma Cloud Data Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-data-security.html).\n",
    "title": "Prisma Cloud Data Security Settings API Overview",
    "version": "Latest"
  },
  "openapi": "3.0.0",
  "paths": {
    "/dlp/api/v1/resource-inventory/resources": {
      "get": {
        "description": "Lists all AWS S3 bucket resources for your onboarded cloud account(s). The response indicates the amount of data eligible for sensitive data scans, malware scans, or both based on the supported file types and file size.",
        "operationId": "get-resource-inventory",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ResourceInventory" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List Data Resources",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/resource-inventory/resources\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/dlp/api/v1/resource-inventory/resources \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/dlp/api/config/v2/resource": {
      "put": {
        "description": "Updates the data security scan settings configuration for the listed resources.",
        "operationId": "update-resource-config",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": { "$ref": "#/components/schemas/UpdateResourceConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update Data Scan Config",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/config/v2/resource\"\n\npayload = {\n    \"enableScanning\": True,\n    \"resources\": [\n        {\n            \"accountId\": \"string\",\n            \"configurationStatus\": {\n                \"code\": 0,\n                \"message\": [\"string\"]\n            },\n            \"resourceName\": \"string\",\n            \"serviceName\": \"string\"\n        }\n    ],\n    \"scanOption\": 0,\n    \"scanType\": 1\n}\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/dlp/api/config/v2/resource \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"enableScanning\":true,\"resources\":[{\"accountId\":\"string\",\"configurationStatus\":{\"code\":0,\"message\":[\"string\"]},\"resourceName\":\"string\",\"serviceName\":\"string\"}],\"scanOption\":0,\"scanType\":1}'"
          }
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern": {
      "put": {
        "description": "Lists all data patterns that satisfy the request filters.",
        "operationId": "get-all-data-patterns",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/GetDataPatternFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DataPatternList" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List Data Patterns",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern\"\n\npayload = {\n    \"modeFilter\": [\"string\"],\n    \"timeRange\": {\n        \"relativeTimeType\": \"BACKWARD\",\n        \"type\": \"relative\",\n        \"value\": {\n            \"amount\": 0,\n            \"unit\": \"minute\"\n        }\n    },\n    \"updatedByFilter\": [\"string\"]\n}\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"modeFilter\":[\"string\"],\"timeRange\":{\"relativeTimeType\":\"BACKWARD\",\"type\":\"relative\",\"value\":{\"amount\":0,\"unit\":\"minute\"}},\"updatedByFilter\":[\"string\"]}'"
          }
        ]
      },
      "post": {
        "description": "Creates a data pattern.",
        "operationId": "add-data-pattern",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataPatternRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Add Data Pattern",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern\"\n\npayload = {\n    \"delimiter\": \"string\",\n    \"description\": \"string\",\n    \"detectionTechnique\": \"string\",\n    \"entity\": \"string\",\n    \"grammar\": \"string\",\n    \"name\": \"string\",\n    \"parentId\": \"string\",\n    \"proximityKeywords\": [\"string\"],\n    \"regexes\": [\n        {\n            \"regex\": \"string\",\n            \"weight\": 0\n        }\n    ],\n    \"rootType\": \"string\",\n    \"s3Path\": \"string\"\n}\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"delimiter\":\"string\",\"description\":\"string\",\"detectionTechnique\":\"string\",\"entity\":\"string\",\"grammar\":\"string\",\"name\":\"string\",\"parentId\":\"string\",\"proximityKeywords\":[\"string\"],\"regexes\":[{\"regex\":\"string\",\"weight\":0}],\"rootType\":\"string\",\"s3Path\":\"string\"}'"
          }
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern/clone": {
      "post": {
        "description": "Clones a data pattern.",
        "operationId": "clone-data-pattern",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": { "$ref": "#/components/schemas/DataPatternModel" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Clone Data Pattern",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/clone\"\n\npayload = {\n    \"confidenceLevels\": [\"string\"],\n    \"delimiter\": \"string\",\n    \"description\": \"string\",\n    \"detectionTechnique\": \"string\",\n    \"entity\": \"string\",\n    \"grammar\": \"string\",\n    \"id\": \"string\",\n    \"mode\": \"string\",\n    \"name\": \"string\",\n    \"parentId\": \"string\",\n    \"proximityKeywords\": [\"string\"],\n    \"regexes\": [\n        {\n            \"regex\": \"string\",\n            \"weight\": 0\n        }\n    ],\n    \"rootType\": \"string\",\n    \"s3Path\": \"string\",\n    \"status\": \"string\"\n}\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/clone \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"confidenceLevels\":[\"string\"],\"delimiter\":\"string\",\"description\":\"string\",\"detectionTechnique\":\"string\",\"entity\":\"string\",\"grammar\":\"string\",\"id\":\"string\",\"mode\":\"string\",\"name\":\"string\",\"parentId\":\"string\",\"proximityKeywords\":[\"string\"],\"regexes\":[{\"regex\":\"string\",\"weight\":0}],\"rootType\":\"string\",\"s3Path\":\"string\",\"status\":\"string\"}'"
          }
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern/id/{patternId}": {
      "get": {
        "description": "Returns the data pattern details for the specified ID.",
        "operationId": "get-data-pattern-details",
        "parameters": [
          {
            "description": "Data pattern ID",
            "in": "path",
            "name": "patternId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DataPatternDetails" }
              }
            },
            "description": "success"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Get Data Pattern Details",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/id/{patternId}\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/id/{patternId} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern/name": {
      "get": {
        "description": "Lists of all data pattern names with their supported confidence levels.",
        "operationId": "get-data-pattern-name",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DataPatternConfidenceLevel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Get Data Pattern By Name",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/name\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/name \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern/{patternId}": {
      "put": {
        "description": "Updates a data pattern.",
        "operationId": "update-data-pattern",
        "parameters": [
          {
            "description": "Data pattern ID",
            "in": "path",
            "name": "patternId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataPatternRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update Data Pattern",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/{patternId}\"\n\npayload = {\n    \"delimiter\": \"string\",\n    \"description\": \"string\",\n    \"detectionTechnique\": \"string\",\n    \"entity\": \"string\",\n    \"grammar\": \"string\",\n    \"name\": \"string\",\n    \"parentId\": \"string\",\n    \"proximityKeywords\": [\"string\"],\n    \"regexes\": [\n        {\n            \"regex\": \"string\",\n            \"weight\": 0\n        }\n    ],\n    \"rootType\": \"string\",\n    \"s3Path\": \"string\"\n}\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/{patternId} \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"delimiter\":\"string\",\"description\":\"string\",\"detectionTechnique\":\"string\",\"entity\":\"string\",\"grammar\":\"string\",\"name\":\"string\",\"parentId\":\"string\",\"proximityKeywords\":[\"string\"],\"regexes\":[{\"regex\":\"string\",\"weight\":0}],\"rootType\":\"string\",\"s3Path\":\"string\"}'"
          }
        ]
      },
      "delete": {
        "description": "Deletes a data pattern.",
        "operationId": "delete-data-pattern",
        "parameters": [
          {
            "description": "Data pattern ID",
            "in": "path",
            "name": "patternId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Delete Data Pattern",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/{patternId}\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-pattern/{patternId} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-profile": {
      "get": {
        "description": "Lists all data profiles for your tenant.",
        "operationId": "get-data-profiles",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DSSDataProfiles" }
              }
            },
            "description": "success"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List Data Profiles",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "post": {
        "description": "Creates a data profile.",
        "operationId": "add-data-profile",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": { "$ref": "#/components/schemas/DataProfile" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Add Data Profile",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile\"\n\npayload = {\n    \"dataPatternsRule1\": {\n        \"dataPatternRules\": [\n            {\n                \"confidencLevel\": \"string\",\n                \"detectionTechnique\": \"string\",\n                \"id\": \"string\",\n                \"matchType\": \"string\",\n                \"name\": \"string\",\n                \"occurrenceCount\": 0,\n                \"occurrenceHigh\": 0,\n                \"occurrenceLow\": 0,\n                \"occurrenceOperatorType\": \"string\",\n                \"supportedConfidenceLevels\": [\"string\"]\n            }\n        ],\n        \"operatorType\": \"string\"\n    },\n    \"description\": \"string\",\n    \"id\": 0,\n    \"name\": \"string\",\n    \"profileStatus\": \"string\",\n    \"profileType\": \"string\",\n    \"status\": \"string\",\n    \"types\": \"string\"\n}\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"dataPatternsRule1\":{\"dataPatternRules\":[{\"confidencLevel\":\"string\",\"detectionTechnique\":\"string\",\"id\":\"string\",\"matchType\":\"string\",\"name\":\"string\",\"occurrenceCount\":0,\"occurrenceHigh\":0,\"occurrenceLow\":0,\"occurrenceOperatorType\":\"string\",\"supportedConfidenceLevels\":[\"string\"]}],\"operatorType\":\"string\"},\"description\":\"string\",\"id\":0,\"name\":\"string\",\"profileStatus\":\"string\",\"profileType\":\"string\",\"status\":\"string\",\"types\":\"string\"}'"
          }
        ]
      },
      "put": {
        "description": "Enables or disables one or more data profiles.",
        "operationId": "enable-disable-data-profiles",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "items": { "$ref": "#/components/schemas/DSSProfile" },
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update Data Profile Status",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile\"\n\npayload = [\n    {\n        \"id\": \"string\",\n        \"profileStatus\": \"string\"\n    }\n]\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '[{\"id\":\"string\",\"profileStatus\":\"string\"}]'"
          }
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-profile/id/{profileId}": {
      "get": {
        "description": "Returns data profile details for the specified profile ID.",
        "operationId": "get-data-profile-details",
        "parameters": [
          {
            "description": "Data profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DataProfileDetails" }
              }
            },
            "description": "success"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Get Data Profile Details",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile/id/{profileId}\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile/id/{profileId} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "put": {
        "description": "Updates a data profile.",
        "operationId": "update-data-profile",
        "parameters": [
          {
            "description": "Data profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": { "$ref": "#/components/schemas/DataProfile" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update Data Profile",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile/id/{profileId}\"\n\npayload = {\n    \"dataPatternsRule1\": {\n        \"dataPatternRules\": [\n            {\n                \"confidencLevel\": \"string\",\n                \"detectionTechnique\": \"string\",\n                \"id\": \"string\",\n                \"matchType\": \"string\",\n                \"name\": \"string\",\n                \"occurrenceCount\": 0,\n                \"occurrenceHigh\": 0,\n                \"occurrenceLow\": 0,\n                \"occurrenceOperatorType\": \"string\",\n                \"supportedConfidenceLevels\": [\"string\"]\n            }\n        ],\n        \"operatorType\": \"string\"\n    },\n    \"description\": \"string\",\n    \"id\": 0,\n    \"name\": \"string\",\n    \"profileStatus\": \"string\",\n    \"profileType\": \"string\",\n    \"status\": \"string\",\n    \"types\": \"string\"\n}\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile/id/{profileId} \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"dataPatternsRule1\":{\"dataPatternRules\":[{\"confidencLevel\":\"string\",\"detectionTechnique\":\"string\",\"id\":\"string\",\"matchType\":\"string\",\"name\":\"string\",\"occurrenceCount\":0,\"occurrenceHigh\":0,\"occurrenceLow\":0,\"occurrenceOperatorType\":\"string\",\"supportedConfidenceLevels\":[\"string\"]}],\"operatorType\":\"string\"},\"description\":\"string\",\"id\":0,\"name\":\"string\",\"profileStatus\":\"string\",\"profileType\":\"string\",\"status\":\"string\",\"types\":\"string\"}'"
          }
        ]
      },
      "post": {
        "description": "Clones a data profile.",
        "operationId": "clone-data-profile",
        "parameters": [
          {
            "description": "Data profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Clone Data Profile",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile/id/{profileId}\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile/id/{profileId} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "delete": {
        "description": "Deletes a data profile.",
        "operationId": "delete-data-profile",
        "parameters": [
          {
            "description": "Data profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "success" },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Delete Data Profile",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile/id/{profileId}\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/data-profile/id/{profileId} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/dlp/api/v1/dss-api/snippets": {
      "get": {
        "description": "Returns the snippet masking configuration for your tenant.",
        "operationId": "get-snippets-config",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DssSnippetConfig" }
              }
            },
            "description": "success"
          },
          "400": { "description": "bad_request" },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Get Snippet Configuration",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/snippets\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/snippets \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "post": {
        "description": "Updates the snippet masking configuration for your tenant.",
        "operationId": "update-snippets",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": { "$ref": "#/components/schemas/DssSnippetConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": { "$ref": "#/components/schemas/DLPAPIResponse" }
              }
            },
            "description": "bad_request"
          },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update Snippet Configuration",
        "tags": ["Data Security Settings"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/dlp/api/v1/dss-api/snippets\"\n\npayload = {\n    \"maskLevel\": \"no_mask\",\n    \"snippetsEnabled\": True\n}\nheaders = {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/dlp/api/v1/dss-api/snippets \\\n  --header 'content-type: application/json; charset=UTF-8' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"maskLevel\":\"no_mask\",\"snippetsEnabled\":true}'"
          }
        ]
      }
    }
  },
  "servers": [{ "url": "https://api.prismacloud.io" }],
  "tags": [
    {
      "description": "The Data Security Settings endpoints are listed below.",
      "name": "Data Security Settings"
    }
  ]
}
