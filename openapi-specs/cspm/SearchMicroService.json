{
  "openapi": "3.0.1",
  "info": {
    "title": "Prisma Cloud RQL APIs",
    "description": "You can use the Resource Query Language (RQL) to perform configuration checks across cloud services as well as \ngain real-time insights into user and network events to gain security visibility and create policy guardrails \nin your cloud environment. For more information, see [Prisma Cloud documentation](https://docs.prismacloud.io/en/classic/cspm-admin-guide/get-started-with-prisma-cloud/get-started-with-prisma-cloud). If you are upgraded to the Darwin release, see [Prisma Cloud documentation](https://docs.prismacloud.io/en/enterprise-edition/content-collections/get-started/get-started).\n",
    "contact": {},
    "license": {
      "name": "Public"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ],
  "tags": [
    {
      "name": "Search",
      "description": "You can use the Resource Query Language (RQL) to perform configuration checks across cloud services as well as \ngain real-time insights into user and network events to gain security visibility and create policy guardrails \nin your cloud environment. For more information, see [Prisma Cloud documentation](https://docs.prismacloud.io/en/classic/cspm-admin-guide/get-started-with-prisma-cloud/get-started-with-prisma-cloud). If you are upgraded to the Darwin release, see [Prisma Cloud documentation](https://docs.prismacloud.io/en/enterprise-edition/content-collections/get-started/get-started).\n"
    }
  ],
  "paths": {
    "/search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Perform Network Search",
        "description": "Perform a search against flow logs with an RQL query.  \r\n\r\nThis endpoint ignores the body param default. \n\n### Download Network Search CSV \nIn addition to performing a network search, this API can perform the network search and download the results as a CSV file. To download the network search CSV, \nadd the request HTTP header **Accept: text/csv**.\n\nAn example request body is:\n\n```json\n{\n  \"cloudType\": \"\",\n  \"id\":\"\",\n  \"name\":\"\",\n  \"description:\"\",\n  \"saved\":false,\n  \"default\":false,\n  \"query\": \"\",\n    \"timeRange\": {\n      \"type\": \"\",\n      \"value\": \"\"\n    }\n}\n```\n",
        "operationId": "search-network",
        "requestBody": {
          "description": "Search model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameter_value",
            "content": {}
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/alert": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Alerts by ID",
        "description": "Returns search data that can be used to investigate the alert with the specified ID.   \r\n\r\nThis request returns data for only the following types of alerts:\n* Anomaly alerts\n* Network alerts       \n",
        "operationId": "search-for-alert-by-id",
        "parameters": [
          {
            "name": "alertId",
            "in": "query",
            "description": "Alert ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelListObject"
                }
              }
            }
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true"
      }
    },
    "/search/api/v1/config": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Perform Config Search by Query",
        "description": "Returns the results of an RQL config query. With config queries, you can retrieve resource information, identify misconfigurations, gain operational insights, and uncover policy and compliance violations.",
        "operationId": "search-config-by-query",
        "requestBody": {
          "description": "Config rule search by query request parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigSearchByQueryV1Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigSearchV1ResponseResourceMetaModel"
                }
              }
            }
          },
          "400": {
            "description": "conflict_saved_search",
            "content": {}
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/api/v1/config/download": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Download Config Search as CSV",
        "description": "Returns the results of an RQL Config query as a CSV. With Config queries, you can retrieve resource information, identify misconfigurations, gain operational insights, and uncover policy and compliance violations.",
        "operationId": "search-config-csv-download",
        "requestBody": {
          "description": "Config rule search by query with download request parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigSearchByQueryWithDownloadV1Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CsvMessageModel"
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameter_value",
            "content": {}
          },
          "403": {
            "description": "unauthorized_access",
            "content": {}
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/api/v1/config/{id}": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Perform Config Search by Search Id",
        "description": "Returns the results of an RQL config query. With config search Id, you can retrieve resource information, identify misconfigurations, gain operational insights, and uncover policy and compliance violations.",
        "operationId": "search-config-by-search-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Search ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Config rule search by search id request parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigSearchBySearchIdV1Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigSearchV1ResponseResourceMetaModel"
                }
              }
            }
          },
          "400": {
            "description": "conflict_saved_search",
            "content": {}
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/config": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Perform Config Search",
        "description": "Returns the results of an RQL config query. With config queries, you can retrieve resource information, identify misconfigurations, gain operational insights, and uncover policy and compliance violations.  \r\n\r\n### Download Config Search CSV \nIn addition to performing a config search, this endpoint can perform the config \nsearch and download the results as a CSV file. To download the config search CSV, \nadd the request HTTP header **Accept: text/csv**.\n\nAn example request body is:\n\n```json\n{\n  \"query\":\"config where api.name = 'aws-iam-get-account-summary' \",\n  \"timeRange\":{\n     \"type\":\"relative\",\n     \"value\":{\n        \"unit\":\"hour\",\n        \"amount\":24\n     }\n  }\n}\n```\n",
        "operationId": "search-config",
        "requestBody": {
          "description": "Config rule search parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRuleSearchParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelPagedResultsResourceMetaModel"
                }
              }
            }
          },
          "400": {
            "description": "conflict_saved_search",
            "content": {}
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/config/jobs": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Submit Search Config CSV Generation Job",
        "description": "Submits a job to generate an RQL config query results list that matches the constraints in the body parameters and is downloadable as a CSV file. Returns the job ID and job submission status.  \r\n\r\nTo identify your config query, specify either (1) a saved search **id**, (2) a recent search **id** plus a unique **searchName**, \nor (3) a **query** plus a unique **searchName**.\n\nIf you identify your search through a saved search **id**, the following request body parameters apply:\n* **id** - The search ID that corresponds to an existing saved search. You can [View Search History](//prisma-cloud/api/cspm/search-history) with a filter \nto get a list of your recent search IDs. (Required)\n* **searchName** - A unique name that identifies the search (Required)\n* **sort** - An array of sort field data (Optional)\n* **timeRange** - A time range filter. Default is the past seven days. (Optional)      \n\nIf you identify your search through a **query** and **searchName**, the following request body parameters apply:\n* **query** - A valid RQL config query that defines your search (Required)\n* **searchName** - A unique name that identifies the search (Required)\n* **searchDescription** - A description for your search (Optional)\n* **sort** - An array of sort field data (Optional)\n* **timeRange** - A time range filter. Default is the past seven days. (Optional)\n",
        "operationId": "submit-an-search-config-csv-download-job",
        "requestBody": {
          "description": "Config rule search parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRuleSearchParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigCsvJobResponseModel"
                }
              }
            }
          },
          "202": {
            "description": "in_process",
            "content": {}
          },
          "400": {
            "description": "invalid_parameter_value",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/config/jobs/{id}/download": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Download Async Config Search CSV",
        "description": "Returns the results of an RQL Config query as a CSV. With Config queries, you can retrieve resource information, identify misconfigurations, gain operational insights, and uncover policy and compliance violations.  \r\n\r\nThis request requires the HTTP header **Accept: text/csv**.\n",
        "operationId": "async-search-config-csv",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "202": {
            "description": "in_process",
            "content": {}
          },
          "400": {
            "description": "conflict_saved_search",
            "content": {}
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true"
      }
    },
    "/search/config/page": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Get The Next Config Search Page",
        "description": "Returns the next page of search results, using a token provided from the previous page. Used for when there are over 100 search results for a given RQL query.",
        "operationId": "search-config-page",
        "requestBody": {
          "description": "Config rule page parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRulePageParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultsResourceMetaModel"
                }
              }
            }
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/event": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Perform Event Search",
        "description": "Returns the results of an RQL audit event query. You can use event queries to detect and investigate console and API access, monitor privileged activities, and detect account compromise and unusual user behavior in your cloud environment.",
        "operationId": "search-events",
        "requestBody": {
          "description": "Audit event search parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventSearchParamsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelPagedResultsAuditEvent"
                }
              }
            }
          },
          "400": {
            "description": "conflict_saved_search",
            "content": {}
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/event/aggregate": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Aggregated Event Search",
        "description": "Returns the results of an RQL aggregated audit events query. This RQL query is similar to an RQL event query, but the data returned includes location and service data.",
        "operationId": "search-events-aggregated",
        "requestBody": {
          "description": "Audit event search parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventSearchParamsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelListAggregateAuditEvent"
                }
              }
            }
          },
          "400": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/event/filtered": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Filter Event Search Results",
        "description": "Filters the results of an event log search according to the specified parameters. You can use this call to refine the results of an aggregated search.",
        "operationId": "search-events-filtered",
        "requestBody": {
          "description": "Audit event search parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventSearchParamsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelPagedResultsAuditEvent"
                }
              }
            }
          },
          "400": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/event/filtered/download": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Download Event Search CSV",
        "description": "Performs an event log search with an RQL query and downloads the result as a CSV file.",
        "operationId": "search-events-csv",
        "requestBody": {
          "description": "Audit event search parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventSearchParamsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "400": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/event/page": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Get The Next Event Search Page",
        "description": "Returns the next page of search results, using a token provided from the previous page. Used for when there are over 100 search results for a given RQL query.  \r\n\r\nAn initial request to perform an event search will return a **data.nextPageToken** that you \ncan use as the initial **pageToken**.\n",
        "operationId": "search-events-page",
        "requestBody": {
          "description": "Audit event page parameters model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventPageParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultsAuditEvent"
                }
              }
            }
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    },
    "/search/event/raw/{id}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get Raw Event Data",
        "description": "Returns the audit event data for the specified ID as raw metadata.",
        "operationId": "search-events-raw",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Audit Event ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AuditEvent"
                }
              }
            }
          },
          "404": {
            "description": "not_found",
            "content": {}
          },
          "500": {
            "description": "internal_error",
            "content": {}
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true"
      }
    },
    "/search/suggest": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Autocomplete Search",
        "description": "Returns the possible options&mdash;including expressions, values, and operators&mdash;to append to a partial RQL query.  \r\n\r\nSpecifying a partial RQL query in the query parameter will result in a list of suggested \noptions to append to your partial query. No other parameters are required.\n",
        "operationId": "search-suggest",
        "requestBody": {
          "description": "Search model",
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-microservice”": "true",
        "x-public": "true",
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "AbsoluteTimeRangeConfigModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/TimeModel"
              }
            },
            "description": "Model for AbsoluteTimeRangeConfig"
          }
        ]
      },
      "AggregateAuditEvent": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "cityName": {
            "type": "string"
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "stateName": {
            "type": "string"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "countryName": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "events": {
            "type": "integer",
            "format": "int32"
          },
          "anomalies": {
            "type": "integer",
            "format": "int32"
          },
          "serviceAnomalies": {
            "type": "integer",
            "format": "int32"
          },
          "geoAnomalies": {
            "type": "integer",
            "format": "int32"
          },
          "serviceNGeoAnomalies": {
            "type": "integer",
            "format": "int32"
          },
          "bruteForceAnomalies": {
            "type": "integer",
            "format": "int32"
          },
          "timeTravelAnomalies": {
            "type": "integer",
            "format": "int32"
          },
          "deviceFingerprintLoginAnomalies": {
            "type": "integer",
            "format": "int32"
          },
          "serviceAnomaliesByUser": {
            "type": "integer",
            "format": "int32"
          },
          "geoAnomaliesByUser": {
            "type": "integer",
            "format": "int32"
          },
          "serviceNGeoAnomaliesByUser": {
            "type": "integer",
            "format": "int32"
          },
          "serviceAnomaliesByAccessKey": {
            "type": "integer",
            "format": "int32"
          },
          "geoAnomaliesByAccessKey": {
            "type": "integer",
            "format": "int32"
          },
          "serviceNGeoAnomaliesByAccessKey": {
            "type": "integer",
            "format": "int32"
          },
          "distinctUsers": {
            "type": "integer",
            "format": "int32"
          },
          "unusualLocations": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "serviceHighlighted": {
            "type": "boolean"
          }
        }
      },
      "AsyncRQLRequestWrapper": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "s3BucketDetails": {
            "$ref": "#/components/schemas/S3BucketDetails"
          },
          "configRuleSearchParams": {
            "$ref": "#/components/schemas/ConfigRuleSearchParams"
          },
          "userContextFilterInfo": {
            "$ref": "#/components/schemas/UserContextFilterInfoV1"
          }
        }
      },
      "AuditEvent": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "regionApiIdentifier": {
            "type": "string"
          },
          "eventTs": {
            "type": "integer",
            "format": "int64"
          },
          "ingestionTs": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "CREATE",
              "READ",
              "UPDATE",
              "DELETE",
              "LOGIN",
              "TEST",
              "AUDITD"
            ]
          },
          "source": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "rawEvent": {
            "type": "object",
            "properties": {}
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceIdBean"
            }
          },
          "ip": {
            "type": "string"
          },
          "accessKey": {
            "type": "string"
          },
          "anomalyId": {
            "type": "string"
          },
          "accessKeyUsed": {
            "type": "boolean"
          },
          "subjectType": {
            "type": "string",
            "enum": [
              "AWS_OTHER",
              "AZURE_OTHER",
              "GCP_OTHER",
              "AWS_IAM_USER",
              "AWS_ROOT",
              "AWS_ASSUMED_ROLE",
              "AWS_ROLE",
              "GCP_USER",
              "GCP_SERVICE_ACCOUNT",
              "AZURE_AD_USER",
              "AZURE_APPLICATION",
              "AWS_ACCOUNT",
              "AWS_SERVICE",
              "AWS_FEDERATED_USER",
              "AWS_SAML_USER",
              "AWS_WEB_IDENTITY_USER",
              "AWS_DIRECTORY"
            ]
          },
          "role": {
            "type": "string"
          },
          "reasonIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "flaggedFeature": {
            "type": "string"
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "cityName": {
            "type": "string"
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "stateName": {
            "type": "string"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "countryName": {
            "type": "string"
          },
          "cityLatitude": {
            "type": "number",
            "format": "double"
          },
          "cityLongitude": {
            "type": "number",
            "format": "double"
          },
          "timezone": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "internal": {
            "type": "boolean"
          },
          "userAgentOs": {
            "$ref": "#/components/schemas/UserAgentOs"
          },
          "userAgentBrowser": {
            "$ref": "#/components/schemas/UserAgentBrowser"
          },
          "dynamicData": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            }
          },
          "location": {
            "type": "string"
          },
          "browser": {
            "type": "string"
          },
          "notPersisted": {
            "type": "boolean"
          },
          "os": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          }
        }
      },
      "AuditEventBean": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "regionApiIdentifier": {
            "type": "string"
          },
          "eventTs": {
            "type": "integer",
            "format": "int64"
          },
          "ingestionTs": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "CREATE",
              "READ",
              "UPDATE",
              "DELETE",
              "LOGIN",
              "TEST",
              "AUDITD"
            ]
          },
          "source": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "rawEvent": {
            "type": "string"
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceIdBean"
            }
          },
          "ip": {
            "type": "string"
          },
          "accessKey": {
            "type": "string"
          },
          "anomalyId": {
            "type": "string"
          },
          "accessKeyUsed": {
            "type": "boolean"
          },
          "subjectType": {
            "type": "string",
            "enum": [
              "AWS_OTHER",
              "AZURE_OTHER",
              "GCP_OTHER",
              "AWS_IAM_USER",
              "AWS_ROOT",
              "AWS_ASSUMED_ROLE",
              "AWS_ROLE",
              "GCP_USER",
              "GCP_SERVICE_ACCOUNT",
              "AZURE_AD_USER",
              "AZURE_APPLICATION",
              "AWS_ACCOUNT",
              "AWS_SERVICE",
              "AWS_FEDERATED_USER",
              "AWS_SAML_USER",
              "AWS_WEB_IDENTITY_USER",
              "AWS_DIRECTORY"
            ]
          },
          "role": {
            "type": "string"
          },
          "reasonIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "flaggedFeature": {
            "type": "string"
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "cityName": {
            "type": "string"
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "stateName": {
            "type": "string"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "countryName": {
            "type": "string"
          },
          "cityLatitude": {
            "type": "number",
            "format": "double"
          },
          "cityLongitude": {
            "type": "number",
            "format": "double"
          },
          "timezone": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "internal": {
            "type": "boolean"
          },
          "userAgentOs": {
            "$ref": "#/components/schemas/UserAgentOs"
          },
          "userAgentBrowser": {
            "$ref": "#/components/schemas/UserAgentBrowser"
          },
          "dynamicData": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            }
          },
          "location": {
            "type": "string"
          },
          "browser": {
            "type": "string"
          },
          "notPersisted": {
            "type": "boolean"
          },
          "os": {
            "type": "string"
          }
        }
      },
      "AuditEventPageParams": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Results per Page",
            "format": "int32"
          },
          "pageToken": {
            "type": "string",
            "description": "Page Token"
          }
        }
      },
      "AuditEventSearchParamsModel": {
        "type": "object",
        "properties": {
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "groupBy": {
            "type": "array",
            "description": "Group By parameters",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "description": "Filters",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            }
          },
          "alertId": {
            "type": "string",
            "description": "Alert ID"
          },
          "sort": {
            "type": "array",
            "description": "Sort Fields",
            "items": {
              "$ref": "#/components/schemas/SortAuditEventSortField"
            }
          },
          "limit": {
            "type": "integer",
            "description": "Limit",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Search ID"
          },
          "query": {
            "type": "string",
            "description": "RQL query"
          }
        },
        "description": "Audit event search parameters model"
      },
      "AutocompleteInfo": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "Query is valid"
          },
          "offset": {
            "type": "integer",
            "description": "Offset within query",
            "format": "int32"
          },
          "suggestions": {
            "type": "array",
            "description": "List of suggestions",
            "items": {
              "type": "string"
            }
          },
          "translate": {
            "type": "boolean",
            "description": "Translate (for internal use)"
          },
          "needsOffsetUpdate": {
            "type": "boolean",
            "description": "Needs offset update (for internal use)"
          },
          "links": {
            "type": "string",
            "description": "JSON query builder links"
          }
        },
        "description": "Model for AutocompleteInfo"
      },
      "CloudAccountMetaVO": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "cloudType": {
            "type": "string"
          },
          "groupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ConfigCsvJobResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Job ID",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "Job creator",
            "readOnly": true
          },
          "createdOn": {
            "type": "integer",
            "description": "Creation timestamp",
            "format": "int64",
            "readOnly": true
          },
          "getdownloadUri": {
            "type": "string",
            "description": "Status URI",
            "readOnly": true
          }
        },
        "description": " Response Model for CreateConfigRuleSearchCsvDownloadJob"
      },
      "ConfigRulePageParams": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Results per Page",
            "format": "int32"
          },
          "withResourceJson": {
            "type": "boolean"
          },
          "pageToken": {
            "type": "string",
            "description": "Page Token"
          }
        }
      },
      "ConfigRuleSearchParams": {
        "type": "object",
        "properties": {
          "searchName": {
            "type": "string",
            "description": "Search name. For asynchronouse search jobs only."
          },
          "searchDescription": {
            "type": "string",
            "description": "Search description. For asynchronouse search jobs only."
          },
          "withResourceJson": {
            "type": "boolean",
            "description": "true = include resource JSON. Default is true."
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "sort": {
            "type": "array",
            "description": "Sort field data",
            "items": {
              "$ref": "#/components/schemas/SortConfigRuleSortField"
            }
          },
          "limit": {
            "type": "integer",
            "description": "Results per page. Does not apply to asynchronous search jobs.",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Search ID"
          },
          "query": {
            "type": "string",
            "description": "RQL query"
          }
        }
      },
      "ConfigSearchAsyncDownloadV1Response": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string",
            "description": "The report Id of the Csv download job"
          },
          "downloadUrl": {
            "type": "string",
            "description": "The url of the saved results"
          },
          "statusUrl": {
            "type": "string",
            "description": "The csv platforms status uri for this job"
          },
          "status": {
            "type": "string",
            "description": "The status of the job"
          },
          "createdOn": {
            "type": "integer",
            "description": "The timestamp when Csv platform creates this job",
            "format": "int64"
          },
          "createdBy": {
            "type": "string",
            "description": "createdBy"
          }
        }
      },
      "ConfigSearchByQueryV1Request": {
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "skipSearchCreation": {
            "type": "boolean",
            "description": "Skip Search Creation. Default is false"
          },
          "limit": {
            "type": "integer",
            "description": "Results per page",
            "format": "int32"
          },
          "withResourceJson": {
            "type": "boolean",
            "description": "true = include resource JSON. Default is false."
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "skipResult": {
            "type": "boolean",
            "description": "Skip Search Result. Default is false"
          },
          "sort": {
            "type": "array",
            "description": "Sort field data",
            "items": {
              "$ref": "#/components/schemas/SortConfigRuleSortField"
            }
          },
          "query": {
            "type": "string",
            "description": "RQL query"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Page Token"
          }
        }
      },
      "ConfigSearchByQueryWithDownloadV1Request": {
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "sort": {
            "type": "array",
            "description": "Sort field data",
            "items": {
              "$ref": "#/components/schemas/SortConfigRuleSortField"
            }
          },
          "query": {
            "type": "string",
            "description": "RQL query"
          },
          "savedSearchId": {
            "type": "string",
            "description": "Search ID"
          }
        }
      },
      "ConfigSearchBySearchIdV1Request": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Results per page",
            "format": "int32"
          },
          "withResourceJson": {
            "type": "boolean",
            "description": "true = include resource JSON. Default is false."
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "sort": {
            "type": "array",
            "description": "Sort field data",
            "items": {
              "$ref": "#/components/schemas/SortConfigRuleSortField"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Page Token"
          }
        }
      },
      "ConfigSearchV1Response": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "description": "The total number of matching resources",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "description": "List of matching resources",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "dynamicColumns": {
            "uniqueItems": true,
            "type": "array",
            "description": "Set of names of custom resource attributes",
            "items": {
              "type": "string"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Encoded page token to continue pagination"
          },
          "infoMsg": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "Search id"
          }
        }
      },
      "ConfigSearchV1ResponseResourceMetaModel": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "description": "The total number of matching resources",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "description": "List of matching resources",
            "items": {
              "$ref": "#/components/schemas/ResourceMetaModel"
            }
          },
          "dynamicColumns": {
            "uniqueItems": true,
            "type": "array",
            "description": "Set of names of custom resource attributes",
            "items": {
              "type": "string"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Encoded page token to continue pagination"
          },
          "infoMsg": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "Search id"
          }
        }
      },
      "CsvMessageModel": {
        "type": "object",
        "properties": {
          "headerComments": {
            "type": "array",
            "description": "List of header comments",
            "items": {
              "type": "string"
            }
          },
          "headers": {
            "type": "array",
            "description": "List of headers",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "description": "List of rows",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "description": "Model for CsvMessage"
      },
      "FromNowTimeRangeConfigModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Time range object",
                "enum": [
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR",
                  "EPOCH",
                  "LOGIN"
                ]
              }
            },
            "description": "Model for FromNowTimeRangeConfig"
          }
        ]
      },
      "JsonNode": {
        "type": "object",
        "properties": {
          "float": {
            "type": "boolean"
          },
          "array": {
            "type": "boolean"
          },
          "null": {
            "type": "boolean"
          },
          "boolean": {
            "type": "boolean"
          },
          "double": {
            "type": "boolean"
          },
          "object": {
            "type": "boolean"
          },
          "int": {
            "type": "boolean"
          },
          "number": {
            "type": "boolean"
          },
          "binary": {
            "type": "boolean"
          },
          "pojo": {
            "type": "boolean"
          },
          "missingNode": {
            "type": "boolean"
          },
          "valueNode": {
            "type": "boolean"
          },
          "containerNode": {
            "type": "boolean"
          },
          "integralNumber": {
            "type": "boolean"
          },
          "floatingPointNumber": {
            "type": "boolean"
          },
          "short": {
            "type": "boolean"
          },
          "long": {
            "type": "boolean"
          },
          "bigDecimal": {
            "type": "boolean"
          },
          "bigInteger": {
            "type": "boolean"
          },
          "textual": {
            "type": "boolean"
          },
          "nodeType": {
            "type": "string",
            "enum": [
              "ARRAY",
              "BINARY",
              "BOOLEAN",
              "MISSING",
              null,
              "NUMBER",
              "OBJECT",
              "POJO",
              "STRING"
            ]
          }
        }
      },
      "PagedResults": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "dynamicColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nextPageToken": {
            "type": "string"
          },
          "infoMsg": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PagedResultsAuditEvent": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditEvent"
            }
          },
          "dynamicColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nextPageToken": {
            "type": "string"
          },
          "infoMsg": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PagedResultsResourceMetaModel": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceMetaModel"
            }
          },
          "dynamicColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nextPageToken": {
            "type": "string"
          },
          "infoMsg": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RRNModel": {
        "type": "object",
        "properties": {
          "cloudType": {
            "type": "string",
            "description": "Cloud type",
            "readOnly": true,
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER",
              "IBM"
            ]
          },
          "resourceType": {
            "type": "string",
            "description": "Resource type",
            "readOnly": true
          },
          "regionId": {
            "type": "string",
            "description": "Region ID",
            "readOnly": true
          },
          "accountId": {
            "type": "string",
            "description": "Account ID",
            "readOnly": true
          },
          "idmapId": {
            "type": "string",
            "description": "Hashed generated ID",
            "readOnly": true
          },
          "resourceId": {
            "type": "string",
            "description": "Resource ID",
            "readOnly": true
          }
        },
        "description": "Model for RRN"
      },
      "RelativeTimeDurationModel": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Time unit",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "amount": {
            "type": "integer",
            "description": "Number of time units",
            "format": "int32"
          }
        },
        "description": "Model for RelativeTimeDuration"
      },
      "RelativeTimeRangeConfigModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/RelativeTimeDurationModel"
              },
              "relativeTimeType": {
                "type": "string",
                "description": "Direction in which to count time. Default = BACKWARD",
                "enum": [
                  "BACKWARD",
                  "FORWARD"
                ]
              }
            },
            "description": "Model for RelativeTimeRangeConfig"
          }
        ]
      },
      "ResourceIdBean": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Account",
            "readOnly": true
          },
          "region": {
            "type": "string",
            "description": "Region",
            "readOnly": true
          },
          "vpc": {
            "type": "string",
            "description": "VCP",
            "readOnly": true
          },
          "resource": {
            "type": "string",
            "description": "Resource",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Resource type",
            "readOnly": true
          },
          "insert_ts": {
            "type": "integer",
            "description": "Insertion timestamp",
            "format": "int64",
            "readOnly": true
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud type",
            "readOnly": true,
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER",
              "IBM"
            ]
          },
          "apiName": {
            "type": "string",
            "description": "Resource API name",
            "readOnly": true
          },
          "resourceApiId": {
            "type": "integer",
            "description": "Resource API ID",
            "format": "int32"
          }
        },
        "description": "Model for Resource ID Bean"
      },
      "ResourceListVO": {
        "required": [
          "resourceListType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "resourceListType": {
            "type": "string",
            "enum": [
              "TAG",
              "RESOURCE_ID",
              "STRING",
              "IP_ADDRESS",
              "NUMBER",
              "RESOURCE_GROUP",
              "COMPUTE_ACCESS_GROUP"
            ]
          },
          "description": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64"
          },
          "members": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "ResourceMetaModel": {
        "type": "object",
        "properties": {
          "rrn": {
            "$ref": "#/components/schemas/RRNModel"
          },
          "stateId": {
            "type": "string",
            "description": "State ID"
          },
          "assetId": {
            "type": "string",
            "description": "Asset ID"
          },
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "url": {
            "type": "string",
            "description": "URL"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID"
          },
          "accountName": {
            "type": "string",
            "description": "Account name"
          },
          "accountGroupName": {
            "type": "string",
            "description": "Account group name"
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER",
              "IBM"
            ]
          },
          "regionId": {
            "type": "string",
            "description": "Region ID"
          },
          "regionName": {
            "type": "string",
            "description": "Region name"
          },
          "service": {
            "type": "string",
            "description": "Service"
          },
          "resourceType": {
            "type": "string",
            "description": "Resource type"
          },
          "insertTs": {
            "type": "integer",
            "description": "Insertion timestamp",
            "format": "int64"
          },
          "createdTs": {
            "type": "integer",
            "description": "Creation timestamp",
            "format": "int64"
          },
          "deleted": {
            "type": "boolean",
            "description": "Deleted"
          },
          "vpcId": {
            "type": "string",
            "description": "Virtual private cloud ID"
          },
          "vpcName": {
            "type": "string",
            "description": "Virtual private cloud name"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags"
          },
          "riskGrade": {
            "type": "string",
            "description": "Risk grade"
          },
          "data": {
            "type": "object",
            "properties": {},
            "description": "Raw JSON data for the resource"
          },
          "dynamicData": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "Dynamic data"
          },
          "hasNetwork": {
            "type": "boolean",
            "description": "Has network"
          },
          "hasExternalFinding": {
            "type": "boolean",
            "description": "Has external finding"
          },
          "hasExternalIntegration": {
            "type": "boolean",
            "description": "Has external integration"
          },
          "allowDrillDown": {
            "type": "boolean",
            "description": "allowDrillDown"
          },
          "hasExtFindingRiskFactors": {
            "type": "boolean",
            "description": "Has risk factors"
          },
          "resourceConfigJsonAvailable": {
            "type": "boolean",
            "description": "allowDrillDown"
          }
        },
        "description": "Model containing resource metadata"
      },
      "S3BucketDetails": {
        "type": "object",
        "properties": {
          "objectKey": {
            "type": "string"
          },
          "bucketName": {
            "type": "string"
          }
        }
      },
      "SearchModel": {
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "groupBy": {
            "type": "array",
            "description": "Group By",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "description": "View Order",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            }
          },
          "timeGranularity": {
            "type": "string",
            "description": "Time Granularity",
            "readOnly": true
          },
          "alertId": {
            "type": "string",
            "description": "Alert ID",
            "readOnly": true
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ]
          },
          "id": {
            "type": "string",
            "description": "Search ID"
          },
          "name": {
            "type": "string",
            "description": "Search Name"
          },
          "description": {
            "type": "string",
            "description": "Search Description"
          },
          "searchType": {
            "type": "string",
            "description": "Search Type",
            "readOnly": true,
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ]
          },
          "asyncResultUrl": {
            "type": "string",
            "description": "Async Result Url",
            "readOnly": true,
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download"
          },
          "saved": {
            "type": "boolean",
            "description": "Search Exists"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "query": {
            "type": "string",
            "description": "RQL Query"
          },
          "cursor": {
            "type": "integer",
            "description": "Cursor",
            "format": "int32",
            "readOnly": true
          },
          "default": {
            "type": "boolean"
          },
          "async": {
            "type": "boolean",
            "description": "true = Is Async",
            "readOnly": true
          }
        }
      },
      "SearchResponseModel": {
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "groupBy": {
            "type": "array",
            "description": "Group By",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "description": "View Order",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            }
          },
          "timeGranularity": {
            "type": "string",
            "description": "Time Granularity",
            "readOnly": true
          },
          "alertId": {
            "type": "string",
            "description": "Alert ID",
            "readOnly": true
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ]
          },
          "id": {
            "type": "string",
            "description": "Search ID"
          },
          "name": {
            "type": "string",
            "description": "Search Name"
          },
          "description": {
            "type": "string",
            "description": "Search Description"
          },
          "searchType": {
            "type": "string",
            "description": "Search Type",
            "readOnly": true,
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ]
          },
          "asyncResultUrl": {
            "type": "string",
            "description": "Async Result Url",
            "readOnly": true,
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download"
          },
          "saved": {
            "type": "boolean",
            "description": "Search Exists"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "query": {
            "type": "string",
            "description": "RQL Query"
          },
          "cursor": {
            "type": "integer",
            "description": "Cursor",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "object",
            "properties": {}
          },
          "default": {
            "type": "boolean"
          },
          "async": {
            "type": "boolean",
            "description": "true = Is Async",
            "readOnly": true
          }
        }
      },
      "SearchResponseModelListAggregateAuditEvent": {
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "groupBy": {
            "type": "array",
            "description": "Group By",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "description": "View Order",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            }
          },
          "timeGranularity": {
            "type": "string",
            "description": "Time Granularity",
            "readOnly": true
          },
          "alertId": {
            "type": "string",
            "description": "Alert ID",
            "readOnly": true
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ]
          },
          "id": {
            "type": "string",
            "description": "Search ID"
          },
          "name": {
            "type": "string",
            "description": "Search Name"
          },
          "description": {
            "type": "string",
            "description": "Search Description"
          },
          "searchType": {
            "type": "string",
            "description": "Search Type",
            "readOnly": true,
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ]
          },
          "asyncResultUrl": {
            "type": "string",
            "description": "Async Result Url",
            "readOnly": true,
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download"
          },
          "saved": {
            "type": "boolean",
            "description": "Search Exists"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "query": {
            "type": "string",
            "description": "RQL Query"
          },
          "cursor": {
            "type": "integer",
            "description": "Cursor",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregateAuditEvent"
            }
          },
          "default": {
            "type": "boolean"
          },
          "async": {
            "type": "boolean",
            "description": "true = Is Async",
            "readOnly": true
          }
        }
      },
      "SearchResponseModelListObject": {
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "groupBy": {
            "type": "array",
            "description": "Group By",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "description": "View Order",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            }
          },
          "timeGranularity": {
            "type": "string",
            "description": "Time Granularity",
            "readOnly": true
          },
          "alertId": {
            "type": "string",
            "description": "Alert ID",
            "readOnly": true
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ]
          },
          "id": {
            "type": "string",
            "description": "Search ID"
          },
          "name": {
            "type": "string",
            "description": "Search Name"
          },
          "description": {
            "type": "string",
            "description": "Search Description"
          },
          "searchType": {
            "type": "string",
            "description": "Search Type",
            "readOnly": true,
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ]
          },
          "asyncResultUrl": {
            "type": "string",
            "description": "Async Result Url",
            "readOnly": true,
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download"
          },
          "saved": {
            "type": "boolean",
            "description": "Search Exists"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "query": {
            "type": "string",
            "description": "RQL Query"
          },
          "cursor": {
            "type": "integer",
            "description": "Cursor",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "type": "boolean"
          },
          "async": {
            "type": "boolean",
            "description": "true = Is Async",
            "readOnly": true
          }
        }
      },
      "SearchResponseModelPagedResultsAuditEvent": {
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "groupBy": {
            "type": "array",
            "description": "Group By",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "description": "View Order",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            }
          },
          "timeGranularity": {
            "type": "string",
            "description": "Time Granularity",
            "readOnly": true
          },
          "alertId": {
            "type": "string",
            "description": "Alert ID",
            "readOnly": true
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ]
          },
          "id": {
            "type": "string",
            "description": "Search ID"
          },
          "name": {
            "type": "string",
            "description": "Search Name"
          },
          "description": {
            "type": "string",
            "description": "Search Description"
          },
          "searchType": {
            "type": "string",
            "description": "Search Type",
            "readOnly": true,
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ]
          },
          "asyncResultUrl": {
            "type": "string",
            "description": "Async Result Url",
            "readOnly": true,
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download"
          },
          "saved": {
            "type": "boolean",
            "description": "Search Exists"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "query": {
            "type": "string",
            "description": "RQL Query"
          },
          "cursor": {
            "type": "integer",
            "description": "Cursor",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/PagedResultsAuditEvent"
          },
          "default": {
            "type": "boolean"
          },
          "async": {
            "type": "boolean",
            "description": "true = Is Async",
            "readOnly": true
          }
        }
      },
      "SearchResponseModelPagedResultsResourceMetaModel": {
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "groupBy": {
            "type": "array",
            "description": "Group By",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "description": "View Order",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            }
          },
          "timeGranularity": {
            "type": "string",
            "description": "Time Granularity",
            "readOnly": true
          },
          "alertId": {
            "type": "string",
            "description": "Alert ID",
            "readOnly": true
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ]
          },
          "id": {
            "type": "string",
            "description": "Search ID"
          },
          "name": {
            "type": "string",
            "description": "Search Name"
          },
          "description": {
            "type": "string",
            "description": "Search Description"
          },
          "searchType": {
            "type": "string",
            "description": "Search Type",
            "readOnly": true,
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ]
          },
          "asyncResultUrl": {
            "type": "string",
            "description": "Async Result Url",
            "readOnly": true,
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download"
          },
          "saved": {
            "type": "boolean",
            "description": "Search Exists"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          "query": {
            "type": "string",
            "description": "RQL Query"
          },
          "cursor": {
            "type": "integer",
            "description": "Cursor",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/PagedResultsResourceMetaModel"
          },
          "default": {
            "type": "boolean"
          },
          "async": {
            "type": "boolean",
            "description": "true = Is Async",
            "readOnly": true
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/SortField"
          },
          "direction": {
            "type": "string",
            "description": "Direction",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "SortAuditEventSortField": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "ID",
              "TIME",
              "OPERATION",
              "CLOUD_SERVICE",
              "CRUD",
              "USER",
              "CLOUD_ACCOUNT",
              "CLOUD_REGION",
              "TIMESTAMP"
            ]
          },
          "direction": {
            "type": "string",
            "description": "Direction",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "SortConfigRuleSortField": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "ID",
              "TIME",
              "API_NAME",
              "CUSTOMER_ID",
              "INSERT_TS",
              "JSON",
              "CLOUD_ACCOUNT",
              "CLOUD_REGION",
              "STATE_ID"
            ]
          },
          "direction": {
            "type": "string",
            "description": "Direction",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "SortField": {
        "type": "object",
        "properties": {
          "columnName": {
            "type": "string"
          },
          "tableAlias": {
            "type": "string"
          },
          "aliasedColumnName": {
            "type": "string"
          }
        }
      },
      "TimeModel": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "description": "Start timestamp",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "description": "End timestamp",
            "format": "int64"
          }
        },
        "description": "Model for Time"
      },
      "TimeRangeConfigModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Time type",
            "enum": [
              "relative"
            ]
          },
          "value": {
            "$ref": "#/components/schemas/RelativeTimeDurationModel"
          }
        },
        "description": "Model for TimeRangeConfig",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ToNowTimeRangeConfigModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Time range object",
                "enum": [
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR",
                  "EPOCH",
                  "LOGIN"
                ]
              }
            },
            "description": "Model for ToNowTimeRangeConfig"
          }
        ]
      },
      "UIFilterModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "value": {
            "type": "string",
            "description": "Value"
          },
          "operator": {
            "type": "string",
            "description": "Operator",
            "enum": [
              "="
            ]
          }
        },
        "description": "Model for UIFilter"
      },
      "UserAgentBrowser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "hash": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserAgentOs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "hash": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserContextFilterInfoV1": {
        "type": "object",
        "properties": {
          "userMeta": {
            "$ref": "#/components/schemas/UserMetaV1"
          },
          "groupIdVsName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "resourceLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceListVO"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccountMetaVO"
            }
          },
          "codeRepositoriesEntitlementUrl": {
            "type": "string"
          }
        }
      },
      "UserMetaV1": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "roleType": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64"
          },
          "ssoSession": {
            "type": "boolean"
          },
          "customerCreatedTs": {
            "type": "integer",
            "format": "int64"
          },
          "licenseType": {
            "type": "string",
            "enum": [
              "ENTERPRISE",
              "BUSINESS"
            ]
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "prismaId": {
            "type": "string"
          },
          "activeUserRoleId": {
            "type": "string"
          },
          "supportAccessLevel": {
            "type": "string",
            "enum": [
              "NONE",
              "ADMIN",
              "AGENT",
              "SRE",
              "LIGHT_AGENT"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    }
  }
}
