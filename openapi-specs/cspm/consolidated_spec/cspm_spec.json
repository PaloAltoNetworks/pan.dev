{
  "openapi": "3.0.3",
  "info": {
    "contact": {},
    "description": "Access Keys are a secure way to enable programmatic access to the Prisma Cloud API. By default, only \nthe System Admin has API access and can enable API access for other administrators. If you have API access, \nyou can create up to two access keys. Create an access key for a limited time period and regenerate your API \nkeys periodically to minimize exposure and follow security best practices.\n",
    "title": "Prisma Cloud Access Keys API Overview",
    "version": "Latest"
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    }
  ],
  "tags": [
    {
      "description": "Access Keys are a secure way to enable programmatic access to the Prisma Cloud API. By default, only \nthe System Admin has API access and can enable API access for other administrators. If you have API access, \nyou can create up to two access keys. Create an access key for a limited time period and regenerate your API \nkeys periodically to minimize exposure and follow security best practices.\n",
      "name": "Access Keys"
    },
    {
      "description": "You can use Account Groups to combine access to multiple cloud accounts with similar or different applications \nthat span multiple divisions or business units, so that you can manage administrative access to these accounts \nfrom Prisma Cloud.\n\nWhen you onboard a cloud account to Prisma Cloud, you can assign the cloud account to one or more account groups, \nand then assign the account group to Prisma Cloud Administrator Roles. Assigning an account group to an administrative \nuser on Prisma Cloud allows you to restrict access only to the resources and data that pertains to the cloud account(s) \nwithin an account group. Alerts on Prisma Cloud are applied at the cloud account group level, which means you can set up \nseparate alert rules and notification flows for different cloud environments.        \n",
      "name": "Account Groups"
    },
    {
      "description": "The Adoption Advisor API provides visibility into which Prisma Cloud capabilities you have adopted and \nhelps you uncover security capabilities that you not have yet explored.  \n",
      "name": "Adoption Advisor"
    },
    {
      "description": "Alert rules define what policy violations trigger alerts for cloud accounts within the selected account group \nand where to send the alert notifications. Alert rules give you a lot of flexibility in how you manage alerts \nand ensure that you can adhere to the administrative boundaries you have defined. You can create a single \nalert rule that alerts on all policy rules, or you can define granular alert rules that send very specific \nsets of alerts for specific cloud accounts, regions, and even resources to specific destinations.\n",
      "name": "Alert Rules"
    },
    {
      "description": "Prisma Cloud generates an alert when it detects a violation in a policy that is included in an active alert rule. \nYou can use the API requests to manage alerts, including listing or viewing, snoozing or dismissing, reopening, \nor remediating alerts.\n\nWhen retrieving a list of alerts through an API request, you can set filters, time range parameters, or pagination parameters.\n\n### Pagination\n\nYou can limit the number of items in a response list from API resources that support pagination. Version 2 (V2) of the API \nrequests to list alerts supports pagination and will accept the following request parameters.\n\nRequest Parameter  | Description  \n-----------| -------\n**limit** | Maximum number of items to return per page. Without pagination, maximum number of items to return in a response.\n**offset** | Number of items to skip before selecting items to return. Default is zero.\n**pageToken** | Set to the **nextPageToken** value from the previous response object to return the next page of data.\n\n### Filters\n\nAPI requests that use POST methods to request a list of alerts have filter parameters that enable you to narrow your request \nto alerts that meet a certain criteria.The [List Alert Filters](/prisma-cloud/api/cspm/get-alert-filter-options) \nrequests return the available filters.        \n",
      "name": "Alerts"
    },
    {
      "name": "Anomalies",
      "description": "Set the enterprise level settings to build standard training models for anomaly detection, alert disposition, \nand some other global settings such as the timeout before the user is locked out for inactivity and user \nattribution for alerts.\n Also, exclude trusted IP addresses when conducting tests for PCI compliance or penetration testing on your network. \nAny addresses included in this list do not generate alerts against the Prisma Cloud Anomaly Policies that \ndetect unusual network activity such as the policies that detect internal port scan and port sweep activity, which are enabled by default.\n"
    },
    {
      "name": "Archived Assets",
      "description": "When you delete an asset in a cloud account that is onboarded on Prisma Cloud, the asset is marked as deleted. After 90 days, the configuration details of the deleted assets are archived. You can use the archiveList endpoint of this API to retrieve the configuration details of such assets as a compressed archive (.zip) file.\n\nThe compressed archive (.zip) files are available for 9 months, after which they are deleted.\n"
    },
    {
      "description": "The Asset Explorer APIs enable you to list resource information filters, \nautocomplete suggestions for resource information filter, and list resource scan information.\n",
      "name": "Asset Explorer"
    },
    {
      "description": "The Asset Inventory APIs provide up-to-date information of all cloud assets that you are monitoring through Prisma Cloud.\nYou can request inventory data, list available filters to narrow inventory requests, and manage saved filters.\n\n### Pagination\n\nYou can limit the number of items in a response list from API resources that support pagination. The API \nrequests to list asset inventory, that supports pagination will accept the following request parameters.\n\nRequest Parameter  | Description  \n-----------| -------\n**limit** | Maximum number of items to return per page. Without pagination, maximum number of items to return in a response.\n**offset** | Number of items to skip before selecting items to return. Default is zero.\n**pageToken** | Set to the **nextPageToken** value from the previous response object to return the next page of data.\n\n### Filters\n\nAPI requests that use POST methods to request a list of asset inventory have filter parameters that enable you to narrow \nyour request to inventory that meets a certain criteria. The \n[List Inventory Filters V2](/prisma-cloud/api/cspm/get-asset-inventory-v-2-dashboard-filter-options) \nrequests return the available filters.\n",
      "name": "Asset Inventory"
    },
    {
      "description": "As part of compliance requirement for organizations, companies need to demonstrate they are pro-actively \ntracking security issues and taking steps to remediate issues as they occur. Prisma Cloud Audit Logs \nsection enables companies to prepare for such audits and demonstrates compliance.\n",
      "name": "Audit Logs"
    },
    {
      "description": "To begin monitoring the resources on your cloud infrastructure, you must first connect your public cloud \naccounts to Prisma™ Cloud. When you add your cloud account to Prisma Cloud, the API integration between \nyour cloud infrastructure provider and Prisma Cloud is established and you can begin monitoring the resources \nand identify potential security risks in your infrastructure.\n",
      "name": "Cloud Accounts"
    },
    {
      "description": "The Compliance Posture API methods provide information related to your compliance posture across various compliance \nstandards. The filters available through the API enable you to view your status across different cloud accounts, \nregions, and for specific compliance mandates.\n",
      "name": "Compliance Posture"
    },
    {
      "description": "You can create your own custom compliance standards that are tailored to your own business needs, \nstandards, and organizational policies. When defining a custom compliance standard, you can add \nrequirements and sections. A custom compliance standard that has a minimum of one requirement and one \nsection can be associated with policies that check for adherence to your standards.    \n",
      "name": "Compliance Standards"
    },
    {
      "description": "The Data Security capabilities on Prisma Cloud enable you to discover and classify data stored \nin AWS S3 buckets and protect accidental exposure, misuse, or sharing of sensitive data. The \ndata dashboard provides visibility into your S3 storage. \n\nTo get started with data security, see \n[Prisma Cloud Data Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-data-security.html).\n",
      "name": "Data Security Dashboard"
    },
    {
      "description": "The Data Security capabilities on Prisma Cloud enable you to discover and classify data stored \nin AWS S3 buckets and protect accidental exposure, misuse, or sharing of sensitive data. The\ndata inventory provides information about the number of S3 storage buckets being monitored and\nabout how objects are exposed&mdash;public, sensitive, or malware.\n\n To get started with data security, see \n[Prisma Cloud Data Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-data-security.html).       \n",
      "name": "Data Security Inventory"
    },
    {
      "description": "Prisma Cloud Data Security enables you to discover and classify data stored \nin AWS S3 buckets and protect accidental exposure, misuse, or sharing of sensitive data. You can use\nthe data security settings APIs to manage data profiles, data patterns, and snippets.\n\n### Error Handling\n\nAs with other Prisma Cloud public API requests, Data Security Settings API requests return standard \nHTTP response codes. When more details are available, the error response includes the following:\n\nProperty  | Type | Description  \n-----------| ---- | ----------- \nmessage | string | Error message\nname | string | Exception name\ndetail | string  | Exception details      \n\nTo get started with data security, see \n[Prisma Cloud Data Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-data-security.html).\n",
      "name": "Data Security Settings"
    },
    {
      "name": "IAM",
      "description": "Prisma Cloud identity and access management (IAM) security provides:\n* Visiblity&mdash;Query all relevant IAM entities\n* Gonvernance&mdash;Monitor your cloud environment for overly-used permissions\n* Response&mdash;Automatically remediate permissions\n\nThe IAM security endpoints enable you to investigate IAM data programmatically.\n\nSee [Primsa Cloud IAM Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-iam-security/what-is-prisma-cloud-iam-security.html)\nfor more information.\n\n\n### Error Handling\n\nLike other Prisma Cloud public API requests, the IAM security API requests return standard HTTP response codes. \nUnlike most other CSPM API error handling, IAM security API error responses do not include an [x-redlock-status](//prisma-cloud/api/cspm/api-errors)\nin the response header.\n\n\n### Pagination\n\nYou can control the number of items in a response for endpoints that support pagination. \nUse request parameter **limit** to control the maximum number of items in a response. If the response includes\n**data.nextPageToken**, use **data.nextPageToken** as the request parameter **pageToken** in a request for\nthe next page of data. \n\nThe following table summarizes the request parameters for pagination:\n\nRequest Parameter  | Description  \n-----------| -------\n**limit** | Maximum number of items to return in a page.\n**pageToken** | Use the **data.nextPageToken** value from the previous response object to return the next page of data.\n"
    },
    {
      "name": "IAM IDP",
      "description": "Prisma Cloud identity and access management (IAM) security integrates with the identity \nprovider (IdP) service Okta to ingest single sign-on (SSO) data for the effective permissions \ncalculation in the IAM Security module.\n\n\nSee [Integrate Prisma Cloud with Okta](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-iam-security/integrate-prisma-cloud-with-okta.html#id2990b78d-1bdc-4090-a716-d899e62db060)\nfor more information.\n"
    },
    {
      "description": "With multiple out-of-the-box integration options, you can integrate Prisma Cloud into security \nworkflows and technologies that already exist in your organization.\n\n**Note**: For Prisma Cloud integrations with the following, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull):\n\n* Okta\n* Qualys\n* Tenable\n\n### Integration Configuration\n\nThe model for an integration between Prisma Cloud and an external system includes\nan **integrationConfig** parameter which is a map of key/value pairs. The\ntype of integration defines the content of these key/value pairs. See\n[Integration Configurations](/prisma-cloud/api/cspm/api-integration-config) for more information about\nintegration API request body details, including the **integrationConfig**\nrequest parameter key/value pairs that apply to your specific integration API.\n",
      "name": "Integrations"
    },
    {
      "description": "With Prisma Cloud service’s multiple out-of-the-box integration options, you can integrate Prisma Cloud into existing \nsecurity workflows and technologies of your organization.\n\nYou can use [Integrations V1](/prisma-cloud/api/cspm/integrations) for most external integrations. Use the following API endpoints, though, for \nintegrations with:\n\n* Okta\n* Qualys\n* Tenable\n\nIn addition to pushing data to these external systems, Prisma Cloud also pulls data.\n         \n## Integration Configuration\nThe model for an integration between Prisma Cloud and an external system includes an **integrationConfig** parameter which \nis a map of key/value pairs. The type of integration defines the content of these key/value pairs.\nSee [Integration Configurations](/prisma-cloud/api/cspm/api-integration-config) for more information about integration API \nrequest body details, including the **integrationConfig** request parameter key/value pairs that apply to your \nspecific integration API.\n",
      "name": "Integrations Pull"
    },
    {
      "description": "Manage a list of trusted IP addresses with respect to alerts and a list of trusted login IP addresses.\n",
      "name": "IP Allow List"
    },
    {
      "name": "Licensing",
      "description": "The Prisma Cloud License endpoints enable you to query your Prisma Cloud usage."
    },
    {
      "description": "For secure access to the Prisma Cloud REST API, you need a Prisma Cloud API access key. An access key includes \nan Access Key ID and a Secret Key. After you use Prisma Cloud to generate an access key, you can use the key \nto obtain a JSON Web Token (JWT), which is required to authenticate Prisma Cloud REST API requests. The \nfollowing steps summarize the API requests necessary to authenticate all other Prisma Cloud API requests.\n\n1. Use the POST /login request to obtain a JWT.\n2. Authenticate further REST API requests by submitting the JWT in an HTTP header parameter.\n   The following shows the HTTP header parameter key. \n\n   HTTP Request Header Parameter | Value \n   ------------------------------| ---------\n   x-redlock-auth | Your JWT from POST /login response\n3. Refresh the JWT when necessary. The JWT is valid for 10 minutes, and you must refresh the token for \n   continued access to the Prisma Cloud API. An expired JWT request causes an HTTP 401 (Unauthorized) \n   response. You can use the GET /auth_token/extend request to obtain a refreshed JWT.  \n",
      "name": "Login"
    },
    {
      "description": "Notification templates allow you to configure notifications about the Prisma Cloud alerts to:\n\n* Email \n* ServiceNow \n* Jira \n",
      "name": "Notification Templates"
    },
    {
      "description": "You can use the AWS S3 Flow Logs API for AWS S3 onboarding for organization \nand standalone accounts on all supported stacks.\n",
      "name": "Onboarding AWS S3 Flow Logs"
    },
    {
      "description": "Permission groups enable you to restrict access to one or more features available on the Prisma Cloud administrative console. Permission group APIs allow you to retrieve, update or delete one or more existing permissions groups. You can also use these APIs to create a custom permission group and then you must attach it to a role and assign the role to a user.",
      "name": "Permission Groups"
    },
    {
      "description": "A policy is a set of one or more constraints or conditions that must be adhered to. Prisma Cloud provides \npredefined policies for configurations and access controls that adhere to established security best \npractices such as PCI, GDPR, ISO 27001:2013, and NIST. These Prisma Cloud default polices cannot be modified. \nIn addition to these, you can create custom policies to monitor for violations and to enforce your own organizational standards.\n",
      "name": "Policy"
    },
    {
      "description": "Creating compliance reports is the best way to monitor your cloud accounts across all cloud types and ensure that you \nare adhering to all compliance standards. You can create compliance reports based on a cloud compliance standard for \nimmediate download or schedule recurring reports so you can monitor compliance to the standard over time. From a single \nreport, you have a consolidated view of how well all of your cloud accounts are adhering to the selected standard. You \ncan also download historic reports so that you can see your compliance trend.\n",
      "name": "Reports"
    },
    {
      "description": "### Where Do I Find the RRN For My Resource?\n\nYou can find the RRN for a resource in the URL when you view that resource in the Prisma Cloud Resource explorer.\nThe following is an example of such a URL. The RRN is in the URL query string.\n\n```\nhttps://app.prismacloud.io/investigate/details?resourceId=rrn:aws:storageBucket:us-east-1:123456789012:test-bucket \n``` \n\n### Account Representation\n\nIf the **regionId** and **resourceId** are not in the RRN, then the **cloudType** and **resourceType** fields\nin thr RRN are optional. In this siutation, the RRN identifies an account.\n\n\nFull RRN:\n```\nrrn:::us-west-1:12345678901:i-ABCDEFGH\n```\n\nAbridged RRN:\n```  \nrrn::::12345678901\n```\n",
      "name": "Resource Explorer"
    },
    {
      "description": "A Resource List is a way to identify resources that are assigned with a specific tag or label.               \n",
      "name": "Resource Lists"
    },
    {
      "description": "You can use the Resource Query Language (RQL) to perform configuration checks across cloud services as well as \ngain real-time insights into user and network events to gain security visibility and create policy guardrails \nin your cloud environment. See the [Prisma Cloud documentation](https://docs.paloaltonetworks.com/prisma/prisma-cloud.html) for more information.\n",
      "name": "Search"
    },
    {
      "description": "The Search Manager APIs enable you to manage your recent \nand saved Resource Query Language (RQL) queries.\n",
      "name": "Search Manager"
    },
    {
      "description": "Manage enterprise settings such as a user inactivity timeout, user attribution for alerts, and global\nsettings for policies and alerts.\n",
      "name": "Settings"
    },
    {
      "description": "Quickly check if Prisma Cloud is available.\n",
      "name": "System"
    },
    {
      "description": "Manage your Prisma Cloud user profiles.\n",
      "name": "User Profile"
    },
    {
      "description": "Manage your Prisma Cloud user roles.            \n",
      "name": "User Roles"
    }
  ],
  "paths": {
    "/access_keys": {
      "get": {
        "description": "Returns all access keys for your tenant if you have a Prisma Cloud System Admin role. Returns just your access keys if you don't have this role.",
        "operationId": "get-my-access-keys",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserAccessKeyDetailResponseModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "user_inactive_or_not_exist"
          },
          "403": {
            "description": "unauthorized_to_use_access_keys"
          },
          "500": {
            "description": "failed_fetch_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Access Keys",
        "tags": [
          "Access Keys"
        ]
      },
      "post": {
        "description": "Adds a new access key for the current user. If you have API access, you can create up to two access keys.  \r\n\r\nIf you want to create an access key for an existing Prisma Cloud service account instead of for the current user, then\nspecify the name of the existing service account as the value for the request body parameter **serviceAccountName**.\n",
        "operationId": "add-access-keys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccessKeyRequestModel"
              }
            }
          },
          "description": "Model for user access key",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserAccessKeyResponseModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_expiry_access_key / already_have_two_access_keys / invalid_access_key_name_length / invalid_access_key_name"
          },
          "403": {
            "description": "unauthorized_to_use_access_keys"
          },
          "409": {
            "description": "duplicate_access_key_name"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Access Key",
        "tags": [
          "Access Keys"
        ]
      }
    },
    "/access_keys/{id}": {
      "get": {
        "description": "Returns the metadata of the access key that has the specified ID.",
        "operationId": "get-access-key-by-id",
        "parameters": [
          {
            "description": "Access key ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessKeyResponseModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "user_inactive_or_not_exist"
          },
          "403": {
            "description": "unauthorized_to_use_access_keys"
          },
          "500": {
            "description": "non_existing_access_key"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Access Key by ID",
        "tags": [
          "Access Keys"
        ]
      },
      "delete": {
        "description": "Deletes the access key that has the specified ID.",
        "operationId": "delete-access-keys",
        "parameters": [
          {
            "description": "Access key ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "user_inactive_or_not_exist"
          },
          "403": {
            "description": "unauthorized_to_use_access_keys"
          },
          "500": {
            "description": "failed_fetch_user_profile / non_existing_access_key"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Access Key",
        "tags": [
          "Access Keys"
        ]
      }
    },
    "/access_keys/{id}/status/{status}": {
      "patch": {
        "description": "Activates or deactivates the access key that has the specified ID. You cannot activate an expired access key.",
        "operationId": "update-access-key-status",
        "parameters": [
          {
            "description": "Access key ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Whether or not the access key is active. True means active.",
            "in": "path",
            "name": "status",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "empty_access_key_status_provided"
          },
          "403": {
            "description": "unauthorized_to_use_access_keys"
          },
          "500": {
            "description": "non_existing_access_key / expired_access_key"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Access Key Status",
        "tags": [
          "Access Keys"
        ]
      }
    },
    "/cloud/group": {
      "get": {
        "description": "Returns an array of accessible account groups.",
        "operationId": "get-account-groups",
        "parameters": [
          {
            "description": "true = Exclude cloud account details. Default is false.",
            "in": "query",
            "name": "excludeCloudAccountDetails",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountGroupViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Account Groups",
        "tags": [
          "Account Groups"
        ]
      },
      "post": {
        "description": "Create a new account group on the Prisma Cloud platform.",
        "operationId": "add-account-group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupModel"
              }
            }
          },
          "description": "Account Group",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_account_group_name / account_group_name_already_exists / invalid_account_ids"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Account Group",
        "tags": [
          "Account Groups"
        ]
      }
    },
    "/cloud/group/name": {
      "get": {
        "description": "Returns list of account group IDs, names, and whether or not the group was created automatically.",
        "operationId": "get-account-group-name",
        "parameters": [
          {
            "description": "Include account groups that were automatically created during cloud onboarding. Default is true.",
            "in": "query",
            "name": "include_auto_created",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountGroupMetadataViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Account Group Names",
        "tags": [
          "Account Groups"
        ]
      }
    },
    "/cloud/group/name/{cloud_type}": {
      "get": {
        "description": "Returns list of account group IDs and names filtered by cloud type.",
        "operationId": "get-account-group-name-by-cloudType",
        "parameters": [
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "object"
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Account Group Names by Cloud Type",
        "tags": [
          "Account Groups"
        ]
      }
    },
    "/cloud/group/{id}": {
      "get": {
        "description": "Retrieve all information about an account group using its ID.",
        "operationId": "get-account-group",
        "parameters": [
          {
            "description": "Account Group ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "true = Include cloud account information. Default is false.",
            "in": "query",
            "name": "includeAccountInfo",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupModel"
                }
              }
            },
            "description": "successful operation"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Account Group Info",
        "tags": [
          "Account Groups"
        ]
      },
      "put": {
        "description": "Update information related to an existing account group.",
        "operationId": "update-account-group",
        "parameters": [
          {
            "description": "Account Group ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupModel"
              }
            }
          },
          "description": "Account Group",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_account_group_name / invalid_id / account_group_name_already_exists"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Account Group",
        "tags": [
          "Account Groups"
        ]
      },
      "delete": {
        "description": "Deletes an existing account group using its ID.",
        "operationId": "delete-account-group",
        "parameters": [
          {
            "description": "Account Group ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_id"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "409": {
            "description": "conflict_deleting_last_account_group_for_alert_rule / cannot_delete_an_account_group_associated_with_cloud_accounts"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Account Group",
        "tags": [
          "Account Groups"
        ]
      }
    },
    "/adoptionadvisor/checks": {
      "get": {
        "description": "Returns data about the Prisma Cloud capabilities you've adopted and identifies available capabilities not yet utilized.",
        "operationId": "get-adoption-check-score",
        "parameters": [
          {
            "description": "true = Show formula used to calculate capability use. Default is false.",
            "in": "query",
            "name": "showFormula",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionAdvisorChecksResponseModel"
                }
              }
            },
            "description": "Complete list of adoption check breakdowns"
          },
          "202": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionAdvisorChecksResponseModel"
                }
              }
            },
            "description": "Request accepted. Partial list of adoption check breakdown response as some scores are still being computed"
          },
          "206": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionAdvisorChecksResponseModel"
                }
              }
            },
            "description": "Partial list of adoption check breakdown response. Errors were encountered in one or more computations"
          },
          "400": {
            "description": "bad_request"
          },
          "401": {
            "description": "unauthorized_access"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Adoption Check Score",
        "tags": [
          "Adoption Advisor"
        ]
      }
    },
    "/adoptionadvisor/report": {
      "get": {
        "description": "Get Adoption Advisor Report Configs",
        "operationId": "adoption-advisor-get-all-report-configs",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdoptionAdvisorReportGenerationConfigApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Adoption Advisor Report Configs",
        "tags": [
          "Adoption Advisor"
        ]
      },
      "post": {
        "description": "Create Adoption Advisor Report Config",
        "operationId": "create-adoption-advisor-config",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AdoptionAdvisorReportGenerationConfigApiModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionAdvisorReportGenerationConfigApiModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Create Adoption Advisor Report Config",
        "tags": [
          "Adoption Advisor"
        ]
      }
    },
    "/adoptionadvisor/report/generate": {
      "post": {
        "description": "Create and Get an Adoption Advisor Report on demand",
        "operationId": "adoption-advisor-create-report",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdoptionAdvisorReportGenerationConfigApiModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Create and Get an Adoption Advisor Report on demand",
        "tags": [
          "Adoption Advisor"
        ]
      }
    },
    "/adoptionadvisor/report/{reportId}": {
      "put": {
        "description": "Update Adoption Advisor Report",
        "operationId": "adoption-advisor-update-report",
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdoptionAdvisorReportGenerationConfigApiModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionAdvisorReportGenerationConfigApiModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Adoption Advisor Report",
        "tags": [
          "Adoption Advisor"
        ]
      },
      "delete": {
        "description": "Delete Adoption Advisor Report",
        "operationId": "adoption-advisor-delete-report",
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Adoption Advisor Report",
        "tags": [
          "Adoption Advisor"
        ]
      }
    },
    "/adoptionadvisor/report/{reportId}/download": {
      "get": {
        "description": "Download Latest Adoption Advisor Report",
        "operationId": "adoption-advisor-download-latest-report",
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Latest Adoption Advisor Report",
        "tags": [
          "Adoption Advisor"
        ]
      }
    },
    "/adoptionadvisor/report/{reportId}/{createdOn}/download": {
      "get": {
        "description": "Download Adoption Advisor Report",
        "operationId": "adoption-advisor-download-report-by-id-and-creation-time",
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "createdOn",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "204": {
            "description": "pending"
          },
          "400": {
            "description": "error"
          },
          "404": {
            "description": "not_found / error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Adoption Advisor Report",
        "tags": [
          "Adoption Advisor"
        ]
      }
    },
    "/v2/alert/rule": {
      "get": {
        "description": "Returns all alert rules you have permission to see based on your role. The data returned does not include an open alerts count.  \r\n\r\nThis request does not return a populated **alertRuleNotificationConfig** property \nin the response object. Use [Get Alert Rule by ID](/prisma-cloud/api/cspm/get-alert-rule)  \nto retrieve a response that includes a populated **alertRuleNotificationConfig** property.\n",
        "operationId": "get-alert-rules-v2",
        "parameters": [
          {
            "description": "Process only enabled alert rules",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PolicyScanConfigViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alert Rules V2",
        "tags": [
          "Alert Rules"
        ]
      }
    },
    "/alert/rule": {
      "post": {
        "description": "Adds a new alert rule.  \r\n\r\nBy default, all alerts that this alert rule triggers will display on the Alerts page. \nYou can also send Prisma Cloud alerts that this alert rule triggers to one or more third-party\ntools that you have integrated with the Prisma Cloud service. You can also configure the alert rule \nto send email notifications.\n\nTo send a Prisma Cloud alert to a third-party tool, you must configure an **AlertRuleNotificationConfig** object \nas part of your request body parameters. The content of the **AlertRuleNotificationConfig** object \ndepends on the third-party tool. If the tools require **AlertRuleNotificationConfig.id** or \n**AlertRuleNotificationConfig.templateId**, you can use \n[Get Integrations](/prisma-cloud/api/cspm/get-all-integrations) to get such information. \n\nTo add an Alert Rule, the required request body parameters are:\n\n* **name**\n* **description**\n* **allowAutoRemediate**\n* **enabled**\n* **target**\n* **target.accountGroups**\n* **scanAll**\n\nThe default values for the optional boolean parameters are in the table below:\n\n Optional Request Body Parameter | Default  \n---------------------------------| -------\n**allowAutoRemediate** | false\n**notifyOnDismissed** | false\n**notifyOnOpen** | true \n**notifyOnResolved** | false\n**notifyOnSnoozed** | false\n**deleted** | false\n\nYou can also specify addition **target** parameters to narrow the conditions that trigger alerts for this alert rule.\n\nIf **policies** is empty, then Prisma Cloud will scan all policies for violations to trigger alerts.\n\nUnder certain circumstances, you can also specify an array of **policyLabels** to identify policies. The following\nconditions must be met for you to use the **policyLabels** parameter:\n\n* The request body parameter **scanAll** must be false.\n* The policy associated with the policy label cannot be included in the request body parameter **policies**.\n",
        "operationId": "add-alert-rule",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PolicyScanConfigModel"
              }
            }
          },
          "description": "Model for Policy Scan Config",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyScanConfigModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_param_value / auto_remediation_only_for_config_remediable_policies / missing_required_param / non_notification_state_selected / invalid_notification_state / invalid_resource_list_id / snooze_time_must_be_relative / dismissal_reason_required / has_overlaps_in_resource_list_rules / missing_required_param"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add an Alert Rule",
        "tags": [
          "Alert Rules"
        ]
      }
    },
    "/alert/rule/{id}": {
      "get": {
        "description": "Returns information about the alert rule with the specified ID.",
        "operationId": "get-alert-rule",
        "parameters": [
          {
            "description": "Alert rule ID (also known as the \"policyScanConfigId\")",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyScanConfigViewModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_policy_id"
          },
          "403": {
            "description": "not_owner_or_same_role"
          },
          "404": {
            "description": "no_results"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Alert Rule by ID",
        "tags": [
          "Alert Rules"
        ]
      },
      "put": {
        "description": "Updates information about the alert rule that has the specified ID.",
        "operationId": "update-alert-rule",
        "parameters": [
          {
            "description": "Alert rule ID (also known as the \"policyScanConfigId\")",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PolicyScanConfigModel"
              }
            }
          },
          "description": "Model for Policy Scan Config",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyScanConfigModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_policy_id / missing_required_param / non_notification_state_selected / invalid_notification_state / invalid_resource_list_id / snooze_time_must_be_relative / dismissal_reason_required / has_overlaps_in_resource_list_rules"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Alert Rule",
        "tags": [
          "Alert Rules"
        ]
      },
      "delete": {
        "description": "Deletes the alert rule that has the specified ID.",
        "operationId": "delete-alert-rule",
        "parameters": [
          {
            "description": "Alert rule ID (also known as the \"policyScanConfigId\")",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_policy_id"
          },
          "403": {
            "description": "incomplete_account_group_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Alert Rule",
        "tags": [
          "Alert Rules"
        ]
      }
    },
    "/filter/alert/suggest": {
      "get": {
        "description": "Returns an object whose keys are the available policy filters. The corresponding values are default or recently set filter options",
        "operationId": "get-alert-filter-and-options",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AlertFilterSuggestion"
                }
              }
            },
            "description": "success"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alert Filters",
        "tags": [
          "Alerts"
        ]
      },
      "post": {
        "description": "Returns available options for an alert filter key. Supports fuzzy autocomplete search. If you specify a **query** value in the request body parameters, the response includes only items that contain the **query** string.",
        "operationId": "get-alert-filter-options",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterSuggestionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedTableFilter"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alert Filter Autocomplete Suggestions",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert": {
      "get": {
        "description": "Returns a list of alerts that match the constraints specified in the query parameters. Max 10k results. To get more, use **List Alerts V2 - GET**.  \r\n\r\nIn the response object:\n\n* Property **riskDetail** is deprecated.\n* Property **resource.cloudServiceName** is populated only for alerts whose resources belong to a cloud service.\n\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 2/sec \n* Burst limit: 10/sec        \n",
        "operationId": "get-alerts",
        "parameters": [
          {
            "description": "Time Type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of **timeUnits**",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time Unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "true = Return detailed alert data.",
            "in": "query",
            "name": "detailed",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Comma-separated list of specific fields to retrieve. Allowed values: alert.id, alert.status, alert.time, cloud.accountId, cloud.account, cloud.region, resource.id, resource.name, policy.name, policy.type, policy.severity",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of items that will be returned in one response. The maximum cannot exceed 10,000. The default is 10,000.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Alert ID",
            "in": "query",
            "name": "alert.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alert status",
            "in": "query",
            "name": "alert.status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud account Id",
            "in": "query",
            "name": "cloud.accountId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account group",
            "in": "query",
            "name": "account.group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud service",
            "in": "query",
            "name": "cloud.service",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy ID",
            "in": "query",
            "name": "policy.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy name",
            "in": "query",
            "name": "policy.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy severity",
            "in": "query",
            "name": "policy.severity",
            "required": false,
            "schema": {
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "informational"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy label",
            "in": "query",
            "name": "policy.label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy type",
            "in": "query",
            "name": "policy.type",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "network",
                "audit_event"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy is remediable",
            "in": "query",
            "name": "policy.remediable",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Alert rule name",
            "in": "query",
            "name": "alertRule.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource ID",
            "in": "query",
            "name": "resource.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource name",
            "in": "query",
            "name": "resource.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource TYPE",
            "in": "query",
            "name": "resource.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AlertModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alerts - GET",
        "tags": [
          "Alerts"
        ]
      },
      "post": {
        "description": "Returns a list of alerts that matches the constraints specified in the body parameters. Max 10k results. To get more, use **List Alerts V2 - POST**.  \r\n\r\nThe **fields** body parameter allows you to request specific fields from the alert payload. These fields\nare separate from the filters you specify. The following are valid **fields** items.\n\n* alert.id\n* alert.status\n* alert.time\n* cloud.account\n* cloud.accountId\n* cloud.region\n* resource.id\n* resource.name\n* policy.name\n* policy.type\n* policy.severity\n\nThe **filters** body parameter enables you to narrow your request for alerts. See \n[List Alert Filters](/prisma-cloud/api/cspm/get-alert-filter-and-options) \nfor an API request to list all the valid filters.\n\nData in the response object does not include alert rules.\n\nAlso, in the response object:\n\n* Property **riskDetail** is deprecated.\n* Property **resource.cloudServiceName** is populated only for alerts whose resources belong to a cloud service.\n\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 2/sec \n* Burst limit: 10/sec        \n",
        "operationId": "post-alerts",
        "parameters": [
          {
            "description": "true = Return detailed alert data. Default is false. Overrides **detailed** in body param.",
            "in": "query",
            "name": "detailed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AlertModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alerts - POST",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/v2/alert": {
      "get": {
        "description": "Returns a paginated list of alerts from the Prisma Cloud platform.  \r\n\r\nData in the response object does not include alert rules.\n\nAlso, in the response object:\n\n* Property **riskDetail** is deprecated.\n* Property **items[].resource.cloudServiceName** is populated only for alerts whose resources belong to a cloud service.\n\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 2/sec \n* Burst limit: 10/sec      \n",
        "operationId": "get-alerts-v2",
        "parameters": [
          {
            "description": "Time Type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of **timeUnits**",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time Unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "true = Return detailed alert data.",
            "in": "query",
            "name": "detailed",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Array of specific fields to return. Allowed fields: alert.id, alert.status, alert.time, cloud.accountId, cloud.account, cloud.region, resource.id, resource.name, policy.name, policy.type, policy.severity",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Response object property by which to sort response list. The valid values are in the response object attribute **sortAllowedColumns**. The format is **property:asc** for ascending and **property:desc** for descending sort ",
            "example": "sortBy=id:desc&sortBy=firstseen:asc,lastseen:desc",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of items that will be returned in one response. The maximum cannot exceed 10,000. The default is 10,000.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Token that identifies the required page of data. When there are multiple pages of data in the response, set **pageToken** to the **nextPageToken** value from the previous API response to retrieve the next page of data.",
            "in": "query",
            "name": "pageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alert ID",
            "in": "query",
            "name": "alert.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alert status",
            "in": "query",
            "name": "alert.status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud account Id",
            "in": "query",
            "name": "cloud.accountId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account group",
            "in": "query",
            "name": "account.group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud service",
            "in": "query",
            "name": "cloud.service",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy ID",
            "in": "query",
            "name": "policy.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy name",
            "in": "query",
            "name": "policy.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy severity",
            "in": "query",
            "name": "policy.severity",
            "required": false,
            "schema": {
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "informational"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy label",
            "in": "query",
            "name": "policy.label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy type",
            "in": "query",
            "name": "policy.type",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "network",
                "audit_event"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy is remediable",
            "in": "query",
            "name": "policy.remediable",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Alert rule name",
            "in": "query",
            "name": "alertRule.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource ID",
            "in": "query",
            "name": "resource.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource name",
            "in": "query",
            "name": "resource.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource TYPE",
            "in": "query",
            "name": "resource.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultsAlertModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alerts V2 - GET",
        "tags": [
          "Alerts"
        ]
      },
      "post": {
        "description": "Returns a paginated list of alerts that matches the constraints specified in the body parameters.  \r\n\r\nThe **fields** request body parameter allows you to request specific fields from the alert payload. \nThese fields are separate from the filters you specify. The following are valid **fields** items.\n\n* alert.id\n* alert.status\n* alert.time\n* cloud.account\n* cloud.accountId\n* cloud.region\n* resource.id\n* resource.name\n* policy.name\n* policy.type\n* policy.severity\n\nThe **filters** request body parameter enables you to narrow your request for alerts. See \n[List Alert Filters](/prisma-cloud/api/cspm/get-alert-filter-and-options) \nfor an API request to list all the valid filters.\n\nYou can find the valid values for the **sortBy** request body parameter in the response \nobject attribute **sortAllowedColumns**.\n\nData in the response object does not include alert rules.\n\nAlso, in the response object:\n\n* Property **riskDetail** is deprecated.\n* Property **items[].resource.cloudServiceName** is populated only for alerts whose resources belong to a cloud service.\n\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 2/sec \n* Burst limit: 10/sec \n",
        "operationId": "post-alerts-v2",
        "parameters": [
          {
            "description": "true = Return detailed alert data. Default is false. Overrides **detailed** in body param.",
            "in": "query",
            "name": "detailed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultsAlertModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alerts V2 - POST",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/policy": {
      "get": {
        "description": "Returns alert counts grouped by policy. You can use query parameters to narrow the response.  \r\n\r\nIn the response object:\n\n* Property **alertRules** is not populated.         \n* Property **riskDetail** is deprecated.\n* Property **resource.cloudServiceName** is not populated.\n\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 1/sec \n* Burst limit: 5/sec        \n",
        "operationId": "get-alerts-grouped",
        "parameters": [
          {
            "description": "Alert ID",
            "in": "query",
            "name": "alert.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alert status",
            "in": "query",
            "name": "alert.status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud account Id",
            "in": "query",
            "name": "cloud.accountId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account group",
            "in": "query",
            "name": "account.group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud service",
            "in": "query",
            "name": "cloud.service",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy ID",
            "in": "query",
            "name": "policy.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy name",
            "in": "query",
            "name": "policy.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy severity",
            "in": "query",
            "name": "policy.severity",
            "required": false,
            "schema": {
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "informational"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy label",
            "in": "query",
            "name": "policy.label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy type",
            "in": "query",
            "name": "policy.type",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "network",
                "audit_event"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy is remediable",
            "in": "query",
            "name": "policy.remediable",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Alert rule name",
            "in": "query",
            "name": "alertRule.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource ID",
            "in": "query",
            "name": "resource.id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource name",
            "in": "query",
            "name": "resource.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource TYPE",
            "in": "query",
            "name": "resource.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AlertModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alert Counts By Policy - GET",
        "tags": [
          "Alerts"
        ]
      },
      "post": {
        "description": "Returns alert counts grouped by policy. You can use body parameters to narrow the response.  \r\n\r\nIn the response object:\n\n* Property **alertRules** is not populated.       \n* Property **riskDetail** is deprecated.\n* Property **resource.cloudServiceName** is not populated.\n\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 1/sec \n* Burst limit: 5/sec        \n",
        "operationId": "post-alerts-grouped",
        "parameters": [
          {
            "description": "true = Return detailed alert data. Default is false. Overrides **detailed** in body param.",
            "in": "query",
            "name": "detailed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          },
          "description": "Model for Filter",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AlertModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alert Counts By Policy - POST",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/{id}": {
      "get": {
        "description": "Returns information about an alert for the specified ID.  \r\n\r\nIn the response object, field **riskDetail** is deprecated.\n\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 5/sec \n* Burst limit: 10/sec        \n",
        "operationId": "get-alert",
        "parameters": [
          {
            "description": "Alert ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "true = Return detailed alert data. Default is false.",
            "in": "query",
            "name": "detailed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AlertModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error/invalid_alert_id"
          },
          "404": {
            "description": "not_found"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Alert Info",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/dismiss": {
      "post": {
        "description": "Dismisses one or more alerts on the Prisma Cloud platform. If the caller specifies a dismissal time range, then alerts will snooze for that time period rather than be dismissed.",
        "operationId": "dismiss-alerts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertStatusChangeRequestModel"
              }
            }
          },
          "description": "Model for Alert Status Change Request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error / violates_minimum_alert_dismiss_duration_time"
          },
          "403": {
            "description": "permission_error"
          },
          "404": {
            "description": "alert_no_longer_in_expected_state"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Dismiss Alerts",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/dismiss/require_dismissal_note": {
      "get": {
        "description": "Indicates whether or not the user is required to specify a reason (dismissal note) when dismissing an alert.",
        "operationId": "is-dismissal-note-required",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RequireDismissalNoteConfigModel"
                }
              }
            },
            "description": "successful operation"
          },
          "403": {
            "description": "permission_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Is Dismissal Note Required",
        "tags": [
          "Alerts"
        ]
      },
      "put": {
        "description": "Manages whether or not a user must provide a reason (dismissal note) when dismissing an alert on the Prisma Cloud platform.",
        "operationId": "set-dismissal-note-required",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequireDismissalNoteConfigModel"
              }
            }
          },
          "description": "Model for Require Dismissal Note Config"
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "403": {
            "description": "permission_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Dismissal Note Requirement",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/reopen": {
      "post": {
        "description": "Sets the status of one or more dismissed or snoozed alerts on the Prisma Cloud platform to **open**.",
        "operationId": "reopen-alerts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertStatusChangeRequestModel"
              }
            }
          },
          "description": "Model for Alert Status Change Request"
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error"
          },
          "403": {
            "description": "permission_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Reopen Alerts",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/count/{status}": {
      "get": {
        "description": "Returns an alert count for the specified status.  \r\n\r\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 2/sec \n* Burst limit: 10/sec\n",
        "operationId": "get-alert-count",
        "parameters": [
          {
            "description": "Alert Status",
            "in": "path",
            "name": "status",
            "required": true,
            "schema": {
              "enum": [
                "open",
                "dismissed",
                "snoozed",
                "resolved"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CountModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Alerts Count By Status",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/jobs": {
      "post": {
        "description": "Submits a job to generate an alerts list that matches the constraints in the body parameters and is downloadable in JSON format. Returns the job ID and job submission status.  \r\n\r\nFilter model fields specific to pagination (**sortBy**, **limit**, and **pageToken**) do not apply to this request, \neven though the body parameters include them.\n\nThe **fields** body parameter allows you to request specific fields from the alert payload. These \nfields are separate from the filters you specify. The following are valid **fields** items.\n\n* alert.id\n* alert.status\n* alert.time\n* cloud.account\n* cloud.accountId\n* cloud.region\n* resource.id\n* resource.name\n* policy.name\n* policy.type\n* policy.severity\n\n The **filters** body parameter enables you to narrow your request for alerts. See \n [List Alert Filters](/prisma-cloud/api/cspm/get-alert-filter-and-options) \n for an API request to list all the valid filters.\n\n  #### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 2/sec \n* Burst limit: 10/sec        \n",
        "operationId": "submit-job-for-listing-alerts",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          },
          "description": "Model for Filter",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJob"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Submit Job to List Alerts",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/jobs/{id}/status": {
      "get": {
        "description": "Get the status of the alerts list job with the specified job ID",
        "operationId": "get-alerts-job-status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJob"
                }
              }
            },
            "description": "successful operation"
          },
          "404": {
            "description": "Job Id `<id>` not found"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Alerts List Job Status",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/jobs/{id}/download": {
      "get": {
        "description": "Downloads the generated alerts list in JSON format for the specified job ID.",
        "operationId": "download-alerts-list-json",
        "parameters": [
          {
            "description": "Job ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Alerts List JSON",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/csv": {
      "post": {
        "description": "Submits a job to generate an alerts list that matches the constraints in the body parameters and is downloadable as a CSV file. Returns the job ID and job submission status.  \r\n\r\nFilter model fields specific to pagination (**sortBy**, **limit**, and **pageToken**) do not apply to this request, \neven though the body parameters include them.\n\nThe **fields** request body parameter is ignored!\n\nThe **filters** body parameter enables you to narrow your request for alerts. See [List Alert Filters](/prisma-cloud/api/cspm/get-alert-filter-and-options) \nfor an API request to list all the valid filters.\n",
        "operationId": "submit-an-alert-csv-download-job",
        "parameters": [
          {
            "description": "true = Return detailed alert data. Default is false. Overrides **detailed** in body param.",
            "in": "query",
            "name": "detailed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJob"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Submit Alert CSV Generation Job",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/csv/{id}/status": {
      "get": {
        "description": "Returns the status of an alert CSV generation job with the specified job ID.",
        "operationId": "get-alert-csv-job-status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJob"
                }
              }
            },
            "description": "successful operation"
          },
          "404": {
            "description": "not_found"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Alert CSV Job Status",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/csv/{id}/download": {
      "get": {
        "description": "Downloads the alert list that Prisma Cloud generated for the specified job ID, in CSV format.",
        "operationId": "download-alert-csv",
        "parameters": [
          {
            "description": "Job ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "404": {
            "description": "Job Id `<id>` not found"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Alert CSV",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/policy/jobs": {
      "post": {
        "description": "Submits a job to generate a list of alerts grouped by the policy they violated. Returns the job ID and job submission status.  \r\n\r\nFilter model fields specific to pagination (**sortBy**, **limit**, and **pageToken**) do not apply to this request, \neven though the body parameters include them.\n\nThe **fields** body parameter allows you to request specific fields from the alert payload. These \nfields are separate from the filters you specify. The following are valid **fields** items.\n\n* alert.id\n* alert.status\n* alert.time\n* cloud.account\n* cloud.accountId\n* cloud.region\n* resource.id\n* resource.name\n* policy.name\n* policy.type\n* policy.severity\n\nThe **filters*8 body parameter enables you to narrow your request for alerts. \nSee [List Alert Filters](/prisma-cloud/api/cspm/get-alert-filter-and-options)\nfor an API request to list all the valid filters.\n\n#### Rate Limits ####\n\nThe following rate limits apply:\n* Request rate limit: 1/sec \n* Burst limit: 5/sec        \n",
        "operationId": "submit-a-job-for-listing-alerts-grouped-by-policy",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJob"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Submit Job to List Alerts By Policy",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/policy/jobs/{id}/status": {
      "get": {
        "description": "Returns the status of a job submitted to list alerts by policy. Uses the specified job ID to identify the job.",
        "operationId": "get-async-policy-alert-job-status",
        "parameters": [
          {
            "description": "Job ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJob"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Policy Alert Job Status",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/policy/jobs/{id}/download": {
      "get": {
        "description": "Downloads the policy alerts results in JSON format for the specified job ID.",
        "operationId": "download-policy-alerts-json",
        "parameters": [
          {
            "description": "Job ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Policy Alerts JSON",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/remediation": {
      "post": {
        "description": "Generates and returns a list of remediation commands for the specified alerts and policies. Data returned for a successful call include fully constructed commands for remediation.  \r\n\r\nThis request requires the following filter request body parameters:\n\n* filter.timeRange.type\n* filter.timeRange.value\n\nThe rest of the filter parameters are ignored.\n",
        "operationId": "get-alerts-remediation",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AlertsLookupKeyModel"
              }
            }
          },
          "description": "Model for AlertsLookupKey",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationCliModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value / bad_request / cannot_remediate_multiple_policy_alerts"
          },
          "405": {
            "description": "remediation_unavailable"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Alert Remediation Commands",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/alert/remediation/{id}": {
      "patch": {
        "description": "Remediates the alert with the specified ID if that alert is associated with a remediable policy. ",
        "operationId": "perform-remediation-for-alert",
        "parameters": [
          {
            "description": "Alert ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value / bad_request / cannot_remediate_multiple_policy_alerts"
          },
          "405": {
            "description": "remediation_unavailable"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Remediate Alert",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/anomalies/trusted_list": {
      "get": {
        "tags": [
          "Anomalies"
        ],
        "summary": "Get Anomaly Trusted List",
        "description": "Returns all entries in the Anomaly Trusted List.",
        "operationId": "getAllWhitelistEntries",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnomaliesTrustedListSummaryBean"
                  }
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnomaliesTrustedListSummaryBean"
                  }
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnomaliesTrustedListSummaryBean"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Anomalies"
        ],
        "summary": "Add Entries to Anomaly Trusted List",
        "description": "Adds one or more entries to the Anomaly Trusted List.",
        "operationId": "addToTrustedList",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnomaliesTrustedListSummary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/anomalies/trusted_list/{id}": {
      "get": {
        "tags": [
          "Anomalies"
        ],
        "summary": "Get Anomaly Trusted List Entry",
        "description": "Returns the entry with the specified ID from the Anomaly Trusted List.",
        "operationId": "getWhitelistEntryById",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Anomaly Trusted List identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 205
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Anomalies"
        ],
        "summary": "Update Anomaly Trusted List Entry",
        "description": "Modifies an existing entry in the Anomaly Trusted List.",
        "operationId": "updateWhitelist",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Anomaly Trusted List identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 205
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnomaliesTrustedListSummary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Anomalies"
        ],
        "summary": "Delete Anomaly Trusted List Entry",
        "description": "Deletes the entry with the given ID from the Anomaly Trusted List.",
        "operationId": "deleteFromTrustedList",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Anomaly Trusted List identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 205
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/anomalies/settings/{policyid}": {
      "get": {
        "tags": [
          "Anomalies"
        ],
        "summary": "Get Anomaly Settings",
        "description": "Returns anomaly settings for the specified policy ID.",
        "operationId": "getAnomaliesSettings",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyid",
            "in": "path",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6b4614ef-2347-abe3-7522-445982e4816f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AnomaliesSettings"
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AnomaliesSettings"
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AnomaliesSettings"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Anomalies"
        ],
        "summary": "Update Anomaly Settings",
        "description": "Updates anomaly settings for the policy with the specified ID.",
        "operationId": "updateSettings",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyid",
            "in": "path",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6b4614ef-2347-abe3-7522-445982e4816f"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnomaliesSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/anomalies/trusted_list/types": {
      "get": {
        "tags": [
          "Anomalies"
        ],
        "summary": "List Allowed Trusted List Types",
        "description": "Returns the available trusted list types.",
        "operationId": "getAllowedTrustedListTypes",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AnomaliesTrustedListTypeEntry"
                  }
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AnomaliesTrustedListTypeEntry"
                  }
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AnomaliesTrustedListTypeEntry"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/anomalies/settings": {
      "get": {
        "tags": [
          "Anomalies"
        ],
        "summary": "Get All Anomaly Settings",
        "description": "Returns all anomaly settings. The response object is a list of policy IDs, and anomaly settings are returned with each policy ID.",
        "operationId": "getAllAnomaliesSettings",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Specify type of Anomaly whose settings are needed",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Network, UEBA, DNS"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AnomaliesSettings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AnomaliesSettings"
                  }
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AnomaliesSettings"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/anomalies/policies": {
      "get": {
        "tags": [
          "Anomalies"
        ],
        "summary": "List Policies for Trusted List Type",
        "description": "Returns a list of available policies for a specific trusted list type.",
        "operationId": "get-policies-anomalies",
        "parameters": [
          {
            "name": "x-redlock-auth",
            "in": "header",
            "description": "Authorize using Authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trustedListType",
            "in": "query",
            "description": "Trusted list type",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ip, resource, image, tag, service, port, subject, domain, protocol"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "permission_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/config/api/v1/tenant/{prisma_id}/archiveList": {
      "get": {
        "tags": [
          "Archived Assets"
        ],
        "summary": "Bulk Export Resource Archives",
        "description": "Returns a list that has details about (and optionally, links for) the compressed archive files that contain the configuration details for assets that were deleted in the specified time period.\n\nEach archive file contains the configuration details for up to 50,000 assets that belong to a cloud account ID and were deleted on a specific day.\n\nThe returned list has a maximum of 10 items. Each item is itself an array that has details about the archive file and (optionally) a temporary presigned URL for downloading the file. If the number of archive files exceeds 10, the response includes a URL (**nextPageUrl**) that you can use to get the next 10 archive files.\n\nThis endpoint checks the date on which an asset was deleted against the specified dates. If the asset was deleted on or after the specified **start_date** and on or before the specified **end_date**, and subsequently archived, it is included in an archive file returned by this endpoint.\n\nUsers must have the “System Admin” role in Prisma Cloud to invoke this endpoint.\n\n**Rate Limits**\n\nThe following rate limits apply:\n* Request Rate Limit: 80/minute\n",
        "operationId": "bulkExportResourceArchives",
        "parameters": [
          {
            "name": "prisma_id",
            "in": "path",
            "description": "Your Prisma Cloud tenant ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date (in the YYYY-MM-DD format) of the asset deletion period. If an asset was deleted on or after this date and on or before the **end_date**, and subsequently archived, it is included in one of the returned archives.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date (in the YYYY-MM-DD format) of the asset deletion period. If an asset was deleted on or before this date and on or after the **start_date**, and subsequently archived, it is included in one of the returned archives.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "include_url",
            "in": "query",
            "description": "This is an optional field.\nBy default, the API returns the resource archive ID, cloud account ID, and the asset deletion date for 10 compressed archive files. If set to **true**, each item in the returned list also includes the presigned URL compressed archive file. The presigned URL is valid for 10 minutes from the time they are generated.\n",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "The token to retrieve details for the next 10 compressed archive files. This token and other query parameters are included in the **nextPageUrl** returned in the response.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved details for the compressed archive files for the specified time period",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkExporterPage"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 400,
                  "timestamp": "string",
                  "message": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 401,
                  "timestamp": "string",
                  "message": "UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 403,
                  "timestamp": "string",
                  "message": "FORBIDDEN"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 405,
                  "timestamp": "string",
                  "message": "METHOD_NOT_ALLOWED"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 425,
                  "timestamp": "string",
                  "message": "TOO_EARLY"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 429,
                  "timestamp": "string",
                  "message": "TOO_MANY_REQUESTS"
                }
              }
            }
          },
          "500": {
            "description": "Failed with an Exception, Internal Error Occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 500,
                  "timestamp": "string",
                  "message": "INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/filter/resource/scan_info/suggest": {
      "get": {
        "description": "Returns an object where the keys are supported Resource Info filters and values contain default recent options.",
        "operationId": "get-resource-info-filters-and-options",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryFilterSuggestion"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Resource Info Filters",
        "tags": [
          "Asset Explorer"
        ]
      },
      "post": {
        "description": "Returns an object that includes a list of autocomplete suggestions for the specified resource info filter.",
        "operationId": "get-resource-info-filter-options",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterSuggestionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedTableFilter"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Resource Info Filter Autocomplete Suggestions",
        "tags": [
          "Asset Explorer"
        ]
      }
    },
    "/resource/scan_info": {
      "get": {
        "description": "Returns a full breakdown of passed/failed statistics and associated policies for resources.  \r\n\r\nThe query parameters enable you to add filters to your request to narrow your results.\n### Filter by Time\nThe following table has examples of common filters by time. The time filter narrows the\nresponse to resources from account onboarding until the point in time of interest.\n\nPoint in time of interest | timeAmount | timeType | timeUnit \n-------------| ---- | ----------- | -------------\n24 hours ago | 24 | **relative** | hour      \n1 week ago |  1 | **relative** | week\n1 month ago | 1 | **relative** | month        \n1 year ago | 1 | **relative** | year                \nLatest | Not required with **to_now** | **to_now** | Defaults to **epoch**\n\n### How Current is the Returned Data?\nSince Prisma Cloud relies on snapshots of data, there can be an hour or two delay between the \ntime a resource passes or fails a policy check and the reporting of that result through this method.\n\n### Filter by Cloud Type\nYou can specify more than one cloud type to request a combination of data. For \nexample **cloud.type=gcp&cloud.type=azure** returns data for both **gcp** and **azure**.\n\n### Filter by Compliance Standard, Requirement, and/or Section \nYou can also broaden your filter by specifying any of the following query parameters more than once:\n* **policy.complianceStandard**\n* **policy.complianceRequirement**\n* **policy.complianceSection**\n",
        "operationId": "get-resource-scan-info",
        "parameters": [
          {
            "description": "Time Type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative",
                "to_now"
              ],
              "type": "string"
            }
          },
          {
            "description": "Time Amount. Required for **timeType** **relative**. Unused for **timeType** **to_now**",
            "in": "query",
            "name": "timeAmount",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time Unit. Required for **timeType** **relative**. Unused for **timeType** **to_now**",
            "in": "query",
            "name": "timeUnit",
            "required": false,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account group",
            "in": "query",
            "name": "account.group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard. You can specify policy.complianceStandard=* to return the data for all compliance standards.",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maximum number of entries to be returned. A single API call retrieves a maximum of 10,000 resources, which is also the default.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether or not the resources were scanned and whether they passed or failed the scan. The default is **all**.",
            "in": "query",
            "name": "scan.status",
            "required": false,
            "schema": {
              "enum": [
                "all",
                "passed",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Token identifying the required page of data. When there are multiple pages of data, the **nextPageToken** from the response can be used in this parameter",
            "in": "query",
            "name": "pageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy severity",
            "in": "query",
            "name": "asset.severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Vulnerability Severity",
            "in": "query",
            "name": "vulnerability.severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include Foreign Entities. This is only applicable for compliance flows. This is because the Asset Inventory only counts assets that belong to your cloud account, and the Compliance Dashboard includes foreign entities such as SSO or Federated Users that are not resources ingested directly from the monitored cloud accounts",
            "in": "query",
            "name": "includeEventForeignEntities",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecoratedResourceInfoResult"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Resource Scan Info - GET",
        "tags": [
          "Asset Explorer"
        ]
      },
      "post": {
        "description": "Returns a full breakdown of passed/failed statistics and associated policies for resources.  \r\n\r\nYou can get a list of the valid names and values for the filters body parameter through \n[List Inventory Filters V2](/prisma-cloud/api/cspm/get-asset-inventory-v-2-dashboard-filter-options).\n\n### Filter by Time\nThe time filter narrows the response to resources from account onboarding until the point in time of interest.\n\n#### Time Types\n\nTime Type | Required **timeRange.value** Parameters\n----------|-----------------\n**to_now** | No **timeRange.value** parameter required\n**relative** | **timeRange.value.amount**, **timeRange.value.unit** \n**absolute** | **timeRange.value.endTime** (**timeRange.value.startTime** is ignored)\n\n### How Current is the Returned Data?\nSince Prisma Cloud relies on snapshots of data, there can be an hour or two delay between the \ntime a resource passes or fails a policy check and the reporting of that result through this method.\n",
        "operationId": "post-resource-scan-info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecoratedResourceInfoResult"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Resource Scan Info - POST",
        "tags": [
          "Asset Explorer"
        ]
      }
    },
    "/uai/v1/asset": {
      "post": {
        "tags": [
          "Asset Explorer"
        ],
        "summary": "Get Asset",
        "description": "Returns detailed information for the asset with the given id.\n\nThe data field in the response object contains the raw JSON blob as is received from the source cloud service provider API for the given asset.\n\nOnly the rrn parameter in the request body is used for this API. Ignore the timelineItemId and findingType fields for this API.",
        "operationId": "asset_2",
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChunkedAssetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/filter/v2/inventory/suggest": {
      "get": {
        "description": "Returns an object whose keys are supported asset inventory filters and values contain default recent options.",
        "operationId": "get-asset-inventory-v2-filters-and-options",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryV2FilterSuggestion"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Inventory Filters V2",
        "tags": [
          "Asset Inventory"
        ]
      },
      "post": {
        "description": "Returns filter autocomplete suggestions.",
        "operationId": "get-asset-inventory-v2-dashboard-filter-options",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterSuggestionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedTableFilter"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter/filter_name"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Inventory Dashboard Filter Autocomplete Suggestions V2",
        "tags": [
          "Asset Inventory"
        ]
      }
    },
    "/filter/inventory": {
      "get": {
        "description": "Returns a list of all the saved asset inventory filters.",
        "operationId": "get-all-saved-asset-inventory-filters",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FilterModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "failed_fetch_inventory_saved_filters"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Saved Asset Inventory Filters",
        "tags": [
          "Asset Inventory"
        ]
      },
      "post": {
        "description": "Saves the asset inventory filter.",
        "operationId": "save-asset-inventory-filter",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "failed_add_inventory_saved_filter"
          },
          "500": {
            "description": "failed_add_inventory_saved_filter"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Save Asset Inventory Filter",
        "tags": [
          "Asset Inventory"
        ]
      }
    },
    "/filter/inventory/{id}": {
      "get": {
        "description": "Returns the saved asset inventory filter for the specified ID.",
        "operationId": "get-saved-asset-inventory-filter",
        "parameters": [
          {
            "description": "Asset Inventory ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FilterModel"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "failed_fetch_inventory_saved_filter"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Saved Asset Inventory Filter",
        "tags": [
          "Asset Inventory"
        ]
      },
      "put": {
        "description": "Updates the saved asset inventory filter with the specified ID.",
        "operationId": "update-saved-asset-inventory-filter",
        "parameters": [
          {
            "description": "Asset Inventory ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "failed_update_inventory_saved_filter"
          },
          "500": {
            "description": "failed_update_inventory_saved_filter"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Saved Asset Inventory Filter",
        "tags": [
          "Asset Inventory"
        ]
      },
      "delete": {
        "description": "Deletes the saved asset inventory filter with the specified ID.",
        "operationId": "delete-saved-asset-inventory-filter",
        "parameters": [
          {
            "description": "Asset Inventory ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "failed_add_inventory_saved_filter"
          },
          "403": {
            "description": "not_owner_or_same_role"
          },
          "500": {
            "description": "failed_add_inventory_saved_filter"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Saved Asset Inventory Filter",
        "tags": [
          "Asset Inventory"
        ]
      }
    },
    "/v2/inventory": {
      "get": {
        "description": "Returns asset inventory pass/fail data for the specified time period.  \r\n\r\nThe response includes an attribute **groupedAggregates**, whose content depends on the **groupBy** query parameter.\nThe following table shows the attributes that **groupedAggregates** will include for the specified **groupBy** query parameter:\n\n**groupBy**  | **groupedAggregates** Includes\n-------------| ------------------------------\nnot specified | **cloudTypeName**\n**cloudType** | **cloudTypeName**\n**cloud.account** | **accountName**\n**cloud.region** | **regionName**, **cloudTypeName**\n**cloud.service** | **serviceName**, **cloudTypeName**\n**resource.type** | **resourceTypeName**, **cloudTypeName**\n\n\nIf you specify **groupBy** multiple times in a single request, then **groupedAggregates** will include multiple attributes.\nFor example, you can set the following in the URL: **groupBy=cloud.account&groupBy=cloud.service**. Doing so will have the same effect\nas specifying a comma-separated list of values for **groupBy**.\n",
        "operationId": "asset-inventory-v2",
        "parameters": [
          {
            "description": "Time type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of time units",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account group",
            "in": "query",
            "name": "account.group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud service",
            "in": "query",
            "name": "cloud.service",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource type",
            "in": "query",
            "name": "resource.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma-separated list of values by to group response items. Valid values are **cloud.type**, **cloud.account**, **cloud.region**, **cloud.service**, and/or **resource.type**. Default is **cloud.type**.",
            "in": "query",
            "name": "groupBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether or not the resources passed or failed the scan. **All** includes both scanned and unscanned resources.",
            "in": "query",
            "name": "scan.status",
            "required": false,
            "schema": {
              "enum": [
                "all",
                "passed",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy severity",
            "in": "query",
            "name": "asset.severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Vulnerability Severity",
            "in": "query",
            "name": "vulnerability.severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AssetInventorySnapshot"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Asset Inventory View V2 - GET",
        "tags": [
          "Asset Inventory"
        ]
      },
      "post": {
        "description": "Returns asset inventory pass/fail data for the specified time period.  \r\n\r\nYou can get a list of the valid names and values for the filters body parameter \nthrough [List Inventory Filters V2](/prisma-cloud/api/cspm/get-asset-inventory-v-2-dashboard-filter-options).\n\nThe response includes an attribute **groupedAggregates**, whose content depends on the **groupBy** request body parameter.\nThe following table shows the attributes that **groupedAggregates** will include for the specified **groupBy** value:\n\n**groupBy**  | **groupedAggregates** Includes \n-------------| ------------------------------\n_not specified_ | **cloudTypeName**\n**cloudType** | **cloudTypeName**\n**cloud.account** | **accountName**\n**cloud.region** | **regionName**, **cloudTypeName**\n**cloud.service** | **serviceName**, **cloudTypeName**\n**resource.type** | **resourceTypeName**, **cloudTypeName**\n\n\nIf **groupBy** includes multiple values, then **groupedAggregates** will include multiple attributes. \n",
        "operationId": "post-method-for-asset-inventory-v2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetInventorySnapshot"
                }
              }
            },
            "description": "success"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Asset Inventory View V2 - POST",
        "tags": [
          "Asset Inventory"
        ]
      }
    },
    "/v2/inventory/trend": {
      "get": {
        "description": "Returns asset inventory pass/fail trends for the specified time period.",
        "operationId": "asset-inventory-trend-v2",
        "parameters": [
          {
            "description": "Time type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of time units",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account group",
            "in": "query",
            "name": "account.group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud service",
            "in": "query",
            "name": "cloud.service",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource type",
            "in": "query",
            "name": "resource.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Scan status",
            "in": "query",
            "name": "scan.status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy severity",
            "in": "query",
            "name": "asset.severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Vulnerability Severity",
            "in": "query",
            "name": "vulnerability.severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AssetInventorySummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Asset Inventory Trend View V2 - GET",
        "tags": [
          "Asset Inventory"
        ]
      },
      "post": {
        "description": "Returns asset inventory pass/fail trends for the specified time period.  \r\n\r\nYou can get a list of the valid names and values for the filters body parameter \nthrough [List Inventory Filters V2](/prisma-cloud/api/cspm/get-asset-inventory-v-2-dashboard-filter-options).\n",
        "operationId": "post-method-asset-inventory-trend-v2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AssetInventorySummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Asset Inventory Trend View V2 - POST",
        "tags": [
          "Asset Inventory"
        ]
      }
    },
    "/audit/redlock": {
      "get": {
        "description": "Returns audit logs for events that took place on the Prisma Cloud platform.",
        "operationId": "rl-audit-logs",
        "parameters": [
          {
            "description": "Time Type",
            "in": "query",
            "name": "timeType",
            "required": false,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Time Amount",
            "in": "query",
            "name": "timeAmount",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Time Unit",
            "in": "query",
            "name": "timeUnit",
            "required": false,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RedLockAuditLogBeanModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Prisma Cloud Audit Logs",
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/cloud": {
      "get": {
        "description": "Lists all cloud accounts onboarded onto the Prisma Cloud platform.",
        "operationId": "get-cloud-accounts",
        "parameters": [
          {
            "description": "true = Exclude account group details. Default is false.",
            "in": "query",
            "name": "excludeAccountGroupDetails",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CloudAccountViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Cloud Accounts",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/name": {
      "get": {
        "description": "Returns a list of cloud account IDs and names.",
        "operationId": "get-cloud-account-names",
        "parameters": [
          {
            "description": "Returns IDs and names of active accounts only. Default is false.",
            "in": "query",
            "name": "onlyActive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Returns IDs and names of accounts that belong to the specified account group IDs",
            "explode": true,
            "in": "query",
            "name": "accountGroupIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Returns IDs and names of accounts that belong to the specified cloudType and accountGroup",
            "in": "query",
            "name": "cloudType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Returns none cloudAccount and none cloudAccountId in response if includeOthers is true",
            "in": "query",
            "name": "includeOthers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CloudAccountIdentity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Cloud Account Names - GET",
        "tags": [
          "Cloud Accounts"
        ]
      },
      "post": {
        "description": "Returns a list of cloud account IDs and names.",
        "operationId": "get-cloud-account-names-by-post",
        "parameters": [
          {
            "description": "Returns IDs and names of active accounts only. Default is false.",
            "in": "query",
            "name": "onlyActive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Returns IDs and names of accounts that belong to the specified cloudType and accountGroup",
            "in": "query",
            "name": "cloudType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Returns none cloudAccount and none cloudAccountId in response if includeOthers is true",
            "in": "query",
            "name": "includeOthers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountListRequestModel"
              }
            }
          },
          "description": "Cloud Account Groups",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CloudAccountIdentity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Cloud Account Names - POST",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{cloud_type}/{id}/project": {
      "get": {
        "description": "Lists all cloud accounts onboarded onto the Prisma Cloud platform as children of an organization.",
        "operationId": "get-cloud-org-accounts",
        "parameters": [
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          },
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          },
          {
            "description": "true = Exclude account group details. Default is false.",
            "in": "query",
            "name": "excludeAccountGroupDetails",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CloudAccountViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "not_found / not_an_org"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Cloud Org Accounts",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/type": {
      "get": {
        "description": "Returns all the cloud types.",
        "operationId": "get-cloud-types",
        "parameters": [
          {
            "description": "**true** = return only cloud types to which the user has access and for which he has onboarded cloud accounts. Default is **false**.",
            "in": "query",
            "name": "onlyAccessible",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "returns other cloudType in response if includeOthers is true",
            "in": "query",
            "name": "includeOthers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Cloud Types",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{id}/owners": {
      "get": {
        "description": "Returns the email addresses of all owners for the specified cloud account ID.",
        "operationId": "get-cloud-account-owners",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_account_id_format"
          },
          "404": {
            "description": "invalid_account_id_format"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Cloud Account Owners",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{cloud_type}": {
      "post": {
        "description": "Onboard a new cloud account onto the Prisma Cloud platform.  \r\n\r\nThe request body parameters differ depending on the cloud type of the account you want to add.\n### Request Body to Add an AWS Account\nThe table below lists the request body parameters to add an AWS account.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\naccountId | string | AWS account ID | Required\nenabled | boolean | Whether or not the account is enabled | Default is **false**\nexternalId | string | AWS account external ID | Required\ngroupIds | array of strings  | List of account group IDs for this account  | Required\nname | string  | Name to be used for the account on the Prisma Cloud platform (must be unique)  | Required\nroleArn | string | Unique identifier for an AWS resource (ARN) | Required\nprotectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Default is **MONITOR**\n\n#### Request Body Example\n```json\n{\n  \"accountId\": \"\",\n  \"enabled\": true,\n  \"externalId\": \"\",\n  \"groupIds\": [],\n  \"name\": \"\",\n  \"roleArn\": \"\",\n  \"protectionMode\": \"MONITOR\"\n}\n```\n### Request Body to Add an AWS Org Account\nThe table below lists the request body parameters to add an AWS org account.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\naccountId | string | AWS account ID | Required\nenabled | boolean | Whether or not the account is enabled | Default is **false**\nexternalId | string | AWS account external ID | Required\ngroupIds | array  | List of account group IDs for account  | Required\nname | string  | Name to be used for the account on the Prisma Cloud platform (must be unique)  | Required\nroleArn | string | Unique identifier for an AWS resource (ARN) | Required\naccountType | string | **organization** | Required\nmemberRoleName | string | AWS Member account role name | Required\nmemberExternalId | string | AWS Member account role's external ID | Required\nmemberRoleStatus | boolean | **true**: The member role created using stack set exists in all the member accounts. All the Org accounts will be added.<br/>**false**: Only the master account will be added. | Default is **false**\nprotectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Default is **MONITOR**\nhierarchySelection | array of objects | List of AWS Organization Units (OU), AWS accounts, and AWS Organizations to onboard under this organization | Default is none\nhierarchySelection.resourceId | string | Resource ID. Valid values are AWS OU ID, AWS account ID, or AWS Organization ID.<br/>Note you must escape any double quotes in the resource ID with a backslash. | Required if **hierarchySelection** is specified\nhierarchySelection.displayName | string | Display name for AWS OU, AWS account, or AWS organization | Required if **hierarchySelection** is specified\nhierarchySelection.nodeType | string | Valid values: **OU**, **ACCOUNT**, **ORG** |  Required if **hierarchySelection** is specified\nhierarchySelection.selectionType | string | Valid values: **INCLUDE** to include the specified resource to onboard, **EXCLUDE** to exclude the specified resource and onboard the rest, **ALL** to onboard all resources in the organization. |  Required if **hierarchySelection** is specified\n\n#### Request Body Example\n```json\n{\n  \"accountId\": \"\",\n  \"enabled\": true,\n  \"externalId\": \"\",\n  \"groupIds\": [],\n  \"name\": \"\",\n  \"roleArn\": \"\",\n  \"accountType\": \"organization\",\n  \"memberRoleName\": \"\",\n  \"memberExternalId\": \"\",\n  \"memberRoleStatus\": true,\n  \"protectionMode\": \"MONITOR\",\n  \"hierarchySelection\": \n  [{\n    \"resourceId\": \"\",\n    \"displayName\": \"\",\n    \"nodeType\": \"OU\",\n    \"selectionType\": \"EXCLUDE\"\n  }]  \n}\n```\n\n### Request Body to Add an Azure Subscription\nThe table below lists the request body parameters to add an Azure subscription.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | Azure account ID | Required\ncloudAccount.enabled | boolean  | Whether or not to enable the account | Default is **false**\ncloudAccount.groupIds | array of strings | List of account group IDs for this account  | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique)  | Required\ncloudAccount.accountType | string | Valid value: **account** | Default is **account**\ncloudAccount.protectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required\nclientId | string | Application ID registered with Active Directory | Required\ntenantId | string | Active Directory ID associated with Azure | Required\nservicePrincipalId | string | Unique ID of the service principal object associated with the Prisma Cloud application | Required\nmonitorFlowLogs | boolean | Automatically ingest flow logs | Required\nkey | string | Application ID key | Required\nenvironmentType | string | Valid values:<br/>**azure** (Commercial),<br/>**azure_gov** (Government),<br/>**azure_china** (China) | Required\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"accountType\": \"account\",\n    \"protectionMode\": \"MONITOR\"\n  },\n  \"clientId\": \"\",\n  \"key\": \"\",\n  \"monitorFlowLogs\": true,\n  \"tenantId\": \"\",\n  \"servicePrincipalId\": \"\",\n  \"environmentType\": \"azure\"\n}\n```\n\n### Request Body to Add an Azure Tenant\nThe table below lists the request body parameters to add an Azure tenant without management groups.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | **cloudAccount.accountId** should be \"\" (empty)| Must be empty\ncloudAccount.enabled | boolean  | Whether or not to enable the account | Default is **false**\ncloudAccount.groupIds | array of strings | List of account group IDs for this account  | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.accountType | string | Valid value: **tenant** | Required\ncloudAccount.protectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Default is **MONITOR_AND_PROTECT**\nclientId | string | Application ID registered with Active Directory | Required\ntenantId | string | Active Directory ID associated with Azure | Required\nservicePrincipalId | string | Unique ID of the service principal object associated with the Prisma Cloud application | Required\nmonitorFlowLogs | boolean | Automatically ingest flow logs | Required\nkey | string | Application ID key | Required\nenvironmentType | string | Valid values:<br/>**azure** (Commercial),<br/>**azure_gov** (Government),<br/>**azure_china** (China) | Required\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"accountType\": \"tenant\",\n    \"protectionMode\": \"MONITOR\"\n  },\n  \"clientId\": \"\",\n  \"key\": \"\",\n  \"monitorFlowLogs\": true,\n  \"tenantId\": \"\",\n  \"servicePrincipalId\": \"\",\n  \"environmentType\": \"azure\"\n}\n```\n\n### Request Body to Add an Azure Tenant with Management Groups\nThe table below lists the request body parameters to add an Azure tenant plus management groups and subscriptions \nassociated with that tenant.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | Must be set to \"\" (empty)| Must be empty\ncloudAccount.enabled | boolean  | Whether or not to enable the account | Default is **false**\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.accountType | string | Valid value: **tenant** | Required\ncloudAccount.protectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Default is **MONITOR_AND_PROTECT**\nclientId | string | Application ID registered with Active Directory | Required\ntenantId | string | Active Directory ID associated with Azure | Required\nservicePrincipalId | string | Unique ID of the service principal object associated with the Prisma Cloud application | Required\nmonitorFlowLogs | boolean | Automatically ingest flow logs | Required\nkey | string | Application ID key | Required\nenvironmentType | string | Valid values:<br/>**azure** (Commercial),<br/>**azure_gov** (Government),<br/>**azure_china** (China) | Required\ndefaultAccountGroupId | string | Account group ID for this tenant. Used for alert rules. | Required\nrootSyncEnabled | boolean | **true** = Azure tenant has children. Must be set to **true**. | Required\nhierarchySelection | array of objects | List of subscriptions and/or management groups to onboard | Default is none\nhierarchySelection.resourceId | string | Management group ID or subscription ID.<br/>Note you must escape any double quotes in the resource ID with a backslash. | Required if **hierarchySelection** is specified\nhierarchySelection.displayName | string | Display name for management group or subscription | Required if **hierarchySelection** is specified\nhierarchySelection.nodeType | string | Valid values: **SUBSCRIPTION**, **TENANT**, **MANAGEMENT_GROUP** | Required if **hierarchySelection** is specified\nhierarchySelection.selectionType | string | Valid values: **INCLUDE** to include the specified resource to onboard, **EXCLUDE** to exclude the specified resource and onboard the rest, **ALL** to onboard all resources in the tenant. |  Required if **hierarchySelection** is specified      \n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"enabled\": true,\n    \"name\": \"\",\n    \"accountType\": \"tenant\",\n    \"protectionMode\": \"MONITOR_AND_PROTECT\"\n  },\n  \"clientId\": \"\",\n  \"key\": \"\",\n  \"monitorFlowLogs\": true,\n  \"tenantId\": \"\",\n  \"servicePrincipalId\": \"\",\n  \"environmentType\": \"azure\",\n  \"defaultAccountGroupId\": \"\",\n  \"rootSyncEnabled\": true,\n  \"hierarchySelection\":[{\n    \"displayName\":\"Tenant Root Group\",\n    \"nodeType\":\"TENANT\",\n    \"resourceId\":\"\",\n    \"selectionType\":\"INCLUDE\"\n  }]\n}\n```        \n\n### Request Body to Add a GCP Project\nThe table below lists the request body parameters.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | GCP project ID | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.enabled | boolean  | Whether or not the account is enabled | Defaults is **false**\ncloudAccount.groupIds | array of strings | List of account group IDs for this account | Required\ncloudAccount.projectId | string  | Existing GCP project ID | Required\ncloudAccount.protectionMode | string  | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required \ncloudAccount.accountType | string | Valid value: **account** | Required\ncredentials | JSON object | Service account key | Required\ncompressionEnabled |boolean | Enable flow log compression | Default is **false**\ndataflowEnabledProject | string | GCP project for flow log compression | Required if **compressionEnabled** is **true**\nflowLogStorageBucket | string | GCP flow logs storage bucket | Default is \"\"\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"accountType\": \"account\",\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"projectId\":\"\",\n    \"protectionMode\": \"MONITOR\"\n},\n\"compressionEnabled\": true,\n\"dataflowEnabledProject\": \"\",\n\"flowLogStorageBucket\": \"\",\n\"credentials\": {\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n```\n\n### Request Body to Add a GCP Org\nThe table below lists the request body parameters.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | GCP Org ID | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.enabled | boolean  | Whether or not the account is enabled | Default is **false**\ncloudAccount.protectionMode | string  | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required \ncloudAccount.accountType | string | Valid value: **organization** | Required\ncredentials | JSON object | Service account key | Required\ncompressionEnabled |boolean | Enable flow log compression | Default is **false**\ndataflowEnabledProject | string | GCP project for flow log compression | Required if **compressionEnabled** is **true**\nflowLogStorageBucket | string | GCP flow logs storage bucket | Default is \"\"\norganizationName | string | GCP organization name | Required \naccountGroupCreationMode | string | Cloud account group creation mode. Valid values:<br/>**MANUAL**: Create account groups manually<br/>**AUTO**: Create high-level account groups based on folders identified<br/>**RECURSIVE**: Drill down in folder tree to create account groups | Default is **MANUAL**\ndefaultAccountGroupId | string | Account group ID for this account. Used for alert rules. | Required if **accountGroupCreationMode** is **MANUAL** \nhierarchySelection | array of objects | List of folders and/or projects to onboard under this organization | Default is none\nhierarchySelection.resourceId | string | Resource ID. For folders, format is _folders/{folder ID}_. For projects, format is _{project number}_. For orgs, format is _organizations/{org ID}_ | Required if **hierarchySelection** is specified\nhierarchySelection.displayName | string | Display name for folder, project, or organization | Required if **hierarchySelection** is specified\nhierarchySelection.nodeType | string | Valid values: **FOLDER**, **PROJECT**, **ORG** |  Required if **hierarchySelection** is specified\nhierarchySelection.selectionType | string | Valid values: **INCLUDE**, **EXCLUDE**, **INCLUDE ALL**. If **hierarchySelection.nodeType** is **PROJECT** or **FOLDER**, valid values are  **INCLUDE**, **EXCLUDE**. |  Required if **hierarchySelection** is specified\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"accountType\": \"organization\",\n    \"proectionMode\": \"MONITOR\"\n    \"enabled\": true,       \n    \"name\": \"\"\n},\n\"accountGroupCreationMode\": \"MANUAL\"\n\"compressionEnabled\": true,\n\"dataflowEnabledProject\": \"\",\n\"flowLogStorageBucket\": \"\",\n\"organizationName\": \"\",\n\"defaultAccountGroupId\": \"\",\n\"credentials\": {\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n   \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n},\n\"hierarchySelection\": \n  [{\n    \"resourceId\": \"\",\n    \"displayName\": \"\",\n    \"nodeType\": \"FOLDER\",\n    \"selectionType\": \"EXCLUDE\"\n  }]    \n}\n```\n\n### Request Body to Add a GCP Master Service Account\nThe table below lists the request body parameters.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | GCP project ID | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.enabled | boolean  | Whether or not the account is enabled | Default is **false**\ncloudAccount.groupIds | array of strings | List of account group IDs for this account | Required\ncloudAccount.projectId | string  | Existing GCP project ID | Required\ncloudAccount.protectionMode | string  | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required \ncloudAccount.accountType | string | Valid value: **masterServiceAccount** | Required\ndefaultAccountGroupId | string | Account group ID for this account. Used for alert rules. |  Required \ncredentials | JSON object | Service account key | Required\ncompressionEnabled |boolean | Enable flow log compression | Default is **false**\ndataflowEnabledProject | string | GCP project for flow log compression | Required if **compressionEnabled** is **true**\nflowLogStorageBucket | string | GCP flow logs storage bucket | Default is \"\"\n\n##### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"accountType\": \"masterServiceAccount\",\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"projectId\":\"\",\n    \"protectionMode\": \"MONITOR\"\n},\n\"compressionEnabled\": true,\n\"dataflowEnabledProject\": \"\",\n\"flowLogStorageBucket\": \"\",\n\"organizationName\": \"\",\n\"credentials\": {\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n   \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n```\n\n### Request Body to Add an Alibaba Account\nThe table below lists the request body parameters to add an Alibaba account.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\naccountId | string | AWS account ID | Required\ngroupIds | array of strings  | List of account group IDs for this account  | Required\nname | string  | Name to be used for the account on the Prisma Cloud platform (must be unique)  | Required\nroleArn | string | Unique identifier for an Alibaba RAM role resource | Required\nenabled | boolean | Whether or not the account is enabled | Default is **false**\n\n#### Request Body Example\n```json\n{\n  \"accountId\": \"\",\n  \"groupIds\": [],\n  \"name\": \"\",\n  \"enabled\": true,\n  \"ramArn\": \"\"\n}\n```\n### Requirements and Request Body to Add an OCI Account\nTo add an Oracle Cloud Infrastructure (OCI) account, you must:\n\n1. Use [Generate Zipped Terraform Script (OCI)](/prisma-cloud/api/cspm/generateterraformscript) in the console | Required\n\n#### Request Body Example\n```json\n{\n  \"accountType\":\"tenant\",\n  \"defaultAccountGroupId\":\"\",\n  \"enabled\":true,\n  \"name\":\"\",\n  \"groupName\":\"\",\n  \"homeRegion\":\"\",\n  \"policyName\":\"\",\n  \"accountId\":\"\",\n  \"userName\":\"\",\n  \"userOcid\":\"\"\n}\n```\n",
        "operationId": "add-cloud-account",
        "parameters": [
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          },
          {
            "description": "true = Skip account status checks to improve response time",
            "in": "query",
            "name": "skipStatusChecks",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              }
            }
          },
          "description": "Cloud Account",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "duplicate_cloud_account_name / duplicate_cloud_account / invalid_account_id_format / duplicate_cloud_account_needs_upgrade / cannot_select_zero_account_groups / invalid_account_group_ids"
          },
          "404": {
            "description": "invalid_account_type"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Cloud Account",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/oci/terraform": {
      "post": {
        "description": "Generates a zipped Terraform template to help you onboard your Oracle Cloud Infrastructure account to Prisma Cloud. You can use this template in the OCI Tenant Console to get a User OCID. Note that the generated keys will be valid for 24 hours.",
        "operationId": "generateterraformscript",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/TerraformProvisionerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Generate Zipped Terraform Script (OCI)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{cloud_type}/{id}": {
      "get": {
        "description": "Returns top level information about the cloud account.",
        "operationId": "get-cloud-account",
        "parameters": [
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          },
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          },
          {
            "description": "true = Include account group info. Default is false.",
            "in": "query",
            "name": "includeGroupInfo",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAccountModel"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Cloud Account Info",
        "tags": [
          "Cloud Accounts"
        ]
      },
      "put": {
        "description": "Update information related to a cloud account.  \r\n\r\nThe request body parameters differ depending on the cloud type of the account you want to add.\n### Request Body to Update an AWS Account\nThe table below lists the request body parameters.\n\nParameter  | Type | Description | Required?\n-----------| ---- | ----------- | -------------\naccountId | string | AWS account ID | Required\nenabled | boolean | Whether or not the account is enabled | Required\nexternalId | string | AWS account external ID | Required\ngroupIds | array of strings | List of account group IDs for this account  | Required\nname | string  | Name to be used for the account on the Prisma Cloud platform (must be unique)  | Required\nroleArn | string | Unique identifier for an AWS resource (ARN) | Required\nprotectionMode |string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required\n\n#### Request Body Example\n```json\n{\n  \"accountId\": \"\",\n  \"enabled\": true,\n  \"externalId\": \"\",\n  \"groupIds\": [],\n  \"name\": \"\",\n  \"roleArn\": \"\",\n  \"protectionMode\": \"MONITOR\"\n}\n```\n### Request Body to Update an AWS Org Account\nThe table below lists the request body parameters.\n\nParameter  | Type | Description | Required?\n-----------| ---- | ----------- | -------------\naccountId | string | AWS account ID | Required\nenabled | boolean | Whether or not the account is enabled | Required\nexternalId | string | AWS account external ID | Required\ngroupIds | array of strings  | List of account group IDs for this account | Required\nname | string  | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\nroleArn | string | Unique identifier for an AWS resource (ARN) | Required\naccountType | string | **organization** | Required\nmemberRoleName | string | AWS Member account role name | Required\nmemberExternalId | string | AWS Member account role's external ID | Required\nmemberRoleStatus | boolean | **true**: The member role created using stack set exists in all the member accounts. All the Org accounts will be added.<br/>**false**: Only the master account will be added. | Required\nprotectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required\nhierarchySelection | array of objects | List of AWS Organization Units (OU), AWS accounts, and AWS Organizations to onboard under this organization | Default is none\nhierarchySelection.resourceId | string | Resource ID. Valid values are AWS OU ID, AWS account ID, or AWS Organization ID.<br/>Note you must escape any double quotes in the resource ID with a backslash. | Required if **hierarchySelection** is specified\nhierarchySelection.displayName | string | Display name for AWS OU, AWS account, or AWS organization | Required if **hierarchySelection** is specified\nhierarchySelection.nodeType | string | Valid values: **OU**, **ACCOUNT**, **ORG** |  Required if **hierarchySelection** is specified\nhierarchySelection.selectionType | string | Valid values: **INCLUDE** to include the specified resource to onboard, **EXCLUDE** to exclude the specified resource and onboard the rest, **ALL** to onboard all resources in the organization. |  Required if **hierarchySelection** is specified\n\n\n#### Request Body Example\n```json\n{\n  \"accountId\": \"\",\n  \"enabled\": true,\n  \"externalId\": \"\",\n  \"groupIds\": [],\n  \"name\": \"\",\n  \"roleArn\": \"\",\n  \"accountType\": \"organization\",\n  \"memberRoleName\": \"\",\n  \"memberExternalId\": \"\",\n  \"memberRoleStatus\": true,\n  \"protectionMode\": \"MONITOR\",\n  \"hierarchySelection\": \n  [{\n    \"resourceId\": \"\",\n    \"displayName\": \"\",\n    \"nodeType\": \"OU\",\n    \"selectionType\": \"EXCLUDE\"\n  }] \n}\n```\n\n### Request Body to Update an Azure Subscription\nThe table below lists the request body parameters to update an Azure subscription.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | Azure account ID | Required\ncloudAccount.enabled | boolean  | Whether or not to enable the account | Default is **false**\ncloudAccount.groupIds | array of strings | List of account group IDs for this account  | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique)  | Required\ncloudAccount.accountType | string | Valid value: **account** | Default is **account**\ncloudAccount.protectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Default is the existing value\nclientId | string | Application ID registered with Active Directory | Required\ntenantId | string | Active Directory ID associated with Azure | Required\nservicePrincipalId | string | Unique ID of the service principal object associated with the Prisma Cloud application | Required\nmonitorFlowLogs | boolean | Automatically ingest flow logs | Required\nkey | string | Application ID key | Required\nenvironmentType | string | Valid values:<br/>**azure** (Commercial),<br/>**azure_gov** (Government),<br/>**azure_china** (China) | Required\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"accountType\": \"account\",\n    \"protectionMode\": \"MONITOR\"\n  },\n  \"clientId\": \"\",\n  \"key\": \"\",\n  \"monitorFlowLogs\": true,\n  \"tenantId\": \"\",\n  \"servicePrincipalId\": \"\",\n  \"environmentType\": \"azure\"\n}\n```\n\n### Request Body to Update an Azure Tenant\nThe table below lists the request body parameters to update an Azure tenant without management groups.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | **cloudAccount.accountId** should be \"\" (empty)| Must be empty\ncloudAccount.enabled | boolean  | Whether or not to enable the account | Default is **false**\ncloudAccount.groupIds | array of strings | List of account group IDs for this account  | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.accountType | string | Valid value: **tenant** | Required\ncloudAccount.protectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Default is the existing value\nclientId | string | Application ID registered with Active Directory | Required\ntenantId | string | Active Directory ID associated with Azure | Required\nservicePrincipalId | string | Unique ID of the service principal object associated with the Prisma Cloud application | Required\nmonitorFlowLogs | boolean | Automatically ingest flow logs | Required\nkey | string | Application ID key | Required\nenvironmentType | string | Valid values:<br/>**azure** (Commercial),<br/>**azure_gov** (Government),<br/>**azure_china** (China) | Required\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"accountType\": \"tenant\",\n    \"protectionMode\": \"MONITOR\"\n  },\n  \"clientId\": \"\",\n  \"key\": \"\",\n  \"monitorFlowLogs\": true,\n  \"tenantId\": \"\",\n  \"servicePrincipalId\": \"\",\n  \"environmentType\": \"azure\"\n}\n```\n\n### Request Body to Update an Azure Tenant with Management Groups\nThe table below lists the request body parameters to update an Azure tenant plus management groups and subscriptions \nassociated with that tenant.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | Must be set to \"\" (empty)| Must be empty\ncloudAccount.enabled | boolean  | Whether or not to enable the account | Default is **false**\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.accountType | string | Valid value: **tenant** | Required\ncloudAccount.protectionMode | string | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Default is the existing value\nclientId | string | Application ID registered with Active Directory | Required\ntenantId | string | Active Directory ID associated with Azure | Required\nservicePrincipalId | string | Unique ID of the service principal object associated with the Prisma Cloud application | Required\nmonitorFlowLogs | boolean | Automatically ingest flow logs | Required\nkey | string | Application ID key | Required\nenvironmentType | string | Valid values:<br/>**azure** (Commercial),<br/>**azure_gov** (Government),<br/>**azure_china** (China) | Required\ndefaultAccountGroupId | string | Account group ID for this tenant. Used for alert rules. | Required\nrootSyncEnabled | boolean | **true** = Azure tenant has children. Must be set to **true**. | Required\nhierarchySelection | array of objects | List of subscriptions and/or management groups to onboard | Default is none\nhierarchySelection.resourceId | string | Management group ID or subscription ID.<br/>Note you must escape any double quotes in the resource ID with a backslash. | Required if **hierarchySelection** is specified\nhierarchySelection.displayName | string | Display name for management group or subscription | Required if **hierarchySelection** is specified\nhierarchySelection.nodeType | string | Valid values: **SUBSCRIPTION**, **TENANT**, **MANAGEMENT_GROUP** | Required if **hierarchySelection** is specified\nhierarchySelection.selectionType | string | Valid values: **INCLUDE** to include the specified resource to onboard, **EXCLUDE** to exclude the specified resource and onboard the rest, **ALL** to onboard all resources in the tenant. |  Required if **hierarchySelection** is specified      \n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"enabled\": true,\n    \"name\": \"\",\n    \"accountType\": \"tenant\",\n    \"protectionMode\": \"MONITOR_AND_PROTECT\"\n  },\n  \"clientId\": \"\",\n  \"key\": \"\",\n  \"monitorFlowLogs\": true,\n  \"tenantId\": \"\",\n  \"servicePrincipalId\": \"\",\n  \"environmentType\": \"azure\",\n  \"defaultAccountGroupId\": \"\",\n  \"rootSyncEnabled\": true,\n  \"hierarchySelection\":[{\n    \"displayName\":\"Tenant Root Group\",\n    \"nodeType\":\"TENANT\",\n    \"resourceId\":\"\",\n    \"selectionType\":\"INCLUDE\"\n  }]\n}\n```  \n\n\n### Request Body to Update a GCP Project\nThe table below lists the request body parameters.\n\nParameter  | Type | Description | Required?\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | GCP project ID | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.enabled | boolean  | Whether or not the account is enabled | Required\ncloudAccount.groupIds | array of strings | List of account group IDs for this account | Required\ncloudAccount.projectId | string  | Existing GCP project ID | Required\ncloudAccount.protectionMode | string  | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required \ncloudAccount.accountType | string | Valid value for GCP project: **account** | Required\ncredentials | JSON object | Service account key | Required\ncompressionEnabled |boolean | Enable flow log compression | Optional\ndataflowEnabledProject | string | GCP project for flow log compression | Required if **compressionEnabled** is **true**\nflowLogStorageBucket | string | GCP flow logs storage bucket | Optional\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"accountType\": \"account\",\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"projectId\":\"\",\n    \"protectionMode\": \"MONITOR\"\n},\n\"compressionEnabled\": true,\n\"dataflowEnabledProject\": \"\",\n\"flowLogStorageBucket\": \"\",\n\"credentials\": {\n    \"type\": \"\",\n    \"project_id\": \"\",\n    \"private_key_id\": \"\",\n    \"private_key\": \"\",\n    \"client_email\": \"\",\n    \"client_id\": \"\",\n    \"auth_uri\": \"\",\n    \"token_uri\": \"\",\n    \"auth_provider_x509_cert_url\": \"\",\n    \"client_x509_cert_url\": \"\"\n}\n```\n\n### Request Body to Update a GCP Org\nThe table below lists the request body parameters.\n\nParameter  | Type | Description | Required?\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | GCP Org ID | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.enabled | boolean  | Whether or not the account is enabled | Optional\ncloudAccount.protectionMode | string  | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required \ncloudAccount.accountType | string | Valid value: **organization** | Required\ncredentials | JSON object | Service account key | Required\ncompressionEnabled |boolean | Enable flow log compression | Optional\ndataflowEnabledProject | string | GCP project for flow log compression | Required if **compressionEnabled** is **true**\nflowLogStorageBucket | string | GCP flow logs storage bucket | Optional\norganizationName | string | GCP organization name | Required \naccountGroupCreationMode | string | Cloud account group creation mode. Valid values:<br/>**MANUAL**: Create account groups manually<br/>**AUTO**: Create high-level account groups based on folders identified<br/>**RECURSIVE**: Drill down in folder tree to create account groups | Optional\ndefaultAccountGroupId | string | Account group ID for this account. Used for alert rules. |  Required if **accountGroupCreationMode** is **MANUAL** \nhierarchySelection | array of objects | List of folders and/or projects to onboard under this organization | Optional\nhierarchySelection.resourceId | string | Resource ID. For folders, format is _folders/{folder ID}_. For projects, format is _{project number}_. For orgs, _format is organizations/{org ID}_ | Required if **hierarchySelection** is specified\nhierarchySelection.displayName | string | Display name for folder, project, or organization | Required if **hierarchySelection** is specified\nhierarchySelection.nodeType | string | Valid values: **FOLDER**, **PROJECT**, **ORG** |  Required if **hierarchySelection** is specified\nhierarchySelection.selectionType | string | Valid values: **INCLUDE**, **EXCLUDE**, **INCLUDE ALL**. If **hierarchySelection.nodeType** is **PROJECT** or **FOLDER**, valid values are  **INCLUDE**, **EXCLUDE**. |  Required if **hierarchySelection** is specified\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"accountType\": \"organization\",\n    \"proectionMode\": \"MONITOR\"\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"projectId\":\"\",\n    \"protectionMode\": \"MONITOR\"\n},\n\"accountGroupCreationMode\": \"MANUAL\"\n\"compressionEnabled\": true,\n\"dataflowEnabledProject\": \"\",\n\"flowLogStorageBucket\": \"\",\n\"credentials\": {\n    \"type\": \"\",\n    \"project_id\": \"\",\n    \"private_key_id\": \"\",\n    \"private_key\": \"\",\n    \"client_email\": \"\",\n    \"client_id\": \"\",\n    \"auth_uri\": \"\",\n    \"token_uri\": \"\",\n    \"auth_provider_x509_cert_url\": \"\",\n    \"client_x509_cert_url\": \"\"\n},\n\"hierarchySelection\": \n  [{\n    \"resourceId\": \"\",\n    \"displayName\": \"\",\n    \"nodeType\": \"FOLDER\",\n    \"selectionType\": \"EXCLUDE\"\n  }]    \n}\n```\n\n### Request Body to Update a GCP Master Service Account\nThe table below lists the request body parameters.\n\nParameter  | Type | Description | Required?\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | GCP project ID | Required\ncloudAccount.name | string | Name to be used for the account on the Prisma Cloud platform (must be unique) | Required\ncloudAccount.enabled | boolean  | Whether or not the account is enabled | Optional\ncloudAccount.groupIds | array of strings | List of account group IDs for this account | Required\ncloudAccount.projectId | string  | Existing GCP project ID | Required\ncloudAccount.protectionMode | string  | Valid values: **MONITOR**, **MONITOR_AND_PROTECT** | Required \ncloudAccount.accountType | string | Valid value: **masterServiceAccount** | Required\ndefaultAccountGroupId | string | Account group ID for this account. Used for alert rules. | Required \ncredentials | JSON object | Service account key | Required\ncompressionEnabled |boolean | Enable flow log compression | Optional\ndataflowEnabledProject | string | GCP project for flow log compression | Required if **compressionEnabled** is **true**\nflowLogStorageBucket | string | GCP flow logs storage bucket | Optional\n\n#### Request Body Example\n```json\n{\n  \"cloudAccount\": {\n    \"accountId\": \"\",\n    \"accountType\": \"masterServiceAccount\",\n    \"enabled\": true,\n    \"groupIds\": [],\n    \"name\": \"\",\n    \"projectId\":\"\",\n    \"protectionMode\": \"MONITOR\"\n},\n\"defaultAccountGroupId\": \"\",\n\"compressionEnabled\": true,\n\"dataflowEnabledProject\": \"\",\n\"flowLogStorageBucket\": \"\",\n\"credentials\": {\n    \"type\": \"\",\n    \"project_id\": \"\",\n    \"private_key_id\": \"\",\n    \"private_key\": \"\",\n    \"client_email\": \"\",\n    \"client_id\": \"\",\n    \"auth_uri\": \"\",\n    \"token_uri\": \"\",\n    \"auth_provider_x509_cert_url\": \"\",\n    \"client_x509_cert_url\": \"\"\n}\n```\n\n### Request Body to Update an Alibaba Account\nThe table below lists the request body parameters.\n\nParameter  | Type | Description |  Required?\n-----------| ---- | ----------- | -------------\naccountId |string | AWS account ID | Required\ngroupIds | array of strings  | List of account group IDs for this account  | Required\nname | string  | Name to be used for the account on the Prisma Cloud platform (must be unique)  | Required\nroleArn | string | Unique identifier for an Alibaba RAM role resource | Required\nenabled | boolean | Whether or not the account is enabled | Required\n\n#### Request Body Example\n```json\n{\n  \"accountId\": \"\",\n  \"groupIds\": [],\n  \"name\": \"\",\n  \"enabled\": true,\n  \"ramArn\": \"\"\n}\n```\n### Request Body to Update an OCI Account\nThe table below lists the request body parameters to add an OCI account.\n\nParameter  | Type | Description | Required?\n-----------| ---- | ----------- | -------------\naccountType | string | OCI Account type. Current valid value is **tenant**. | Required\ndefaultAccountGroupId | string | Account group ID for this account. Used for alert rules. |  Required\nenabled | boolean | Whether or not to enable the account |  Required\nname | string  | Name of the OCI tenant you want Prisma Cloud to monitor | Required\ngroupName | string | OCI identity group name that you define. Can be an existing group |  Required\nhomeRegion | string  | OCI tenancy home region |  Required\npolicyName | string  | OCI identity policy name that you define. Can be an existing policy that has the right policy statements. |  Required\naccountId | string  | OCID of your OCI tenancy | Required\nuserName | string  | OCI identity user name that you define. Can be an existing user that has the right privileges. |  Required\nuserOcid | string  | User OCID from your OCI Tenant Console after you apply the zip file from [Generate Zipped Terraform Script (OCI)](/prisma-cloud/api/cspm/generateterraformscript) in the console |  Required\n\n#### Request Body Example\n```json\n{\n  \"accountType\":\"tenant\",\n  \"defaultAccountGroupId\":\"\",\n  \"enabled\":true,\n  \"name\":\"\",\n  \"groupName\":\"\",\n  \"homeRegion\":\"\",\n  \"policyName\":\"\",\n  \"accountId\":\"\",\n  \"userName\":\"\",\n  \"userOcid\":\"\"\n}\n```      \n",
        "operationId": "update-cloud-account",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          },
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          },
          {
            "description": "true = Skip account status checks to improve response time",
            "in": "query",
            "name": "skipStatusChecks",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              }
            }
          },
          "description": "Cloud Account",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_account_id_format / duplicate_cloud_account_name / duplicate_cloud_account / cannot_select_zero_account_groups / invalid_account_group_ids"
          },
          "404": {
            "description": "invalid_account_type"
          },
          "500": {
            "description": "not_found / internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Cloud Account",
        "tags": [
          "Cloud Accounts"
        ]
      },
      "delete": {
        "description": "Deletes the onboarded cloud account that has the specified cloud account ID.",
        "operationId": "delete-cloud-account",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          },
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_cloud_type / bad_request"
          },
          "403": {
            "description": "cannot_delete_org_child"
          },
          "404": {
            "description": "invalid_cloud_type / invalid_account_id_format"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Cloud Account",
        "tags": [
          "Cloud Accounts"
        ]
      },
      "patch": {
        "description": "Enable / disable cloud account (and children) OR Update the Account Groups it belongs to",
        "operationId": "patch-cloud-account",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          },
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudAccountPatchModel"
              }
            }
          },
          "description": "Cloud Account Patch",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_account_id_format / invalid_account_patch"
          },
          "404": {
            "description": "invalid_cloud_type / invalid_account_id_format"
          },
          "405": {
            "description": "cloud_account_already_enabled / cloud_account_already_disabled"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Patch Cloud Account",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/account/{accountId}/config/status": {
      "get": {
        "description": "Returns a list of Prisma Cloud services whose status indicates a warning or error for the given cloud account ID. Includes status details for each listed service.",
        "operationId": "list-cloud-account-status-details",
        "parameters": [
          {
            "description": "Cloud account ID",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CloudAccountConfigStatusView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Account Status Details",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/status/{cloud_type}": {
      "post": {
        "description": "Lists status messages of the specified cloud account.  \r\n\r\nThis request performs a cloud account on-boarding trial run. You can use this request to validate your parameters before \nyou use [Add Cloud Account](/prisma-cloud/api/cspm/add-cloud-account).\n",
        "operationId": "get-cloud-account-status",
        "parameters": [
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CloudAccountStatus"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Cloud Account Status",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{id}/status/{enabled}": {
      "patch": {
        "description": "Enable or disable cloud account.",
        "operationId": "update-cloud-account-status",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          },
          {
            "description": "Status To Set",
            "in": "path",
            "name": "enabled",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Allows for updating status of children cloud accounts if any. Default is false.",
            "in": "query",
            "name": "updateChildren",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_account_id_format / invalid_account_patch"
          },
          "404": {
            "description": "invalid_account_id_format"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Cloud Account Status",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{cloud_type}/accounts/{account_id}/hierarchy": {
      "get": {
        "description": "For GCP only. Get the previously saved resource hierarchy for the specified cloud account ID.",
        "operationId": "get-previously-saved-resource-hierarchy",
        "parameters": [
          {
            "description": "Cloud type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "gcp"
              ],
              "type": "string"
            }
          },
          {
            "description": "GCP account ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/HierarchySelection"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request / unauthorized_access"
          },
          "404": {
            "description": "invalid_account_id_format"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Saved Resource Hierarchy (GCP)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/gcp/parent/{parent_id}/children": {
      "post": {
        "description": "For GCP only. List all the children, both folder resources and project resources, of the given parent. A parent can be an organization resource or a folder resource.  \r\n\r\nThe request body parameter is the content of the Service Account Key (JSON) file, which is required.\n",
        "operationId": "get-list-of-children-under-parent",
        "parameters": [
          {
            "description": "GCP parent resource ID",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token to request next page of projects",
            "in": "query",
            "name": "projectNextPageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size for paging projects. Valid range is 1-300 inclusive. A page size of 0 returns a nextPageToken but no projects.",
            "in": "query",
            "name": "projectPageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Token to request next page of folders",
            "in": "query",
            "name": "folderNextPageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size for paging folders. Valid range is 1-300 inclusive. A page size of 0 returns a nextPageToken but no folders.",
            "in": "query",
            "name": "folderPageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Parent type",
            "in": "query",
            "name": "parentType",
            "required": true,
            "schema": {
              "enum": [
                "folders",
                "organizations"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GcpResourceControllerRequestModel"
              }
            }
          },
          "description": "The content of the credentials object is the Service Account Key for your Google Cloud service account",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ListChildrenApiResponseModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request / unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Children of Parent (GCP)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{cloud_type}/parent/{parent_id}/folders": {
      "post": {
        "description": "For GCP only. List all the child folders of the given parent. A parent can be an organization resource or a folder resource.  \r\n\r\nThe request body parameter is the content of the Service Account Key (JSON) file, which is required.\n",
        "operationId": "get-list-of-folders-under-parent",
        "parameters": [
          {
            "description": "Cloud type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "gcp"
              ],
              "type": "string"
            }
          },
          {
            "description": "GCP parent ID",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token to request next page of folders",
            "in": "query",
            "name": "nextPageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size. Valid range is 1-300 inclusive. A page size of 0 returns a nextPageToken but no folders.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Parent type",
            "in": "query",
            "name": "parentType",
            "required": true,
            "schema": {
              "enum": [
                "folders",
                "organizations"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GcpResourceControllerRequestModel"
              }
            }
          },
          "description": "The content of the credentials object is the Service Account Key for your Google Cloud service account",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GcpNodeModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Folders of Parent (GCP)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{cloud_type}/parent/{parent_id}/projects": {
      "post": {
        "description": "For GCP only. List all the child projects of the given parent. A parent can be an organization resource or a folder resource.  \r\n\r\nThe request body parameter is the content of the Service Account Key (JSON) file, which is required.\n",
        "operationId": "get-list-of-projects-under-parent",
        "parameters": [
          {
            "description": "Cloud type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "gcp"
              ],
              "type": "string"
            }
          },
          {
            "description": "GCP parent ID",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token to request next page of projects",
            "in": "query",
            "name": "nextPageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size. Valid range is 1-300 inclusive. A page size of 0 returns a nextPageToken but no projects.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Parent type",
            "in": "query",
            "name": "parentType",
            "required": true,
            "schema": {
              "enum": [
                "folders",
                "organizations"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              }
            }
          },
          "description": "Service Account Key (JSON) file content",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GcpNodeModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request / unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Projects of Parent (GCP)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud/{cloud_type}/accounts/{account_id}/ancestors": {
      "post": {
        "description": "For GCP only. Lists the ancestors of the given projects and folders for the specified cloud account ID. A successful response returns an array of projects and/or folders each of which is mapped to an array of ancestor resource IDs.  \r\n\r\nThe body parameters resourceIds are required.\n",
        "operationId": "get-ancestors-for-given-projects-folders",
        "parameters": [
          {
            "description": "Cloud Type",
            "in": "path",
            "name": "cloud_type",
            "required": true,
            "schema": {
              "enum": [
                "gcp"
              ],
              "type": "string"
            }
          },
          {
            "description": "Account ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Resources"
              }
            }
          },
          "description": "Cloud service provider resource IDs",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GcpNodeModel"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request / unauthorized_access"
          },
          "404": {
            "description": "invalid_account_id_format"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Ancestors (GCP)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud-accounts-manager/v1/cloudAccounts/azureAccounts/{parent_id}/children": {
      "post": {
        "description": "For Azure only. Lists all the children, both management groups and subscriptions, under the given parent. A parent can be either an Azure tenant or a management group.  \r\n\r\n### Request Body\nThe table below lists the required request body parameters.\n\nParameter  | Type | Description | Default Value or Required\n-----------| ---- | ----------- | -------------\ncloudAccount.accountId | string | Azure account ID | Required\ncloudAccount.accountType | string | Valid value: **tenant** | Required\nclientId | string | Application ID registered with Active Directory | Required\ntenantId | string | Active Directory ID associated with Azure | Required\nservicePrincipalId | string | Unique ID of the service principal object associated with the Prisma Cloud application | Required\nkey | string | Application ID key | Required\nmonitorFlowLogs | boolean | Automatically ingest flow logs. Must be **true**. | Required\nenvironmentType | string | Existing environment type. Valid values:<br/>**azure** (Commercial),<br/>**azure_gov** (Government),<br/>**azure_china** (China) | Required\nrootSyncEnabled | boolean | **true** = Azure tenant has children. Must be **true**. | Required\n\n#### Request Body Example\n```json\n{\n  \"clientId\":\"\",\n  \"cloudAccount\": {\n    \"accountId\":\"\",\n    \"accountType\":\"tenant\"\n  },\n  \"environmentType\":\"azure\",\n  \"key\":\"\",\n  \"monitorFlowLogs\":true,\n  \"rootSyncEnabled\":true,\n  \"servicePrincipalId\":\"\",\n  \"tenantId\":\"\"\n}\n```      \n",
        "operationId": "list-children-under-parent",
        "parameters": [
          {
            "description": "Parent Resource ID",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              }
            }
          },
          "description": "Azure cloud account parameters",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AzureHierarchyNodeModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request / unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Children of Parent (Azure)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud-accounts-manager/v1/cloudAccounts/azureAccounts/{account_id}/ancestors": {
      "post": {
        "description": "For Azure only. Lists the ancestors of the given Azure management groups and subscriptions for the specified cloud account (Azure tenant) ID. Each resource ID in the request body is either a management group ID or a subscription ID. A successful response returns an array of ancestors for each given resource ID.",
        "operationId": "get-ancestors-for-given-subscriptions-and-management-groups",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Resources"
              }
            }
          },
          "description": "Cloud service provider resource IDs",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AzureAncestorsModel"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request / unauthorized_access"
          },
          "404": {
            "description": "invalid_account_id_format"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Ancestors (Azure)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/dlp/api/v1/config/awsorg/status": {
      "post": {
        "description": "Returns whether or not the set up for your AWS Organization meets the prerequisites for successful creation of a data security configuration.",
        "operationId": "get-status-for-org",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AWSOrgStatusConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AWSOrgStatusResponseModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Check Data Security Preconditions (AWS Org)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/dlp/api/config/v2": {
      "post": {
        "description": "Creates a data security configuration for an AWS Organization.",
        "operationId": "onboard-aws-org-scan",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AWSOrgRequestConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Data Security Config (AWS Org)",
        "tags": [
          "Cloud Accounts"
        ]
      },
      "put": {
        "description": "Updates the data security configuration for the AWS Organization with the specified account ID.",
        "operationId": "update-aws-org-scan-config",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AWSOrgRequestConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Data Security Config (AWS Org)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/dlp/api/config/v2/{accountId}": {
      "get": {
        "description": "Returns the data security configuration for the AWS Organization with the specified account ID.",
        "operationId": "get-aws-org-scan-details",
        "parameters": [
          {
            "description": "AWS account ID",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AWSOrgConfig"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Data Security Config (AWS Org)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud-accounts-manager/v1/cloudAccounts/awsAccounts/{parent_id}/children": {
      "post": {
        "description": "For AWS only. Lists all the children of the given parent organizational unit (OU).The listed children include both OU resources and account resources.",
        "operationId": "get-list-of-children-under-parent-aws-legacy",
        "parameters": [
          {
            "description": "Parent OU ID",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page token to request the next page of accounts. The response from a previous request provides this token. If the token has characters outside the ASCII character set, URL encode the token before using it to make a request.",
            "in": "query",
            "name": "accountNextPageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Total number of accounts to return. An  **accountFetchCount** of 0 returns a nextPageToken but no accounts.",
            "in": "query",
            "name": "accountFetchCount",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page token to request next set of OUs. The response from a previous request provides this token. If the token has characters outside the ASCII character set, URL encode the token before using it to make a request.",
            "in": "query",
            "name": "ouNextPageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Total number of OUs to return. An **ouFetchCount** of 0 returns a nextPageToken but no OUs.",
            "in": "query",
            "name": "ouFetchCount",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              }
            }
          },
          "description": "Cloud Account JSON",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AwsListChildrenApiResponseModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "permission_error / bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Children of Parent (AWS) - Legacy",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cloud-accounts-manager/v1/cloudAccounts/awsAccounts/{account_id}/ancestors": {
      "post": {
        "description": "For AWS only. Lists the ancestors of the given member accounts and organizational units (OUs) for the specified cloud account ID. A successful response returns an array of accounts and/or OUs each of which is mapped to an array of ancestor resource IDs.",
        "operationId": "get-ancestors-for-given-members-ous-legacy",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              }
            }
          },
          "description": "Cloud Account JSON",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AwsNodeModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request / unauthorized_access"
          },
          "404": {
            "description": "invalid_account_id_format"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Ancestors (AWS) - Legacy",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cas/v1/aws_account": {
      "post": {
        "description": "Onboard a new aws cloud account onto the Prisma Cloud platform.",
        "operationId": "add-aws-cloud-account",
        "parameters": [
          {
            "description": "true = Skip account status checks to improve response time",
            "in": "query",
            "name": "skipStatusChecks",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwsCloudAccountRequestModel"
              }
            }
          },
          "description": "Cloud Account",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "duplicate_cloud_account_name / duplicate_cloud_account / duplicate_cloud_account_needs_upgrade / cannot_select_zero_account_groups / invalid_account_group_ids / invalid_account_type"
          },
          "404": {
            "description": "invalid_account_id_format"
          },
          "412": {
            "description": "external_id_empty_or_not_generated. To generate CFT and externalId call [Generate CFT api](/prisma-cloud/api/cspm/generate-cft-template-aws/)"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add AWS Cloud Account",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cas/v1/aws_account/{id}": {
      "put": {
        "description": "Update information related to aws cloud account.",
        "operationId": "update-aws-cloud-account",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "true = Skip account status checks to improve response time",
            "in": "query",
            "name": "skipStatusChecks",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwsCloudAccountRequestModel"
              }
            }
          },
          "description": "Cloud Account",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "duplicate_cloud_account_name / duplicate_cloud_account / cannot_select_zero_account_groups / invalid_account_group_ids / invalid_account_type"
          },
          "404": {
            "description": "invalid_account_id_format"
          },
          "412": {
            "description": "external_id_empty_or_not_generated. To generate CFT and externalId call [Generate CFT api](/prisma-cloud/api/cspm/generate-cft-template-aws/)"
          },
          "500": {
            "description": "not_found / internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update AWS Cloud Account",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cas/v1/cloud_account/status/aws": {
      "post": {
        "description": "Lists status messages of the specified AWS cloud account.",
        "operationId": "get-aws-cloud-account-status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwsCloudAccountRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CloudAccountStatus"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "412": {
            "description": "external_id_empty_or_not_generated. To generate CFT and externalId call [Generate CFT api](/prisma-cloud/api/cspm/generate-cft-template-aws/)"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get AWS Cloud Account Status",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cas/v1/aws_account/{parent_id}/children": {
      "post": {
        "description": "For AWS only. Lists all the children of the given parent organizational unit (OU).The listed children include both OU resources and account resources.",
        "operationId": "get-list-of-children-under-parent-aws",
        "parameters": [
          {
            "description": "Parent OU ID",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page token to request the next page of accounts. The response from a previous request provides this token. If the token has characters outside the ASCII character set, URL encode the token before using it to make a request.",
            "in": "query",
            "name": "accountNextPageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Total number of accounts to return. An  **accountFetchCount** of 0 returns a nextPageToken but no accounts.",
            "in": "query",
            "name": "accountFetchCount",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page token to request next set of OUs. The response from a previous request provides this token. If the token has characters outside the ASCII character set, URL encode the token before using it to make a request.",
            "in": "query",
            "name": "ouNextPageToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Total number of OUs to return. An **ouFetchCount** of 0 returns a nextPageToken but no OUs.",
            "in": "query",
            "name": "ouFetchCount",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwsOrgChildrenRequestModel"
              }
            }
          },
          "description": "Cloud Account JSON",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AwsListChildrenApiResponseModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "permission_error / bad_request"
          },
          "412": {
            "description": "external_id_empty_or_not_generated. To generate CFT and externalId call [Generate CFT api](/prisma-cloud/api/cspm/generate-cft-template-aws/)"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Children of Parent (AWS)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/cas/v1/aws_account/{account_id}/ancestors": {
      "post": {
        "description": "For AWS only. Lists the ancestors of the given member accounts and organizational units (OUs) for the specified cloud account ID. A successful response returns an array of accounts and/or OUs each of which is mapped to an array of ancestor resource IDs.",
        "operationId": "get-ancestors-for-given-members-ous",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwsOrgAncestorRequestModel"
              }
            }
          },
          "description": "Cloud Account JSON",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AwsNodeModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request / unauthorized_access"
          },
          "404": {
            "description": "invalid_account_id_format"
          },
          "412": {
            "description": "external_id_empty_or_not_generated. To generate CFT and externalId call [Generate CFT api](/prisma-cloud/api/cspm/generate-cft-template-aws/)"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Ancestors (AWS)",
        "tags": [
          "Cloud Accounts"
        ]
      }
    },
    "/compliance/posture": {
      "get": {
        "description": "Returns a breakdown of the passed/failed statistics and associated policies for compliance standards, requirements, and sections. Also returns a summary for all compliance standards.",
        "operationId": "get-compliance-posture",
        "parameters": [
          {
            "description": "Time type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of time units",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CompliancePosture"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Statistics Breakdown - GET",
        "tags": [
          "Compliance Posture"
        ]
      },
      "post": {
        "description": "Returns a breakdown of the passed/failed statistics and associated policies for compliance standards, requirements, and sections. Also returns a summary for all compliance standards.",
        "operationId": "post-compliance-posture",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompliancePosture"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Statistics Breakdown - POST",
        "tags": [
          "Compliance Posture"
        ]
      }
    },
    "/compliance/posture/{complianceId}": {
      "get": {
        "description": "Returns a breakdown of the passed/failed statistics and associated policies for compliance standards, requirements, and sections for the given compliance standard ID.",
        "operationId": "get-compliance-posture-for-standard",
        "parameters": [
          {
            "description": "Compliance standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Time type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of time units",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CompliancePosture"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Statistics for Standard ID - GET",
        "tags": [
          "Compliance Posture"
        ]
      },
      "post": {
        "description": "Returns a breakdown of the passed/failed statistics and associated policies for compliance standards, requirements, and sections for the given compliance standard ID.",
        "operationId": "post-compliance-posture-for-standard",
        "parameters": [
          {
            "description": "Compliance standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompliancePosture"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Statistics for Standard ID - POST",
        "tags": [
          "Compliance Posture"
        ]
      }
    },
    "/compliance/posture/{complianceId}/{requirementId}": {
      "get": {
        "description": "Returns a breakdown of the passed/failed statistics and associated policies for compliance sections for the specified compliance standard ID and compliance requirement ID.",
        "operationId": "get-compliance-posture-for-requirement",
        "parameters": [
          {
            "description": "Compliance standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Compliance requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Time type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of time units",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CompliancePosture"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Statistics for Requirement ID - GET",
        "tags": [
          "Compliance Posture"
        ]
      },
      "post": {
        "description": "Returns a breakdown of the passed/failed statistics and associated policies for compliance sections for the specified compliance standard ID and compliance requirement ID.  \r\n\r\nThe **fields** body parameter allows you to request specific fields. These fields are separate \nfrom the filters you specify. The following are valid **fields** items.\n\n* cloud.account\n* account.group\n* cloud.region\n* cloud.type\n* policy.complianceStandard\n* policy.complianceRequirement\n* policy.complianceSection\n\nThe **filters** body parameter enables you to narrow your request for alerts. \nSee [Get Compliance Overview Filters and Options](/prisma-cloud/api/cspm/get-compliance-posture-filters-and-options) \nfor for an API request to list all the valid filters.\n",
        "operationId": "post-compliance-posture-for-requirement",
        "parameters": [
          {
            "description": "Compliance standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Compliance requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompliancePosture"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Statistics for Requirement ID - POST",
        "tags": [
          "Compliance Posture"
        ]
      }
    },
    "/compliance/posture/trend": {
      "get": {
        "description": "Returns a compliance posture summary that describes the passed/failed statistics trend.",
        "operationId": "get-compliance-posture-trend",
        "parameters": [
          {
            "description": "Time type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of time units",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PostureSummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Trend - GET",
        "tags": [
          "Compliance Posture"
        ]
      },
      "post": {
        "description": "Returns a compliance posture summary that describes the passed/failed statistics trend.  \r\n\r\nThe **fields** body parameter allows you to request specific fields. These fields are separate \nfrom the filters you specify. The following are valid **fields** items.\n\n* cloud.account\n* account.group\n* cloud.region\n* cloud.type\n* policy.complianceStandard\n* policy.complianceRequirement\n* policy.complianceSection\n\nThe **filters** body parameter enables you to narrow your request for alerts. \nSee [Get Compliance Overview Filters and Options](/prisma-cloud/api/cspm/get-compliance-posture-filters-and-options) \nfor the API request to list all valid filters.\n",
        "operationId": "post-compliance-posture-trend",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PostureSummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Trend - POST",
        "tags": [
          "Compliance Posture"
        ]
      }
    },
    "/compliance/posture/trend/{complianceId}": {
      "get": {
        "description": "Returns a compliance posture summary that describes the passed/failed statistics trend for the specified compliance standard ID.",
        "operationId": "get-compliance-posture-trend-for-standard",
        "parameters": [
          {
            "description": "Compliance standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Time type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of time units",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PostureSummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Trend for Standard ID - GET",
        "tags": [
          "Compliance Posture"
        ]
      },
      "post": {
        "description": "Returns a compliance posture summary that describes the passed/failed statistics trend for the specified compliance standard ID.  \r\n\r\nThe **fields** request body parameter allows you to request specific fields. These fields are separate \nfrom the filters you specify. The following are valid **fields** items.\n\n* cloud.account\n* account.group\n* cloud.region\n* cloud.type\n* policy.complianceStandard\n* policy.complianceRequirement\n* policy.complianceSection\n\nThe **filters** request body parameter enables you to narrow your request for alerts. \nSee [Get Compliance Overview Filters and Options](/prisma-cloud/api/cspm/get-compliance-posture-filters-and-options) \nfor for an API request to list all the valid filters.\n",
        "operationId": "post-compliance-posture-trend-for-standard",
        "parameters": [
          {
            "description": "Compliance standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PostureSummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Trend for Standard ID - POST",
        "tags": [
          "Compliance Posture"
        ]
      }
    },
    "/compliance/posture/trend/{complianceId}/{requirementId}": {
      "get": {
        "description": "Returns the compliance posture summary that describes the passed/failed statistics trend for the given compliance standard ID and compliance requirement ID.",
        "operationId": "get-compliance-posture-trend-for-requirement",
        "parameters": [
          {
            "description": "Compliance standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Compliance requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Time type",
            "in": "query",
            "name": "timeType",
            "required": true,
            "schema": {
              "enum": [
                "relative"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of time units",
            "in": "query",
            "name": "timeAmount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time unit",
            "in": "query",
            "name": "timeUnit",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PostureSummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Trend for Requirement ID - GET",
        "tags": [
          "Compliance Posture"
        ]
      },
      "post": {
        "description": "Returns the compliance posture summary that describes the passed/failed statistics trend for the given compliance standard ID and compliance requirement ID.  \r\n\r\nThe **fields** body parameter allows you to request specific fields. These fields are separate \nfrom the filters you specify. The following are valid **fields** items.\n\n* cloud.account\n* account.group\n* cloud.region\n* cloud.type\n* policy.complianceStandard\n* policy.complianceRequirement\n* policy.complianceSection\n\nThe **filters** body parameter enables you to narrow your request for alerts. \nSee [Get Compliance Overview Filters and Options](/prisma-cloud/api/cspm/get-compliance-posture-filters-and-options)\nfor the API request to list all valid filters.                                \n",
        "operationId": "post-compliance-posture-trend-for-requirement",
        "parameters": [
          {
            "description": "Compliance standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Compliance requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PostureSummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Trend for Requirement ID - POST",
        "tags": [
          "Compliance Posture"
        ]
      }
    },
    "/filter/compliance/posture/suggest": {
      "get": {
        "description": "Returns an object whose key/value pairs identify filter options for compliance posture data. The keys are supported filters, and the corresponding values identify the available and saved filter options.",
        "operationId": "get-compliance-posture-filters-and-options",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CompliancePostureFilterSuggestion"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Overview Filters and Options",
        "tags": [
          "Compliance Posture"
        ]
      },
      "post": {
        "description": "Returns the available options for a compliance posture filter key. Also supports fuzzy autocomplete search. If you specify a query value in the request body parameters, the response includes only items that contain the query string.",
        "operationId": "get-compliance-posture-filter-options",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterSuggestionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedTableFilter"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Compliance Overview Filter Autocomplete Suggestions",
        "tags": [
          "Compliance Posture"
        ]
      }
    },
    "/compliance": {
      "get": {
        "description": "Returns all system supported and custom compliance standards.",
        "operationId": "get-all-standards",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ComplianceStandardModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Compliance Standards",
        "tags": [
          "Compliance Standards"
        ]
      },
      "post": {
        "description": "Allows for the creation of a custom compliance standard.",
        "operationId": "add-standard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceStandardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / duplicate_name / bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Compliance Standard",
        "tags": [
          "Compliance Standards"
        ]
      }
    },
    "/compliance/{complianceId}": {
      "get": {
        "description": "Returns the compliance standard for the specified ID.",
        "operationId": "get-standards-by-id",
        "parameters": [
          {
            "description": "Compliance Standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceStandardModel"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Standard by ID",
        "tags": [
          "Compliance Standards"
        ]
      },
      "put": {
        "description": "Updates existing compliance standard.",
        "operationId": "update-standard",
        "parameters": [
          {
            "description": "Compliance Standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceStandardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / duplicate_name / bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Compliance Standard",
        "tags": [
          "Compliance Standards"
        ]
      },
      "delete": {
        "description": "Deletes the compliance standard for the specified ID.",
        "operationId": "delete-standard",
        "parameters": [
          {
            "description": "Compliance Standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Compliance Standard",
        "tags": [
          "Compliance Standards"
        ]
      }
    },
    "/compliance/clone/{complianceId}": {
      "post": {
        "description": "Clones the compliance standard with the specified compliance ID.",
        "operationId": "clone-standard",
        "parameters": [
          {
            "description": "Compliance Standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceStandardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / duplicate_name / bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Clone Compliance Standard",
        "tags": [
          "Compliance Standards"
        ]
      }
    },
    "/compliance/{complianceId}/requirement": {
      "get": {
        "description": "Returns a list of all compliance requirements for the specified compliance standard ID.",
        "operationId": "get-requirements",
        "parameters": [
          {
            "description": "Compliance Standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ComplianceRequirementModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Compliance Requirements",
        "tags": [
          "Compliance Standards"
        ]
      },
      "post": {
        "description": "Adds a new compliance requirement to the provided compliance standard.",
        "operationId": "add-requirement",
        "parameters": [
          {
            "description": "Compliance Standard ID",
            "in": "path",
            "name": "complianceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceRequirementModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / duplicate_name / bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Compliance Requirement",
        "tags": [
          "Compliance Standards"
        ]
      }
    },
    "/compliance/requirement/{requirementId}": {
      "get": {
        "description": "Returns compliance requirement data for the specified requirements ID.",
        "operationId": "get-requirement-by-id",
        "parameters": [
          {
            "description": "Compliance Requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceRequirementModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Compliance Requirement by ID",
        "tags": [
          "Compliance Standards"
        ]
      },
      "put": {
        "description": "Updates information in the provided compliance requirement.",
        "operationId": "update-requirement",
        "parameters": [
          {
            "description": "Compliance Requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceRequirementModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / duplicate_name / bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Compliance Requirement",
        "tags": [
          "Compliance Standards"
        ]
      },
      "delete": {
        "description": "Deletes the compliance requirement for the specified ID.",
        "operationId": "delete-requirement",
        "parameters": [
          {
            "description": "Compliance Requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Compliance Requirement",
        "tags": [
          "Compliance Standards"
        ]
      }
    },
    "/compliance/{requirementId}/section": {
      "get": {
        "description": "Returns a list of all compliance requirement sections for the specified compliance requirement ID.",
        "operationId": "get-sections",
        "parameters": [
          {
            "description": "Compliance Requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ComplianceSectionModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Compliance Requirement Sections",
        "tags": [
          "Compliance Standards"
        ]
      },
      "post": {
        "description": "Adds a new section to a compliance standard requirement.",
        "operationId": "add-section",
        "parameters": [
          {
            "description": "Compliance Requirement ID",
            "in": "path",
            "name": "requirementId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceSectionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Compliance Requirement Section",
        "tags": [
          "Compliance Standards"
        ]
      }
    },
    "/compliance/requirement/section/{sectionId}": {
      "put": {
        "description": "Updates the compliance requirement section for the specified ID.",
        "operationId": "update-section",
        "parameters": [
          {
            "description": "Compliance Section ID",
            "in": "path",
            "name": "sectionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceSectionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Compliance Requirement Section",
        "tags": [
          "Compliance Standards"
        ]
      },
      "delete": {
        "description": "Deletes the compliance requirement section for the specified ID.",
        "operationId": "delete-section",
        "parameters": [
          {
            "description": "Compliance Section ID",
            "in": "path",
            "name": "sectionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Compliance Requirement Section",
        "tags": [
          "Compliance Standards"
        ]
      }
    },
    "/dlp/api/v1/dashboard/alerts/aggregate": {
      "post": {
        "description": "Returns counts of total objects, public objects, sensitive objects, and malware.",
        "operationId": "get-dashboard-alerts",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPDashboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/KeyAndCountPair"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Dashboard Alerts",
        "tags": [
          "Data Security Dashboard"
        ]
      }
    },
    "/dlp/api/v1/dashboard/objects/aggregate/by-classification": {
      "post": {
        "description": "Returns the top public object counts by classification, where the data profiles determine classification. The limit that you specify determines the number of objects.",
        "operationId": "get-dashboard-object-by-classification",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPDashboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/KeyAndCountPair"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Dashboard Objects By Classification",
        "tags": [
          "Data Security Dashboard"
        ]
      }
    },
    "/dlp/api/v1/dashboard/objects/aggregate/by-owner": {
      "post": {
        "description": "Returns object counts by exposure for each owner.",
        "operationId": "get-dashboard-object-by-owner",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPDashboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DLPTopNObjectsByOwnerViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Dashboard Objects By Owner",
        "tags": [
          "Data Security Dashboard"
        ]
      }
    },
    "/dlp/api/v1/dashboard/objects/aggregate/by-region": {
      "post": {
        "description": "Lists regions with object counts and identifies object counts by classification. Data profiles determine classification.",
        "operationId": "get-dashboard-object-by-region",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPDashboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DLPTopNObjectsByRegionViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Dashboard Objects By Region",
        "tags": [
          "Data Security Dashboard"
        ]
      }
    },
    "/dlp/api/v1/dashboard/objects/aggregate/sensitive-exposed": {
      "post": {
        "description": "Lists object counts filtered by exposure and sensitivity.",
        "operationId": "get-dashboard-object-sensitive",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPDashboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPTotalSensitiveExposedObjectsViewModel"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Dashboard Sensitive Objects",
        "tags": [
          "Data Security Dashboard"
        ]
      }
    },
    "/dlp/api/v1/dashboard/resources/aggregate/by-exposure": {
      "post": {
        "description": "Returns the total number of resources as well as object counts filtered by exposure.",
        "operationId": "get-dashboard-resource-by-exposure",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPDashboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPTotalResourceByExposureViewModel"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Dashboard Resource Aggregate By Exposure",
        "tags": [
          "Data Security Dashboard"
        ]
      }
    },
    "/dlp/api/v1/dashboard/violations/aggregate": {
      "post": {
        "description": "List violations for the dashboard.",
        "operationId": "get-dashboard-violations",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPDashboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/KeyAndCountPair"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Dashboard Violations",
        "tags": [
          "Data Security Dashboard"
        ]
      }
    },
    "/dlp/api/v1/inventory/data-scanned": {
      "get": {
        "description": "Returns data usage information for your tenant.",
        "operationId": "get-data-usage",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPInventoryDataUsageModel"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Data Usage",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/object/data-classification/reportv2": {
      "post": {
        "description": "Returns a data classification report. Includes snippet masking status.",
        "operationId": "get-classification-report-v2",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DLPInventoryObjectClassificationReportV2"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error / violates_minimum_alert_dismiss_duration_time"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Classification Report V2",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/object/data-classification/report": {
      "post": {
        "deprecated": true,
        "description": "Returns a data classification report.",
        "operationId": "get-classification-report",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DLPInventoryObjectClassificationReport"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error / violates_minimum_alert_dismiss_duration_time"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Classification Report",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/objects/aggregate": {
      "post": {
        "description": "Lists data for objects. The response data depends on the table level you specify in the request body parameters.  \r\n\r\nThe **tableLevel** and **groupBy** request body parameters determine which \nresponse object fields a successful API request returns.\n\nIF **tableLevel** is **1** and **groupBy** is unspecified, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"serviceName\": \"\",\n    \"totalResources\": 0,\n    \"publicResources\": ,\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0\n  }\n]\n``` \nIf **tableLevel** is **1** and **groupBy** is specified, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"accountName\": \"\",\n    \"regionName\": \"\",\n    \"serviceName\": \"\",\n    \"totalResources\": 0,\n    \"publicResources\": 0,\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0\n  }\n]\n```\nIf **tableLevel** is **2** and **groupBy** is unspecified, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"serviceName\": \"\",\n    \"totalResources\": 0,\n    \"publicResources\": 0,\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0\n  }\n]\n```\nIf **tableLevel** is **2** and **groupBy** = **[\"cloud.region\"]**, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"regionName\": \"\",\n    \"serviceName\": \"\",\n    \"totalResources\": 0,\n    \"publicResources\": 0,\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0\n  }\n]\n```\nIf **tableLevel** is **2** and **groupBy** = **[\"cloud.account\"]**, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"accountName\": \"\",\n    \"serviceName\": \"\",\n    \"totalResources\": 0,\n    \"publicResources\": 0,\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0\n  }\n]\n```\nIf **tableLevel** is **2** and **groupBy** = **[\"cloud.region\", \"cloud.account\"]**, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"accountName\": \"\",\n    \"regionName\": \"\",\n    \"serviceName\": \"\",\n    \"totalResources\": 0,\n    \"publicResources\": 0,\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 20,\n    \"alerts\": 0\n  }\n]\n```\nIf **tableLevel** is **3** and **groupBy** is unspecified, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"resourceName\": \"\",\n    \"publicResource\": \"\",\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0,\n    \"bucketRrn\":\"\"\n  }\n]\n```\nIf **tableLevel** is **3** and **groupBy** = **[\"cloud.account\", \"cloud.region\"]**, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"accountName\": \"\",\n    \"regionName\": \"\",\n    \"resourceName\": \"\",\n    \"publicResource\": \"\",\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0,\n    \"bucketRrn\":\"\"\n  }\n]\n```\nIf **tableLevel** is **3** and **groupBy** = **[\"cloud.region\", \"cloud.service\"]**, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"regionName\": \"\",\n    \"serviceName\": \"\",\n    \"resourceName\": \"\",\n    \"publicResource\": \"\",\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0,\n    \"bucketRrn\":\"\"\n  }\n]\n```\nIf **tableLevel** is **3** and **groupBy** = **[\"cloud.account\", \"cloud.region\", \"cloud.service\"]**, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"accountName\": \"\",\n    \"regionName\": \"\",\n    \"serviceName\": \"\",\n    \"resourceName\": \"\",\n    \"publicResource\": \"\",\n    \"totalObjects\": 0,\n    \"publicObjects\": 0,\n    \"sensitiveObjects\": 0,\n    \"malwareObjects\": 0,\n    \"alerts\": 0,\n    \"bucketRrn\":\"\"\n  }\n]\n```\nIf **tableLevel** is **4**, the response properties are as shown below:\n```json\n[\n  {\n    \"cloudType\": \"\",\n    \"accountName\": \",\n    \"regionName\": \"\",\n    \"serviceName\": \"\",\n    \"resourceName\": \"\",\n    \"publicResource\": \"\",\n    \"objectName\": \"\",\n    \"objectExposure\": \"\",\n    \"objectOwner\": \"\",\n    \"contentType\": \"\",\n    \"dataProfiles\": \"\",\n    \"dataPatterns\": \"\",\n    \"malware\": \"\",\n    \"metadataScannedTime\": 0, \n    \"malwareScannedTime\": 0, \n    \"dssScannedTime\": 0, \n    \"dssSnippetStatus\": \"\",\n    \"dssSnippetCreatedOn\": \"\",\n    \"dssSnippetViewed\": false\n  }\n]\n```                                                                                          \n",
        "operationId": "get-inventory-objects",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DLPInventoryViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Inventory Objects",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/objects/aggregate/l4": {
      "post": {
        "description": "Lists a paginated list of objects at L4 level. This is to fasten the response while listing the bucket objects",
        "operationId": "get-inventory-objects-l4",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryObjectL4FilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPInventoryL4ViewModel"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Paginated Inventory Objects at Level 4",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/object/details": {
      "post": {
        "description": "Returns details for the object with the specified object ID.",
        "operationId": "get-inventory-object-details",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPInventoryObjectExplorer"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error / violates_minimum_alert_dismiss_duration_time"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Inventory Object Details",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/objects/aggregate/by-classification": {
      "post": {
        "description": "Returns the object counts identified by classification, malware, and object exposure.",
        "operationId": "get-inventory-objects-by-classification",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountByClassificationViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Object Counts by Classification",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/objects/aggregate/alerts/by-classification": {
      "post": {
        "description": "Returns the object alert counts grouped by exposure, classification, and severity.",
        "operationId": "get-inventory-aggregate-alerts-by-classification",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountByClassificationViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Aggregate Alert Data by Classification",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/objects/aggregate/history": {
      "post": {
        "description": "Returns counts of objects that satisfy the given creation time window and other filters.",
        "operationId": "get-inventory-aggregate-history",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPInventoryObjectHistoryViewModel"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Aggregate Data by History",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/object/malware/report/hash/{fileHash}": {
      "post": {
        "description": "Returns a malware report.",
        "operationId": "get-malware-report",
        "parameters": [
          {
            "description": "File hash value",
            "in": "path",
            "name": "fileHash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error / violates_minimum_alert_dismiss_duration_time"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Malware Report",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/resource/details": {
      "post": {
        "description": "Returns details for the resource (bucket) with the specified tenant ID and bucket name.",
        "operationId": "get-inventory-resource-details",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPInventoryResourceExplorer"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Inventory Resource Details",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/resource/objects": {
      "post": {
        "description": "Returns the objects for the specified bucket.",
        "operationId": "get-inventory-resource-objects",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPInventoryResourceObjects"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Inventory Resource Objects",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/snippet": {
      "post": {
        "description": "Generates a snippet for the specified object.",
        "operationId": "add-snippets",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DLPInventoryResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / internal_error / violates_minimum_alert_dismiss_duration_time"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Generate Snippet",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/inventory/snippet/objects/{objectId}/datapattern/{dataPatternId}": {
      "get": {
        "description": "Returns a snippet for the given object and data pattern.",
        "operationId": "get-snippets",
        "parameters": [
          {
            "description": "Object ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Data pattern ID",
            "in": "path",
            "name": "dataPatternId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DssPatternSnippetViewModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Snippet",
        "tags": [
          "Data Security Inventory"
        ]
      }
    },
    "/dlp/api/v1/resource-inventory/resources": {
      "get": {
        "description": "Lists all AWS S3 bucket resources for your onboarded cloud account(s). The response indicates the amount of data eligible for sensitive data scans, malware scans, or both based on the supported file types and file size.",
        "operationId": "get-resource-inventory",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceInventory"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Data Resources",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/config/v2/resource": {
      "put": {
        "description": "Updates the data security scan settings configuration for the listed resources.",
        "operationId": "update-resource-config",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResourceConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Data Scan Config",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern": {
      "put": {
        "description": "Lists all data patterns that satisfy the request filters.",
        "operationId": "get-all-data-patterns",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/GetDataPatternFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DataPatternList"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Data Patterns",
        "tags": [
          "Data Security Settings"
        ]
      },
      "post": {
        "description": "Creates a data pattern.",
        "operationId": "add-data-pattern",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataPatternRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Data Pattern",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern/clone": {
      "post": {
        "description": "Clones a data pattern.",
        "operationId": "clone-data-pattern",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DataPatternModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Clone Data Pattern",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern/id/{patternId}": {
      "get": {
        "description": "Returns the data pattern details for the specified ID.",
        "operationId": "get-data-pattern-details",
        "parameters": [
          {
            "description": "Data pattern ID",
            "in": "path",
            "name": "patternId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DataPatternDetails"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Data Pattern Details",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern/name": {
      "get": {
        "description": "Lists of all data pattern names with their supported confidence levels.",
        "operationId": "get-data-pattern-name",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DataPatternConfidenceLevel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Data Pattern By Name",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-pattern/{patternId}": {
      "put": {
        "description": "Updates a data pattern.",
        "operationId": "update-data-pattern",
        "parameters": [
          {
            "description": "Data pattern ID",
            "in": "path",
            "name": "patternId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataPatternRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Data Pattern",
        "tags": [
          "Data Security Settings"
        ]
      },
      "delete": {
        "description": "Deletes a data pattern.",
        "operationId": "delete-data-pattern",
        "parameters": [
          {
            "description": "Data pattern ID",
            "in": "path",
            "name": "patternId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Data Pattern",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-profile": {
      "get": {
        "description": "Lists all data profiles for your tenant.",
        "operationId": "get-data-profiles",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DSSDataProfiles"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Data Profiles",
        "tags": [
          "Data Security Settings"
        ]
      },
      "post": {
        "description": "Creates a data profile.",
        "operationId": "add-data-profile",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DataProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Data Profile",
        "tags": [
          "Data Security Settings"
        ]
      },
      "put": {
        "description": "Enables or disables one or more data profiles.",
        "operationId": "enable-disable-data-profiles",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSSProfile"
                },
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Data Profile Status",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/v1/dss-api/data-profile/id/{profileId}": {
      "get": {
        "description": "Returns data profile details for the specified profile ID.",
        "operationId": "get-data-profile-details",
        "parameters": [
          {
            "description": "Data profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DataProfileDetails"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Data Profile Details",
        "tags": [
          "Data Security Settings"
        ]
      },
      "put": {
        "description": "Updates a data profile.",
        "operationId": "update-data-profile",
        "parameters": [
          {
            "description": "Data profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DataProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Data Profile",
        "tags": [
          "Data Security Settings"
        ]
      },
      "post": {
        "description": "Clones a data profile.",
        "operationId": "clone-data-profile",
        "parameters": [
          {
            "description": "Data profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Clone Data Profile",
        "tags": [
          "Data Security Settings"
        ]
      },
      "delete": {
        "description": "Deletes a data profile.",
        "operationId": "delete-data-profile",
        "parameters": [
          {
            "description": "Data profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Data Profile",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/dlp/api/v1/dss-api/snippets": {
      "get": {
        "description": "Returns the snippet masking configuration for your tenant.",
        "operationId": "get-snippets-config",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DssSnippetConfig"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Snippet Configuration",
        "tags": [
          "Data Security Settings"
        ]
      },
      "post": {
        "description": "Updates the snippet masking configuration for your tenant.",
        "operationId": "update-snippets",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/DssSnippetConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Snippet Configuration",
        "tags": [
          "Data Security Settings"
        ]
      }
    },
    "/api/v1/permission": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Permissions",
        "description": "Returns the results of a given [IAM query](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-rql-reference/rql-reference/iam-query.html).\n\nIf you set the **Accept** request header to **appliation/json**, the response object contains an array of items with permissions data.\n\nThe request parameter **limit** determines the number of items&mdash;for example, permissions&mdash;in the response object. If the amount of available data is greater than the specified **limit**, use the response object attribute **data.nextPageToken** as the request parameter **pageToken** in [Get Permissions Next Page](/prisma-cloud/api/cspm/get-next-permissions-page-with-post) to request the next page of data.\n\nIf you set the **Accept** request header to **text/csv**, the response is a CSV that contains permissions details.",
        "operationId": "get-permissions-with-post",
        "requestBody": {
          "description": "Model for Permission Search Request DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionSearchRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSearchResponseDto"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorize"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/page": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Permissions Next Page",
        "operationId": "get-next-permissions-page-with-post",
        "description": "Given a request parameter **pageToken**, returns the next page of permissions data. You can find the value for **pageToken** from the response object of a previous request to [Get Permissions](/prisma-cloud/api/cspm/get-permissions-with-post).",
        "requestBody": {
          "description": "Model for Permission Search Page Request DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionSearchPageRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSearchResultDataDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSearchResultDataDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorize"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/access": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Permissions Access",
        "description": "Given a permission ID and an \n[IAM query](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-rql-reference/rql-reference/iam-query.html),\nreturns data about the actual permission usage (last access).\n\n\nThe request parameter **limit** determines the number of items&mdash;that is, last access&mdash;in the response object. \n\n\nIf the amount of available data is greater than the \nspecified **limit**, use the response object attribute **data.nextPageToken** as the request parameter **pageToken** in \n[Get Permissions Access Next Page](/prisma-cloud/api/cspm/get-next-permissions-access-with-post) to request the\nnext page of data.\n",
        "operationId": "get-permissions-access-with-post",
        "requestBody": {
          "description": "Model for Permission Access Request DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionAccessRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionAccessResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/access/page": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Permissions Access Next Page",
        "description": "Given a request parameter **pageToken**, returns the next page of permissions data.\nYou can find the value for **pageToken** from the response object of a previous request to \n[Get Permissions Access](/prisma-cloud/api/cspm/get-permissions-access-with-post)\n",
        "operationId": "get-next-permissions-access-with-post",
        "requestBody": {
          "description": "Model for Permission Access Page Request DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionAccessPageRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionAccessResultDataDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorize"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/alert/remediation": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Remediation",
        "operationId": "get-remediation-with-post",
        "description": "Returns a list of remediations for the specified alert IDs.",
        "requestBody": {
          "description": "Model for RemediationRequestDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemediationRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/permission/alert/search": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "Get IAM Query",
        "operationId": "get-rql-with-get",
        "description": "Returns the IAM query for the specified alert ID.",
        "parameters": [
          {
            "name": "alertId",
            "in": "query",
            "description": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RqlResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/suggest": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Query Suggestions",
        "operationId": "get-suggestions-with-post",
        "description": "Given a partial IAM query, returns suggestions to append to your query either to create a complete valid IAM query or to build a further partial query. Also indicates whether or not the query you input is already a valid IAM query.",
        "requestBody": {
          "description": "Model for SuggestRequestDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestRequestDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/idp/integration/test": {
      "post": {
        "tags": [
          "IAM IDP"
        ],
        "summary": "Test IDP Integration",
        "operationId": "test-integration-with-post",
        "description": "Tests whether or not an integration with Okta is valid.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique ID of your choice to identify the test. Will override the request parameter **id**.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Model for Integration DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationValidatorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tenant/{prismaId}/integration/channels": {
      "get": {
        "description": "Returns a list of the supported integration types.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "get-supported-integration-channels-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Success Response": {
                    "description": "Example of successful response",
                    "value": [
                      "amazon_sqs",
                      "aws_s3",
                      "aws_security_hub",
                      "azure_service_bus_queue",
                      "demisto",
                      "google_cscc",
                      "jira",
                      "microsoft_teams",
                      "pager_duty",
                      "service_now",
                      "slack",
                      "snowflake",
                      "splunk",
                      "webhook"
                    ]
                  }
                },
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Supported Integration Types",
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/integration": {
      "get": {
        "description": "Returns a list of integrations.\n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account Group Admin\n* Account and Cloud Provisioning Admin\n* Account Group Read Only\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).        \n",
        "operationId": "get-all-integrations-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": " Comma-separated list of integration IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": " Comma-separated list of integration types",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "onlyEnabled",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EventsIntegrationModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Integrations",
        "tags": [
          "Integrations"
        ]
      },
      "post": {
        "description": "Creates a Prisma Cloud integration with an external system. \n\nThe caller must have a Prisma Cloud role of System Admin.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "create-integration-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsCreateIntegrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsIntegrationModel"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Integration",
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/integration/{id}": {
      "get": {
        "description": "Returns the integration with the specified ID.\n\nThe caller must have a Prisma Cloud role of System Admin.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "get-integration-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Integration Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsIntegrationModel"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Integration by ID",
        "tags": [
          "Integrations"
        ]
      },
      "patch": {
        "description": "Updates the state of an integration. For example, you can enable or disable\nan integration.\n\nThe caller must have a Prisma Cloud role of System Admin.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "update-integration-state-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": " Integration Id ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsPatchIntegrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Integration State",
        "tags": [
          "Integrations"
        ]
      },
      "put": {
        "description": "Updates an integration.\n\nThe caller must have a Prisma Cloud role of System Admin.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "update-integration-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsUpdateIntegrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsIntegrationModel"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Integration",
        "tags": [
          "Integrations"
        ]
      },
      "delete": {
        "description": "Deletes an integration.\n\nThe caller must have a Prisma Cloud role of System Admin.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "delete-integration-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Integration Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Integration",
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/integration/test": {
      "post": {
        "description": "Runs a test of the integration for the specified data.\n\nThe caller must have a Prisma Cloud role of System Admin.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "test-integration-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Integration Id",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsTestIntegrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Test Integration",
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/integration/securityhub/regions/{accountId}": {
      "get": {
        "description": "Returns a list of security-hub-enabled AWS regions for the specified AWS account.\n\nThe caller must have a Prisma Cloud role of System Admin.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "get-security-hub-region-by-account-id-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "AWS Account ID",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsRegions"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Security Hub Enabled Regions by AWS Account ID",
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/integration/securityhub/accounts": {
      "get": {
        "description": "Returns the security-hub-enabled AWS account name and ID for the specified Prisma ID.\n\nThe caller must have a Prisma Cloud role of System Admin.\n\n**Note**: This request does not support Prisma Cloud integrations with the following:\n\n* Okta\n* Qualys\n* Tenable\n\nFor requests that support integration with the systems above, see [Integrations Pull](/prisma-cloud/api/cspm/integrations-pull).\n",
        "operationId": "get-security-hub-accounts-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "200 ": {
                    "description": "200",
                    "value": "{ \"11111111\": \"account1\"}"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Security Hub Enabled AWS Accounts",
        "tags": [
          "Integrations"
        ]
      }
    },
    "/integration/name": {
      "get": {
        "description": "Returns the metadata for your integrations filtered by type.  \r\n\r\nThis request supports integrations with only the following:\n\n * Okta\n * Qualys\n * Tenable \n",
        "operationId": "get-all-integrations-metadata",
        "parameters": [
          {
            "description": "Integration type",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only enabled integration",
            "in": "query",
            "name": "onlyEnabled",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_integration_type / internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Metadata for All Integrations",
        "tags": [
          "Integrations Pull"
        ]
      }
    },
    "/integration": {
      "get": {
        "description": "Returns all your integrations, optionally filtered by type.  \r\n\r\nThis request supports integrations with only the following:\n\n * Okta\n * Qualys\n * Tenable \n",
        "operationId": "get-all-integrations",
        "parameters": [
          {
            "description": "Include only Okta, Tenable, and Qualys integrations",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IntegrationViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List All Integrations",
        "tags": [
          "Integrations Pull"
        ]
      },
      "post": {
        "description": "Adds an integration with the specified external system.  \r\n\r\nThis request supports integrations with only the following:\n\n* Okta\n* Qualys\n* Tenable\n\nThe following request body parameters are required:\n\n* **name**\n* **integrationType**\n* **integrationConfig**\n* **enabled**\n\nThe **integrationConfig** field that is a map of key/value pairs. The type of integration \ndefines the content of these key/value pairs. See [Integration Configuration](/prisma-cloud/api/cspm/api-integration-config) for valid \nkey/value pairs for the **integrationConfig** for your specific external integration.\n",
        "operationId": "save-integration",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationModel"
              }
            }
          },
          "description": "Model for Integration",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_integration_name / missing_integration_type / integration_name_already_exists / internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Integration",
        "tags": [
          "Integrations Pull"
        ]
      }
    },
    "/integration/test": {
      "post": {
        "description": "Runs a test of the integration for the specified data.   \r\n\r\nThis request supports integrations with only the following:\n\n* Okta\n* Qualys\n* Tenable \n\nThe following request body parameters are required:\n\n* **name**\n* **integrationType**\n* **integrationConfig**\n\nThe request body to test an integration between Prisma Cloud and an external system \nincludes an **integrationConfig** field that is a map of key/value pairs. The type of \nintegration defines the content of these key/value pairs. See [Integration Configuration](/prisma-cloud/api/cspm/api-integration-config) \nfor request body details, including the **integrationConfig** for your specific integration test.\n",
        "operationId": "test-integration",
        "parameters": [
          {
            "description": "Integration ID",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationModel"
              }
            }
          },
          "description": "Model for Integration",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "missing_integration_type / invalid_integration_name / missing_integration_config / internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Test Integration",
        "tags": [
          "Integrations Pull"
        ]
      }
    },
    "/integration/{id}": {
      "get": {
        "description": "Returns integration details for the specified ID.  \r\n\r\nThis request supports integrations with only the following:\n\n* Okta\n* Qualys\n* Tenable\n\nTo get the integration ID, [list the metadata for all integrations](/prisma-cloud/api/cspm/get-all-integrations-metadata).    \n",
        "operationId": "get-integration-by-id",
        "parameters": [
          {
            "description": "Integration ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Integration By ID",
        "tags": [
          "Integrations Pull"
        ]
      },
      "put": {
        "description": "Updates the specified integration.  \r\n\r\nThis request supports integrations with only the following:\n\n* Okta\n* Qualys\n* Tenable \n\nTo get the integration ID, [list the metadata for all integrations](/prisma-cloud/api/cspm/get-all-integrations-metadata).\n\nThe request body for an integration between Prisma Cloud and an external system includes \nan **integrationConfig** field that is a map of key/value pairs. The type of integration \ndefines the content of these key/value pairs. See [Integration Configuration](/prisma-cloud/api/cspm/api-integration-config) for valid \nkey/value pairs for the **integrationConfig** for your specific external integration.\n\nThe fields you can update in an integration are:\n\n* **name**\n* **integrationConfig**, depending on integration type\n* **description**\n* **enabled** \n",
        "operationId": "update-integration",
        "parameters": [
          {
            "description": "Integration ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationModel"
              }
            }
          },
          "description": "Model for Integration",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_integration_name / missing_integration_config / integration_name_already_exists / invalid_id / internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Integration",
        "tags": [
          "Integrations Pull"
        ]
      },
      "delete": {
        "description": "Deletes the integration for the specified ID.  \r\n\r\nThis request supports integrations with only the following:\n\n* Okta\n* Qualys\n* Tenable\n",
        "operationId": "delete-integration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_id / conflict_deleting_integration / missing_integration_config / internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Integration",
        "tags": [
          "Integrations Pull"
        ]
      }
    },
    "/allow_list/network": {
      "get": {
        "description": "Returns an array of public networks.",
        "operationId": "get-networks-list",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicNetwork"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Networks",
        "tags": [
          "IP Allow List"
        ]
      },
      "post": {
        "description": "Adds a public network.  \r\n\r\nThe resulting new network does not have any CIDR blocks, so none will be in the response object. You can add a CIDR to the network with [Add CIDR](/prisma-cloud/api/cspm/add-cidr-block)\n",
        "operationId": "add-a-network",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PublicNetwork"
              }
            }
          },
          "description": "Model for Public Network",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PublicNetwork"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Network",
        "tags": [
          "IP Allow List"
        ]
      }
    },
    "/allow_list/network/{networkUuid}": {
      "get": {
        "description": "Returns the public network with the specified network ID.",
        "operationId": "get-network-info",
        "parameters": [
          {
            "description": "Network ID",
            "in": "path",
            "name": "networkUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PublicNetwork"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "404": {
            "description": "no_results"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Network Info",
        "tags": [
          "IP Allow List"
        ]
      },
      "put": {
        "description": "Renames an existing network.",
        "operationId": "rename-a-network",
        "parameters": [
          {
            "description": "Network ID",
            "in": "path",
            "name": "networkUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PublicNetwork"
              }
            }
          },
          "description": "Model for Public Network",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "404": {
            "description": "no_results"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Rename Network",
        "tags": [
          "IP Allow List"
        ]
      }
    },
    "/allow_list/network/{networkUuid}/cidr": {
      "post": {
        "description": "Adds a new CIDR block. The CIDR block cannot overlap CIDR blocks that already exist in the networks you manage. Also, IP addresses in the CIDR block must be routable to the public internet.",
        "operationId": "add-cidr-block",
        "parameters": [
          {
            "description": "Network ID",
            "in": "path",
            "name": "networkUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PublicNetworkCidrBlock"
              }
            }
          },
          "description": "Model for Public Network CIDR Block",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PublicNetworkCidrBlock"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add CIDR",
        "tags": [
          "IP Allow List"
        ]
      }
    },
    "/allow_list/network/{networkUuid}/cidr/{cidrUuid}": {
      "put": {
        "description": "Updates an existing CIDR block.  \r\n\r\nNote that the value for the request body parameter **description** will update the description for the CIDR block, even if the **description** \nvalue is blank. Providing a blank description will remove an existing CIDR block description.\n",
        "operationId": "update-cidr-block",
        "parameters": [
          {
            "description": "Network ID",
            "in": "path",
            "name": "networkUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CIDR ID",
            "in": "path",
            "name": "cidrUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PublicNetworkCidrBlock"
              }
            }
          },
          "description": "Model for Public Network CIDR Block",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "404": {
            "description": "no_results"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update CIDR",
        "tags": [
          "IP Allow List"
        ]
      },
      "delete": {
        "description": "Deletes an existing CIDR block.",
        "operationId": "delete-cidr-block",
        "parameters": [
          {
            "description": "Network ID",
            "in": "path",
            "name": "networkUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CIDR ID",
            "in": "path",
            "name": "cidrUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "404": {
            "description": "no_results"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete CIDR",
        "tags": [
          "IP Allow List"
        ]
      }
    },
    "/ip_allow_list_login": {
      "get": {
        "description": "Returns a list of data objects that contain the CIDRs in the allow list to access the Prisma Cloud tenant.",
        "operationId": "list-login-ip-allow-lists",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LoginIpAllowListData"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "403": {
            "description": "login_ip_allow_list_feature_flag_disabled"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Login IP Allow Lists",
        "tags": [
          "IP Allow List"
        ]
      },
      "post": {
        "description": "Adds a named list of CIDRs (IP addresses) that are in the allow list to access Prisma Cloud. You can add up to 10 CIDRs per named list, and there can be up to 50 named lists.",
        "operationId": "insert-login-ip-allow-list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IpAllowListParams"
              }
            }
          },
          "description": "Model for login IP allow list parameters",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LoginIpAllowListData"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "login_ip_allow_list_invalid_cidr_format / login_ip_allow_list_missing_cidr_field / login_ip_allow_list_size_exceeded / login_ip_allow_list_cidr_list_size_exceeded"
          },
          "403": {
            "description": "login_ip_allow_list_feature_flag_disabled"
          },
          "409": {
            "description": "login_ip_allow_list_duplicate_key"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Login IP Allow List",
        "tags": [
          "IP Allow List"
        ]
      }
    },
    "/ip_allow_list_login/{id}": {
      "get": {
        "description": "Returns a data object that contains a list of CIDRs that are in allow list for login access, for the specified login IP allow list ID.",
        "operationId": "get-login-ip-allow-list",
        "parameters": [
          {
            "description": "Login IP Allow List ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LoginIpAllowListData"
                }
              }
            },
            "description": "successful operation"
          },
          "403": {
            "description": "login_ip_allow_list_feature_flag_disabled"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Login IP Allow List",
        "tags": [
          "IP Allow List"
        ]
      },
      "put": {
        "description": "Updates a named list of CIDRs (IP addresses) that are in the allow list for login access.",
        "operationId": "update-login-ip-allow-list",
        "parameters": [
          {
            "description": "ID of named network",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IpAllowListParams"
              }
            }
          },
          "description": "Model for login IP allow list parameters",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LoginIpAllowListData"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "login_ip_allow_list_invalid_cidr_format / login_ip_allow_list_missing_cidr_field / login_ip_allow_list_enable_not_allowed_ip_absent / login_ip_allow_list_not_allowed_ip_present"
          },
          "403": {
            "description": "login_ip_allow_list_feature_flag_disabled"
          },
          "404": {
            "description": "not_found"
          },
          "409": {
            "description": "login_ip_allow_list_duplicate_name"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Login IP Allow List",
        "tags": [
          "IP Allow List"
        ]
      },
      "delete": {
        "description": "Deletes a named list of CIDRs that are in the allow list for login access. If only one allow list entry exists, you will not be able to delete it while the login IP allow list is enabled.",
        "operationId": "delete-login-ip-allow-list",
        "parameters": [
          {
            "description": "ID of named network",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "login_ip_allow_list_not_allowed_ip_absent / login_ip_allow_list_size_only_one_entry / login_ip_allow_list_not_allowed_ip_present"
          },
          "403": {
            "description": "login_ip_allow_list_feature_flag_disabled"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Login IP Allow List",
        "tags": [
          "IP Allow List"
        ]
      }
    },
    "/ip_allow_list_login/status": {
      "get": {
        "description": "Indicates whether or not the login IP allow list is enabled.",
        "operationId": "get-login-ip-allow-list-status",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Login IP Allow List Status",
        "tags": [
          "IP Allow List"
        ]
      },
      "patch": {
        "description": "Enable or disable the login IP allow list.",
        "operationId": "update-login-ip-allow-list-status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              }
            }
          },
          "description": "The property name is **enabled**. Valid values are **true**, **false**. JSON example: {\"enabled\":false}",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "login_ip_allow_list_enable_not_allowed_ip_absent / login_ip_allow_list_enable_not_allowed_empty_list"
          },
          "403": {
            "description": "login_ip_allow_list_feature_flag_disabled"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Login IP Allow List Status",
        "tags": [
          "IP Allow List"
        ]
      }
    },
    "/license/api/v1/usage": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Usage Count By Cloud Type V1 (Deprecated)",
        "description": "Returns a breakdown of resources used per account for a single cloud type. \n\n**Note**: This API will be deprecated soon. To ensure that your automation and scripts continue to work without disruption, use the **Usage Count By Cloud Type V2** API.\n\nYou can request usage data in one of the following formats;\n* Receive paginated usage data in the response object \n* Download usage data in a CSV file\n\n\nBy default, you will receive your paginated usage data in the response object. You can control the number of items in the \nresponse object through the **limit** request body parameter. If data beyond what's in the response object is available,\nthe response object attribute **nextPageToken** will provide a token you can set in the request parameter **pageToken** of your\nnext request to get the next page of usage data.\n\n\nTo download the usage data in a CSV file, set the following:\n* Request header: **Accept: application/octet-stream**\n* Request body parameter: **csvHeaderRequired** = **true**.\n\n\nThe following example curl command requests usage data in a CSV file:\n\n```bash\ncurl --location --request POST 'https://api.prismacloud.io/license/api/v1/usage' \\\n--header 'x-redlock-auth:<your JWT>' \\\n--header 'Content-Type: application/json' \\\n--header 'Accept: application/octet-stream' \\\n--data-raw '{\n    \"timeRange\": {\n        \"type\": \"relative\",\n        \"value\": {\n            \"amount\": 1,\n            \"unit\": \"month\"\n        }\n    },\n    \"accountIds\": [\n        \"123456789987\", \n        \"987654321123\"\n    ],\n    \"cloudType\": \"AWS\",\n    \"csvHeaderRequired\": true\n}'\n````\n",
        "operationId": "license-usage-count-by-cloud-paginated_1_1",
        "parameters": [
          {
            "name": "cloud_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/LicenseRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseResponseModel"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/CsvMessage"
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameter_value",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              },
              "application/json; charset=UTF-8": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LicenseResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/SpringErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              },
              "application/json; charset=UTF-8": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LicenseResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/SpringErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "internal_error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              },
              "application/json; charset=UTF-8": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LicenseResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/SpringErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/license/api/v1/usage/time_series": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Resource Usage Over Time V1 (Deprecated)",
        "description": "Get a breakdown of resource usage over time.\n\n**Note**: This API will be deprecated soon. To ensure that your automation and scripts continue to work without disruption, use the **Resource Usage Over Time V2** API.\n",
        "operationId": "license-usage-graph_1",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AccountListRequestModel1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUsageGraphResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameter_value",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/license/api/v2/usage": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Usage Count By Cloud Type V2",
        "description": "Get a full breakdown of resources used per account for selected cloud types in a paginated way.\n\nBy default, you will receive your paginated usage data in the response object. You can control the number of items in the \nresponse object through the **limit** request body parameter. If data beyond what's in the response object is available,\nthe response object attribute **nextPageToken** will provide a token you can set in the request parameter **pageToken** of your\nnext request to get the next page of usage data.\n",
        "operationId": "license-usage-count-by-cloud-paginated",
        "parameters": [
          {
            "name": "cloud_type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/LicensingUsageApiRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUsageCountResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameter_value",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/license/api/v2/time_series": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Resource Usage Over Time V2",
        "description": "Get a breakdown of resource usage over time.",
        "operationId": "license-usage-graph",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/LicensingUsageApiRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUsageGraphResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameter_value",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "internal_error",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/login": {
      "post": {
        "description": "Returns a JWT auth token for accessing the Prisma Cloud APIs.  To generate a token, you must have an access key and include the following values in the request body parameter — access key ID as the username and your secret key as the password. Prisma Cloud requires this JWT in the request header to authorize API access. Note that access keys maintain the same level of permissions as the permission group of the account that created them.   \r\n\r\nIf you are a multi-tenant user and the body parameters of your login request include a user name and password instead of an access key ID and secret key. You will also need to provide the **prismaId** or the **customerName**.\nSpecifying just the **prismaId** is preferred, but specifying **customerName** is an acceptable alternative. Your **prismaId** is available from the \nlicense information in the Prisma Cloud console. It's unnecessary to specify both **prismaId** and **customerName**, but if you do specify both, the parameters must indicate the same tenant. \n\nNote that you should specify not only the URL and required headers, but also the request body or payload in any **POST /login** request.\nSee [Use Curl to Generate JWT Tokens in Prisma Cloud](/prisma-cloud/docs/cspm/cspm-gs#use-curl-to-generate-jwt-tokens-in-prisma-cloud) for a detailed example.\n",
        "operationId": "app-login",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          },
          "description": "Model used for authentication",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseModel"
                }
              }
            },
            "description": "successful operation"
          },
          "401": {
            "description": "sso_enabled_password_login_attempt / invalid_credentials"
          },
          "500": {
            "description": "login_failed_unknown_error"
          }
        },
        "summary": "Login",
        "tags": [
          "Login"
        ]
      }
    },
    "/auth_token/extend": {
      "get": {
        "description": "Extend a user's session. The JWT token returned is valid until the next session timeout occurs. This method requires a valid session token to be passed (token from a prior successful extend or login calls).",
        "operationId": "extend-session",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseModel"
                }
              }
            },
            "description": "successful operation"
          },
          "401": {
            "description": "token_expired"
          },
          "500": {
            "description": "login_failed_unknown_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Refresh Session",
        "tags": [
          "Login"
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/template": {
      "get": {
        "description": "Returns a list of notification templates. \n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account Group Admin\n* Account and Cloud Provisioning Admin\n* Account Group Read Only\n",
        "operationId": "get-all-templates-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma-separated list of Template IDs",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Comma-separated list of integration types that support notification templates. \nValid values: \n\n* email\n* jira\n* service_now\n",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "description": "true = Enabled",
            "name": "enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EventsNotificationTemplate"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Templates",
        "tags": [
          "Notification Templates"
        ]
      },
      "post": {
        "description": "Creates a notification template. \nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account and Cloud Provisioning Admin\n",
        "operationId": "create-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsCreateTemplateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsNotificationTemplate"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Template",
        "tags": [
          "Notification Templates"
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/template/{id}": {
      "get": {
        "description": "Returns the notification template with the specified ID. \n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account Group Admin\n* Account and Cloud Provisioning Admin\n* Account Group Read  Only\n",
        "operationId": "get-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Template Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsNotificationTemplate"
                }
              }
            },
            "description": "OK"
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Template by ID",
        "tags": [
          "Notification Templates"
        ]
      },
      "patch": {
        "description": "Updates the template with the specified ID. \nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account and Cloud Provisioning Admin\n",
        "operationId": "update-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Template ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsNotificationTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Template",
        "tags": [
          "Notification Templates"
        ]
      },
      "delete": {
        "description": "Deletes a template with the specified ID.\n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account and Cloud Provisioning Admin\n",
        "operationId": "delete-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Template Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Template",
        "tags": [
          "Notification Templates"
        ]
      }
    },
    "/api/v1/tenant/{prismaId}/template/test": {
      "post": {
        "description": "Runs a test of the notification template for the specified data. \n\nThe caller must have one of the following Prisma Cloud roles:\n\n* System Admin\n* Account and Cloud Provisioning Admin\n",
        "operationId": "test-template-v1",
        "parameters": [
          {
            "description": "Prisma ID. Your Prisma ID is available either from the response object of your \n[API request to log in](/prisma-cloud/api/cspm/app-login) or \nfrom the licensing information in the Prisma Cloud console.\n",
            "in": "path",
            "name": "prismaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Template ID",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsTestTemplateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsApiError"
                }
              }
            },
            "description": "default response"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Test Template",
        "tags": [
          "Notification Templates"
        ]
      }
    },
    "/cloud-accounts-manager/v1/cloud-accounts/aws/{accountId}/features/aws-flow-logs/s3": {
      "get": {
        "description": "Fetches AWS S3 Flow Log feature details of monitored account.",
        "operationId": "get-aws-s3-flowlog",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AwsS3FlowLogsModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "invalid_parameter_value / bad_request"
          },
          "401": {
            "description": "unauthorized_access"
          },
          "404": {
            "description": "account_not_exist_or_disabled / AWS Flow Logs S3 feature not configured"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Fetches AWS S3 Flow Log details",
        "tags": [
          "Onboarding AWS S3 Flow Logs"
        ]
      },
      "patch": {
        "description": "Saves AWS S3 Flow Log feature details of monitored account.",
        "operationId": "save-aws-s3-flowlog",
        "parameters": [
          {
            "description": "1 Hour format",
            "in": "query",
            "name": "isHourlyFormat",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwsS3FlowLogsModel"
              }
            }
          },
          "description": "AWS S3 Flow Logs feature",
          "required": true
        },
        "responses": {
          "201": {
            "description": "success"
          },
          "400": {
            "description": "invalid_parameter_value / bad_request / missing_required_parameter / Logging account and monitored account are in different partition / logging_account_bucket_not_found / AWS Flow Logs S3 feature not supported for account"
          },
          "401": {
            "description": "unauthorized_access"
          },
          "404": {
            "description": "account_not_exist_or_disabled / logging_account_not_exists"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Saves AWS S3 Flow Log details",
        "tags": [
          "Onboarding AWS S3 Flow Logs"
        ]
      }
    },
    "/cloud-accounts-manager/v1/cloud-accounts/aws/{accountId}/features/aws-flow-logs/s3/status": {
      "post": {
        "description": "Checks AWS S3 Flow Log status of monitored account.",
        "operationId": "check-aws-s3-flowlog",
        "parameters": [
          {
            "description": "1 Hour format",
            "in": "query",
            "name": "isHourlyFormat",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwsS3FlowLogsLoggingAccountsModel"
              }
            }
          },
          "description": "AWS S3 Flow Logs feature",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAccountStatus"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "invalid_parameter_value / bad_request / AWS Flow Logs S3 feature not supported for account"
          },
          "401": {
            "description": "unauthorized_access"
          },
          "404": {
            "description": "invalid_account_id_format"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Checks AWS S3 Flow Log status",
        "tags": [
          "Onboarding AWS S3 Flow Logs"
        ]
      }
    },
    "/authz/v1/feature": {
      "get": {
        "tags": [
          "Permission Groups"
        ],
        "summary": "Get all active features",
        "description": "Returns a list of Prisma Cloud features that can be added to Custom Permission Groups",
        "operationId": "getFeatures",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/authz/v1/permission_group/{id}": {
      "get": {
        "tags": [
          "Permission Groups"
        ],
        "summary": "Get an existing Permission Group by ID",
        "description": "Queries a list of existing permission groups by ID and returns a specific permission group that matches the Permission Group ID.",
        "operationId": "get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PermissionGroupID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAssociatedRoles",
            "in": "query",
            "description": "To include associated roles in the response",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGroupDetail"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGroupDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Permission Groups"
        ],
        "summary": "Update an existing Permission Group",
        "description": "Updates the parameters of an existing permission group.",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PermissionGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Permission Groups"
        ],
        "summary": "Delete an existing Permission Group by ID",
        "description": "Deletes the default or custom permission group with the specified ID.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PermissionGroupID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/authz/v1/permission_group": {
      "get": {
        "tags": [
          "Permission Groups"
        ],
        "summary": "Get all existing Permission Groups",
        "description": "Returns a list of all existing Permission Groups.",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "includeAssociatedRoles",
            "in": "query",
            "description": "To include associated roles in the response",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeFeatures",
            "in": "query",
            "description": "To include permitted features in the response",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionGroupDetail"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionGroupDetail"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Permission Groups"
        ],
        "summary": "Add new Custom Permission Group",
        "description": "Creates a new custom permission group with granular permissions that restrict access to the Prisma Cloud administrative console. Values include name, optional description and selection of enabled features and functions.",
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/filter/policy/suggest": {
      "get": {
        "description": "Returns an object whose keys are the supported policy filters and corresponding values are the default or recent options for that filter.",
        "operationId": "get-policy-filters-and-options",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyFilterSuggestion"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Policy Filters",
        "tags": [
          "Policy"
        ]
      },
      "post": {
        "description": "Returns available options for a policy filter key. Also supports fuzzy autocomplete search for easier filtering.",
        "operationId": "get-policy-filter-options",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterSuggestionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedTableFilter"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Policy Filter Autocomplete Suggestions",
        "tags": [
          "Policy"
        ]
      }
    },
    "/policy": {
      "get": {
        "description": "Returns all available policies, both system default and custom. You can apply filters to narrow the returned policy list to a subset of policies or potentially to a specific policy. Response includes open alert counts, which can affect performance. ",
        "operationId": "get-policies",
        "parameters": [
          {
            "description": "Policy name",
            "in": "query",
            "name": "policy.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy severity",
            "in": "query",
            "name": "policy.severity",
            "required": false,
            "schema": {
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "informational"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy label",
            "in": "query",
            "name": "policy.label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy type",
            "in": "query",
            "name": "policy.type",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "network",
                "audit_event"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy enabled",
            "in": "query",
            "name": "policy.enabled",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy mode",
            "in": "query",
            "name": "policy.policyMode",
            "required": false,
            "schema": {
              "enum": [
                "custom",
                "redlock_default"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy is remediable",
            "in": "query",
            "name": "policy.remediable",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LegacyPolicyViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Policies",
        "tags": [
          "Policy"
        ]
      },
      "post": {
        "description": "Adds a new policy.  \r\n\r\nThe request to add a custom policy uses request body parameters that describe the following:\n\n* General policy information, such as name, labels, and severity\n* Whether or not the policy is enabled. If you don't specify a value for **enabled** when you add a policy, the default is **enabled**=**true**\n* A rule, which identifies a saved search that defines the policy constraints (i.e. RQL query)\n* Optional compliance standards\n* Optional remediation details\n\nThe following are some examples of request body parameters for a request to add a policy. A new custom policy requires a saved search.\nSpecify a saved search ID for the **criteria** request parameter. You can request a list of exiting saved searches through the endpoint to \n[View Search History](/prisma-cloud/api/cspm/search-history).\n\nNote that the request parameters to add a custom config policy require a **cloudType**. The requests for other policy types default to a **cloudType** of **ALL**.\n\nThe JSON below is an example of the minimal request body parameters you need to add a config policy: \n```json\n{\n  \"cloudType\": \"aws\",\n  \"name\": \"Config test policy\",\n  \"policyType\": \"config\",\n  \"rule\": {\n    \"criteria\": \"e1234567-2798-4d1d-a1b0-52d60d49730b\",\n    \"name\": \"test rule\",\n    \"parameters\": {\n      \"savedSearch\": \"true\"\n    },\n    \"type\": \"Config\"\n  },\n \"severity\": \"low\"\n}\n```\n\nThe JSON below is an example of the minimal request body parameters you need to add a network policy:\n```json\n{\n  \"name\": \"test-network-policy\",\n  \"policyType\": \"network\",\n  \"severity\": \"medium\",\n  \"rule\": {\n    \"name\": \"test-network-rule\",\n    \"criteria\": \"c1234567-3a02-4392-a228-327d0db3324d\",\n    \"parameters\": {\n      \"savedSearch\": \"true\"\n    },\n    \"type\": \"Network\"\n  }\n}\n```\n\nThe JSON below is an example of the minimal request body parameters you need to add an audit event policy:\n```json\n{\n  \"name\":\"test-event-policy\",\n  \"policyType\":\"audit_event\",\n  \"rule\":\n    {\"criteria\":\"91234567-087a-4318-a9b3-efe6041b87b1\",\n     \"name\":\"test-rule1\",\n     \"parameters\":{\n       \"savedSearch\":\"true\"\n     },\n     \"type\":\"AuditEvent\"\n    },\n  \"severity\":\"low\"\n}\n```\n\nThe JSON below is an example of the minimal request body parameters you need to add an IAM policy:\n```json\n{\n  \"cloudType\": \"ALL\",\n  \"name\": \"test-iam-policy\",\n  \"policyType\": \"IAM\",\n  \"rule\": {\n    \"criteria\": \"71234567-7251-4d3b-9be1-cced127fd09d\",\n    \"name\": \"test-iam\",\n    \"parameters\": {\n      \"savedSearch\": \"true\"\n    },\n    \"type\": \"IAM\"\n },\n \"severity\": \"medium\"\n}\n```\n\nThe JSON below is an example of the minimal request body parameters you need to add a config policy that includes a compliance standard:\n```json\n{\n    \"cloudType\": \"aws\",\n    \"complianceMetadata\": [\n        {\n            \"standardName\": \"GDPR\",\n            \"requirementId\": \"Chapter 1\",\n            \"sectionId\": \"Article 1\",\n            \"customAssigned\": true,\n            \"complianceId\": \"91234567-7ddf-4e44-96fd-95135d9fbc6b\",\n            \"requirementName\": \"General provisions\",\n            \"sectionLabel\": \"Article 1\"\n        }\n    ],\n    \"description\": \"API test\",\n    \"name\": \"demo\",\n    \"policyType\": \"config\",\n    \"rule\": {\n        \"criteria\": \"b1234567-84fc-4443-8cbc-f08f13fba586\",\n        \"name\": \"demo\",\n        \"parameters\": {\n            \"savedSearch\": \"true\"\n        },\n        \"type\": \"Config\"\n    },\n    \"severity\": \"medium\"\n}        \n```\n\nThe JSON below is an example of the request body parameters you need to add a custom build policy:\n```json\n{\n    \"cloudType\": \"aws\",\n    \"complianceMetadata\": [],\n    \"description\": \"\",\n    \"labels\": [],\n    \"name\": \"demo\",\n    \"policySubTypes\": [\n        \"build\"\n    ],\n    \"policyType\": \"config\",\n    \"recommendation\": \"\",\n    \"rule\": {\n        \"children\": [\n            \"criteria\": \"{\\\"category\\\":\\\"Storage\\\",\\\"resourceTypes\\\":[\\\"aws_s3_bucket\\\"],\\\"conditionQuery\\\":{\\\"attribute\\\":\\\"acl\\\",\\\"operator\\\":\\\"not_equals\\\",\\\"value\\\":\\\"log-delivery-write\\\",\\\"cond_type\\\":\\\"attribute\\\"}}\",\n            \"type\": \"build\",\n            \"recommendation\": \"\"\n        }\n        ],\n        \"name\": \"demo\",\n        \"parameters\": {\n            \"savedSearch\": \"false\",\n            \"withIac\": \"true\"\n        },\n        \"type\": \"Config\"\n    },\n    \"severity\": \"low\"\n}\n```\n\n  The JSON below is an example of the minimal request body parameters you need to add a Code Security build config policy:\n```json\n{\n    \"cloudType\": \"aws/gcp/azure\",\n    \"complianceMetadata\": [],\n    \"description\": \"Code Security build policy\",\n    \"labels\": [],\n    \"name\": \"demo\",\n    \"policySubTypes\": [\"build\"],\n    \"policyType\": \"config\",\n    \"recommendation\": \"\",\n    \"rule\": {\n        \"children\": [\n            {\n                \"metadata\": {\n                    \"code\": \"yaml string\"\n                },\n                \"type\": \"build\",\n                \"recommendation\": \"\"\n            }\n        ],\n        \"name\": \"demo\",\n        \"parameters\": {\n            \"savedSearch\": \"false\",\n            \"withIac\": \"true\"\n        },\n        \"type\": \"Config\"\n    },\n    \"severity\": \"low\",\n    \"enabled\": bool\n}\n```\n\n  The JSON below is an example of the minimal request body parameters you need to add a Code Security run config policy:\n```json\n{\n    \"cloudType\": \"azure\",\n    \"complianceMetadata\": [],\n    \"description\": \"Code Security run policy\",\n    \"labels\": [],\n    \"name\": \"demo\",\n    \"policySubTypes\": [\"run\"],\n    \"policyType\": \"config\",\n    \"recommendation\": \"\",\n    \"rule\": {\n        \"children\": [\n            {\n                \"metadata\": {\n                    \"code\": \"yaml string\"\n                },\n                \"type\": \"build\",\n                \"recommendation\": \"\"\n            }\n        ],\n        \"name\": \"demo\",\n        \"parameters\": {\n            \"savedSearch\": \"true\",\n            \"withIac\": \"true\"\n        },\n        \"type\": \"Config\"\n    },\n    \"severity\": \"medium\",\n    \"enabled\": bool\n}\n```\n",
        "operationId": "add-policy",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PolicyModel"
              }
            }
          },
          "description": "Model for Policy",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / bad_requestmissing_required_parameter / duplicate_name / invalid_search_cloud_type_for_policy / create_update_disallowed_for_json_schema_type_policy / invalid_ruleremediation_allowed_only_for_config_policies / policy_remediation_disallowed_for_non_sys_admins / unauthorized_access / unable_to_determine_sub_types"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Policy",
        "tags": [
          "Policy"
        ]
      }
    },
    "/v2/policy": {
      "get": {
        "description": "Returns all available policies, both system default and custom. You can apply filters to narrow the returned policy list to a subset of policies or potentially to a specific policy. For improved performance, response does not include open alert counts.  \r\n\r\nFor a request to get a full list of supported filters, see [List Policy Filters](/prisma-cloud/api/cspm/get-policy-filters-and-options).\n",
        "operationId": "get-policies-v2",
        "parameters": [
          {
            "description": "Policy name",
            "in": "query",
            "name": "policy.name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy severity",
            "in": "query",
            "name": "policy.severity",
            "required": false,
            "schema": {
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "informational"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy label",
            "in": "query",
            "name": "policy.label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy rule template type",
            "in": "query",
            "name": "policy.rule.type",
            "required": false,
            "schema": {
              "enum": [
                "tf",
                "cft",
                "k8s"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy subtype",
            "in": "query",
            "name": "policy.subtype",
            "required": false,
            "schema": {
              "enum": [
                "run",
                "build",
                "run_and_build",
                "audit",
                "data_classification",
                "dns",
                "malware",
                "network_event",
                "network",
                "ueba",
                "permissions",
                "identity"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy type",
            "in": "query",
            "name": "policy.type",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "network",
                "audit_event"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance requirement name",
            "in": "query",
            "name": "policy.complianceRequirement",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance section ID",
            "in": "query",
            "name": "policy.complianceSection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy enabled",
            "in": "query",
            "name": "policy.enabled",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy mode",
            "in": "query",
            "name": "policy.policyMode",
            "required": false,
            "schema": {
              "enum": [
                "custom",
                "redlock_default"
              ],
              "type": "string"
            }
          },
          {
            "description": "Policy is remediable",
            "in": "query",
            "name": "policy.remediable",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Include deleted policies ",
            "in": "query",
            "name": "policy.allowDeleted",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PolicyViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Policies V2",
        "tags": [
          "Policy"
        ]
      }
    },
    "/policy/{id}": {
      "get": {
        "description": "Returns the policy that has the specified policy ID.",
        "operationId": "get-policy",
        "parameters": [
          {
            "description": "Policy ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "403": {
            "description": "permission_error"
          },
          "404": {
            "description": "no_results"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Policy Info",
        "tags": [
          "Policy"
        ]
      },
      "put": {
        "description": "Updates the existing policy that has the specified policy ID.  \r\n\r\nAlthough multiple body parameters are marked as required, to update a policy, you need to provide only the \nbody parameters that you want to update. All body parameters that you don't update will\ndefault to the values of the existing policy.\n",
        "operationId": "update-policy",
        "parameters": [
          {
            "description": "Policy ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PolicyModel"
              }
            }
          },
          "description": "Model for Policy",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value / policy_id_cannot_be_changed /type_cannot_be_changed / create_update_disallowed_for_json_schema_type_policy / duplicate_name / remediation_allowed_only_for_config_policies / policy_remediation_disallowed_for_non_sys_admins / unable_to_determine_sub_types / unauthorized_access / compliance_mapping_update_disallowed_for_policy_type"
          },
          "403": {
            "description": "not_system_admin_user / not_owner_or_same_role"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Policy",
        "tags": [
          "Policy"
        ]
      },
      "delete": {
        "description": "Delete a policy using its ID.",
        "operationId": "delete-policy",
        "parameters": [
          {
            "description": "Policy ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter/invalid_parameter_value"
          },
          "403": {
            "description": "cannot_delete_default_policy/not_owner_or_same_role/cannot_delete_default_policy"
          },
          "404": {
            "description": "no_results"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Policy",
        "tags": [
          "Policy"
        ]
      }
    },
    "/policy/{id}/status/{enabled}": {
      "patch": {
        "description": "Enable or disable a policy.",
        "operationId": "update-policy-status",
        "parameters": [
          {
            "description": "Policy ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy status (true = enabled)",
            "in": "path",
            "name": "enabled",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value / missing_required_param / "
          },
          "403": {
            "description": "not_found / not_system_admin_user / not_owner_or_same_role"
          },
          "404": {
            "description": "not_found / failed_update_policy_status"
          },
          "500": {
            "description": "failed_update_policy_status"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Policy Status",
        "tags": [
          "Policy"
        ]
      }
    },
    "/policy/compliance": {
      "get": {
        "description": "Returns a list of compliance standards that Prisma Cloud supports and for each compliance standard, lists the supported sections.",
        "operationId": "get-compliance-standards",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "$ref": "#/components/schemas/ComplianceMetadataModel"
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Policy Compliance Standards",
        "tags": [
          "Policy"
        ]
      }
    },
    "/policy/rule/validate": {
      "post": {
        "description": "Pre-validates a policy rule without creating an actual policy.  \r\n\r\nThe only request body parameters for this request are:\n\n* **policyType** - Only the following are valid values for **policyType**:\n    * \"config\" \n    * \"network\"\n    * \"audit_event\" \n    * \"iam\" \n\n* **rule** - The **rule.criteria** value is the RQL search query for the rule you want to validate. Validation of this rule implies validation of a policy you might create with this rule.\n\nOnly the parameters above apply to this request, and both of these parameters are required.\n\nThe JSON below is an example of valid request body parameters:\n\n```json\n{\n    \"policyType\": \"config\",\n    \"rule\": {\n        \"criteria\": \"config from cloud.resource where cloud.type = '\\''azure'\\'' AND api.name = '\\''azure-security-center-settings'\\'' AND json.rule = '\\''autoProvisioningSettings[*].name equals default and (autoProvisioningSettings[*].properties.autoProvision equals Off or autoProvisioningSettings[*] does not exist)'\\''\"\n    }\n}\n``` \n",
        "operationId": "policy-rule-validate",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PolicyModel"
              }
            }
          },
          "description": "Model for Policy",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / saved_search_validation_not_supported / preprocessor_not_allowed_for_policy / invalid_search_type_for_policy / invalid_search_type_for_policy / insufficient_query_for_policy_creation  /invalid_hostfinding_type_redlock_in_search_query / invalid_search_cloud_type_for_policy / invalid_azure_resource_group_in_search_query / json_not_supported_in_event_query / anomaly_search_not_supported_in_event_query / rql_validation_service_unavailable / invalid_json_rule"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Pre-validate Policy Rule",
        "tags": [
          "Policy"
        ]
      }
    },
    "/report": {
      "get": {
        "description": "Returns a list of compliance report generation configurations, including the ID for each configuration. Accepts query parameters to narrow the list.  \r\n\r\nOptional query parameters are available to narrow the reports list request. See \n[Get Report Overview Filters and Options](/prisma-cloud/api/cspm/get-report-filters-and-options) \nfor the REST API request to get the available query parameters.\n",
        "operationId": "list-reports",
        "parameters": [
          {
            "description": "Cloud account",
            "in": "query",
            "name": "cloud.account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud type",
            "in": "query",
            "name": "cloud.type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cloud region",
            "in": "query",
            "name": "cloud.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account group",
            "in": "query",
            "name": "account.group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Policy compliance standard name",
            "in": "query",
            "name": "policy.complianceStandard",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Report frequency",
            "in": "query",
            "name": "report.frequency",
            "required": false,
            "schema": {
              "enum": [
                "one_time",
                "scheduled"
              ],
              "type": "string"
            }
          },
          {
            "description": "Report schedule",
            "in": "query",
            "name": "report.schedule",
            "required": false,
            "schema": {
              "enum": [
                "daily",
                "weekly",
                "monthly"
              ],
              "type": "string"
            }
          },
          {
            "description": "Report email recipients",
            "in": "query",
            "name": "report.email.recipients",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Report type. Default is COMPLIANCE",
            "in": "query",
            "name": "report_view",
            "required": false,
            "schema": {
              "enum": [
                "COMPLIANCE",
                "RIS",
                "INVENTORY_DETAIL",
                "INVENTORY_OVERVIEW"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ReportGenerationConfigApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Report Configs",
        "tags": [
          "Reports"
        ]
      },
      "post": {
        "description": "Creates a compliance report generation configuration based on the specified parameters. Report generation can be either one-time or recurring.  \r\n\r\nYou can use the body parameters to specify whether the report is a one-time report \nor a recurring report. Specify a recurring report by providing a valid \n**target.schedule** body parameter.\n",
        "operationId": "save-report",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ReportGenerationConfigApiModel"
              }
            }
          },
          "description": "Model for report generation configuration",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportGenerationConfigApiModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Report Config",
        "tags": [
          "Reports"
        ]
      }
    },
    "/report/type": {
      "get": {
        "description": "Returns a list of the compliance report types and identifies which report types are available for each cloud type.",
        "operationId": "get-report-types",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  "type": "object"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Report Types",
        "tags": [
          "Reports"
        ]
      }
    },
    "/report/{id}": {
      "get": {
        "description": "Returns the compliance report generation configuration with the specified ID. The response includes pass/fail counts for this ID.",
        "operationId": "get-specified-report",
        "parameters": [
          {
            "description": "Report ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportGenerationConfigApiModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "error"
          },
          "404": {
            "description": "not_found"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Report Config",
        "tags": [
          "Reports"
        ]
      },
      "put": {
        "description": "Updates the compliance report generation configuration with the specified ID.   \r\n\r\nYou can update a recurring report schedule through this request. \nWhen using this request to update a report schedule, the only body \nparameter that is required is **target**.\n",
        "operationId": "update-report",
        "parameters": [
          {
            "description": "Report ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ReportGenerationConfigApiModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportGenerationConfigApiModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Report Config",
        "tags": [
          "Reports"
        ]
      },
      "delete": {
        "description": "Deletes the compliance report generation configuration with the specified ID.",
        "operationId": "delete-report",
        "parameters": [
          {
            "description": "Report ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "error"
          },
          "404": {
            "description": "not_found"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Report Config",
        "tags": [
          "Reports"
        ]
      }
    },
    "/report/{id}/download": {
      "get": {
        "description": "Downloads the compliance report with the specified ID. If the report is scheduled, then the request downloads the latest generated report.",
        "operationId": "download-report",
        "parameters": [
          {
            "description": "Report ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "204": {
            "description": "pending"
          },
          "400": {
            "description": "error"
          },
          "404": {
            "description": "not_found / error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/report/{id}/history": {
      "get": {
        "description": "Returns a list of metadata for the scheduled compliance reports that have been run for the specified report ID.",
        "operationId": "get-historical-report-by-id",
        "parameters": [
          {
            "description": "Report ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ReportGenerationConfigApiModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "error"
          },
          "404": {
            "description": "not_found"
          },
          "405": {
            "description": "method_not_allowed_for_legacy_reports"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Historical Reports Data",
        "tags": [
          "Reports"
        ]
      }
    },
    "/report/{id}/{lastScheduled}": {
      "get": {
        "description": "Returns metadata for the scheduled compliance report that has the specified report ID and was generated on the given timestamp. Returned data includes pass/fail counts.",
        "operationId": "get-last-scheduled-report-by-id",
        "parameters": [
          {
            "description": "Report ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Timestamp of report generation",
            "in": "path",
            "name": "lastScheduled",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportGenerationConfigApiModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "error"
          },
          "404": {
            "description": "not_found"
          },
          "405": {
            "description": "method_not_allowed_for_legacy_reports"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Historical Report Data",
        "tags": [
          "Reports"
        ]
      }
    },
    "/report/{id}/{lastScheduled}/download": {
      "get": {
        "description": "Downloads the compliance report that has the specified report ID and was generated on the specified timestamp.",
        "operationId": "download-historical-by-id",
        "parameters": [
          {
            "description": "Report ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Timestamp of report generation",
            "in": "path",
            "name": "lastScheduled",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "204": {
            "description": "pending"
          },
          "400": {
            "description": "error"
          },
          "404": {
            "description": "not_found/error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Historical Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/filter/report/suggest": {
      "get": {
        "description": "Returns an object whose key/value pairs identify filter options for compliance posture data. The keys are supported filters, and the corresponding values identify the available and saved filter options.  \r\n\r\nThe keys in the response object are the filter names you can use in \n[List Report Overview Filter Autocomplete Suggestions](/prisma-cloud/api/cspm/get-report-posture-filter-options).\n",
        "operationId": "get-report-filters-and-options",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportFilterSuggestion"
                }
              }
            },
            "description": "success"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Report Overview Filters and Options",
        "tags": [
          "Reports"
        ]
      },
      "post": {
        "description": "Returns the available options for a specific report posture filter. Also supports fuzzy autocomplete search for easier filtering.  \r\n\r\nYou can find the available filter names through \n[Get Report Overview Filters and Options request](/prisma-cloud/api/cspm/get-report-filters-and-options). \nThe keys in the response object from that GET request are \nthe available filter names.\n",
        "operationId": "get-report-posture-filter-options",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FilterSuggestionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedTableFilter"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "missing_required_parameter / invalid_parameter_value"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Report Overview Filter Autocomplete Suggestions",
        "tags": [
          "Reports"
        ]
      }
    },
    "/resource": {
      "post": {
        "description": "Returns detailed information for the resource with the given **rrn**.  \r\n\r\nGenerally, the data field in the response object contains the raw JSON blob as is received from the \nsource cloud service provider API for the given resource.\n\nOnly the **rrn** parameter in the request body is used for this API. Ignore the **timelineItemId** and \n**findingType** fields for this API.\n\nAn example request body is:\n```\n{\n  \"rrn\": \"rrn::storageBucket:us-east-1:123456789012:test-bucket\"\n}\n```\n",
        "operationId": "get-resource",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceMetaModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request / no_results / invalid_parameter_value"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Resource",
        "tags": [
          "Resource Explorer"
        ]
      }
    },
    "/resource/alert": {
      "post": {
        "description": "Get a list of alerts associated with a given resource.  \r\n\r\nOnly the **rrn** parameter in the request body is used for this API. Ignore the **timelineItemId** and \n**findingType** fields for this API.\n\nAn example request body is:\n```\n{\n  \"rrn\": \"rrn::storageBucket:us-east-1:123456789012:test-bucket\"\n}\n```\n",
        "operationId": "get-alerts-for-resource",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AlertIdAndSeverity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request / invalid_parameter_value"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Alerts for Resource",
        "tags": [
          "Resource Explorer"
        ]
      }
    },
    "/resource/network": {
      "post": {
        "description": "Fetch network port settings and configuration for a resource.  \r\n\r\nOnly the **rrn** parameter in the request body is used for this API. Ignore the **timelineItemId** and \n**findingType** fields for this API.\n\nAn example request body is:\n```\n{\n  \"rrn\": \"rrn::storageBucket:us-east-1:123456789012:test-bucket\"\n}\n```\n",
        "operationId": "get-network-for-resource",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SecurityGroupDetail"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success / no_results"
          },
          "400": {
            "description": "bad_request / invalid_parameter_value"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Resource Network Settings",
        "tags": [
          "Resource Explorer"
        ]
      }
    },
    "/resource/external_finding": {
      "get": {
        "description": "Get a list of all host findings for a specific alert.",
        "operationId": "get-host-findings-for-alert",
        "parameters": [
          {
            "in": "query",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExternalFindingView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request / invalid_parameter_value"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Host Findings For Alert",
        "tags": [
          "Resource Explorer"
        ]
      },
      "post": {
        "description": "Returns a list of all host findings for the current resource.  \r\n\r\nSupported finding types:\n\nFinding Type | Key\n-----------| ----\nAWS GuardDuty Host | **guard_duty_host**\nAWS GuardDuty IAM  | **guard_duty_iam**\nAWS Inspector Security Best Practices | **inspector_sbp**\nAWS Runtime Behavior Analysis | **inspector_rba_count**\nCIS Compliance | **compliance_cis**\nHost Vulnerability | **host_vulnerability_cve**\n\nOnly the **rrn** parameter in the request body is used for this API. Ignore the **timelineItemId** \nfield for this API.\n\nAn example request body with a specified finding type is:\n```json\n{\n  \"findingType\": [ \"host_vulnerability_cve\", \"inspector_sbp\" ],\n  \"rrn\": \"rrn::instance:us-east-1:i-xxxxxxxxxx\"\n}\n``` \n\nAn example request body for all finding types is:\n```json\n{\n  \"rrn\": \"rrn::instance:us-east-1:i-xxxxxxxxxx\"\n}\n",
        "operationId": "get-host-findings",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExternalFindingView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request / invalid_parameter_value"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Host Findings",
        "tags": [
          "Resource Explorer"
        ]
      }
    },
    "/resource/timeline": {
      "post": {
        "description": "Returns a timeline of events and alerts for the given resource.  \r\n\r\nOnly the **rrn** parameter in the request body is used for this API. Ignore the **timelineItemId** and \n**findingType** fields for this API.\n\nAn example request body is:\n```json\n{\n  \"\"rrn\": \"rrn::instance:us-east-1:i-xxxxxxxxxx\"\n}\n```\n",
        "operationId": "get-timeline-for-resource",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ResourceTimelineItem"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Resource Timeline",
        "tags": [
          "Resource Explorer"
        ]
      }
    },
    "/resource/raw": {
      "post": {
        "description": "Returns the raw metadata of the configuration of a resource at a given point in time.  \r\n\r\nGenerally, the response object contains the raw JSON blob as is received from the \nsource cloud service provider API.\n\nOnly the **rrn** parameter in the request body is used for this API. Ignore the **findingType** \nfield for this API.\n\nYou can find the **timelineItemId** for your resource from the timeline results that \n[Get Resource Timeline](/prisma-cloud/api/cspm/get-timeline-for-resource)\nreturns.\n\nAn example request body is:\n```json\n{\n  \"rrn\": \"rrn::instance:us-east-1:i-xxxxxxxxxx\",\n  \"timelineItemId\": \"xxxxxxxxxxxxxx\"\n}\n```\n",
        "operationId": "get-resource-raw",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Resource (Raw)",
        "tags": [
          "Resource Explorer"
        ]
      }
    },
    "/resource/external_integration": {
      "post": {
        "description": "Returns a list of external ingestion integrations for the specified resource.",
        "operationId": "get-external-integrations-for-resource",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceExplorerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExternalIntegrationView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "success / no_results"
          },
          "400": {
            "description": "bad_request / invalid_parameter_value"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get External Ingest Integrations for the resource",
        "tags": [
          "Resource Explorer"
        ]
      }
    },
    "/v1/resource_list": {
      "get": {
        "description": "Returns all the resource lists for the current customer.",
        "operationId": "get-all-resource-list-for-customer",
        "parameters": [
          {
            "description": "Resource list type",
            "in": "query",
            "name": "listType",
            "required": true,
            "schema": {
              "enum": [
                "TAG"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ResourceListModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_resource_list_type"
          },
          "403": {
            "description": "resource_list_flag_not_enabled"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Resource Lists",
        "tags": [
          "Resource Lists"
        ]
      },
      "post": {
        "description": "Adds a new resource list for the current customer.",
        "operationId": "add-resource-list",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceListModel"
              }
            }
          },
          "description": "Model for Resource List",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListModel"
                }
              }
            },
            "description": "successful operation"
          },
          "403": {
            "description": "resource_list_flag_not_enabled"
          },
          "409": {
            "description": "duplicate_resource_list_name"
          },
          "500": {
            "description": "failed_to_parse_resource_lists"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Resource List",
        "tags": [
          "Resource Lists"
        ]
      }
    },
    "/v1/resource_list/types": {
      "get": {
        "description": "Returns a list of resource list types.",
        "operationId": "get-resource-list-types",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Resource List Types",
        "tags": [
          "Resource Lists"
        ]
      }
    },
    "/v1/resource_list/{id}": {
      "get": {
        "description": "Returns the resource list that has the specified ID.",
        "operationId": "get-resource-list-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListModel"
                }
              }
            },
            "description": "successful operation"
          },
          "403": {
            "description": "resource_list_flag_not_enabled"
          },
          "404": {
            "description": "non_existing_resource_list_id"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Resource List by ID",
        "tags": [
          "Resource Lists"
        ]
      },
      "put": {
        "description": "Updates the resource list that has the specified ID.",
        "operationId": "update-resource-list",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ResourceListModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_id"
          },
          "403": {
            "description": "resource_list_flag_not_enabled"
          },
          "404": {
            "description": "non_existing_resource_list_id"
          },
          "409": {
            "description": "duplicate_resource_list_name"
          },
          "500": {
            "description": "failed_to_parse_resource_lists"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Resource List",
        "tags": [
          "Resource Lists"
        ]
      },
      "delete": {
        "description": "Deletes the resource list that has the specified ID.",
        "operationId": "delete-resource-list-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_id / non_existing_resource_list_id / resource_list_assigned_to_user_role / resource_list_assigned_to_policy_scan_config"
          },
          "404": {
            "description": "non_existing_resource_list_id"
          },
          "409": {
            "description": "conflict_deleting_last_compute_access_group_for_alert_rule"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Resource List",
        "tags": [
          "Resource Lists"
        ]
      }
    },
    "/search/config": {
      "post": {
        "description": "Returns the results of an RQL config query. With config queries, you can retrieve resource information, identify misconfigurations, gain operational insights, and uncover policy and compliance violations.  \r\n\r\n### Download Config Search CSV \nIn addition to performing a config search, this endpoint can perform the config \nsearch and download the results as a CSV file. To download the config search CSV, \nadd the request HTTP header **Accept: text/csv**.\n\nAn example request body is:\n```json\n{\n  \"query\":\"config where api.name = 'aws-iam-get-account-summary' \",\n  \"timeRange\":{\n     \"type\":\"relative\",\n     \"value\":{\n        \"unit\":\"hour\",\n        \"amount\":24\n     }\n  }\n}\n```\n",
        "operationId": "search-config",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRuleSearchParams"
              }
            }
          },
          "description": "Config rule search parameters model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelPagedResultsResourceMetaModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "conflict_saved_search"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Perform Config Search",
        "tags": [
          "Search"
        ]
      }
    },
    "/search": {
      "post": {
        "description": "Perform a search against flow logs with an RQL query.  \r\n\r\nThis endpoint ignores the body param **default**. \n\n### Download Network Search CSV \nIn addition to performing a network search, this API can perform the network \nsearch and download the results as a CSV file. To download the network search CSV, \nadd the request HTTP header **Accept: text/csv**.\n\nAn example request body is:\n```json\n{\n  \"cloudType\": \"\",\n  \"id\":\"\",\n  \"name\":\"\",\n  \"description:\"\",\n  \"saved\":false,\n  \"default\":false,\n  \"query\": \"\",\n    \"timeRange\": {\n      \"type\": \"\",\n      \"value\": \"\"\n    }\n}\n```\n",
        "operationId": "search-network",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          },
          "description": "Search model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Perform Network Search",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/event": {
      "post": {
        "description": "Returns the results of an RQL audit event query. You can use event queries to detect and investigate console and API access, monitor privileged activities, and detect account compromise and unusual user behavior in your cloud environment.",
        "operationId": "search-events",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventSearchParamsModel"
              }
            }
          },
          "description": "Audit event search parameters model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelPagedResultsAuditEvent"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "conflict_saved_search"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Perform Event Search",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/event/aggregate": {
      "post": {
        "description": "Returns the results of an RQL aggregated audit events query. This RQL query is similar to an RQL event query, but the data returned includes location and service data.",
        "operationId": "search-events-aggregated",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventSearchParamsModel"
              }
            }
          },
          "description": "Audit event search parameters model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelListAggregateAuditEvent"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Aggregated Event Search",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/event/filtered": {
      "post": {
        "description": "Filters the results of an event log search according to the specified parameters. You can use this call to refine the results of an aggregated search.",
        "operationId": "search-events-filtered",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventSearchParamsModel"
              }
            }
          },
          "description": "Audit event search parameters model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelPagedResultsAuditEvent"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Filter Event Search Results",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/event/page": {
      "post": {
        "description": "Returns the next page of search results, using a token provided from the previous page. Used for when there are over 100 search results for a given RQL query.  \r\n\r\nAn initial request to perform an event search will return a **data.nextPageToken** that you \ncan use as the initial **pageToken**.\n",
        "operationId": "search-events-page",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventPageParams"
              }
            }
          },
          "description": "Audit event page parameters model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultsAuditEvent"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get The Next Event Search Page",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/event/raw/{id}": {
      "get": {
        "description": "Returns the audit event data for the specified ID as raw metadata.",
        "operationId": "search-events-raw",
        "parameters": [
          {
            "description": "Audit Event ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AuditEvent"
                }
              }
            },
            "description": "success"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Raw Event Data",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/suggest": {
      "post": {
        "description": "Returns the possible options&mdash;including expressions, values, and operators&mdash;to append to a partial RQL query.  \r\n\r\nSpecifying a partial RQL query in the query parameter will result in a list of suggested \noptions to append to your partial query. No other parameters are required.\n",
        "operationId": "search-suggest",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          },
          "description": "Search model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteInfo"
                }
              }
            },
            "description": "success"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Autocomplete Search",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/alert": {
      "get": {
        "description": "Returns search data that can be used to investigate the alert with the specified ID.   \r\n\r\nThis request returns data for only the following types of alerts:\n* Anomaly alerts\n* Network alerts       \n",
        "operationId": "search-for-alert-by-id",
        "parameters": [
          {
            "description": "Alert ID",
            "in": "query",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelListObject"
                }
              }
            },
            "description": "success"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Search Alerts by ID",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/config/page": {
      "post": {
        "description": "Returns the next page of search results, using a token provided from the previous page. Used for when there are over 100 search results for a given RQL query.",
        "operationId": "search-config-page",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRulePageParams"
              }
            }
          },
          "description": "Config rule page parameters model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultsResourceMetaModel"
                }
              }
            },
            "description": "success"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get The Next Config Search Page",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/event/filtered/download": {
      "post": {
        "description": "Performs an event log search with an RQL query and downloads the result as a CSV file.",
        "operationId": "search-events-csv",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AuditEventSearchParamsModel"
              }
            }
          },
          "description": "Audit event search parameters model",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Event Search CSV",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/config/jobs": {
      "post": {
        "description": "Submits a job to generate an RQL config query results list that matches the constraints in the body parameters and is downloadable as a CSV file. Returns the job ID and job submission status.  \r\n\r\nTo identify your config query, specify either (1) a saved search **id**, (2) a recent search **id** plus a unique **searchName**, \nor (3) a **query** plus a unique **searchName**.\n\nIf you identify your search through a saved search **id**, the following request body parameters apply:\n* **id** - The search ID that corresponds to an existing saved search. You can [View Search History](//prisma-cloud/api/cspm/search-history) with a filter \nto get a list of your recent search IDs. (Required)\n* **searchName** - A unique name that identifies the search (Required)\n* **sort** - An array of sort field data (Optional)\n* **timeRange** - A time range filter. Default is the past seven days. (Optional)      \n\nIf you identify your search through a **query** and **searchName**, the following request body parameters apply:\n* **query** - A valid RQL config query that defines your search (Required)\n* **searchName** - A unique name that identifies the search (Required)\n* **searchDescription** - A description for your search (Optional)\n* **sort** - An array of sort field data (Optional)\n* **timeRange** - A time range filter. Default is the past seven days. (Optional)\n",
        "operationId": "submit-an-search-config-csv-download-job",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRuleSearchParams"
              }
            }
          },
          "description": "Config rule search parameters model",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigCsvJobResponseModel"
                }
              }
            },
            "description": "success"
          },
          "202": {
            "description": "in_process"
          },
          "400": {
            "description": "invalid_parameter_value"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Submit Search Config CSV Generation Job",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/config/jobs/{id}/download": {
      "get": {
        "description": "Returns the results of an RQL Config query as a CSV. With Config queries, you can retrieve resource information, identify misconfigurations, gain operational insights, and uncover policy and compliance violations.  \r\n\r\nThis request requires the HTTP header **Accept: text/csv**.\n",
        "operationId": "async-search-config-csv",
        "parameters": [
          {
            "description": "Job ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "202": {
            "description": "in_process"
          },
          "400": {
            "description": "conflict_saved_search"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Download Async Config Search CSV",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/history": {
      "get": {
        "description": "Lists saved or recent search queries based on your filter.",
        "operationId": "search-history",
        "parameters": [
          {
            "description": "Available values: recent, saved",
            "in": "query",
            "name": "filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maximum number of searches to be returned. A single API call retrieves a maximum of 1000 searches, which is also the default. Setting the limit to -1 will also return the default.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SavedRecentSearch"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "View Search History",
        "tags": [
          "Search Manager"
        ]
      }
    },
    "/search/history/{id}": {
      "get": {
        "description": "Returns a search query. You can access only queries that are either saved or recent searches.",
        "operationId": "search-history-by-id",
        "parameters": [
          {
            "description": "Search ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchModel"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Search Query by ID",
        "tags": [
          "Search Manager"
        ]
      },
      "post": {
        "description": "Saves a search query to the **Saved Searches** list under the specified ID.  \r\n\r\nRequired parameters include the search ID, the RQL query, the flag that \nmarks this search as saved, and a unique name for the saved search. A best \npractice is to copy data from the results of a search history, update the \ndata as necessary, and set the **saved** parameter to **true**.\n\nThis API requires Prisma Cloud system administrator role access if you don't own the search with the given search ID.\n",
        "operationId": "search-history-save",
        "parameters": [
          {
            "description": "Search ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseModelSearchModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request / unsupported_search_query / duplicate_search_name"
          },
          "403": {
            "description": "cannot_update_default_saved_search / not_owner_or_same_role"
          },
          "404": {
            "description": "not_found"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Save Search Query",
        "tags": [
          "Search Manager"
        ]
      },
      "delete": {
        "description": "Deletes a saved search query.",
        "operationId": "search-history-delete",
        "parameters": [
          {
            "description": "Search ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "bad_request"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "404": {
            "description": "not_found"
          },
          "409": {
            "description": "conflict_saved_search"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete Saved Search Query",
        "tags": [
          "Search Manager"
        ]
      }
    },
    "/settings/enterprise": {
      "get": {
        "description": "Returns enterprise settings for your tenant.",
        "operationId": "get-enterprise-settings",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseSettingsRequestModel"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Enterprise Settings - GET",
        "tags": [
          "Settings"
        ]
      },
      "post": {
        "description": "Configures enterprise settings for your tenant.",
        "operationId": "update-enterprise-settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseSettingsRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "bad_request"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Enterprise Settings - POST",
        "tags": [
          "Settings"
        ]
      }
    },
    "/check": {
      "get": {
        "description": "Allows a user to check and see if the Prisma Cloud API is up and running.",
        "operationId": "health-check",
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TmpModel"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Health Check",
        "tags": [
          "System"
        ],
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/user/me": {
      "get": {
        "description": "Returns the current user's personal profile information.",
        "operationId": "get-my-profile",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiRoleUserProfile1"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "user_inactive_or_not_exist"
          },
          "500": {
            "description": "failed_fetch_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Profile",
        "tags": [
          "User Profile"
        ]
      },
      "put": {
        "description": "Updates the current user's personal profile information.  \r\n\r\nThis request supports four optional request body parameters, which you can see in the JSON example below:\n```\n{\n  \"defaultRoleId\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"timeZone\": \"\",  \n}\n```\n\nThe red **required** labels in the request body schema below apply only when you create a new user profile, so the labels don't apply to this request.\n",
        "operationId": "update-my-profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiRoleUserProfile1"
              }
            }
          },
          "description": "Model containing user profile",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "empty_user_profile_provided / missing_first_name / missing_time_zone / invalid_time_zone / user_inactive_or_not_exist / default_role_not_belonging_to_user_role_list / invalid_user_role"
          },
          "403": {
            "description": "cannot_disable_own_profile / access_keys_cannot_update_owner_profile"
          },
          "500": {
            "description": "failed_update_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Profile",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/v3/user": {
      "get": {
        "description": "Lists all users and service accounts for your tenant.",
        "operationId": "get-user-profiles-v3",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserAccountModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "failed_fetch_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Users V3",
        "tags": [
          "User Profile"
        ]
      },
      "post": {
        "description": "Adds either a user profile or a service account profile.  \r\n\r\nThe required request body parameters differ, depending on whether you are adding a user account or a service account. Specify whether \nyou're adding a user account or service account through the request parameter **type**.\n\nThe required parameters to add a user account are:\n\n* **email**\n* **firstName**\n* **lastName**\n* **roleIds**\n* **defaultRoleId**\n* **timeZone**\n\nThe required parameters to add a service account are:\n\n* **username**\n* **accessKeyName**\n* **accessKeyExpiration** (Required only if **enableKeyExpiration** is **true**)\n* **defaultRoleId**\n* **timeZone**\n",
        "operationId": "add-user-v3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccountModel"
              }
            }
          },
          "description": "Model for User Account",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserAccessKeyResponseModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "empty_user_profile_provided / missing_email / wrong_email_format / missing_first_name / missing_time_zoneinvalid_time_zone /  missing_required_parameter / no_role_assigned_to_user / exceeding_role_limit_number / default_role_not_belonging_to_user_role_list / invalid_user_role"
          },
          "409": {
            "description": "duplicate_user_name"
          },
          "500": {
            "description": "failed_add_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add User Profile V3",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/v2/user": {
      "get": {
        "description": "Returns a list of all the users belonging to the same tenant. Response includes multiple roles assigned to each user.",
        "operationId": "get-user-profiles-v2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserProfileModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "failed_fetch_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Users V2",
        "tags": [
          "User Profile"
        ]
      },
      "post": {
        "description": "Adds a new administrative user. Supports multiple roles for a single user.",
        "operationId": "add-user-v2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiRoleUserProfile1"
              }
            }
          },
          "description": "Model containing user profile",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "empty_user_profile_provided / missing_email / wrong_email_format / missing_first_name / missing_time_zoneinvalid_time_zone /  missing_required_parameter / no_role_assigned_to_user / exceeding_role_limit_number / default_role_not_belonging_to_user_role_list / invalid_user_role"
          },
          "409": {
            "description": "duplicate_user_name"
          },
          "500": {
            "description": "failed_add_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add User Profile V2",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/v2/user/{id}": {
      "get": {
        "description": "Returns the user profile for the specified email ID. Supports multiple roles for a single user.",
        "operationId": "get-user-profile-v2",
        "parameters": [
          {
            "description": "User email",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "user_inactive_or_not_exist"
          },
          "500": {
            "description": "failed_fetch_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get User Profile V2",
        "tags": [
          "User Profile"
        ]
      },
      "put": {
        "description": "Updates an administrative user's profile. Supports multiple roles for a single user.  \r\n\r\nThe current **email** of the user whose profile you want to update is a required request parameter. All other request parameters are optional. The red **required** labels in the request body schema below apply only when you create a new user profile.\n",
        "operationId": "update-profile-v2",
        "parameters": [
          {
            "description": "User email",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiRoleUserProfile1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "empty_user_profile_provided / missing_first_name / missing_time_zone / invalid_time_zone / user_inactive_or_not_exist / exceeding_role_limit_number / default_role_not_belonging_to_user_role_list / invalid_user_role / invalid_user_role"
          },
          "403": {
            "description": "cannot_remove_current_log_in_role"
          },
          "500": {
            "description": "failed_update_user_profile"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update User Profile V2",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/user/{id}": {
      "delete": {
        "description": "Deletes a user or service account profile.",
        "operationId": "delete-user",
        "parameters": [
          {
            "description": "User email or service account name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "user_inactive_or_not_exist"
          },
          "403": {
            "description": "cannot_delete_own_profile"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete User Profile",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/user/{id}/status/{enabled}": {
      "patch": {
        "description": "Enables or disables a user profile.",
        "operationId": "update-user-profile",
        "parameters": [
          {
            "description": "User email",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          },
          {
            "description": "Status to set",
            "in": "path",
            "name": "enabled",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update User Status",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/user/name": {
      "get": {
        "description": "Returns a list of emails for all non-deleted users in the system.",
        "operationId": "get-usernames",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "failed_fetch_users_emails"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List User Emails",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/user/domain": {
      "get": {
        "description": "Returns a list of domains in allow list.",
        "operationId": "email-domains",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "no_user_added"
          },
          "500": {
            "description": "failed_fetch_email_domain_allow_list"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List Email Domains",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/user/saml/bypass": {
      "get": {
        "description": "Returns a list of users who can log in via both SAML provider and username/password flows.  \r\n\r\nThe request body is an array of emails to be bypassed.\n```\n   [ \"jon.snow@example.com\", \"daenerys@example.com\" ]\n```\n",
        "operationId": "get-sso-bypass-allowed-users",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "successful operation"
          },
          "500": {
            "description": "failed_fetch_sso_bypass_allowed_users"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List SSO Bypass Allowed Users",
        "tags": [
          "User Profile"
        ]
      },
      "put": {
        "description": "Given a list of Prisma Cloud user emails, enables each user in the list to log into Prisma Cloud through either a SAML provider or direct user name and password entry.",
        "operationId": "update-sso-bypass-allowed-users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            }
          },
          "description": "SSO Bypass allowed users",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "missing_sso_bypass_allowed_users"
          },
          "500": {
            "description": "failed_update_sso_bypass_allowed_users"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update SSO Bypass Allowed Users",
        "tags": [
          "User Profile"
        ]
      }
    },
    "/user/role": {
      "get": {
        "description": "Returns an array of user roles.",
        "operationId": "get-user-roles",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserRoleViewModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List User Roles",
        "tags": [
          "User Roles"
        ]
      },
      "post": {
        "description": "Creates a new user role.  \r\n\r\nSee [Prisma Cloud Administrator Permissions](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/manage-prisma-cloud-administrators/prisma-cloud-admin-permissions.html) \nfor the permissions associated with each role.\n\nNote that the request body parameter **accountGroupIds** is required but can be an empty array.\n",
        "operationId": "add-user-role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleModel"
              }
            }
          },
          "description": "User Role",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_user_role_name / invalid_user_role_type / invalid_account_group_ids / user_role_name_already_exists"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add User Role",
        "tags": [
          "User Roles"
        ]
      }
    },
    "/user/role/name": {
      "get": {
        "description": "Returns list of user role IDs and names.",
        "operationId": "get-user-role-name",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List User Role Names",
        "tags": [
          "User Roles"
        ]
      }
    },
    "/user/role/type": {
      "get": {
        "description": "Returns a list of permission groups to which users can belong.",
        "operationId": "get-user-role-types",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "enum": [
                      "SYSTEM_ADMIN",
                      "ACCOUNT_ADMIN",
                      "ACCOUNT_READ_ONLY",
                      "SSO_ADMIN",
                      "CLOUD_PROVISIONING_ADMIN",
                      "TENANT_PROVISIONING_ADMIN",
                      "PRISMA_SERVICE_USER",
                      "ACCOUNT_AND_CLOUD_PROVISIONING_ADMIN",
                      "BUILD_AND_DEPLOY_SECURITY",
                      "BUILD_AND_DEPLOY_SECURITY_CI",
                      "COMPUTE_ADMIN",
                      "NETWORK_SECURITY_OPERATOR",
                      "NETWORK_SECURITY_OPERATOR_READ_ONLY",
                      "COMPUTE_ACCOUNT_ADMIN",
                      "DEVELOPER",
                      "COMPUTE_ACCOUNT_READ_ONLY"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "List User Role Types",
        "tags": [
          "User Roles"
        ]
      }
    },
    "/user/role/{id}": {
      "get": {
        "description": "Returns user role information for a specified ID.",
        "operationId": "get-user-role",
        "parameters": [
          {
            "description": "User Role ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleViewModel"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_id"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "User Role Info",
        "tags": [
          "User Roles"
        ]
      },
      "put": {
        "description": "Updates information for an existing user role.",
        "operationId": "update-user-role",
        "parameters": [
          {
            "description": "User Role ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleModel"
              }
            }
          },
          "description": "User Role",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_id / invalid_user_role_name / invalid_user_role_type / invalid_account_group_ids / user_role_name_already_exists"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update User Role",
        "tags": [
          "User Roles"
        ]
      },
      "delete": {
        "description": "Deletes a user role with the specified ID.",
        "operationId": "delete-user-role",
        "parameters": [
          {
            "description": "User Role ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid_id / cannot_delete_role_users_associated / invalid_id"
          },
          "403": {
            "description": "unauthorized_access"
          },
          "500": {
            "description": "internal_error"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Delete User Role",
        "tags": [
          "User Roles"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserAccessKeyResponseModel": {
        "description": "Model for create user access key response",
        "properties": {
          "id": {
            "description": "Access key ID",
            "type": "string"
          },
          "secretKey": {
            "description": "Access key secret",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserAccessKeyDetailResponseModel": {
        "description": "Model for get user access keys response",
        "properties": {
          "createdBy": {
            "description": "Created By",
            "type": "string"
          },
          "createdTs": {
            "description": "Time access key was created",
            "format": "int64",
            "type": "integer"
          },
          "expiresOn": {
            "description": "Access key expires on",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Access key id",
            "type": "string"
          },
          "lastUsedTime": {
            "description": "Access key last used",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "role": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "User role",
            "type": "object"
          },
          "roleType": {
            "description": "User role permission type",
            "type": "string"
          },
          "status": {
            "description": "Access key status",
            "type": "string"
          },
          "username": {
            "description": "Access key user name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserAccessKeyRequestModel": {
        "description": "Model for create user access key request",
        "properties": {
          "expiresOn": {
            "description": "Timestamp in milliseconds when access key expires",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Access key name",
            "type": "string"
          },
          "serviceAccountName": {
            "description": "Service account name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UserAccessKeyResponseModel": {
        "description": "Model for user access keys GET response",
        "properties": {
          "expiresOn": {
            "description": "Timestamp in milliseconds when access key expires",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Access key ID",
            "type": "string"
          },
          "name": {
            "description": "Access key name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccountGroupMetadataViewModel": {
        "properties": {
          "autoCreated": {
            "description": "Boolean to indicate if account group is automatically created",
            "type": "boolean"
          },
          "id": {
            "description": "Account Group ID",
            "type": "string"
          },
          "name": {
            "description": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "AccountGroupModel": {
        "description": "Model for Account Group",
        "properties": {
          "accountIds": {
            "description": "Cloud Account IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "autoCreated": {
            "description": "Boolean read-only attribute to indicate if account group is automatically created",
            "readOnly": true,
            "type": "boolean"
          },
          "cloudAccountCount": {
            "description": "Number of cloud accounts associated with this account group",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudAccountInfos": {
            "description": "Cloud account details of account associated with this account group",
            "items": {
              "$ref": "#/components/schemas/CloudAccountInfo"
            },
            "readOnly": true,
            "type": "array"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "Account Group ID",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Last Modified Time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          }
        },
        "required": [
          "accountIds",
          "name"
        ],
        "type": "object"
      },
      "AccountGroupViewModel": {
        "description": "Model for Account Group View",
        "properties": {
          "accountIds": {
            "description": "Cloud Account IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "accounts": {
            "description": "Associated Cloud Accounts",
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "alertRules": {
            "description": "Singly associated alert rules which cannot exist in the system without the account group",
            "items": {
              "$ref": "#/components/schemas/CustomAlertRule"
            },
            "readOnly": true,
            "type": "array"
          },
          "autoCreated": {
            "description": "Boolean read-only attribute to indicate if account group is automatically created",
            "readOnly": true,
            "type": "boolean"
          },
          "cloudAccountCount": {
            "description": "Number of cloud accounts associated with this account group",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudAccountInfos": {
            "description": "Cloud account details of account associated with this account group",
            "items": {
              "$ref": "#/components/schemas/CloudAccountInfo"
            },
            "readOnly": true,
            "type": "array"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "Account Group ID",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Last Modified Time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountGroupMetadataViewModel"
              },
              {
                "description": "For future use"
              }
            ]
          }
        },
        "required": [
          "accountIds",
          "name"
        ],
        "type": "object"
      },
      "CloudAccountInfo": {
        "description": "Cloud account info linked to an account group",
        "properties": {
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomAlertRule": {
        "properties": {
          "alertId": {
            "type": "string"
          },
          "alertName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdoptionAdvisorCheckModel": {
        "description": "Model for Adoption Advisor Check",
        "properties": {
          "category": {
            "description": "List of categories for this check",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "checkName": {
            "description": "Check name",
            "type": "string"
          },
          "createdTime": {
            "description": "Creation time in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "errors": {
            "description": "List of errors. Each item has the title, status, detail, and parameters of each error.",
            "items": {
              "$ref": "#/components/schemas/AdoptionScoreProblemModel"
            },
            "type": "array"
          },
          "executionTimeMillis": {
            "description": "Execution time in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "internalKey": {
            "description": "Internal key",
            "type": "string"
          },
          "module": {
            "description": "Module",
            "type": "string"
          },
          "pillar": {
            "description": "List of pillars for this check",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "stage": {
            "description": "List of stages for this check",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "description": "Status of completion or calculation for this check",
            "enum": [
              "COMPLETE",
              "IN_COMPLETE",
              "ERROR",
              "NOT_APPLICABLE",
              "IN_PROGRESS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdoptionAdvisorChecksComputationResponseModel": {
        "description": "Model for Adoption Advisor Checks Computation Response",
        "properties": {
          "adoptionAdvisorChecks": {
            "description": "List of Adoption Advisor checks",
            "items": {
              "$ref": "#/components/schemas/AdoptionAdvisorCheckModel"
            },
            "type": "array"
          },
          "creationTimeMillis": {
            "description": "Creation time in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "customData": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/CustomDataCountObjectModel"
              },
              "type": "array"
            },
            "description": "Custom data objects map",
            "type": "object"
          },
          "customerName": {
            "description": "Customer name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdoptionAdvisorChecksResponseModel": {
        "description": "Model for Adoption Advisor Checks Response",
        "properties": {
          "errors": {
            "description": "List of errors. Each item has the title, status, detail, and parameters of each error.",
            "items": {
              "$ref": "#/components/schemas/AdoptionScoreProblemModel"
            },
            "type": "array"
          },
          "response": {
            "description": "List of Adoption Advisor Checks Computation Responses",
            "items": {
              "$ref": "#/components/schemas/AdoptionAdvisorChecksComputationResponseModel"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdoptionAdvisorReportGenerationConfigApiModel": {
        "description": "Model for Adoption Advisor report generation configuration",
        "properties": {
          "emailIds": {
            "description": "List of email addresses to receive notification",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Report scheduling enabled",
            "type": "boolean"
          },
          "id": {
            "description": "Report ID",
            "type": "string"
          },
          "name": {
            "description": "Report name",
            "type": "string"
          },
          "schedule": {
            "description": "Recurring report schedule in RRULE format",
            "type": "string"
          },
          "widgetDays": {
            "description": "Widget days--30, 60, or 90",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "emailIds",
          "enabled",
          "name",
          "schedule",
          "widgetDays"
        ],
        "type": "object"
      },
      "AdoptionScoreProblemModel": {
        "description": "Model for Adoption Score Problem",
        "properties": {
          "detail": {
            "description": "Error details",
            "type": "string"
          },
          "status": {
            "description": "Status code",
            "type": "string"
          },
          "title": {
            "description": "Title of error",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomDataCountObjectModel": {
        "description": "Model for Custom Data Category By Type",
        "properties": {
          "label": {
            "description": "Label for custom object",
            "type": "string"
          },
          "total": {
            "description": "Total number counted",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AlertRuleNotificationConfigModel": {
        "description": "Model for Alert Rule Notification Config",
        "properties": {
          "dayOfMonth": {
            "description": "Day of month",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "daysOfWeek": {
            "description": "Days of week",
            "items": {
              "$ref": "#/components/schemas/WeekDay"
            },
            "readOnly": true,
            "type": "array"
          },
          "detailedReport": {
            "description": "Provide csv detailed report",
            "type": "boolean"
          },
          "enabled": {
            "description": "Scan enabled",
            "type": "boolean"
          },
          "frequency": {
            "enum": [
              "as_it_happens",
              "daily",
              "weekly",
              "monthly"
            ],
            "type": "string"
          },
          "frequencyFromRRule": {
            "description": "Frequency from RRule",
            "readOnly": true,
            "type": "string"
          },
          "hourOfDay": {
            "description": "Hour of day",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "id": {
            "description": "Alert rule notification config ID",
            "type": "string"
          },
          "includeRemediation": {
            "description": "Include remediation in detailed report",
            "type": "boolean"
          },
          "lastUpdated": {
            "description": "Last Updated",
            "format": "int64",
            "type": "integer"
          },
          "last_sent_ts": {
            "description": "Time of last notification in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "recipients": {
            "description": "* For email notifications: List of unique email addresses to notify\n* For integrations without notification templates: List of integration ids\n* For integrations with notification templates: List of notification template ids\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "rruleSchedule": {
            "type": "string"
          },
          "templateId": {
            "description": "Template ID",
            "type": "string"
          },
          "timezone": {
            "description": "Java time zone ID (e.g. America/Los_Angeles) ",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Integration type",
            "enum": [
              "email",
              "slack",
              "splunk",
              "amazon_sqs",
              "jira",
              "microsoft_teams",
              "webhook",
              "aws_security_hub",
              "google_cscc",
              "service_now",
              "pager_duty",
              "azure_service_bus_queue",
              "demisto",
              "aws_s3",
              "snowflake"
            ],
            "type": "string"
          },
          "withCompression": {
            "description": "Compress detailed report",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AlertRulePolicyFilter": {
        "description": "Model for Alert Rule Policy Filter",
        "properties": {
          "availablePolicyFilters": {
            "description": "List of available Alert Rule Policy Filters",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "cloud.type": {
            "description": "Cloud Type Filter",
            "items": {
              "enum": [
                "ALL",
                "AWS",
                "AZURE",
                "GCP",
                "ALIBABA_CLOUD",
                "OCI",
                "IBM"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "policy.complianceStandard": {
            "description": "Compliance Standard Filter",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "policy.label": {
            "description": "Policy Label Filter",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "policy.severity": {
            "description": "Policy Severity Filter",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "PolicyScanConfigModel": {
        "description": "Model for Policy Scan Config",
        "properties": {
          "alertRuleNotificationConfig": {
            "description": "List of data for notifications to third-party tools",
            "items": {
              "$ref": "#/components/schemas/AlertRuleNotificationConfigModel"
            },
            "type": "array"
          },
          "allowAutoRemediate": {
            "description": "Allow Auto-Remediation",
            "type": "boolean"
          },
          "delayNotificationMs": {
            "description": "Delay notifications by the specified milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "description": "Rule/Scan description",
            "type": "string"
          },
          "enabled": {
            "description": "Rule/Scan is enabled",
            "type": "boolean"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last modified on this date/time in milliseconds",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Rule/Scan name",
            "type": "string"
          },
          "notifyOnDismissed": {
            "description": "include dismissed alerts in notification",
            "type": "boolean"
          },
          "notifyOnOpen": {
            "description": "include open alerts in notification",
            "type": "boolean"
          },
          "notifyOnResolved": {
            "description": "include resolved alerts in notification",
            "type": "boolean"
          },
          "notifyOnSnoozed": {
            "description": "include snoozed alerts in notification",
            "type": "boolean"
          },
          "policies": {
            "description": "List of specific policies to scan",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "policyLabels": {
            "description": "Policy labels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "policyScanConfigId": {
            "description": "Policy Scan Config ID",
            "type": "string"
          },
          "scanAll": {
            "description": "Scan all policies",
            "type": "boolean"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetFilterModel"
              },
              {
                "description": "TargetFilter model (target accounts)"
              }
            ]
          }
        },
        "required": [
          "name",
          "target"
        ],
        "type": "object"
      },
      "PolicyScanConfigViewModel": {
        "description": "Model for Policy Scan Config View",
        "properties": {
          "alertRuleNotificationConfig": {
            "description": "List of data for notifications to third-party tools",
            "items": {
              "$ref": "#/components/schemas/AlertRuleNotificationConfigModel"
            },
            "type": "array"
          },
          "allowAutoRemediate": {
            "description": "Allow Auto-Remediation",
            "type": "boolean"
          },
          "delayNotificationMs": {
            "description": "Delay notifications by the specified milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "description": "Rule/Scan description",
            "type": "string"
          },
          "enabled": {
            "description": "Rule/Scan is enabled",
            "type": "boolean"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last modified on this date/time in milliseconds",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Rule/Scan name",
            "type": "string"
          },
          "notificationChannels": {
            "description": "List of notification channels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notifyOnDismissed": {
            "description": "include dismissed alerts in notification",
            "type": "boolean"
          },
          "notifyOnOpen": {
            "description": "include open alerts in notification",
            "type": "boolean"
          },
          "notifyOnResolved": {
            "description": "include resolved alerts in notification",
            "type": "boolean"
          },
          "notifyOnSnoozed": {
            "description": "include snoozed alerts in notification",
            "type": "boolean"
          },
          "openAlertsCount": {
            "description": "Open alerts count (Deprecated - will be removed soon)",
            "format": "int32",
            "type": "integer"
          },
          "owner": {
            "description": "Customer",
            "type": "string"
          },
          "policies": {
            "description": "List of specific policies to scan",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "policyLabels": {
            "description": "Policy labels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "policyScanConfigId": {
            "description": "Policy Scan Config ID",
            "type": "string"
          },
          "readOnly": {
            "description": "Model is read-only",
            "type": "boolean"
          },
          "scanAll": {
            "description": "Scan all policies",
            "type": "boolean"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetFilterModel"
              },
              {
                "description": "TargetFilter model (target accounts)"
              }
            ]
          }
        },
        "required": [
          "name",
          "target"
        ],
        "type": "object"
      },
      "ResourceListIdsCollection": {
        "description": "Model for holding the lists resource list ids by resource list type",
        "properties": {
          "computeAccessGroupIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TargetFilterModel": {
        "description": "Model for Target Filter",
        "properties": {
          "accountGroups": {
            "description": "List of Account group(s)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "alertRulePolicyFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertRulePolicyFilter"
              },
              {
                "description": "Policy Filters for the Alert Rule"
              }
            ]
          },
          "excludedAccounts": {
            "description": "List of excluded accounts",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includedResourceLists": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceListIdsCollection"
              },
              {
                "description": "List of resource lists included which the resource has to match on."
              }
            ]
          },
          "regions": {
            "description": "List of regions for which alerts will be triggered for account groups. Alerts not associated with specific regions will be triggered regardless of listed regions. If no regions are specified, then the alerts will be triggered for all regions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tags": {
            "description": "List of TargetTag models (resource tags) for which alerts should be triggered",
            "items": {
              "$ref": "#/components/schemas/TargetTagModel"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TargetTagModel": {
        "description": "Model for Target Tag",
        "properties": {
          "key": {
            "description": "Resource tag target",
            "type": "string"
          },
          "values": {
            "description": "List of value(s) for resource tag key",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WeekDay": {
        "properties": {
          "day": {
            "enum": [
              "SU",
              "MO",
              "TU",
              "WE",
              "TH",
              "FR",
              "SA"
            ],
            "type": "string"
          },
          "offset": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AbsoluteTimeRangeConfigModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "description": "Model for AbsoluteTimeRangeConfig",
            "properties": {
              "type": {
                "example": "absolute",
                "type": "string"
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimeModel"
                  },
                  {
                    "description": "Time range object"
                  }
                ]
              }
            },
            "required": [
              "value"
            ],
            "type": "object"
          }
        ]
      },
      "AlertAttributionModel": {
        "description": "Model for AlertAttribution",
        "properties": {
          "attributionEventList": {
            "items": {
              "$ref": "#/components/schemas/AttributionEventModel"
            },
            "type": "array"
          },
          "resourceCreatedBy": {
            "description": "Resource Created By",
            "type": "string"
          },
          "resourceCreatedOn": {
            "description": "Resource Created On",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AlertFilterSuggestion": {
        "description": "Model for AlertFilterSuggestion",
        "properties": {
          "account.group": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "alert.id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "alert.status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "alertRule.name": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "asset.class": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "buildtime.resourceName": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.account": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.accountId": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.region": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.service": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "git.filename": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "git.provider": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "git.repository": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "iac.framework": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "malware": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "object.classification": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "object.exposure": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "object.identifier": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.complianceRequirement": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.complianceSection": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.complianceStandard": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.label": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.name": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.remediable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.severity": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.subtype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.type": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "resource.group": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "resource.id": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "resource.name": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "resource.tagv2": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "resource.type": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "risk.grade": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "timeRange.type": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "vulnerability.severity": {
            "$ref": "#/components/schemas/FilterSuggestion"
          }
        },
        "type": "object"
      },
      "AlertModel": {
        "description": "Model for Alert",
        "properties": {
          "alertAdditionalInfo": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "alertAttribution": {
            "$ref": "#/components/schemas/AlertAttributionModel"
          },
          "alertCount": {
            "format": "int64",
            "type": "integer"
          },
          "alertRules": {
            "items": {
              "$ref": "#/components/schemas/PolicyScanConfigModel"
            },
            "type": "array"
          },
          "alertTime": {
            "description": "Timestamp when alert was last reopened for resource update, or the same as **firstSeen** if there are no status changes.",
            "format": "int64",
            "type": "integer"
          },
          "dismissalDuration": {
            "description": "Dismissal Duration",
            "type": "string"
          },
          "dismissalNote": {
            "description": "Dismissal note",
            "type": "string"
          },
          "dismissalUntilTs": {
            "description": "Dismiss until this timestamp",
            "format": "int64",
            "type": "integer"
          },
          "dismissedBy": {
            "description": "Dismissed by",
            "type": "string"
          },
          "eventOccurred": {
            "description": "Timestamp when the event occurred. Set only for Audit Event policies.",
            "format": "int64",
            "type": "integer"
          },
          "firstSeen": {
            "description": "Timestamp of the first policy violation for the alert resource (i.e. the alert creation timestamp)",
            "format": "int64",
            "type": "integer"
          },
          "history": {
            "items": {
              "$ref": "#/components/schemas/HistoryModel"
            },
            "type": "array"
          },
          "id": {
            "description": "Alert ID",
            "type": "string"
          },
          "lastSeen": {
            "description": "Timestamp when alert status was last updated.",
            "format": "int64",
            "type": "integer"
          },
          "lastUpdated": {
            "description": "Timestamp when alert was last updated. Updates include but are not limited to resource updates, policy updates, alert rule updates, and alert status changes.",
            "format": "int64",
            "type": "integer"
          },
          "metadata": {
            "description": "Raw JSON metadata for the alert",
            "type": "object"
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyModel"
          },
          "policyId": {
            "description": "Policy ID",
            "type": "string"
          },
          "reason": {
            "description": "Reason",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/CloudResourceModel"
          },
          "riskDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RiskDetailModel"
              },
              {
                "description": "Risk detail (Deprecated)"
              }
            ]
          },
          "saveSearchId": {
            "description": "Saved Search ID",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "enum": [
              "open",
              "dismissed",
              "snoozed",
              "resolved"
            ],
            "readOnly": true,
            "type": "string"
          },
          "triggeredBy": {
            "description": "Triggered By",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertStatusChangeRequestModel": {
        "description": "Model for Alert Status Change Request",
        "properties": {
          "alerts": {
            "description": "Alert IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dismissalNote": {
            "description": "Reason for dismissal (this only applies to the dismiss alerts endpoint)",
            "type": "string"
          },
          "dismissalTimeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Dismissal Time Range"
              }
            ]
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterModel"
              },
              {
                "description": "Filter"
              }
            ]
          },
          "policies": {
            "description": "Policy IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "filter"
        ],
        "type": "object"
      },
      "AlertsLookupKeyModel": {
        "description": "Model for AlertsLookupKey",
        "properties": {
          "alerts": {
            "description": "List of alert IDs. One or more alert IDs associated with a single policy are required if no policies are specified. If a policy is specified, then all the alerts specified must belong to that policy.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterModel"
              },
              {
                "description": "Filter to narrow or manage the search"
              }
            ]
          },
          "policies": {
            "description": "List of policy IDs. A single policy ID is required if no alerts are specified.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "filter"
        ],
        "type": "object"
      },
      "AsyncJob": {
        "description": "Model for AsyncJob",
        "properties": {
          "createdBy": {
            "description": "Job creator",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Creation timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "downloadUri": {
            "description": "Download URI",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Job ID",
            "readOnly": true,
            "type": "string"
          },
          "lastModified": {
            "description": "Timestamp for last modified",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "recordCount": {
            "description": "Record Count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "description": "Job status",
            "enum": [
              "COMPLETED",
              "FAILED",
              "IN_PROGRESS",
              "READY_TO_DOWNLOAD",
              "SUBMITTED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "statusUri": {
            "description": "Status URI",
            "readOnly": true,
            "type": "string"
          },
          "timeTaken": {
            "description": "Time taken to complete the job",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AttributionEventModel": {
        "description": "Model for AttributionEvent",
        "properties": {
          "event": {
            "description": "Event",
            "type": "string"
          },
          "event_ts": {
            "description": "Event Timestamp",
            "format": "int64",
            "type": "integer"
          },
          "username": {
            "description": "Username",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudResourceModel": {
        "description": "Model for Cloud Resource",
        "properties": {
          "account": {
            "description": "Account",
            "type": "string"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "additionalInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonNode"
              },
              {
                "description": "Additional info"
              }
            ]
          },
          "cloudAccountAncestors": {
            "description": "Cloud account ancestors. For GCP.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "cloudAccountGroups": {
            "description": "Cloud account groups",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "cloudAccountOwners": {
            "description": "Cloud account owners. For Azure and GCP.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "cloudServiceName": {
            "description": "Cloud service name",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "type": "string"
          },
          "data": {
            "description": "Raw JSON data for the resource",
            "readOnly": true,
            "type": "object"
          },
          "id": {
            "description": "Id",
            "type": "string"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "region": {
            "description": "Region name",
            "type": "string"
          },
          "regionId": {
            "description": "Region API identifier",
            "type": "string"
          },
          "resourceApiName": {
            "description": "Resource API name",
            "readOnly": true,
            "type": "string"
          },
          "resourceConfigJsonAvailable": {
            "type": "boolean"
          },
          "resourceDetailsAvailable": {
            "type": "boolean"
          },
          "resourceTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "resourceType": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          },
          "rrn": {
            "description": "RRN",
            "type": "string"
          },
          "unifiedAssetId": {
            "type": "string"
          },
          "url": {
            "description": "URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ComplianceMetadataModel": {
        "description": "Model for ComplianceMetadata",
        "properties": {
          "complianceId": {
            "description": "Compliance Section UUID",
            "type": "string"
          },
          "customAssigned": {
            "type": "boolean"
          },
          "policyId": {
            "description": "Policy ID",
            "type": "string"
          },
          "requirementDescription": {
            "description": "Requirement description",
            "type": "string"
          },
          "requirementId": {
            "description": "Requirement ID",
            "type": "string"
          },
          "requirementName": {
            "description": "Requirement name",
            "type": "string"
          },
          "sectionDescription": {
            "description": "Section name",
            "type": "string"
          },
          "sectionId": {
            "description": "Section Id",
            "type": "string"
          },
          "sectionLabel": {
            "description": "Section Label",
            "type": "string"
          },
          "standardDescription": {
            "description": "Compliance standard description",
            "type": "string"
          },
          "standardId": {
            "type": "string"
          },
          "standardName": {
            "description": "Compliance standard name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountModel": {
        "description": "Model used for just count",
        "properties": {
          "count": {
            "description": "Count",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FilterModel": {
        "description": "Model for Filter",
        "properties": {
          "detailed": {
            "description": "Detailed",
            "type": "boolean"
          },
          "fields": {
            "description": "Array of specific fields to return",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filters": {
            "description": "Filtering parameters. \n\nFor filter names, refer to List Filters API. \n\nFor filter values, refer to List filter suggestions. \n\nThe only exception is **resource.tagv2** filter name, provide filter value for it in the following format: \"{\"key\":\"'CustomerTagKey'\",\"value\":\"'CustomerTagValue'\"}\"",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "type": "array"
          },
          "groupBy": {
            "description": "For asset or data inventory only. Group returned items by **cloud.type**, **cloud.service**, **cloud.region**, **cloud.account**, and/or **resource.type**",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "description": "Maximum number of items to return. When data is paginated, maximum number of items per page.The maximum cannot exceed 10,000. The default is 10,000.",
            "type": "number"
          },
          "offset": {
            "description": "The number of items to skip before selecting items to return. Default is zero",
            "type": "number"
          },
          "pageToken": {
            "description": "Setting this pagination Token to the **nextPageToken** from a response object returns the next page of data ",
            "type": "string"
          },
          "sortBy": {
            "description": "Array of sort properties. Append **:asc** or  **:desc** to the key to sort by ascending or descending order respectively. Example sort properties are **id:asc** and **timestamp:desc**",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time range"
              }
            ]
          }
        },
        "type": "object"
      },
      "FilterSuggestion": {
        "description": "Model for FilterSuggestion",
        "properties": {
          "nameValue": {
            "description": "Filter options",
            "items": {
              "$ref": "#/components/schemas/NameValueIntegerString"
            },
            "type": "array"
          },
          "options": {
            "description": "Filter options, which lists all the default options for static filters or all the recent options, if any, for non-static filters",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "staticFilter": {
            "description": "Filter is a static filter",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "FilterSuggestionModel": {
        "description": "Model for Filter Suggestions",
        "properties": {
          "filterName": {
            "description": "Filter name",
            "type": "string"
          },
          "query": {
            "description": "Case-insensitive fuzzy search autocomplete filter. Includes only items that contain the query as a substring.",
            "type": "string"
          }
        },
        "required": [
          "filterName"
        ],
        "type": "object"
      },
      "HistoryModel": {
        "description": "Model for History",
        "properties": {
          "reason": {
            "description": "Reason",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Status",
            "enum": [
              "OPEN",
              "DISMISSED",
              "SNOOZED",
              "PENDING_RESOLUTION",
              "RESOLVED"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "JsonNode": {
        "properties": {
          "array": {
            "type": "boolean"
          },
          "bigDecimal": {
            "type": "boolean"
          },
          "bigInteger": {
            "type": "boolean"
          },
          "binary": {
            "type": "boolean"
          },
          "boolean": {
            "type": "boolean"
          },
          "containerNode": {
            "type": "boolean"
          },
          "double": {
            "type": "boolean"
          },
          "float": {
            "type": "boolean"
          },
          "floatingPointNumber": {
            "type": "boolean"
          },
          "int": {
            "type": "boolean"
          },
          "integralNumber": {
            "type": "boolean"
          },
          "long": {
            "type": "boolean"
          },
          "missingNode": {
            "type": "boolean"
          },
          "nodeType": {
            "enum": [
              "ARRAY",
              "BINARY",
              "BOOLEAN",
              "MISSING",
              "NULL",
              "NUMBER",
              "OBJECT",
              "POJO",
              "STRING"
            ],
            "type": "string"
          },
          "null": {
            "type": "boolean"
          },
          "number": {
            "type": "boolean"
          },
          "object": {
            "type": "boolean"
          },
          "pojo": {
            "type": "boolean"
          },
          "short": {
            "type": "boolean"
          },
          "textual": {
            "type": "boolean"
          },
          "valueNode": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NameValueIntegerString": {
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PagedResultsAlertModel": {
        "properties": {
          "dynamicColumns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "infoMsg": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AlertModel"
            },
            "type": "array"
          },
          "nextPageToken": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "totalRows": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ParsedTableFilter": {
        "description": "Model for parsed table filter",
        "properties": {
          "completeParameters": {
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "type": "array"
          },
          "links": {
            "description": "JSON query builder links",
            "type": "string"
          },
          "needsOffsetUpdate": {
            "description": "Needs offset update (for internal use)",
            "type": "boolean"
          },
          "offset": {
            "description": "Offset within query",
            "format": "int32",
            "type": "integer"
          },
          "queryRemainder": {
            "description": "Query remainder",
            "type": "string"
          },
          "suggestions": {
            "description": "List of suggestions",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "translate": {
            "description": "Translate (for internal use)",
            "type": "boolean"
          },
          "valid": {
            "description": "Query is valid",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PolicyModel": {
        "description": "Model for Policy",
        "properties": {
          "cloudType": {
            "description": "Cloud type (Required for config policies). Not case-sensitive. Default is **ALL**.",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "type": "string"
          },
          "complianceMetadata": {
            "description": "List of compliance data. Each item has compliance standard, requirement, and/or section information.",
            "items": {
              "$ref": "#/components/schemas/ComplianceMetadataModel"
            },
            "type": "array"
          },
          "createdBy": {
            "description": "Created by",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Created on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "deleted": {
            "description": "Deleted",
            "readOnly": true,
            "type": "boolean"
          },
          "description": {
            "description": "Policy description",
            "type": "string"
          },
          "enabled": {
            "description": "true=enabled. false=disabled.",
            "type": "boolean"
          },
          "findingTypes": {
            "description": "Finding Type",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "labels": {
            "description": "Labels",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last modified on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Policy name",
            "type": "string"
          },
          "overridden": {
            "description": "Overridden",
            "readOnly": true,
            "type": "boolean"
          },
          "policyId": {
            "description": "Policy ID",
            "readOnly": true,
            "type": "string"
          },
          "policySubTypes": {
            "description": "Policy subtype",
            "items": {
              "enum": [
                "run",
                "build",
                "run_and_build",
                "audit",
                "data_classification",
                "dns",
                "malware",
                "network_event",
                "network",
                "ueba",
                "permissions",
                "network_config",
                "identity"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": true
          },
          "policyType": {
            "description": "Policy type. Policy type **anomaly** is read-only.",
            "enum": [
              "config",
              "network",
              "audit_event",
              "anomaly",
              "data",
              "iam",
              "workload_vulnerability",
              "workload_incident",
              "waas_event",
              "attack_path"
            ],
            "type": "string"
          },
          "policyUpi": {
            "description": "Policy UPI",
            "readOnly": true,
            "type": "string"
          },
          "recommendation": {
            "description": "Remediation recommendation",
            "type": "string"
          },
          "remediable": {
            "description": "isRemediable",
            "readOnly": true,
            "type": "boolean"
          },
          "remediation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RemediationModel"
              },
              {
                "description": "Auto remediation info. Available only if policy is remediable."
              }
            ]
          },
          "restrictAlertDismissal": {
            "description": "Restrict alert dismissal",
            "readOnly": true,
            "type": "boolean"
          },
          "rule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuleModel"
              },
              {
                "description": "Policy rule (Contains RQL search query or saved search)"
              }
            ]
          },
          "ruleLastModifiedOn": {
            "description": "Rule last modified on",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "severity": {
            "description": "Severity",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "type": "string"
          },
          "systemDefault": {
            "description": "true = Policy is a Prisma Cloud system default policy",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "policyType",
          "rule",
          "severity"
        ],
        "type": "object"
      },
      "PolicyRiskScoreModel": {
        "description": "Model for Policy Risk Score",
        "properties": {
          "cloudType": {
            "description": "Cloud type (Required for config policies). Not case-sensitive. Default is **ALL**.",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "type": "string"
          },
          "complianceMetadata": {
            "description": "List of compliance data. Each item has compliance standard, requirement, and/or section information.",
            "items": {
              "$ref": "#/components/schemas/ComplianceMetadataModel"
            },
            "type": "array"
          },
          "createdBy": {
            "description": "Created by",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Created on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "deleted": {
            "description": "Deleted",
            "readOnly": true,
            "type": "boolean"
          },
          "description": {
            "description": "Policy description",
            "type": "string"
          },
          "enabled": {
            "description": "true=enabled. false=disabled.",
            "type": "boolean"
          },
          "findingTypes": {
            "description": "Finding Type",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "labels": {
            "description": "Labels",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last modified on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Policy name",
            "type": "string"
          },
          "overridden": {
            "description": "Overridden",
            "readOnly": true,
            "type": "boolean"
          },
          "points": {
            "description": "Points",
            "type": "string"
          },
          "policyId": {
            "description": "Policy ID",
            "readOnly": true,
            "type": "string"
          },
          "policySubTypes": {
            "description": "Policy subtype",
            "items": {
              "enum": [
                "run",
                "build",
                "run_and_build",
                "audit",
                "data_classification",
                "dns",
                "malware",
                "network_event",
                "network",
                "ueba",
                "permissions",
                "network_config",
                "identity"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": true
          },
          "policyType": {
            "description": "Policy type. Policy type **anomaly** is read-only.",
            "enum": [
              "config",
              "network",
              "audit_event",
              "anomaly",
              "data",
              "iam",
              "workload_vulnerability",
              "workload_incident",
              "waas_event",
              "attack_path"
            ],
            "type": "string"
          },
          "policyUpi": {
            "description": "Policy UPI",
            "readOnly": true,
            "type": "string"
          },
          "recommendation": {
            "description": "Remediation recommendation",
            "type": "string"
          },
          "remediable": {
            "description": "isRemediable",
            "readOnly": true,
            "type": "boolean"
          },
          "remediation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RemediationModel"
              },
              {
                "description": "Auto remediation info. Available only if policy is remediable."
              }
            ]
          },
          "restrictAlertDismissal": {
            "description": "Restrict alert dismissal",
            "readOnly": true,
            "type": "boolean"
          },
          "riskScore": {
            "$ref": "#/components/schemas/ScoreModel"
          },
          "rule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuleModel"
              },
              {
                "description": "Policy rule (Contains RQL search query or saved search)"
              }
            ]
          },
          "ruleLastModifiedOn": {
            "description": "Rule last modified on",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "severity": {
            "description": "Severity",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "type": "string"
          },
          "systemDefault": {
            "description": "true = Policy is a Prisma Cloud system default policy",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "policyType",
          "rule",
          "severity"
        ],
        "type": "object"
      },
      "RelativeTimeDurationModel": {
        "description": "Model for RelativeTimeDuration",
        "properties": {
          "amount": {
            "description": "Number of time units",
            "format": "int32",
            "type": "integer"
          },
          "unit": {
            "description": "Time unit",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "RelativeTimeRangeConfigModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "description": "Model for RelativeTimeRangeConfig",
            "properties": {
              "relativeTimeType": {
                "description": "Direction in which to count time. Default = BACKWARD",
                "enum": [
                  "BACKWARD",
                  "FORWARD"
                ],
                "type": "string"
              },
              "type": {
                "example": "relative",
                "type": "string"
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RelativeTimeDurationModel"
                  },
                  {
                    "description": "Time range object"
                  }
                ]
              }
            },
            "required": [
              "value"
            ],
            "type": "object"
          }
        ]
      },
      "RemediationAction": {
        "description": "Action for remediation for data policy.",
        "properties": {
          "operation": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemediationCliModel": {
        "description": "Model for Remediation Command",
        "properties": {
          "alertIdVsCliScript": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of alert ID to CLI script",
            "type": "object"
          },
          "cliDescription": {
            "description": "CLI script description",
            "type": "string"
          },
          "cliScript": {
            "description": "CLI script to resolve an alert",
            "type": "string"
          },
          "scriptImpact": {
            "description": "CLI script impact",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemediationModel": {
        "description": "Model for Remediation",
        "properties": {
          "actions": {
            "description": "Policy Action",
            "items": {
              "$ref": "#/components/schemas/RemediationAction"
            },
            "type": "array"
          },
          "cliScriptTemplate": {
            "description": "CLI Script Template",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequireDismissalNoteConfigModel": {
        "description": "Model for Require Dismissal Note Config",
        "properties": {
          "requireDismissalNote": {
            "description": "Require Dismissal Note",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RiskDetailModel": {
        "description": "Model for Risk Detail",
        "properties": {
          "policyScores": {
            "items": {
              "$ref": "#/components/schemas/PolicyRiskScoreModel"
            },
            "type": "array"
          },
          "rating": {
            "description": "Rating",
            "type": "string"
          },
          "riskScore": {
            "$ref": "#/components/schemas/ScoreModel"
          },
          "score": {
            "description": "Score",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RuleCriteria": {
        "description": "Criteria for Rule",
        "properties": {
          "classificationResult": {
            "description": "Data policy. Required for DLP rule criteria.",
            "type": "string"
          },
          "exposure": {
            "description": "File exposure",
            "enum": [
              "private",
              "public",
              "conditional"
            ],
            "type": "string"
          },
          "extension": {
            "description": "File extensions",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "RuleModel": {
        "description": "Model for Rule",
        "properties": {
          "apiName": {
            "description": "API name",
            "readOnly": true,
            "type": "string"
          },
          "cloudAccount": {
            "description": "Cloud account",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "readOnly": true,
            "type": "string"
          },
          "criteria": {
            "description": "Saved search ID that defines the rule criteria.",
            "type": "string"
          },
          "dataCriteria": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuleCriteria"
              },
              {
                "description": "Rule criteria for DLP data policy"
              }
            ]
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Parameters (e.g. {\"savedSearch\": \"true\"})",
            "type": "object"
          },
          "resourceIdPath": {
            "description": "Resource ID path",
            "readOnly": true,
            "type": "string"
          },
          "resourceType": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Type of rule or RQL query",
            "enum": [
              "Config",
              "Network",
              "AuditEvent",
              "DLP",
              "IAM",
              "NetworkConfig"
            ],
            "type": "string"
          }
        },
        "required": [
          "criteria",
          "name",
          "parameters",
          "type"
        ],
        "type": "object"
      },
      "ScoreModel": {
        "description": "Model for Score",
        "properties": {
          "maxScore": {
            "description": "Max Score",
            "format": "int64",
            "type": "integer"
          },
          "score": {
            "description": "Score",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeModel": {
        "description": "Model for Time",
        "properties": {
          "endTime": {
            "description": "End timestamp",
            "format": "int64",
            "type": "integer"
          },
          "startTime": {
            "description": "Start timestamp",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeRangeConfigModel": {
        "description": "See the [Time Range Model](/prisma-cloud/api/cspm/api-time-range-model) for details.\n",
        "discriminator": {
          "mapping": {
            "absolute": "#/components/schemas/AbsoluteTimeRangeConfigModel",
            "relative": "#/components/schemas/RelativeTimeRangeConfigModel",
            "to_now": "#/components/schemas/ToNowTimeRangeConfigModel"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/RelativeTimeRangeConfigModel"
          },
          {
            "$ref": "#/components/schemas/AbsoluteTimeRangeConfigModel"
          },
          {
            "$ref": "#/components/schemas/ToNowTimeRangeConfigModel"
          }
        ],
        "properties": {
          "type": {
            "description": "Time type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "ToNowTimeRangeConfigModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "description": "Model for ToNowTimeRangeConfig",
            "properties": {
              "value": {
                "description": "Time range object",
                "enum": [
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR",
                  "EPOCH",
                  "LOGIN"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "UIFilterModel": {
        "description": "Model for UIFilter",
        "properties": {
          "name": {
            "description": "Name",
            "type": "string"
          },
          "operator": {
            "description": "Operator",
            "enum": [
              "="
            ],
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AnomaliesTrustedListEntry": {
        "type": "object",
        "properties": {
          "ipCIDR": {
            "type": "string",
            "description": "IP CIDR Block"
          },
          "resourceID": {
            "type": "string",
            "description": "Resource ID"
          },
          "imageID": {
            "type": "string",
            "description": "Image ID"
          },
          "tagKey": {
            "type": "string",
            "description": "Tag key"
          },
          "tagValue": {
            "type": "string",
            "description": "Tag value"
          },
          "service": {
            "type": "string",
            "description": "Service"
          },
          "port": {
            "type": "string",
            "description": "Port"
          },
          "subject": {
            "type": "string",
            "description": "Subject name"
          },
          "domain": {
            "type": "string",
            "description": "Domain"
          },
          "protocol": {
            "type": "string",
            "description": "Protocol"
          }
        },
        "description": "Trusted list entries"
      },
      "AnomaliesTrustedListSummary": {
        "required": [
          "applicablePolicies",
          "name",
          "trustedListEntries",
          "trustedListType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the trusted list"
          },
          "description": {
            "type": "string",
            "description": "Reason for trusted listing"
          },
          "applicablePolicies": {
            "type": "array",
            "description": "Applicable Policies",
            "items": {
              "type": "string",
              "description": "Applicable Policies"
            }
          },
          "trustedListType": {
            "type": "string",
            "description": "Trusted list type",
            "enum": [
              "ip, resource, image, tag, service, port, subject, domain, protocol"
            ]
          },
          "accountID": {
            "type": "string",
            "description": "Account ID. Default is \"any\".",
            "default": "any"
          },
          "vpc": {
            "type": "string",
            "description": "VPC. Default is \"any\".",
            "default": "any"
          },
          "trustedListEntries": {
            "type": "array",
            "description": "Trusted list entries",
            "items": {
              "$ref": "#/components/schemas/AnomaliesTrustedListEntry"
            }
          }
        },
        "description": "Model for Anomaly Trusted List Request"
      },
      "AnomaliesSettings": {
        "type": "object",
        "properties": {
          "alertDisposition": {
            "type": "string",
            "description": "Alert Disposition Setting",
            "enum": [
              "Aggressive, Moderate, Conservative"
            ]
          },
          "trainingModelThreshold": {
            "type": "string",
            "description": "Training Model Threshold",
            "enum": [
              "Low, Medium, High"
            ]
          },
          "policyName": {
            "type": "string",
            "description": "Policy name"
          },
          "policyDescription": {
            "type": "string",
            "description": "Policy description"
          },
          "alertDispositionDescription": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Alert disposition description"
            },
            "description": "Alert disposition description"
          },
          "trainingModelDescription": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Training model description"
            },
            "description": "Training model description"
          }
        },
        "description": "Model for Anomaly Settings Request"
      },
      "AnomaliesTrustedListSummaryBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Anomalies trusted list ID",
            "format": "int32"
          },
          "customerID": {
            "type": "integer",
            "description": "Customer ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Anomaly name"
          },
          "description": {
            "type": "string",
            "description": "Anomaly description"
          },
          "createdBy": {
            "type": "string",
            "description": "Created by"
          },
          "createdOn": {
            "type": "integer",
            "description": "creation timestamp",
            "format": "int64"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Modified by"
          },
          "modifiedOn": {
            "type": "integer",
            "description": "Modification timestamp",
            "format": "int64"
          },
          "modifiedRoleId": {
            "type": "string",
            "description": "Role ID of user who last modified trusted list"
          },
          "modifiedRoleTypeId": {
            "type": "integer",
            "description": "Role type ID of user who last modified trusted list",
            "format": "int32"
          },
          "createdRoleId": {
            "type": "string",
            "description": "Role ID of user who created trusted list"
          },
          "createdRoleTypeId": {
            "type": "integer",
            "description": "Role type ID of user who created trusted list",
            "format": "int32"
          },
          "applicablePolicies": {
            "type": "array",
            "description": "List of applicable policies",
            "items": {
              "type": "string",
              "description": "List of applicable policies"
            }
          },
          "trustedListType": {
            "type": "string",
            "description": "Trusted list type"
          },
          "accountID": {
            "type": "string",
            "description": "Account ID"
          },
          "accountName": {
            "type": "string",
            "description": "Account name"
          },
          "vpc": {
            "type": "string",
            "description": "Virtual private cloud"
          },
          "trustedListEntries": {
            "type": "array",
            "description": "List of network anomalies in the trusted list",
            "items": {
              "$ref": "#/components/schemas/NetworkAnomaliesTrustedListEntry"
            }
          }
        }
      },
      "NetworkAnomaliesTrustedListEntry": {
        "type": "object",
        "properties": {
          "ipCIDR": {
            "type": "string",
            "description": "IP CIDR block"
          },
          "resourceID": {
            "type": "string",
            "description": "Resource ID"
          },
          "imageID": {
            "type": "string",
            "description": "Image ID"
          },
          "tagKey": {
            "type": "string",
            "description": "Tag key"
          },
          "tagValue": {
            "type": "string",
            "description": "Tag value"
          },
          "service": {
            "type": "string",
            "description": "Service"
          },
          "port": {
            "type": "string",
            "description": "Port"
          },
          "subject": {
            "type": "string",
            "description": "Subject Name"
          },
          "domain": {
            "type": "string",
            "description": "Domain"
          },
          "protocol": {
            "type": "string",
            "description": "Protocol"
          }
        },
        "description": "List of network anomalies in the trusted list"
      },
      "AnomaliesTrustedListTypeEntry": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Trusted list type name"
          },
          "description": {
            "type": "string",
            "description": "Trusted list type description"
          },
          "applicableCategories": {
            "type": "array",
            "description": "List of trusted list type applicable categories",
            "items": {
              "type": "string",
              "description": "List of trusted list type applicable categories"
            }
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          },
          "debugMessage": {
            "type": "string"
          }
        }
      },
      "BulkExporterPage": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "description": "An array that has a maximum of 10 items. Each item in the array is also an array that contains the resource archive ID, cloud account ID, asset deletion date, and optionally a presigned URL for the compressed archive file.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "cb8bad01-fa35-44d0-8d66-cd510d2d2fa2",
                  "description": "Unique ID of the resource archive."
                },
                "cloudAccountId": {
                  "type": "string",
                  "example": "sample-accountid-1",
                  "description": "Cloud account ID of the assets included in the resource archive."
                },
                "date": {
                  "type": "string",
                  "example": "2022-04-15",
                  "description": "Date on which the assets that are included in the compressed archive file were deleted."
                },
                "url": {
                  "type": "string",
                  "example": "“https://resource-config-archives.s3.amazonaws.com/resource_config_inactive_resource_archives/prismaId/filename.txt.gz”",
                  "description": "Presigned URL for downloading the compressed archive (.zip) file. This URL is valid for 10 minutes. If the URL expires before you can download the file, you can invoke this endpoint again to get another valid URL."
                }
              }
            }
          },
          "nextPageUrl": {
            "type": "string",
            "example": "/config/api/v1/tenant/801905077827777536/archiveList?nextPageToken=MTY1OTY3NTc4NjQ5M18y&start_date=2022-04-15&end_date=2022-07-15&include_url=true",
            "description": "The URL to retrieve details for the next 10 compressed archive files. You can use this field to get the details for the next 10 compressed archive files.\n"
          }
        }
      },
      "AlertStatus": {
        "properties": {
          "critical": {
            "format": "int64",
            "type": "integer"
          },
          "high": {
            "format": "int64",
            "type": "integer"
          },
          "informational": {
            "format": "int64",
            "type": "integer"
          },
          "low": {
            "format": "int64",
            "type": "integer"
          },
          "medium": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DecoratedResourceInfo": {
        "description": "Model for resource info and status list",
        "properties": {
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountName": {
            "description": "Account name",
            "type": "string"
          },
          "alertStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertStatus"
              },
              {
                "description": "Count of alerts found by their policy severity"
              }
            ]
          },
          "appNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "assetType": {
            "description": "Asset Type",
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "type": "string"
          },
          "id": {
            "description": "Resource ID",
            "type": "string"
          },
          "name": {
            "description": "Resource name",
            "type": "string"
          },
          "overallPassed": {
            "description": "All policies passed",
            "type": "boolean"
          },
          "regionId": {
            "description": "Region ID",
            "type": "string"
          },
          "regionName": {
            "description": "Region Name",
            "type": "string"
          },
          "resourceConfigJsonAvailable": {
            "description": "Resource config JSON available",
            "type": "boolean"
          },
          "resourceDetailsAvailable": {
            "description": "Resource details available",
            "type": "boolean"
          },
          "rrn": {
            "description": "RRN",
            "type": "string"
          },
          "scannedPolicies": {
            "description": "Scanned policies",
            "items": {
              "$ref": "#/components/schemas/ScannedPolicyInfo"
            },
            "type": "array"
          },
          "unifiedAssetId": {
            "description": "Asset Id",
            "type": "string"
          },
          "vulnerabilityStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VulnerabilityStatus"
              },
              {
                "description": "Count of vulnerabilities found by their severity"
              }
            ]
          }
        },
        "type": "object"
      },
      "DecoratedResourceInfoResult": {
        "description": "Model for resource info and status list",
        "properties": {
          "nextPageToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceInfoPageOption"
              },
              {
                "description": "Use as page token to return next page of data"
              }
            ]
          },
          "pageSize": {
            "description": "Page size",
            "format": "int64",
            "type": "integer"
          },
          "resources": {
            "description": "List of metadata for resources that match filter",
            "items": {
              "$ref": "#/components/schemas/DecoratedResourceInfo"
            },
            "type": "array"
          },
          "timestamp": {
            "description": "Epoch timestamp",
            "format": "int64",
            "type": "integer"
          },
          "totalMatchedCount": {
            "description": "Total number of filtered resources, both scanned and unscanned",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InventoryFilterSuggestion": {
        "description": "Model for InventoryFilterSuggestion",
        "properties": {
          "account.group": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.account": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.region": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.service": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          }
        },
        "type": "object"
      },
      "ResourceInfoPageOption": {
        "properties": {
          "failedEventOffset": {
            "type": "boolean"
          },
          "lastRowIdx": {
            "format": "int64",
            "type": "integer"
          },
          "limit": {
            "format": "int64",
            "type": "integer"
          },
          "offset": {
            "format": "int64",
            "type": "integer"
          },
          "previousTotalMatchedCount": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ScannedPolicyInfo": {
        "properties": {
          "id": {
            "type": "string"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "passed": {
            "type": "boolean"
          },
          "severity": {
            "enum": [
              "INFORMATIONAL",
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "VulnerabilityStatus": {
        "properties": {
          "critical": {
            "format": "int64",
            "type": "integer"
          },
          "high": {
            "format": "int64",
            "type": "integer"
          },
          "low": {
            "format": "int64",
            "type": "integer"
          },
          "medium": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Problem": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StatusType"
          },
          "instance": {
            "type": "string",
            "format": "uri"
          },
          "type": {
            "type": "string",
            "format": "uri"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "StatusType": {
        "type": "object",
        "properties": {
          "reasonPhrase": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChunkedAssetRequest": {
        "required": [
          "assetId",
          "type"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Unified Asset Id or RRN (Restricted Resource Name)",
            "example": "[rrn:xxx:xx:xx-xx-x:xxx:xxx:x-xxxx or unified-asset-id]"
          },
          "type": {
            "type": "string",
            "description": "Asset Query Type. The enum values are **case-insensitive.**",
            "enum": [
              "EXTERNAL_FINDING",
              "ASSET",
              "ALERTS",
              "RAW_CONFIG",
              "NETWORK",
              "TIMELINE",
              "EXTERNAL_INTEGRATION",
              "ASSET_DATA_INDICATORS",
              "RELATIONSHIPS"
            ]
          },
          "findingType": {
            "type": "array",
            "description": "External Finding Type. Applies to **EXTERNAL_FINDING** Asset query type only. The enum values are **case-insensitive.**",
            "items": {
              "type": "string",
              "description": "External Finding Types",
              "enum": [
                "HOST_VULNERABILITY_CVE",
                "CONTAINER_IMAGE_VULNERABILITY_CVE",
                "COMPLIANCE_CIS",
                "GUARD_DUTY_HOST",
                "GUARD_DUTY_IAM",
                "INSPECTOR_RBA",
                "INSPECTOR_SBP",
                "SERVERLESS_VULNERABILITY",
                "NETWORK_REACHABILITY",
                "PACKAGE_VULNERABILITY",
                "AZURE_SECURITY_CENTER_ALERTS"
              ]
            }
          },
          "riskFactors": {
            "type": "array",
            "description": "External Finding Risk Factors. Applies to **EXTERNAL_FINDING** Asset query type only. The enum values are **case-insensitive.**",
            "items": {
              "type": "string",
              "description": "External finding risk factors",
              "enum": [
                "CRITICAL_SEVERITY",
                "HIGH_SEVERITY",
                "MEDIUM_SEVERITY",
                "HAS_FIX",
                "REMOTE_EXECUTION",
                "DOS",
                "RECENT_VULNERABILITY",
                "EXPLOIT_EXISTS",
                "ATTACK_COMPLEXITY_LOW",
                "ATTACK_VECTOR_NETWORK",
                "REACHABLE_FROM_THE_INTERNET",
                "LISTENING_PORTS",
                "CONTAINER_IS_RUNNING_AS_ROOT",
                "NO_MANDATORY_SECURITY_PROFILE_APPLIED",
                "RUNNING_AS_PRIVILEGED_CONTAINER",
                "PACKAGE_IN_USE",
                "DOS_LOW",
                "DOS_HIGH",
                "EXPLOIT_EXISTS_IN_THE_WILD",
                "EXPLOIT_EXISTS_POC",
                "SENSITIVE_INFORMATION",
                "ROOT_MOUNT",
                "RUNTIME_SOCKET",
                "HOST_ACCESS"
              ]
            }
          },
          "timelineItemId": {
            "type": "string",
            "description": "Timeline Item ID"
          }
        }
      },
      "AlertAttribute": {
        "type": "object",
        "properties": {
          "problem": {
            "$ref": "#/components/schemas/Problem"
          },
          "id": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          }
        }
      },
      "AlertCountTuple": {
        "required": [
          "count",
          "severity"
        ],
        "type": "object",
        "properties": {
          "severity": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "problem": {
            "$ref": "#/components/schemas/Problem"
          }
        }
      },
      "AssetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AssetWrapper"
          },
          "errors": {
            "required": [
              "locations",
              "message",
              "path",
              "pathAsString"
            ],
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "path": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "locations": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "extensions": {
                "$ref": "#/components/schemas/GraphQLErrorExtensions"
              },
              "pathAsString": {
                "type": "string"
              }
            },
            "description": "Error Object."
          }
        },
        "description": "Asset object"
      },
      "AssetWrapper": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/UnifiedAsset"
          }
        },
        "description": "Asset Domain Service Object type."
      },
      "ExternalFinding": {
        "type": "object",
        "properties": {
          "problem": {
            "$ref": "#/components/schemas/Problem"
          },
          "accountId": {
            "type": "string"
          },
          "count": {
            "type": "string"
          },
          "createdOn": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "cveId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalFindingId": {
            "type": "integer",
            "format": "int32"
          },
          "findingId": {
            "type": "string"
          },
          "normalizedName": {
            "type": "string"
          },
          "normalizedNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nvdUrl": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "rawData": {
            "type": "string"
          },
          "regionId": {
            "type": "string"
          },
          "resourceCloudId": {
            "type": "string"
          },
          "resourceId": {
            "type": "integer",
            "format": "int64"
          },
          "resourceUrl": {
            "type": "string"
          },
          "riskFactors": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CRITICAL_SEVERITY",
                "HIGH_SEVERITY",
                "MEDIUM_SEVERITY",
                "HAS_FIX",
                "REMOTE_EXECUTION",
                "DOS",
                "RECENT_VULNERABILITY",
                "EXPLOIT_EXISTS",
                "ATTACK_COMPLEXITY_LOW",
                "ATTACK_VECTOR_NETWORK",
                "REACHABLE_FROM_THE_INTERNET",
                "LISTENING_PORTS",
                "CONTAINER_IS_RUNNING_AS_ROOT",
                "NO_MANDATORY_SECURITY_PROFILE_APPLIED",
                "RUNNING_AS_PRIVILEGED_CONTAINER",
                "PACKAGE_IN_USE",
                "DOS_LOW",
                "DOS_HIGH",
                "EXPLOIT_EXISTS_IN_THE_WILD",
                "EXPLOIT_EXISTS_POC",
                "SENSITIVE_INFORMATION",
                "ROOT_MOUNT",
                "RUNTIME_SOCKET",
                "HOST_ACCESS",
                "critical_severity",
                "high_severity",
                "medium_severity",
                "has_fix",
                "remote_execution",
                "dos",
                "recent_vulnerability",
                "exploit_exists",
                "attack_complexity_low",
                "attack_vector_network",
                "reachable_from_the_internet",
                "listening_ports",
                "container_is_running_as_root",
                "no_mandatory_security_profile_applied",
                "running_as_privileged_container",
                "package_in_use",
                "dos_low",
                "dos_high",
                "exploit_exists_in_the_wild",
                "exploit_exists_poc",
                "sensitive_information",
                "root_mount",
                "runtime_socket",
                "host_access"
              ]
            }
          },
          "rlUpdatedOn": {
            "type": "integer",
            "format": "int64"
          },
          "scanId": {
            "type": "string"
          },
          "score": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "INFORMATIONAL",
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL",
              "ERROR",
              "WARNING",
              "INFO",
              "informational",
              "low",
              "medium",
              "high",
              "critical",
              "error",
              "warning",
              "info"
            ]
          },
          "source": {
            "type": "string",
            "enum": [
              "AWS_INSPECTOR",
              "AWS_GUARD_DUTY",
              "TENABLE",
              "QUALYS",
              "PRISMA_CLOUD",
              "AZURE_SECURITY_CENTER",
              "PRISMACLOUD",
              "INSPECTOR",
              "GUARDDUTY",
              "AZURESECURITYCENTER",
              "aws_inspector",
              "aws_guard_duty",
              "tenable",
              "qualys",
              "prisma_cloud",
              "azure_security_center",
              "prismacloud",
              "inspector",
              "guardduty",
              "azuresecuritycenter"
            ]
          },
          "sourceData": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "NO_ERROR",
              "ERROR",
              "ENABLED",
              "DISABLED",
              "OPEN",
              "DISMISSED",
              "RESOLVED",
              "DESCOPED",
              "RISK_SCORING_ERROR",
              "ACTIVE",
              "CLOSED",
              "SUPPRESSED",
              "pending",
              "no_error",
              "error",
              "enabled",
              "disabled",
              "open",
              "dismissed",
              "resolved",
              "descoped",
              "risk_scoring_error",
              "active",
              "closed",
              "suppressed"
            ]
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "HOST_VULNERABILITY_CVE",
              "CONTAINER_IMAGE_VULNERABILITY_CVE",
              "COMPLIANCE_CIS",
              "GUARD_DUTY_HOST",
              "GUARD_DUTY_IAM",
              "INSPECTOR_RBA",
              "INSPECTOR_SBP",
              "SERVERLESS_VULNERABILITY",
              "NETWORK_REACHABILITY",
              "PACKAGE_VULNERABILITY",
              "AZURE_SECURITY_CENTER_ALERTS",
              "host_vulnerability_cve",
              "container_image_vulnerability_cve",
              "compliance_cis",
              "guard_duty_host",
              "guard_duty_iam",
              "inspector_rba",
              "inspector_sbp",
              "serverless_vulnerability",
              "network_reachability",
              "package_vulnerability",
              "azure_security_center_alerts"
            ]
          },
          "updatedOn": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ExternalIntegrationAttribute": {
        "type": "object",
        "properties": {
          "problem": {
            "$ref": "#/components/schemas/Problem"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "firstSeen": {
            "type": "integer",
            "format": "int64"
          },
          "lastSeen": {
            "type": "integer",
            "format": "int64"
          },
          "rlUpdatedOn": {
            "type": "integer",
            "format": "int64"
          },
          "source": {
            "type": "string"
          },
          "hasAgent": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "assetJson": {
            "type": "object"
          }
        }
      },
      "GraphQLErrorDebugInfo": {
        "required": [
          "subquery",
          "variables"
        ],
        "type": "object",
        "properties": {
          "subquery": {
            "type": "string"
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "GraphQLErrorExtensions": {
        "required": [
          "classification",
          "debugInfo",
          "origin"
        ],
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "INTERNAL",
              "NOT_FOUND",
              "UNAUTHENTICATED",
              "PERMISSION_DENIED",
              "BAD_REQUEST",
              "UNAVAILABLE",
              "FAILED_PRECONDITION"
            ]
          },
          "errorDetail": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "debugInfo": {
            "$ref": "#/components/schemas/GraphQLErrorDebugInfo"
          },
          "classification": {
            "type": "string"
          }
        }
      },
      "NetworkAttribute": {
        "type": "object",
        "properties": {
          "problem": {
            "$ref": "#/components/schemas/Problem"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "access": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "ips": {
            "type": "string"
          },
          "ports": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Relationships": {
        "required": [
          "assetTypeId",
          "problem",
          "pseudoAsset"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "assetType": {
            "type": "string"
          },
          "assetName": {
            "type": "string"
          },
          "externalAssetId": {
            "type": "string"
          },
          "cloudId": {
            "type": "string"
          },
          "cloudName": {
            "type": "string"
          },
          "pseudoAsset": {
            "type": "boolean"
          },
          "region": {
            "type": "string"
          },
          "cloudAccountId": {
            "type": "string"
          },
          "problem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "RenderAttribute": {
        "required": [
          "allowDrillDown",
          "hasExtFindingRiskFactors",
          "hasExternalFinding",
          "hasExternalIntegration",
          "hasNetwork"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string"
          },
          "allowDrillDown": {
            "type": "boolean"
          },
          "hasNetwork": {
            "type": "boolean"
          },
          "hasExternalFinding": {
            "type": "boolean"
          },
          "hasExternalIntegration": {
            "type": "boolean"
          },
          "hasExtFindingRiskFactors": {
            "type": "boolean"
          },
          "problem": {
            "$ref": "#/components/schemas/Problem"
          }
        }
      },
      "ResourceTimelineVulnerability": {
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TimelineAttribute": {
        "type": "object",
        "properties": {
          "problem": {
            "$ref": "#/components/schemas/Problem"
          },
          "id": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "STATE_CHANGE",
              "EVENT",
              "VULNERABILITY",
              "state_change",
              "event",
              "vulnerability"
            ]
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "alertIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstState": {
            "type": "boolean"
          },
          "similarSince": {
            "type": "integer",
            "format": "int64"
          },
          "similarStateCount": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "type": "string"
          },
          "vulnerabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceTimelineVulnerability"
            }
          },
          "previousStateId": {
            "type": "string"
          },
          "discoveredTs": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UnifiedAsset": {
        "required": [
          "deleted"
        ],
        "type": "object",
        "properties": {
          "problem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Problem"
            }
          },
          "id": {
            "type": "string"
          },
          "prismaId": {
            "type": "string"
          },
          "appName": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "externalAssetId": {
            "type": "string"
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "cloudType": {
            "type": "string",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER",
              "IBM",
              "all",
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci",
              "other",
              "ibm"
            ]
          },
          "createdTs": {
            "type": "integer",
            "format": "int64"
          },
          "insertTs": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "object"
          },
          "dynamicData": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "regionId": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          },
          "riskGrade": {
            "type": "string"
          },
          "altAssetId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stateId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "vpcId": {
            "type": "string"
          },
          "vpcExternalAssetId": {
            "type": "string"
          },
          "vpcName": {
            "type": "string"
          },
          "tags": {
            "type": "object"
          },
          "relationshipCounts": {
            "type": "integer",
            "format": "int32"
          },
          "vulnerabilityCounts": {
            "type": "object"
          },
          "accountGroup": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "assetType": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "alertsCount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertCountTuple"
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertAttribute"
            }
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationships"
            }
          },
          "finding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalFinding"
            }
          },
          "externalIntegration": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIntegrationAttribute"
            }
          },
          "network": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetworkAttribute"
            }
          },
          "renderAttribute": {
            "$ref": "#/components/schemas/RenderAttribute"
          },
          "timeline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimelineAttribute"
            }
          }
        },
        "description": "Asset Domain Service Object type."
      },
      "AssetInventoryGroupedAggregate": {
        "description": "Model for Grouped Inventory Detail on Asset Inventory Dashboard API",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "description": "Name of cloud account",
            "type": "string"
          },
          "allowDrillDown": {
            "description": "Possible to drill down further",
            "type": "boolean"
          },
          "cloudTypeName": {
            "description": "Name of cloud type",
            "type": "string"
          },
          "criticalSeverityFailedResources": {
            "description": "The number of resources whose highest policy failure is **critical**",
            "format": "int64",
            "type": "integer"
          },
          "criticalVulnerabilityFailedResources": {
            "description": "The number of resources that failed with critical vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "failedResources": {
            "description": "Number of failed resources",
            "format": "int64",
            "type": "integer"
          },
          "highSeverityFailedResources": {
            "description": "The number of resources that failed high severity policies",
            "format": "int64",
            "type": "integer"
          },
          "highVulnerabilityFailedResources": {
            "description": "The number of resources that failed with high vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "informationalSeverityFailedResources": {
            "description": "The number of resources whose highest policy failure is **informational**",
            "format": "int64",
            "type": "integer"
          },
          "lowSeverityFailedResources": {
            "description": "The number of resources whose highest policy failure is **low**",
            "format": "int64",
            "type": "integer"
          },
          "lowVulnerabilityFailedResources": {
            "description": "The number of resources that failed with low vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "mediumSeverityFailedResources": {
            "description": "The number of resources whose highest policy failure is **medium**",
            "format": "int64",
            "type": "integer"
          },
          "mediumVulnerabilityFailedResources": {
            "description": "The number of resources that failed with medium vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "passedResources": {
            "description": "Number of passed resources",
            "format": "int64",
            "type": "integer"
          },
          "regionName": {
            "description": "Name of cloud region",
            "type": "string"
          },
          "resourceTypeName": {
            "description": "Name of resource type",
            "type": "string"
          },
          "serviceName": {
            "description": "Name of cloud service",
            "type": "string"
          },
          "totalResources": {
            "description": "Total number of Compliance Standard/Requirement/Section scanned resources",
            "format": "int64",
            "type": "integer"
          },
          "totalVulnerabilityFailedResources": {
            "description": "The total number of resources that failed with vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "unscannedResources": {
            "description": "Total number of unscanned resources",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AssetInventorySnapshot": {
        "description": "Model for Asset Inventory Snapshot",
        "properties": {
          "groupedAggregates": {
            "description": "List of grouped asset inventory aggregates",
            "items": {
              "$ref": "#/components/schemas/AssetInventoryGroupedAggregate"
            },
            "type": "array"
          },
          "requestedTimestamp": {
            "description": "Requested timestamp",
            "format": "int64",
            "type": "integer"
          },
          "summary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetInventorySummary"
              },
              {
                "description": "Asset Inventory summary"
              }
            ]
          },
          "timestamp": {
            "description": "Timestamp",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AssetInventorySummary": {
        "description": "Model for Asset Inventory Summary",
        "properties": {
          "criticalSeverityFailedResources": {
            "description": "The number of resources that failed critical severity policies",
            "format": "int64",
            "type": "integer"
          },
          "criticalVulnerabilityFailedResources": {
            "description": "The number of resources that failed with critical vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "failedResources": {
            "description": "Number of failed resources",
            "format": "int64",
            "type": "integer"
          },
          "highSeverityFailedResources": {
            "description": "The number of resources that failed high severity policies",
            "format": "int64",
            "type": "integer"
          },
          "highVulnerabilityFailedResources": {
            "description": "The number of resources that failed with high vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "informationalSeverityFailedResources": {
            "description": "The number of resources that failed informational severity policies",
            "format": "int64",
            "type": "integer"
          },
          "lowSeverityFailedResources": {
            "description": "The number of resources that failed low severity policies",
            "format": "int64",
            "type": "integer"
          },
          "lowVulnerabilityFailedResources": {
            "description": "The number of resources that failed with low vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "mediumSeverityFailedResources": {
            "description": "The number of resources that failed medium severity policies",
            "format": "int64",
            "type": "integer"
          },
          "mediumVulnerabilityFailedResources": {
            "description": "The number of resources that failed with medium vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "passedResources": {
            "description": "Number of passed resources",
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "description": "Timestamp",
            "format": "int64",
            "type": "integer"
          },
          "totalResources": {
            "description": "Total number of resources",
            "format": "int64",
            "type": "integer"
          },
          "totalVulnerabilityFailedResources": {
            "description": "The total number of resources that failed with vulnerabilities",
            "format": "int64",
            "type": "integer"
          },
          "unscannedResources": {
            "description": "Total number of unscanned resources",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InventoryV2FilterSuggestion": {
        "description": "Model for InventoryV2FilterSuggestion",
        "properties": {
          "account.group": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "asset.class": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.account": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.region": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.service": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "cloud.type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.complianceRequirement": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.complianceSection": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.complianceStandard": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "resource.group": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "resource.type": {
            "$ref": "#/components/schemas/FilterSuggestion"
          }
        },
        "type": "object"
      },
      "RedLockAuditLogBeanModel": {
        "description": "Model for RedLockAuditLogBean",
        "properties": {
          "action": {
            "type": "string"
          },
          "actionType": {
            "description": "Action Type",
            "type": "string"
          },
          "ipAddress": {
            "description": "IP Address",
            "type": "string"
          },
          "resourceName": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "result": {
            "type": "string"
          },
          "timestamp": {
            "description": "Timestamp",
            "format": "int64",
            "type": "integer"
          },
          "user": {
            "description": "User",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AWSOrgConfig": {
        "description": "Model for AWS Org Config",
        "properties": {
          "accountId": {
            "description": "AWS account ID",
            "type": "string"
          },
          "masterCftLandingPage": {
            "description": "AWS master CFT landing page",
            "type": "string"
          },
          "masterCftTemplate": {
            "description": "AWS member CFT template",
            "type": "string"
          },
          "masterCftUrl": {
            "description": "AWS master CFT URL",
            "type": "string"
          },
          "masterExternalId": {
            "description": "AWS master external ID, which establishes trust between your Prisma Cloud and AWS accounts",
            "type": "string"
          },
          "masterRoleArn": {
            "description": "AWS master role ARN for your Prisma Cloud role",
            "type": "string"
          },
          "memberCftTemplate": {
            "description": "AWS member CFT template",
            "type": "string"
          },
          "memberCftUrl": {
            "description": "AWS member CFT URL",
            "type": "string"
          },
          "memberExternalId": {
            "description": "AWS member external ID",
            "type": "string"
          },
          "memberRoleName": {
            "description": "AWS member role name",
            "type": "string"
          },
          "scanOption": {
            "description": "Scan option",
            "enum": [
              "Full",
              "Custom"
            ],
            "type": "string"
          },
          "snsEndpointUrl": {
            "description": "SNS subscription URL",
            "type": "string"
          },
          "snsTopicArn": {
            "description": "SNS topic ARN for notification of storage object changes",
            "type": "string"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "required": [
          "masterCftLandingPage",
          "masterCftTemplate",
          "masterCftUrl",
          "masterExternalId",
          "masterRoleArn",
          "memberCftTemplate",
          "memberCftUrl",
          "memberExternalId",
          "memberRoleName",
          "scanOption",
          "snsEndpointUrl",
          "snsTopicArn",
          "storageUUID"
        ],
        "type": "object"
      },
      "AWSOrgRequestConfigModel": {
        "description": "Model for AWS Org Request Config",
        "properties": {
          "accountId": {
            "description": "AWS account ID",
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "enum": [
              "AWS"
            ],
            "type": "string"
          },
          "masterExternalId": {
            "description": "AWS master external ID, which establishes trust between your Prisma Cloud and AWS accounts",
            "type": "string"
          },
          "masterRoleArn": {
            "description": "AWS master role ARN for your Prisma Cloud role",
            "type": "string"
          },
          "memberExternalId": {
            "description": "AWS member external ID",
            "type": "string"
          },
          "memberRoleName": {
            "description": "AWS memeber role name",
            "type": "string"
          },
          "scanOption": {
            "description": "Scan option",
            "enum": [
              "Full",
              "Custom"
            ],
            "type": "string"
          },
          "snsTopicArn": {
            "description": "SNS topic ARN for notification of storage object changes",
            "type": "string"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "cloudType",
          "masterExternalId",
          "masterRoleArn",
          "memberExternalId",
          "memberRoleName",
          "scanOption",
          "snsTopicArn",
          "storageUUID"
        ],
        "type": "object"
      },
      "AWSOrgStatusConfigModel": {
        "description": "Model for AWS Org Status Config",
        "properties": {
          "accountId": {
            "description": "AWS account ID",
            "type": "string"
          },
          "externalId": {
            "description": "AWS master external ID",
            "type": "string"
          },
          "roleArn": {
            "description": "AWS master role ARN",
            "type": "string"
          },
          "snsTopicArn": {
            "description": "SNS topic ARN for notification of storage object changes",
            "type": "string"
          },
          "tenantId": {
            "description": "Tenant Id",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "externalId",
          "roleArn",
          "snsTopicArn"
        ],
        "type": "object"
      },
      "AWSOrgStatusResponseModel": {
        "description": "Model for AWS Org Status Response",
        "properties": {
          "isSuccess": {
            "description": "Boolean indicating if the operation was a success",
            "type": "boolean"
          },
          "message": {
            "description": "List of error messages if the status check failed",
            "type": "string"
          },
          "sections": {
            "description": "List indicating the location of failure",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccountGroupInfo": {
        "description": "Account group info linked to a cloud account",
        "properties": {
          "autoCreated": {
            "description": "auto created",
            "readOnly": true,
            "type": "boolean"
          },
          "groupId": {
            "description": "group id",
            "readOnly": true,
            "type": "string"
          },
          "groupName": {
            "description": "Group name",
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccountListRequestModel": {
        "description": "Model for AccountListRequest",
        "properties": {
          "accountGroupIds": {
            "description": "List of account group IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "accountIds": {
            "description": "List of account IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "aggregate": {
            "description": "true = aggregate",
            "type": "boolean"
          },
          "cloudType": {
            "type": "string"
          },
          "csvHeaderRequired": {
            "type": "boolean"
          },
          "filterKey": {
            "description": "Filter key",
            "type": "string"
          },
          "filterValue": {
            "description": "Filter value",
            "type": "string"
          },
          "groupBy": {
            "description": "Group items by this value",
            "type": "string"
          },
          "limit": {
            "description": "Limit of items per request. Default is 1000.",
            "format": "int32",
            "type": "integer"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time range"
              }
            ]
          }
        },
        "required": [
          "timeRange"
        ],
        "type": "object"
      },
      "AccountStatusMessage": {
        "properties": {
          "message": {
            "type": "string"
          },
          "staticMessage": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AlibabaCloudAccountModel": {
        "description": "Model for Alibaba Cloud Account",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudAccountStatus": {
            "description": "Internal use only",
            "readOnly": true,
            "type": "object"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "ramArn": {
            "description": "Ram ARN",
            "type": "string"
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AwsCloudAccountModel": {
        "description": "Model for AWS Cloud Account",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "assumeRoleAccount": {
            "description": "Internal use only",
            "readOnly": true,
            "type": "string"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "eventbridgeRuleNamePrefix": {
            "description": "Amazon Event Bridge Rule Name",
            "type": "string"
          },
          "externalId": {
            "description": "External ID",
            "readOnly": true,
            "type": "string"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "roleArn": {
            "description": "Role ARN",
            "type": "string"
          },
          "storageScanConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageScanConfigModel"
              },
              {
                "description": "Storage Scan Configurations"
              }
            ]
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AwsCloudAccountRequestModel": {
        "description": "Model containing the request for AWS Standalone and Org Cloud Account",
        "properties": {
          "accountId": {
            "description": "AWS Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "organization",
              "account"
            ],
            "type": "string"
          },
          "defaultAccountGroupId": {
            "description": "*Applicable only for accountType: **organization**.*\n\n This is the Default Account Group ID for the AWS organization and its member accounts.",
            "type": "string"
          },
          "enabled": {
            "description": "Cloud Account Status. Whether or not the account is enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features to be enabled and/ or disabled. To get a list of all the supported features, call [Features API](/prisma-cloud/api/cspm/fetch-supported-features/)",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Account Group Ids for this account",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "hierarchySelection": {
            "description": "*Applicable only for accountType: **organization**.*\n\n Include/Exclude a list of AWS Organization Units (OU), AWS accounts, and AWS Organizations to onboard under this organization.",
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            },
            "type": "array"
          },
          "name": {
            "description": "Name to be used for the account on the Prisma Cloud platform (must be unique)",
            "type": "string"
          },
          "roleArn": {
            "description": "AWS Role ARN",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "accountType",
          "name",
          "roleArn"
        ],
        "type": "object"
      },
      "AwsCloudOrgModel": {
        "description": "Model for AWS Cloud Org",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "assumeRoleAccount": {
            "description": "Internal use only",
            "readOnly": true,
            "type": "string"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "defaultAccountGroupId": {
            "description": "Default Account Group",
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "eventbridgeRuleNamePrefix": {
            "description": "Amazon Event Bridge Rule Name",
            "type": "string"
          },
          "externalId": {
            "description": "External ID",
            "readOnly": true,
            "type": "string"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "hierarchySelection": {
            "description": "List of selected resources for hierarchy selection",
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            },
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "memberExternalId": {
            "description": "External Id in Member Accounts",
            "type": "string"
          },
          "memberRoleName": {
            "description": "Role Name in Member Accounts",
            "type": "string"
          },
          "memberRoleStatus": {
            "description": "Role Creation Status in Member Accounts",
            "type": "boolean"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "roleArn": {
            "description": "Role ARN",
            "type": "string"
          },
          "storageScanConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageScanConfigModel"
              },
              {
                "description": "Storage Scan Configurations"
              }
            ]
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AwsListChildrenApiResponseModel": {
        "description": "Model for AwsListChildrenApiResponse",
        "properties": {
          "accountNextPageToken": {
            "description": "Next page token for account",
            "type": "string"
          },
          "ouNextPageToken": {
            "description": "Next page token for Organizational Unit",
            "type": "string"
          },
          "response": {
            "description": "List of node info",
            "items": {
              "$ref": "#/components/schemas/AwsOrgTreeNode"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AwsNodeModel": {
        "description": "Model for AncestorApiResponse",
        "properties": {
          "ancestors": {
            "description": "List of ancestors",
            "items": {
              "$ref": "#/components/schemas/AwsOrgTreeNode"
            },
            "type": "array"
          },
          "resourceId": {
            "description": "Resource ID",
            "type": "string"
          },
          "responseCode": {
            "description": "Response code",
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "Status",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AwsOrgAncestorRequestModel": {
        "description": "Model containing the request for AWS Org Ancestors",
        "properties": {
          "accountId": {
            "description": "AWS Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "organization"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Cloud Account Status. Whether or not the account is enabled",
            "type": "boolean"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "resourceIds": {
            "description": "Array of resource IDs (account IDs and/or OU IDs)",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "roleArn": {
            "description": "AWS Role ARN",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "accountType",
          "resourceIds",
          "roleArn"
        ],
        "type": "object"
      },
      "AwsOrgChildrenRequestModel": {
        "description": "Model containing the request for AWS Org Children",
        "properties": {
          "accountId": {
            "description": "AWS Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "organization"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Cloud Account Status. Whether or not the account is enabled",
            "type": "boolean"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "roleArn": {
            "description": "AWS Role ARN",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "accountType",
          "roleArn"
        ],
        "type": "object"
      },
      "AwsOrgTreeNode": {
        "description": "Model for Aws Org Tree Node",
        "properties": {
          "displayName": {
            "description": "Display name",
            "type": "string"
          },
          "hasChild": {
            "description": "Has Child",
            "enum": [
              true,
              false
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Node ID",
            "type": "string"
          },
          "parent": {
            "description": "Parent",
            "type": "string"
          },
          "type": {
            "description": "Node type",
            "enum": [
              "ORG",
              "FOLDER",
              "PROJECT",
              "SUBSCRIPTION",
              "MANAGEMENT_GROUP",
              "TENANT",
              "ACCOUNT",
              "OU"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureAncestorsModel": {
        "description": "Model for Azure GetAncestors API Response",
        "properties": {
          "ancestors": {
            "description": "List of ancestors",
            "items": {
              "$ref": "#/components/schemas/AzureHierarchyNodeModel"
            },
            "type": "array"
          },
          "resourceId": {
            "description": "Resource ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureHierarchyNodeModel": {
        "description": "Model for AzureNode in the Tenant Hierarchy",
        "properties": {
          "displayName": {
            "description": "Display name",
            "type": "string"
          },
          "hasChild": {
            "description": "true = Has child",
            "type": "boolean"
          },
          "id": {
            "description": "Node ID",
            "type": "string"
          },
          "parent": {
            "description": "Parent",
            "type": "string"
          },
          "type": {
            "description": "Node type",
            "enum": [
              "TENANT",
              "MANAGEMENT_GROUP",
              "ACCOUNT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureSubscriptionModel": {
        "description": "Model for Azure Cloud Account",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureTenantModel": {
        "description": "Model for Azure Tenant",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudAccount": {
        "properties": {
          "accountId": {
            "description": "GCP organization resource ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ORGANIZATION"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudAccountConfigStatusView": {
        "description": "Model for Cloud Account Config Status View",
        "properties": {
          "message": {
            "description": "Message with details about service status",
            "type": "string"
          },
          "name": {
            "description": "Prisma Cloud service",
            "type": "string"
          },
          "remediation": {
            "description": "Suggestions for remediation",
            "type": "string"
          },
          "status": {
            "description": "Service status",
            "type": "string"
          },
          "subComponents": {
            "items": {
              "$ref": "#/components/schemas/CloudAccountConfigStatusView"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CloudAccountIdentity": {
        "description": "Model for Cloud Account Identity",
        "properties": {
          "cloudType": {
            "description": "Cloud Type of Account/ Project/ Master Service Account/ Organization",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "type": "string"
          },
          "id": {
            "description": "ID of Account/ Project/ Master Service Account/ Organization",
            "type": "string"
          },
          "name": {
            "description": "Name of Account/ Project/ Master Service Account/ Organization",
            "type": "string"
          },
          "parentAccountName": {
            "description": "Parent Org Name of Account/ Project",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudAccountModel": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/AwsCloudAccountModel"
          },
          {
            "$ref": "#/components/schemas/AwsCloudOrgModel"
          },
          {
            "$ref": "#/components/schemas/AzureSubscriptionModel"
          },
          {
            "$ref": "#/components/schemas/AzureTenantModel"
          },
          {
            "$ref": "#/components/schemas/GcpCloudProjectModel"
          },
          {
            "$ref": "#/components/schemas/GcpCloudOrgModel"
          },
          {
            "$ref": "#/components/schemas/AlibabaCloudAccountModel"
          },
          {
            "$ref": "#/components/schemas/OciCloudAccountModel"
          }
        ],
        "description": "Model for Cloud Account Interface",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudAccountPatchModel": {
        "description": "Model for Account Group View",
        "properties": {
          "enabled": {
            "description": "Cloud Account Status",
            "enum": [
              false
            ],
            "type": "boolean"
          },
          "groupIds": {
            "description": "Associated Account Group Ids",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "updateChildrenStatus": {
            "description": "Update Children status",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CloudAccountStatus": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusMessage": {
            "$ref": "#/components/schemas/AccountStatusMessage"
          }
        },
        "type": "object"
      },
      "CloudAccountViewModel": {
        "description": "Model for Cloud Account View",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "groups": {
            "description": "Groups",
            "items": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "numberOfChildAccounts": {
            "format": "int32",
            "type": "integer"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Account Config Status",
            "type": "string"
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Credentials": {
        "description": "The content of the credentials object is the Service Account Key for your Google Cloud service account",
        "properties": {
          "auth_provider_x509_cert_url": {
            "type": "string"
          },
          "auth_uri": {
            "type": "string"
          },
          "client_email": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_x509_cert_url": {
            "type": "string"
          },
          "private_key": {
            "type": "string"
          },
          "private_key_id": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "token_uri": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DLPAPIResponse": {
        "description": "Model for response from API",
        "properties": {
          "detail": {
            "description": "Exception details",
            "type": "string"
          },
          "message": {
            "description": "API response",
            "type": "string"
          },
          "name": {
            "description": "Exception name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Feature": {
        "description": "Model for Feature",
        "properties": {
          "name": {
            "description": "name",
            "example": "Remediation",
            "type": "string"
          },
          "state": {
            "description": "state",
            "enum": [
              "enabled",
              "disabled"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GcpCloudOrgModel": {
        "description": "Model for GCP Cloud Account",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GcpCloudProjectModel": {
        "description": "Model for GCP Cloud Account",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GcpNodeModel": {
        "description": "Model for GcpNode",
        "properties": {
          "displayName": {
            "description": "Display name",
            "type": "string"
          },
          "hasChild": {
            "description": "true = Has child",
            "readOnly": true,
            "type": "boolean"
          },
          "id": {
            "description": "Node ID",
            "type": "string"
          },
          "parent": {
            "description": "Parent",
            "type": "string"
          },
          "type": {
            "description": "Node type",
            "enum": [
              "ORG",
              "FOLDER",
              "PROJECT",
              "SUBSCRIPTION",
              "MANAGEMENT_GROUP",
              "TENANT",
              "ACCOUNT",
              "OU"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GcpResourceControllerRequestModel": {
        "description": "Model containing the request for GCP Resources",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credentials"
          }
        },
        "type": "object"
      },
      "HierarchySelection": {
        "description": "Model for HierarchySelection",
        "properties": {
          "displayName": {
            "description": "Display name",
            "example": "Root",
            "type": "string"
          },
          "nodeType": {
            "description": "Node type",
            "enum": [
              "ORG",
              "FOLDER",
              "PROJECT",
              "SUBSCRIPTION",
              "MANAGEMENT_GROUP",
              "TENANT",
              "ACCOUNT",
              "OU"
            ],
            "type": "string"
          },
          "resourceId": {
            "description": "Resource ID. \n\nNote you must escape any double quotes in the resource ID with a backslash",
            "example": "root",
            "type": "string"
          },
          "selectionType": {
            "description": "Selection type",
            "enum": [
              "ALL",
              "INCLUDE",
              "EXCLUDE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListChildrenApiResponseModel": {
        "description": "Model for ListChildrenApiResponse",
        "properties": {
          "folderNextPageToken": {
            "description": "Next page token for folder",
            "type": "string"
          },
          "projectNextPageToken": {
            "description": "Next page token for project",
            "type": "string"
          },
          "response": {
            "description": "List of node info",
            "items": {
              "$ref": "#/components/schemas/GcpNodeModel"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OciCloudAccountModel": {
        "description": "Model for OCI Cloud Account",
        "properties": {
          "accountGroupInfos": {
            "description": "Account group details of groups associated with this account",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            },
            "type": "array"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "ACCOUNT",
              "MASTER_SERVICE_ACCOUNT",
              "COMPARTMENT",
              "ORGANIZATION",
              "TENANT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "addedOn": {
            "description": "Added On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "associatedAccountGroupsCount": {
            "description": "Associated Account Groups Count with this cloud account",
            "format": "int32",
            "type": "integer"
          },
          "cloudAccountOwner": {
            "description": "Cloud account owner",
            "type": "string"
          },
          "cloudAccountOwnerCount": {
            "description": "Cloud account owner count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "cloudAccountStatus": {
            "description": "Internal use only",
            "readOnly": true,
            "type": "object"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "OTHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "defaultAccountGroupId": {
            "description": "Default Account Group Id",
            "type": "string"
          },
          "deploymentType": {
            "description": "Deployment Type",
            "enum": [
              "AZURE",
              "AZURE_GOVERNMENT",
              "AZURE_CHINA",
              "AWS",
              "AWS_GOVERNMENT",
              "AWS_CHINA",
              "OCI",
              "OCI_GOVERNMENT",
              "OCI_CHINA",
              "GCP",
              "GCP_GOVERNMENT",
              "GCP_CHINA",
              "ALIBABA_CLOUD",
              "ALIBABA_CLOUD_GOVERNMENT",
              "ALIBABA_CLOUD_CHINA",
              "ALIBABA_CLOUD_FINANCE"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Group Ids",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "groupName": {
            "description": "Group Name",
            "type": "string"
          },
          "homeRegion": {
            "description": "Home Region",
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time account was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "parentAccountId": {
            "type": "string"
          },
          "policyName": {
            "description": "Policy Name",
            "type": "string"
          },
          "protectionMode": {
            "description": "Protection Mode",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ],
            "type": "string"
          },
          "storageScanEnabled": {
            "description": "Storage Scan Enabled",
            "type": "boolean"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          },
          "userName": {
            "description": "User Name",
            "type": "string"
          },
          "userOcid": {
            "description": "User OCID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Resources": {
        "description": "Resources Model for Identifying Ancestors",
        "properties": {
          "resourceIds": {
            "description": "Array of resource IDs (Subscription and/or Management Group IDs)",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "StorageScanConfigModel": {
        "description": "Model for AWS Storage Scan Configuration",
        "properties": {
          "buckets": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Selected List of S3 Buckets for forward and backward scan",
            "type": "object"
          },
          "scanOption": {
            "description": "Storage Scan Option",
            "enum": [
              "Realtime",
              "Custom",
              "Full",
              "Historical"
            ],
            "type": "string"
          },
          "snsTopicArn": {
            "description": "SNS Topic ARN created on DLP SNS topic",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TerraformProvisionerRequest": {
        "description": "Model for Generate Terraform Script API",
        "properties": {
          "accountId": {
            "description": "OCID of the OCI tenancy",
            "type": "string"
          },
          "generateKeys": {
            "description": "true = Generate keys. Default is false. Generated keys are valid for 24 hours.",
            "type": "boolean"
          },
          "groupName": {
            "description": "OCI identity group name",
            "type": "string"
          },
          "policyName": {
            "description": "OCI identity policy name",
            "type": "string"
          },
          "userName": {
            "description": "OCI identity user name",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "groupName",
          "policyName",
          "userName"
        ],
        "type": "object"
      },
      "ComplianceDetail": {
        "description": "Model for Compliance Detail on Posture API",
        "properties": {
          "assignedPolicies": {
            "description": "Number of policies assigned to the Compliance Standard/Requirement/Section",
            "format": "int32",
            "type": "integer"
          },
          "criticalSeverityFailedResources": {
            "description": "Number of Compliance Standard/Requirement/Section Scanned Resources failing critical severity policies",
            "format": "int64",
            "type": "integer"
          },
          "default": {
            "description": "Is System Default",
            "type": "boolean"
          },
          "description": {
            "description": "Description of Compliance Standard/Requirement/Section",
            "type": "string"
          },
          "failedResources": {
            "description": "Number of failing Compliance Standard/Requirement/Section Scanned Resources",
            "format": "int64",
            "type": "integer"
          },
          "highSeverityFailedResources": {
            "description": "Number of Compliance Standard/Requirement/Section Scanned Resources failing high severity policies",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "ID of Compliance Standard/Requirement/Section",
            "type": "string"
          },
          "informationalSeverityFailedResources": {
            "description": "Number of Compliance Standard/Requirement/Section Scanned Resources failing informational severity policies",
            "format": "int64",
            "type": "integer"
          },
          "lowSeverityFailedResources": {
            "description": "Number of Compliance Standard/Requirement/Section Scanned Resources failing low severity policies",
            "format": "int64",
            "type": "integer"
          },
          "mediumSeverityFailedResources": {
            "description": "Number of Compliance Standard/Requirement/Section Scanned Resources failing medium severity policies",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name of Compliance Standard/Requirement/Section",
            "type": "string"
          },
          "passedResources": {
            "description": "Number of Passing Compliance Standard/Requirement/Section Scanned Resources",
            "format": "int64",
            "type": "integer"
          },
          "totalResources": {
            "description": "Total number of Compliance Standard/Requirement/Section Scanned Resources",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CompliancePosture": {
        "description": "Model for Compliance Posture",
        "properties": {
          "complianceDetails": {
            "description": "List of compliance detail",
            "items": {
              "$ref": "#/components/schemas/ComplianceDetail"
            },
            "type": "array"
          },
          "requestedTimestamp": {
            "description": "Requested timestamp",
            "format": "int64",
            "type": "integer"
          },
          "requirementSummaries": {
            "description": "List of requirement summaries",
            "items": {
              "$ref": "#/components/schemas/RequirementSummary"
            },
            "type": "array"
          },
          "summary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PostureSummary"
              },
              {
                "description": "Posture summary"
              }
            ]
          },
          "timestamp": {
            "description": "Timestamp",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CompliancePostureFilterSuggestion": {
        "description": "Model for CompliancePostureFilterSuggestion",
        "properties": {
          "account.group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Account group"
              }
            ]
          },
          "cloud.account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Cloud account"
              }
            ]
          },
          "cloud.region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Cloud region"
              }
            ]
          },
          "cloud.type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.complianceRequirement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Policy compliance requirement"
              }
            ]
          },
          "policy.complianceSection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Policy compliance section"
              }
            ]
          },
          "policy.complianceStandard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Policy compliance standard"
              }
            ]
          }
        },
        "type": "object"
      },
      "PostureSummary": {
        "description": "Model for Compliance Posture Summary",
        "properties": {
          "criticalSeverityFailedResources": {
            "description": "Number of scanned compliance resources whose highest policy failure is **critical**",
            "format": "int64",
            "type": "integer"
          },
          "failedResources": {
            "description": "Number of failed scanned compliance resources",
            "format": "int64",
            "type": "integer"
          },
          "highSeverityFailedResources": {
            "description": "Number of scanned compliance resources that failed high severity policies",
            "format": "int64",
            "type": "integer"
          },
          "informationalSeverityFailedResources": {
            "description": "Number of scanned compliance resources whose highest policy failure is **informational**",
            "format": "int64",
            "type": "integer"
          },
          "lowSeverityFailedResources": {
            "description": "Number of scanned compliance resources whose highest policy failure is **low**",
            "format": "int64",
            "type": "integer"
          },
          "mediumSeverityFailedResources": {
            "description": "Number of scanned compliance resources whose highest policy failure is **medium**",
            "format": "int64",
            "type": "integer"
          },
          "passedResources": {
            "description": "Number of passed scanned compliance resources",
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "description": "Timestamp",
            "format": "int64",
            "type": "integer"
          },
          "totalResources": {
            "description": "Total number of scanned compliance resources",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RequirementSummary": {
        "description": "Model for Compliance Requirement Summary on Posture API",
        "properties": {
          "id": {
            "description": "Compliance Requirement ID",
            "type": "string"
          },
          "name": {
            "description": "Compliance Requirement name",
            "type": "string"
          },
          "sectionSummaries": {
            "description": "Section Summary list for the compliance requirement",
            "items": {
              "$ref": "#/components/schemas/SectionSummary"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SectionSummary": {
        "description": "Model for Compliance Section Summary on Posture API",
        "properties": {
          "failedResources": {
            "description": "Number of failed compliance section scanned resources",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Compliance section ID",
            "type": "string"
          },
          "name": {
            "description": "Compliance section name",
            "type": "string"
          },
          "passedResources": {
            "description": "Number of passed compliance section scanned resources",
            "format": "int64",
            "type": "integer"
          },
          "totalResources": {
            "description": "Total number of compliance section scanned resources",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ComplianceRequirementModel": {
        "description": "Model for ComplianceRequirement",
        "properties": {
          "complianceId": {
            "description": "Compliance Standard ID",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "createdBy": {
            "description": "Created By",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Created On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "Compliance ID",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last Modified On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Compliance Requirement Name",
            "type": "string"
          },
          "policiesAssignedCount": {
            "description": "Number Of Assigned Policies",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requirementId": {
            "description": "Compliance Requirement Number",
            "type": "string"
          },
          "standardName": {
            "description": "Compliance Standard Name",
            "readOnly": true,
            "type": "string"
          },
          "systemDefault": {
            "description": "System Default",
            "readOnly": true,
            "type": "boolean"
          },
          "viewOrder": {
            "description": "View Order",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": [
          "name",
          "requirementId"
        ],
        "type": "object"
      },
      "ComplianceSectionModel": {
        "description": "Model for ComplianceSection",
        "properties": {
          "associatedPolicyIds": {
            "description": "Associated Policy IDs",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": true
          },
          "createdBy": {
            "description": "Created By",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Created On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "Compliance ID",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "label": {
            "description": "Section Label",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last Modified On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "policiesAssignedCount": {
            "description": "Number Of Assigned Policies",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requirementId": {
            "description": "Compliance Requirement ID",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "requirementName": {
            "description": "Compliance Requirement Name",
            "readOnly": true,
            "type": "string"
          },
          "sectionId": {
            "description": "Compliance Section ID",
            "type": "string"
          },
          "standardName": {
            "description": "Compliance Standard Name",
            "readOnly": true,
            "type": "string"
          },
          "systemDefault": {
            "description": "System Default",
            "readOnly": true,
            "type": "boolean"
          },
          "viewOrder": {
            "description": "View Order",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ComplianceStandardModel": {
        "description": "Model for ComplianceStandard",
        "properties": {
          "cloudType": {
            "description": "Cloud Type (determined based on policies assigned)",
            "items": {
              "enum": [
                "ALL",
                "AWS",
                "AZURE",
                "GCP",
                "ALIBABA_CLOUD",
                "OCI",
                "IBM"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": true
          },
          "createdBy": {
            "description": "Created By",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Created On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "Compliance ID",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last Modified On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Compliance Standard Name",
            "type": "string"
          },
          "policiesAssignedCount": {
            "description": "Number Of Assigned Policies",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "systemDefault": {
            "description": "System Default",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "CountByExposure": {
        "description": "Model for DLP Exposure count",
        "properties": {
          "conditional": {
            "description": "Conditional exposure count",
            "format": "int64",
            "type": "integer"
          },
          "private": {
            "description": "Private exposure count",
            "format": "int64",
            "type": "integer"
          },
          "public": {
            "description": "Public exposure count",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DLPDashboardFilterModel": {
        "description": "Model for DLP Dashboard filters",
        "properties": {
          "accountGroupIds": {
            "description": "List of cloud account group ids",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "accountGroupNames": {
            "description": "List of AWS account group names",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "accountIds": {
            "description": "List of cloud account ids",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "classifications": {
            "description": "List of Data classifications",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "description": "Limit the records returned",
            "format": "int32",
            "type": "integer"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          }
        },
        "required": [
          "accountGroupIds",
          "accountGroupNames",
          "accountIds",
          "classifications",
          "limit",
          "timeRange"
        ],
        "type": "object"
      },
      "DLPObject": {
        "description": "Model for DLPObject",
        "properties": {
          "classification": {
            "description": "Key and count data",
            "items": {
              "$ref": "#/components/schemas/KeyAndCountPair"
            },
            "type": "array"
          },
          "total": {
            "description": "Total",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DLPResource": {
        "description": "Model for DLP Resource",
        "properties": {
          "exposure": {
            "description": "List of exposures and count",
            "items": {
              "$ref": "#/components/schemas/KeyAndCountPair"
            },
            "type": "array"
          },
          "total": {
            "description": "Total number of resources",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DLPTopNObjectsByOwnerViewModel": {
        "description": "Model for DLP Object Owner",
        "properties": {
          "exposure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountByExposure"
              },
              {
                "description": "Object Exposure"
              }
            ]
          },
          "name": {
            "description": "Object Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DLPTopNObjectsByRegionViewModel": {
        "description": "Model for DLP Object Region",
        "properties": {
          "classification": {
            "description": "List of classification",
            "items": {
              "$ref": "#/components/schemas/KeyAndCountPair"
            },
            "type": "array"
          },
          "cloudType": {
            "description": "Cloud Type",
            "type": "string"
          },
          "latitude": {
            "description": "Latitude",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "Longitude",
            "format": "double",
            "type": "number"
          },
          "regionCode": {
            "description": "Cloud region",
            "type": "string"
          },
          "regionName": {
            "description": "Cloud region name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DLPTotalResourceByExposureViewModel": {
        "description": "Model for DLP Resource Exposure",
        "properties": {
          "resources": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DLPResource"
              },
              {
                "description": "Resource Data"
              }
            ]
          }
        },
        "type": "object"
      },
      "DLPTotalSensitiveExposedObjectsViewModel": {
        "description": "Model for Sensitive Exposed Objects",
        "properties": {
          "objects": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DLPObject"
              },
              {
                "description": "DLP Object data"
              }
            ]
          }
        },
        "type": "object"
      },
      "KeyAndCountPair": {
        "description": "Model for Exposure",
        "properties": {
          "count": {
            "description": "Count",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountByClassificationViewModel": {
        "description": "Model class for Bubble chart data",
        "properties": {
          "classification": {
            "description": "Object classification",
            "type": "string"
          },
          "count": {
            "description": "Object count",
            "format": "int32",
            "type": "integer"
          },
          "exposure": {
            "description": "Object Exposure",
            "type": "string"
          },
          "severity": {
            "description": "Policy Severity",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DLPInventoryDataUsageModel": {
        "description": "Model class for filter sugegstions",
        "properties": {
          "dataScanned": {
            "description": "Data Scanned",
            "format": "float",
            "type": "number"
          },
          "limit": {
            "description": "Data limit",
            "format": "int64",
            "type": "integer"
          },
          "unit": {
            "description": "Unit (daily/hourly)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DLPInventoryFilterModel": {
        "description": "Model for DLP inventory filters",
        "properties": {
          "detailed": {
            "description": "Detailed",
            "type": "boolean"
          },
          "fields": {
            "description": "Array of specific fields to return",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filters": {
            "description": "Filtering parameters. \n\nFor filter names, refer to List Filters API. \n\nFor filter values, refer to List filter suggestions. \n\nThe only exception is **resource.tagv2** filter name, provide filter value for it in the following format: \"{\"key\":\"'CustomerTagKey'\",\"value\":\"'CustomerTagValue'\"}\"",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "type": "array"
          },
          "groupBy": {
            "description": "For asset or data inventory only. Group returned items by **cloud.type**, **cloud.service**, **cloud.region**, **cloud.account**, and/or **resource.type**",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "description": "Maximum number of items to return. When data is paginated, maximum number of items per page.The maximum cannot exceed 10,000. The default is 10,000.",
            "type": "number"
          },
          "offset": {
            "description": "The number of items to skip before selecting items to return. Default is zero",
            "type": "number"
          },
          "pageToken": {
            "description": "Setting this pagination Token to the **nextPageToken** from a response object returns the next page of data ",
            "type": "string"
          },
          "sortBy": {
            "description": "Array of sort properties. Append **:asc** or  **:desc** to the key to sort by ascending or descending order respectively. Example sort properties are **id:asc** and **timestamp:desc**",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tableLevel": {
            "description": "Table level",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "format": "int32",
            "type": "integer"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time range"
              }
            ]
          }
        },
        "required": [
          "tableLevel"
        ],
        "type": "object"
      },
      "DLPInventoryL4ViewModel": {
        "description": "Model for DLP Inventory L4 Objects View",
        "properties": {
          "endTime": {
            "description": "End time of the record",
            "format": "int64",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/DLPInventoryViewModel"
            },
            "type": "array"
          },
          "limit": {
            "description": "Total records per page",
            "format": "int64",
            "type": "integer"
          },
          "page": {
            "description": "page number for the records",
            "format": "int64",
            "type": "integer"
          },
          "startTime": {
            "description": "Start time of the record",
            "format": "int64",
            "type": "integer"
          },
          "totalItems": {
            "description": "Total Items",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DLPInventoryObjectClassificationReport": {
        "description": "Model class for classification report",
        "properties": {
          "detectionTime": {
            "description": "Detection time",
            "type": "string"
          },
          "identifiers": {
            "description": "List of identifiers",
            "items": {
              "$ref": "#/components/schemas/Identifiers"
            },
            "type": "array"
          },
          "name": {
            "description": "Classification name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DLPInventoryObjectClassificationReportV2": {
        "description": "Model class for classification report v2",
        "properties": {
          "dataPattern": {
            "description": "Pattern name",
            "type": "string"
          },
          "dataPatternId": {
            "description": "Pattern id",
            "type": "string"
          },
          "dataProfiles": {
            "description": "List of data profiles",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "detectionTime": {
            "description": "Detection time unix timestamp",
            "format": "int64",
            "type": "integer"
          },
          "frequency": {
            "description": "Detection frequency",
            "format": "int32",
            "type": "integer"
          },
          "snippet": {
            "description": "Snippets data",
            "type": "string"
          },
          "snippetViewed": {
            "description": "Viewed snippets",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DLPInventoryObjectExplorer": {
        "description": "Model for DLP Object Inventory",
        "properties": {
          "assetId": {
            "description": "Unified AssetId of the resource",
            "type": "string"
          },
          "awsAccountId": {
            "description": "Cloud account ID",
            "type": "string"
          },
          "containerName": {
            "description": "Container Name",
            "type": "string"
          },
          "contentType": {
            "description": "Object content type",
            "type": "string"
          },
          "createdOn": {
            "description": "Object created on",
            "format": "int64",
            "type": "integer"
          },
          "exposureCalculatedOn": {
            "description": "Object exposure calculation time",
            "format": "int64",
            "type": "integer"
          },
          "malware": {
            "description": "Object malware status",
            "type": "string"
          },
          "objectAcl": {
            "description": "Object Acls",
            "type": "string"
          },
          "objectExposure": {
            "description": "Object exposure",
            "type": "string"
          },
          "objectName": {
            "description": "Object name",
            "type": "string"
          },
          "objectOwner": {
            "description": "Object owner",
            "type": "string"
          },
          "objectTags": {
            "description": "List of Object tags",
            "items": {
              "$ref": "#/components/schemas/DLPInventoryObjectExplorer"
            },
            "type": "array"
          },
          "objectUrl": {
            "description": "Object URL",
            "type": "string"
          },
          "regionName": {
            "description": "Object region",
            "type": "string"
          },
          "resourceName": {
            "description": "Object's resource name",
            "type": "string"
          },
          "resourceRRN": {
            "description": "Resource ARN",
            "type": "string"
          },
          "sha256": {
            "description": "Object SHA256",
            "type": "string"
          },
          "updatedOn": {
            "description": "Object updated on",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DLPInventoryObjectHistoryViewModel": {
        "description": "Model class for object view model",
        "properties": {
          "malwareObjectsDelta": {
            "description": "Total malware objects changed",
            "format": "int64",
            "type": "integer"
          },
          "objectsDelta": {
            "description": "Objects changes",
            "format": "int64",
            "type": "integer"
          },
          "publicObjectsDelta": {
            "description": "Public objects changed",
            "format": "int64",
            "type": "integer"
          },
          "publicResourcesDelta": {
            "description": "Public resources changed",
            "format": "int64",
            "type": "integer"
          },
          "resourcesDelta": {
            "description": "Resources changed",
            "format": "int64",
            "type": "integer"
          },
          "sensitiveObjectsDelta": {
            "description": "Sensitive objects changed",
            "format": "int64",
            "type": "integer"
          },
          "totalMalwareObjects": {
            "description": "Total malware objects",
            "format": "int64",
            "type": "integer"
          },
          "totalObjects": {
            "description": "Total objects",
            "format": "int64",
            "type": "integer"
          },
          "totalPublicObjects": {
            "description": "Public objects",
            "format": "int64",
            "type": "integer"
          },
          "totalPublicResources": {
            "description": "Public resources",
            "format": "int64",
            "type": "integer"
          },
          "totalResources": {
            "description": "Total resources",
            "format": "int64",
            "type": "integer"
          },
          "totalSensitiveObjects": {
            "description": "Sensitive objects",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DLPInventoryObjectL4FilterModel": {
        "description": "Model for DLP inventory paginated filters",
        "properties": {
          "detailed": {
            "description": "Detailed",
            "type": "boolean"
          },
          "fields": {
            "description": "Array of specific fields to return",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filters": {
            "description": "Filtering parameters. \n\nFor filter names, refer to List Filters API. \n\nFor filter values, refer to List filter suggestions. \n\nThe only exception is **resource.tagv2** filter name, provide filter value for it in the following format: \"{\"key\":\"'CustomerTagKey'\",\"value\":\"'CustomerTagValue'\"}\"",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "type": "array"
          },
          "groupBy": {
            "description": "For asset or data inventory only. Group returned items by **cloud.type**, **cloud.service**, **cloud.region**, **cloud.account**, and/or **resource.type**",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "description": "Records per page",
            "format": "int32",
            "type": "integer"
          },
          "offset": {
            "description": "The number of items to skip before selecting items to return. Default is zero",
            "type": "number"
          },
          "orderBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderBy"
              },
              {
                "description": "Sorting column and sort type"
              }
            ]
          },
          "page": {
            "description": "Page Number",
            "format": "int64",
            "type": "integer"
          },
          "pageToken": {
            "description": "Setting this pagination Token to the **nextPageToken** from a response object returns the next page of data ",
            "type": "string"
          },
          "searchTerm": {
            "description": "search on objects",
            "type": "string"
          },
          "sortBy": {
            "description": "Array of sort properties. Append **:asc** or  **:desc** to the key to sort by ascending or descending order respectively. Example sort properties are **id:asc** and **timestamp:desc**",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time range"
              }
            ]
          }
        },
        "required": [
          "limit",
          "page"
        ],
        "type": "object"
      },
      "DLPInventoryResourceExplorer": {
        "description": "Model for DLP Inventory Resource Explorer",
        "properties": {
          "accountName": {
            "description": "Cloud Name",
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "type": "string"
          },
          "regionName": {
            "description": "Cloud region name",
            "type": "string"
          },
          "resourceAcl": {
            "description": "Resource Acls",
            "type": "string"
          },
          "resourceExposure": {
            "description": "Resource Exposure",
            "type": "string"
          },
          "resourceName": {
            "description": "Resource Name",
            "type": "string"
          },
          "resourcePolicy": {
            "description": "Resource policy",
            "type": "string"
          },
          "resourceTags": {
            "description": "Resource Tags",
            "type": "string"
          },
          "serviceName": {
            "description": "Service name",
            "type": "string"
          },
          "updatedOn": {
            "description": "Resource updated time",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DLPInventoryResourceExplorerRequest": {
        "description": "Request for DLP Object inventory request",
        "properties": {
          "objectId": {
            "description": "Object Id",
            "type": "string"
          },
          "tenantId": {
            "description": "Tenant Id",
            "type": "string"
          }
        },
        "required": [
          "objectId",
          "tenantId"
        ],
        "type": "object"
      },
      "DLPInventoryResourceObjects": {
        "description": "Model class for inventory resource objects",
        "properties": {
          "objects": {
            "description": "List of objects",
            "items": {
              "$ref": "#/components/schemas/ResourceObjects"
            },
            "type": "array"
          },
          "total": {
            "description": "Total objects",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DLPInventoryViewModel": {
        "description": "Model for DLP Inventory View",
        "properties": {
          "accountId": {
            "description": "Cloud account id",
            "type": "string"
          },
          "accountName": {
            "description": "Cloud account name",
            "type": "string"
          },
          "alerts": {
            "description": "Total alerts",
            "format": "int64",
            "type": "integer"
          },
          "assetId": {
            "description": "Unified Asset Id",
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "type": "string"
          },
          "containerName": {
            "description": "Container Name",
            "type": "string"
          },
          "contentType": {
            "description": "Object Content Type",
            "type": "string"
          },
          "dataPatterns": {
            "description": "List of Data Patterns",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dataProfiles": {
            "description": "List of Data Profiles",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dssScannedTime": {
            "description": "Classification Scanned Time",
            "format": "int64",
            "type": "integer"
          },
          "dssSnippetCreatedOn": {
            "description": "Snippets created on (unix timestamp)",
            "format": "int64",
            "type": "integer"
          },
          "dssSnippetStatus": {
            "description": "Snippets Status",
            "type": "string"
          },
          "dssSnippetViewed": {
            "description": "Snippets Viewed Status",
            "type": "boolean"
          },
          "malware": {
            "description": "Malware Result",
            "type": "string"
          },
          "malwareObjects": {
            "description": "Total malware objects",
            "format": "int64",
            "type": "integer"
          },
          "malwareScannedTime": {
            "description": "Malware Scanned Time",
            "format": "int64",
            "type": "integer"
          },
          "metadataScannedTime": {
            "description": "Metadata Scanned Time",
            "format": "int64",
            "type": "integer"
          },
          "objectAlerts": {
            "description": "Object Alerts",
            "type": "string"
          },
          "objectExposure": {
            "description": "Object Exposure",
            "type": "string"
          },
          "objectId": {
            "description": "Object Id",
            "type": "string"
          },
          "objectName": {
            "description": "Object Name",
            "type": "string"
          },
          "objectOwner": {
            "description": "Object Owner",
            "type": "string"
          },
          "objectPath": {
            "description": "Object Path",
            "type": "string"
          },
          "objectUrl": {
            "description": "Object URL",
            "type": "string"
          },
          "publicObjects": {
            "description": "Total public objects",
            "format": "int64",
            "type": "integer"
          },
          "publicResource": {
            "description": "List of public resources",
            "type": "string"
          },
          "publicResources": {
            "description": "Total number of public resources",
            "format": "int64",
            "type": "integer"
          },
          "regionName": {
            "description": "Cloud region",
            "type": "string"
          },
          "resourceExposure": {
            "description": "Resource Exposure",
            "type": "string"
          },
          "resourceName": {
            "description": "Resource name",
            "type": "string"
          },
          "resourceRrn": {
            "description": "resource RRN",
            "type": "string"
          },
          "resourceStatus": {
            "description": "Resource status (true if active)",
            "type": "boolean"
          },
          "rrn": {
            "description": "object RRN",
            "type": "string"
          },
          "sensitiveObjects": {
            "description": "Total sensitive objects",
            "format": "int64",
            "type": "integer"
          },
          "serviceName": {
            "description": "Service name",
            "type": "string"
          },
          "totalObjects": {
            "description": "Total objects",
            "format": "int64",
            "type": "integer"
          },
          "totalResources": {
            "description": "Total number of resources",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Detection": {
        "description": "Model class Classification Detections",
        "properties": {
          "detection": {
            "description": "Detection technique",
            "type": "string"
          },
          "left": {
            "description": "Left detection",
            "type": "string"
          },
          "origOffSet": {
            "description": "Offset by",
            "format": "int64",
            "type": "integer"
          },
          "right": {
            "description": "Right detection",
            "type": "string"
          },
          "textLength": {
            "description": "Text Length",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DssPatternSnippetViewModel": {
        "description": "Model class for viewing snippets",
        "properties": {
          "dataPattern": {
            "description": "Matching data patterns",
            "type": "string"
          },
          "highConfidenceDetections": {
            "description": "List of high confidence detections",
            "items": {
              "$ref": "#/components/schemas/Detection"
            },
            "type": "array"
          },
          "lowConfidenceDetections": {
            "description": "List of low confidence detections",
            "items": {
              "$ref": "#/components/schemas/Detection"
            },
            "type": "array"
          },
          "matchedConfidenceLevel": {
            "description": "Matched Confidence level",
            "type": "string"
          },
          "mediumConfidenceDetections": {
            "description": "List of medium confidence detections",
            "items": {
              "$ref": "#/components/schemas/Detection"
            },
            "type": "array"
          },
          "statusCode": {
            "description": "Snippets status code",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Identifiers": {
        "description": "Model class for identifiers",
        "properties": {
          "frequency": {
            "description": "Identifier frequency",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Identifier name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderBy": {
        "properties": {
          "asc": {
            "description": "sort by ascending",
            "type": "boolean"
          },
          "column": {
            "description": "order by column name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceObjects": {
        "description": "Model class for resource objects",
        "properties": {
          "dataClassifications": {
            "description": "Object classification",
            "type": "string"
          },
          "dataIdentifiers": {
            "description": "Object identifiers",
            "type": "string"
          },
          "malware": {
            "description": "Object malware result",
            "type": "string"
          },
          "objectExposure": {
            "description": "Object exposure",
            "type": "string"
          },
          "objectId": {
            "description": "Object Id",
            "type": "string"
          },
          "objectName": {
            "description": "Object name",
            "type": "string"
          },
          "sha256": {
            "description": "Object sha",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDataPatternRequest": {
        "description": "Create/Update Pattern Model with limited input",
        "properties": {
          "delimiter": {
            "description": "Delimiter",
            "type": "string"
          },
          "description": {
            "description": "Pattern description",
            "type": "string"
          },
          "detectionTechnique": {
            "description": "Detection technique",
            "type": "string"
          },
          "entity": {
            "description": "Entity value",
            "type": "string"
          },
          "grammar": {
            "description": "Grammar value",
            "type": "string"
          },
          "name": {
            "description": "Pattern name",
            "type": "string"
          },
          "parentId": {
            "description": "Parent ID",
            "type": "string"
          },
          "proximityKeywords": {
            "description": "List of proximity keywords",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "regexes": {
            "description": "List of regexes",
            "items": {
              "$ref": "#/components/schemas/Regexes"
            },
            "type": "array"
          },
          "rootType": {
            "description": "Root type",
            "type": "string"
          },
          "s3Path": {
            "description": "S3 path",
            "type": "string"
          }
        },
        "required": [
          "delimiter",
          "description",
          "detectionTechnique",
          "entity",
          "grammar",
          "name",
          "parentId",
          "rootType",
          "s3Path"
        ],
        "type": "object"
      },
      "DSSDataProfiles": {
        "description": "Model for DLP Data Profiles",
        "properties": {
          "profiles": {
            "description": "Data profiles",
            "items": {
              "$ref": "#/components/schemas/Profiles"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DSSProfile": {
        "description": "Model for Enable/Disable Data Profiles",
        "properties": {
          "id": {
            "description": "Profile Id",
            "type": "string"
          },
          "profileStatus": {
            "description": "Profile Status (active or disabled)",
            "type": "string"
          }
        },
        "required": [
          "id",
          "profileStatus"
        ],
        "type": "object"
      },
      "DataPatternConfidenceLevel": {
        "properties": {
          "name": {
            "description": "Pattern name",
            "type": "string"
          },
          "supportedConfidenceLevels": {
            "description": "List of confidence level",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataPatternDetails": {
        "description": "DataPatternDetails Model class",
        "properties": {
          "confidenceLevels": {
            "description": "List of confidence level",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Pattern description",
            "type": "string"
          },
          "detectionTechnique": {
            "description": "Pattern technique",
            "type": "string"
          },
          "id": {
            "description": "Pattern id",
            "type": "string"
          },
          "name": {
            "description": "Pattern name",
            "type": "string"
          },
          "proximityKeywords": {
            "description": "Proximity keywords",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "description": "Pattern status",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataPatternList": {
        "description": "DataPattern List with Filters for UI",
        "properties": {
          "lastUpdatedByFilter": {
            "description": "Last Updated By Filter",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "modeFilter": {
            "description": "Mode Filter",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "patterns": {
            "description": "Pattern List",
            "items": {
              "$ref": "#/components/schemas/DataPatternModel"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataPatternModel": {
        "description": "Data Pattern Model",
        "properties": {
          "confidenceLevels": {
            "description": "List of confidence levels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdBy": {
            "description": "Created By",
            "readOnly": true,
            "type": "string"
          },
          "delimiter": {
            "description": "Delimiter to separate the regex and weight in UI",
            "type": "string"
          },
          "description": {
            "description": "Pattern Description",
            "type": "string"
          },
          "detectionTechnique": {
            "description": "Detection technique",
            "type": "string"
          },
          "entity": {
            "description": "Entity",
            "type": "string"
          },
          "grammar": {
            "description": "Grammar",
            "type": "string"
          },
          "id": {
            "description": "Pattern id",
            "type": "string"
          },
          "isEditable": {
            "description": "Is Editable",
            "readOnly": true,
            "type": "boolean"
          },
          "mode": {
            "description": "Mode (custom/predefined)",
            "type": "string"
          },
          "name": {
            "description": "Pattern Name",
            "type": "string"
          },
          "parentId": {
            "description": "Parent ID",
            "type": "string"
          },
          "proximityKeywords": {
            "description": "List of Proximity Keywords",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "regexes": {
            "description": "List of regexes",
            "items": {
              "$ref": "#/components/schemas/Regexes"
            },
            "type": "array"
          },
          "rootType": {
            "description": "Root Type",
            "type": "string"
          },
          "s3Path": {
            "description": "S3 Path to the grammar",
            "type": "string"
          },
          "status": {
            "description": "Pattern status",
            "type": "string"
          },
          "updatedAt": {
            "description": "Last updated At",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "updatedBy": {
            "description": "Updated By",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "confidenceLevels",
          "description",
          "detectionTechnique",
          "id",
          "name",
          "proximityKeywords",
          "regexes",
          "status"
        ],
        "type": "object"
      },
      "DataPatternRules": {
        "description": "Data Pattern rules",
        "properties": {
          "confidencLevel": {
            "description": "Confidence level",
            "type": "string"
          },
          "detectionTechnique": {
            "description": "Detection technique",
            "type": "string"
          },
          "id": {
            "description": "Pattern id",
            "type": "string"
          },
          "matchType": {
            "description": "Match type",
            "type": "string"
          },
          "name": {
            "description": "Pattern name",
            "type": "string"
          },
          "occurrenceCount": {
            "description": "Occurrence count",
            "format": "int32",
            "type": "integer"
          },
          "occurrenceHigh": {
            "description": "High Occurrence value",
            "format": "int32",
            "type": "integer"
          },
          "occurrenceLow": {
            "description": "Low Occurrence value",
            "format": "int32",
            "type": "integer"
          },
          "occurrenceOperatorType": {
            "description": "Occurrence type",
            "type": "string"
          },
          "supportedConfidenceLevels": {
            "description": "List of supported confidence levels",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataPatternRulesOne": {
        "description": "DataProfile Rules",
        "properties": {
          "dataPatternRules": {
            "description": "Pattern rules",
            "items": {
              "$ref": "#/components/schemas/DataPatternRules"
            },
            "type": "array"
          },
          "operatorType": {
            "description": "Pattern operator type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataProfile": {
        "description": "Model class for Create and Update Data Profile",
        "properties": {
          "dataPatternsRule1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataPatternRulesOne"
              },
              {
                "description": "Profile patterns"
              }
            ]
          },
          "description": {
            "description": "Profile description",
            "type": "string"
          },
          "id": {
            "description": "Profile id (required during update",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Profile name",
            "type": "string"
          },
          "profileStatus": {
            "description": "Profile status",
            "type": "string"
          },
          "profileType": {
            "description": "Profile Type (custom or system)",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "type": "string"
          },
          "types": {
            "description": "Type (basic or advance)",
            "type": "string"
          }
        },
        "required": [
          "dataPatternsRule1",
          "name",
          "profileStatus",
          "profileType",
          "status",
          "types"
        ],
        "type": "object"
      },
      "DataProfileDetails": {
        "description": "DataProfile Model class",
        "properties": {
          "createdAt": {
            "description": "Created at (unix time)",
            "type": "string"
          },
          "createdBy": {
            "description": "Created by",
            "type": "string"
          },
          "dataPatternsRulesOne": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataPatternRulesOne"
              },
              {
                "description": "Pattern rules"
              }
            ]
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "DataProfile id",
            "type": "string"
          },
          "name": {
            "description": "DataProfile name",
            "type": "string"
          },
          "profileStatus": {
            "description": "Profile status",
            "type": "string"
          },
          "profileType": {
            "description": "DataProfile type",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "type": "string"
          },
          "tenantId": {
            "description": "Tenant Id",
            "type": "string"
          },
          "types": {
            "description": "Type",
            "type": "string"
          },
          "updatedAt": {
            "description": "Updated at (unix time)",
            "type": "string"
          },
          "updatedBy": {
            "description": "Updated by",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DssSnippetConfig": {
        "description": "Update Snippets Configuration",
        "properties": {
          "maskLevel": {
            "description": "Mask Value",
            "enum": [
              "no_mask",
              "partial_mask",
              "full_mask"
            ],
            "type": "string"
          },
          "snippetsEnabled": {
            "description": "Enable/Disable snippets",
            "type": "boolean"
          }
        },
        "required": [
          "maskLevel",
          "snippetsEnabled"
        ],
        "type": "object"
      },
      "GetDataPatternFilterRequest": {
        "description": "Get data pattern with filters on mode, updatedBy and time range",
        "properties": {
          "modeFilter": {
            "description": "Mode filter list",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          },
          "updatedByFilter": {
            "description": "Updated By list",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Profiles": {
        "description": "Model for Profiles",
        "properties": {
          "createdBy": {
            "description": "Profile created by service",
            "type": "string"
          },
          "id": {
            "description": "Profile id",
            "type": "string"
          },
          "name": {
            "description": "Profile name",
            "type": "string"
          },
          "status": {
            "description": "Profile status",
            "type": "string"
          },
          "type": {
            "description": "Profile Type",
            "type": "string"
          },
          "updatedAt": {
            "description": "Profile Updated time",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Profile updated by service",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Regexes": {
        "description": "Model for regex",
        "properties": {
          "regex": {
            "description": "Regex",
            "type": "string"
          },
          "weight": {
            "description": "Weight",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceConfigurationStatus": {
        "properties": {
          "code": {
            "description": "Configuration Status Code",
            "format": "int32",
            "type": "integer"
          },
          "isKMSEncrypted": {
            "description": "KMS Encryption Enabled",
            "type": "boolean"
          },
          "message": {
            "description": "Status message",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceInventory": {
        "description": "Data resource inventory model",
        "properties": {
          "resources": {
            "description": "List of storage resources",
            "items": {
              "$ref": "#/components/schemas/StorageResource"
            },
            "type": "array"
          },
          "sizeReportingFrequency": {
            "description": "Frequency of the s3 inventory configuration",
            "type": "string"
          },
          "totalRecords": {
            "description": "Total resources",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "StorageResource": {
        "description": "Storage resource model",
        "properties": {
          "accountId": {
            "description": "Account number",
            "type": "string"
          },
          "accountName": {
            "description": "Account name",
            "readOnly": true,
            "type": "string"
          },
          "assetId": {
            "description": "Unified Asset Id",
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "readOnly": true,
            "type": "string"
          },
          "configurationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceConfigurationStatus"
              },
              {
                "description": "Resource Configuration Status"
              }
            ]
          },
          "isConfigurable": {
            "description": "Configurable status",
            "readOnly": true,
            "type": "boolean"
          },
          "lastEstimate": {
            "description": "Size updated on",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "redlockAccountId": {
            "description": "Prisma Cloud account ID",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "resourceName": {
            "description": "Resource name",
            "type": "string"
          },
          "resourceRrn": {
            "description": "Resource RRN to link to resource page",
            "readOnly": true,
            "type": "string"
          },
          "scanOption": {
            "description": "Scan option exposure only, all",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "scanStatus": {
            "description": "Scan status",
            "readOnly": true,
            "type": "boolean"
          },
          "scanType": {
            "description": "Scan type",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "serviceName": {
            "description": "Service name",
            "type": "string"
          },
          "storageSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageSize"
              },
              {
                "description": "Storage size",
                "readOnly": true
              }
            ]
          }
        },
        "required": [
          "accountId",
          "resourceName",
          "serviceName"
        ],
        "type": "object"
      },
      "StorageSize": {
        "properties": {
          "dssAndWildfireEligibleSize": {
            "description": "Total size eligible for both Data Security scan and Wildfire",
            "format": "int64",
            "type": "integer"
          },
          "dssEligibleSize": {
            "description": "Total size eligible for Data Security scan",
            "format": "int64",
            "type": "integer"
          },
          "isInventoryConfigured": {
            "description": "Status of inventory configuration for current bucket. true = inventory configured",
            "type": "boolean"
          },
          "isScanComplete": {
            "description": "Status of size estimation. true = scan complete",
            "type": "boolean"
          },
          "sensitiveEligiblePubliclyExposed": {
            "description": "Total size for publicly exposed files eligible for DSS scan",
            "format": "int64",
            "type": "integer"
          },
          "size": {
            "description": "Total size",
            "format": "int64",
            "type": "integer"
          },
          "wildfireEligibleSize": {
            "description": "Total size eligible for Wildfire",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateResourceConfig": {
        "description": "Model for Data Security resource scan config",
        "properties": {
          "enableScanning": {
            "description": "Scan status. true = enable scans. false = disable scans",
            "type": "boolean"
          },
          "resources": {
            "description": "List of storage resources",
            "items": {
              "$ref": "#/components/schemas/StorageResource"
            },
            "type": "array"
          },
          "scanOption": {
            "description": "Scan option. Required if **enableScanning** is true. 0 = Exposure only, 2 = All ",
            "enum": [
              0,
              2
            ],
            "format": "int32",
            "type": "integer"
          },
          "scanType": {
            "description": "Scan type. Required if **enableScanning** is true. 1 = forward and backward, 2 = forward",
            "enum": [
              1,
              2
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "enableScanning",
          "resources"
        ],
        "type": "object"
      },
      "PermissionAccessPageRequestDto": {
        "description": "Model for Permission Access Page Request DTO",
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Maximun number of items to return for the given query. Default is 0.",
            "format": "int32",
            "example": 5
          },
          "pageToken": {
            "type": "string",
            "description": "Page token (default: empty string)",
            "example": "++fdfkjsdlfsdfdFDSFDFSDFdfdssfdFDS"
          }
        }
      },
      "PermissionAccessRequestDto": {
        "description": "Model for Permission Access Request DTO",
        "required": [
          "permissionId",
          "query"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Maximun number of items to return for the given query. Default is 0.",
            "format": "int32",
            "example": 5
          },
          "permissionId": {
            "type": "string",
            "description": "Permission Id",
            "example": "111111"
          },
          "query": {
            "type": "string",
            "description": "Query string",
            "example": "config from iam where ..."
          }
        }
      },
      "PermissionAccessResponseDto": {
        "description": "Model for Permission Access Response DTO",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PermissionAccessResultDataDto"
          }
        }
      },
      "PermissionAccessResultDataDto": {
        "description": "Model for Permission Access Result Data DTO",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Permissions list",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PermissionLastAccessDto"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Next page token",
            "readOnly": true,
            "example": "++fdfkjsdlfsdfdFDSFDFSDFdfdssfdFDS"
          },
          "totalRows": {
            "type": "integer",
            "description": "Total row count",
            "format": "int64",
            "readOnly": true,
            "example": 1243
          }
        }
      },
      "PermissionDto": {
        "description": "Model for Permission DTO",
        "type": "object",
        "properties": {
          "accessedResourcesCount": {
            "type": "integer",
            "description": "Accessed resource count",
            "format": "int64"
          },
          "destCloudAccount": {
            "type": "string",
            "description": "Destination cloud account",
            "example": "123456789"
          },
          "destCloudRegion": {
            "type": "string",
            "description": "Destination cloud region",
            "example": "AWS London"
          },
          "destCloudResourceRrn": {
            "type": "string",
            "description": "Destination cloud resource RRN",
            "example": "rrn::other:eu-west-2:123456789012::my-function"
          },
          "destCloudServiceName": {
            "type": "string",
            "description": "Destination cloud service name",
            "example": "iam"
          },
          "destCloudType": {
            "type": "string",
            "description": "Destination cloud type",
            "example": "AWS"
          },
          "destResourceId": {
            "type": "string",
            "description": "Destination cloud resource id",
            "example": "arn:aws:iam::111111:user/john"
          },
          "destResourceName": {
            "type": "string",
            "description": "Destination cloud resource name",
            "example": "john"
          },
          "destResourceType": {
            "type": "string",
            "description": "Destination cloud resource type",
            "example": "user"
          },
          "effectiveActionName": {
            "type": "string",
            "description": "Effective action name"
          },
          "exceptions": {
            "type": "array",
            "description": "Permission exception list",
            "items": {
              "$ref": "#/components/schemas/PermissionExceptionDto"
            }
          },
          "grantedByCloudEntityId": {
            "type": "string",
            "description": "Granted by cloud entity id",
            "example": "arn:aws:iam::<account>:role/my-role"
          },
          "grantedByCloudEntityName": {
            "type": "string",
            "description": "Granted by cloud entity name",
            "example": "my-role"
          },
          "grantedByCloudEntityRrn": {
            "type": "string",
            "description": "Granted by cloud entity rrn",
            "example": "rrn::other::123456789:AIDAIDAIDAIDAIDAIDAID"
          },
          "grantedByCloudEntityType": {
            "type": "string",
            "description": "Granted by cloud entity type",
            "example": "user"
          },
          "grantedByCloudPolicyId": {
            "type": "string",
            "description": "Granted by cloud policy Id",
            "example": "arn:aws:iam::aws:policy/aws-policy"
          },
          "grantedByCloudPolicyName": {
            "type": "string",
            "description": "Granted by cloud policy name",
            "example": "my-policy"
          },
          "grantedByCloudPolicyRrn": {
            "type": "string",
            "description": "Granted by cloud policy rrn",
            "example": "rrn::iamPolicy::123456789012::arn:aws:iam:eu-west-2"
          },
          "grantedByCloudPolicyType": {
            "type": "string",
            "description": "Granted by cloud policy type",
            "example": "Customer Managed Policy"
          },
          "grantedByCloudType": {
            "type": "string",
            "description": "Granted by cloud type",
            "example": "AWS"
          },
          "id": {
            "type": "string",
            "description": "Message id",
            "example": "13"
          },
          "isWildCardDestCloudResourceName": {
            "type": "boolean",
            "description": "Is destination cloud resource name a wildcard",
            "example": false
          },
          "lastAccessDate": {
            "type": "string",
            "description": "Last accessed data"
          },
          "sourceCloudAccount": {
            "type": "string",
            "description": "Source cloud account",
            "example": "123456789"
          },
          "sourceCloudRegion": {
            "type": "string",
            "description": "Source cloud region",
            "example": "AWS London"
          },
          "sourceCloudResourceRrn": {
            "type": "string",
            "description": "Source cloud resource RRN",
            "example": "rrn::iamUser::123456789012::AIDAIDAIDAIDAIDAIDAID"
          },
          "sourceCloudServiceName": {
            "type": "string",
            "description": "Source cloud service name",
            "example": "iam"
          },
          "sourceCloudType": {
            "type": "string",
            "description": "Source cloud type",
            "example": "AWS"
          },
          "sourceIdpDomain": {
            "type": "string",
            "description": "Source IDP domain"
          },
          "sourceIdpEmail": {
            "type": "string",
            "description": "Source IDP email"
          },
          "sourceIdpGroup": {
            "type": "string",
            "description": "Source IDP group"
          },
          "sourceIdpRrn": {
            "type": "string",
            "description": "Source idp RRN",
            "example": "rrn::other::idp-account-id::idp-user-id"
          },
          "sourceIdpService": {
            "type": "string",
            "description": "Source IDP service",
            "enum": [
              "AZURE_AD",
              "OKTA",
              "UNKNOWN"
            ]
          },
          "sourceIdpUsername": {
            "type": "string",
            "description": "Source IDP user name"
          },
          "sourcePublic": {
            "type": "boolean",
            "description": "Is source public",
            "example": false
          },
          "sourceResourceId": {
            "type": "string",
            "description": "Source cloud resource id",
            "example": "arn:aws:iam::111111:user/john"
          },
          "sourceResourceName": {
            "type": "string",
            "description": "Source cloud resource name",
            "example": "john"
          },
          "sourceResourceType": {
            "type": "string",
            "description": "Source cloud resource type",
            "example": "user"
          }
        }
      },
      "PermissionExceptionDto": {
        "description": "Model for Permission Exception DTO",
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string",
            "description": "Message code",
            "example": "LIMITED_BY_DENY_STATEMENT"
          }
        }
      },
      "PermissionLastAccessDto": {
        "description": "Model for Permission Last Access DTO",
        "type": "object",
        "properties": {
          "destCloudResourceName": {
            "type": "string",
            "description": "Destination cloud resource name",
            "example": "my-function"
          },
          "lastAccessDate": {
            "type": "string",
            "description": "Action last access date in the format of a unix timestamp",
            "example": "1593691785"
          }
        }
      },
      "PermissionSearchPageRequestDto": {
        "description": "Model for Permission Search Page Request DTO",
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Maximun number of items to return"
          },
          "pageToken": {
            "type": "string",
            "description": "Page token from the response object of an earlier request to get permissions."
          }
        }
      },
      "PermissionSearchRequestDto": {
        "description": "Model for Permission Search Request DTO",
        "required": [
          "limit",
          "query"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Request user Id",
            "example": "123456"
          },
          "limit": {
            "type": "integer",
            "description": "Maximun number of items to return for the given query",
            "format": "int32",
            "example": 5
          },
          "query": {
            "type": "string",
            "description": "IAM RQL query",
            "example": "config from iam where ..."
          }
        }
      },
      "PermissionSearchResponseDto": {
        "description": "Model for Permission Search Response DTO",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PermissionSearchResultDataDto"
          },
          "description": {
            "type": "string",
            "description": "Search description",
            "example": "search-description"
          },
          "id": {
            "type": "string",
            "description": "Request user Id",
            "example": "111111"
          },
          "name": {
            "type": "string",
            "description": "Search name",
            "example": "search-name"
          },
          "query": {
            "type": "string",
            "description": "Query string",
            "example": "config from iam where ..."
          },
          "saved": {
            "type": "boolean",
            "description": "Is search saved",
            "example": true
          },
          "searchType": {
            "type": "string",
            "description": "Search type",
            "example": "search-type"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeDto"
          }
        }
      },
      "PermissionSearchResultDataDto": {
        "description": "Model for Permission Search Result Data DTO",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Requested permissions list",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Next page token",
            "example": "++fdfkjsdlfsdfdFDSFDFSDFdfdssfdFDS"
          },
          "searchedDestCloudResourceNames": {
            "uniqueItems": true,
            "type": "array",
            "description": "Searched destination cloud resource names",
            "example": [],
            "items": {
              "type": "string"
            }
          },
          "totalRows": {
            "type": "integer",
            "description": "Total row count",
            "format": "int64",
            "example": 1243
          }
        }
      },
      "RemediationRequestDto": {
        "description": "Model for Remediation Request DTO",
        "required": [
          "alerts"
        ],
        "type": "object",
        "properties": {
          "alerts": {
            "type": "array",
            "description": "List of relevant alerts",
            "example": [
              "I-1234",
              "I-1235"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RemediationResponseDto": {
        "description": "Model for Remediation Response DTO",
        "type": "object",
        "properties": {
          "alertIdVsCliScript": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of relevant remediations",
            "readOnly": true,
            "example": {
              "I-1234": "cli command1",
              "I-1235": "cli command2"
            }
          },
          "cliDescription": {
            "type": "string",
            "description": "Cli Description",
            "readOnly": true,
            "example": "The following are CLI commands required for remediation. Successful execution will limit the relevant permissions of the violating resource.}"
          }
        }
      },
      "RqlResponseDto": {
        "description": "Model for RQL Response DTO",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "query": {
            "type": "string"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeDto"
          }
        }
      },
      "SuggestRequestDto": {
        "description": "Model for Suggest Request DTO",
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Query to validate",
            "example": "config from iam where dest.cloud.type='AWS'"
          }
        }
      },
      "SuggestResponseDto": {
        "description": "Model for Suggest Response DTO",
        "type": "object",
        "properties": {
          "needsOffsetUpdate": {
            "type": "boolean",
            "description": "Should add offset from the query beginning",
            "readOnly": true,
            "example": true
          },
          "offset": {
            "type": "integer",
            "description": "The number of characters of offset from the query beginning",
            "format": "int32",
            "readOnly": true,
            "example": 43
          },
          "suggestions": {
            "uniqueItems": true,
            "type": "array",
            "description": "Suggestion list",
            "readOnly": true,
            "example": [
              "AND"
            ],
            "items": {
              "type": "string"
            }
          },
          "translate": {
            "type": "boolean",
            "description": "Should translate",
            "readOnly": true,
            "example": false
          },
          "valid": {
            "type": "boolean",
            "description": "Is query valid",
            "readOnly": true,
            "example": true
          }
        }
      },
      "TimeRangeDto": {
        "description": "Model for Time Range DTO",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Time range type",
            "example": "to_now"
          },
          "value": {
            "type": "string",
            "description": "Time range value",
            "example": "epoch"
          }
        }
      },
      "IntegrationConfig": {
        "description": "Model for Integration Config",
        "required": [
          "apiToken",
          "domain"
        ],
        "type": "object",
        "properties": {
          "apiToken": {
            "type": "string",
            "description": "Your Okta API token",
            "example": "11111111111111"
          },
          "domain": {
            "type": "string",
            "description": "your Okta domain",
            "example": "my-domain.okta.com"
          }
        }
      },
      "IntegrationDto": {
        "description": "Model for Integration DTO",
        "required": [
          "integrationConfig",
          "integrationType",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of your choice to identify the test",
            "example": "test_id"
          },
          "integrationConfig": {
            "$ref": "#/components/schemas/IntegrationConfig"
          },
          "integrationType": {
            "type": "string",
            "description": "Integration type",
            "example": "OKTA_IDP",
            "enum": [
              "OKTA_IDP"
            ]
          },
          "lastModifiedTs": {
            "type": "integer",
            "description": "Last modified time (default: N.A.)",
            "format": "int32",
            "readOnly": true,
            "example": 120
          },
          "name": {
            "type": "string",
            "description": "Integration name",
            "example": "Integration_name"
          }
        }
      },
      "IntegrationValidatorResponse": {
        "description": "Model for Integration Validator Response",
        "type": "object",
        "properties": {
          "errorMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseStatus"
            }
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ResponseStatus": {
        "description": "Model for Response Status",
        "type": "object",
        "properties": {
          "i18nKey": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "error",
              "info",
              "warning"
            ]
          },
          "subject": {
            "type": "string"
          }
        }
      },
      "EventsApiError": {
        "properties": {
          "debugMessage": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ],
            "type": "string"
          },
          "subErrors": {
            "items": {
              "$ref": "#/components/schemas/EventsApiSubError"
            },
            "type": "array"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EventsApiSubError": {
        "type": "object"
      },
      "EventsCreateIntegrationRequest": {
        "properties": {
          "description": {
            "description": "Integration description",
            "example": "This is the sample integration",
            "type": "string"
          },
          "integrationConfig": {
            "additionalProperties": {
              "description": "Integration configuration. See \n[Integration Configurations](//prisma-cloud/api/cspm/api-integration-config/).\n",
              "example": {
                "webhookUrl": "https://hooks.slack.com/abcdef"
              },
              "type": "object"
            },
            "description": "Integration configuration. See \n[Integration Configurations](//prisma-cloud/api/cspm/api-integration-config/).\n",
            "type": "object"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": [
              "slack",
              "splunk",
              "amazon_sqs",
              "webhook",
              "microsoft_teams",
              "azure_service_bus_queue",
              "jira",
              "service_now",
              "pager_duty",
              "demisto",
              "google_cscc",
              "aws_security_hub",
              "aws_s3",
              "snowflake"
            ],
            "example": "slack",
            "type": "string"
          },
          "name": {
            "description": "Integration name",
            "example": "sample-integration",
            "maxLength": 100,
            "minLength": 5,
            "pattern": "^[A-Za-z0-9](.){0,99}$",
            "type": "string"
          }
        },
        "required": [
          "integrationConfig",
          "integrationType",
          "name"
        ],
        "type": "object"
      },
      "EventsIntegrationModel": {
        "properties": {
          "createdBy": {
            "description": "User who created the integration",
            "type": "string"
          },
          "createdTs": {
            "description": "Creation Unix timestamp in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "description": "Integration description",
            "type": "string"
          },
          "enabled": {
            "description": "true = Integration enabled",
            "type": "boolean"
          },
          "id": {
            "description": "Integration ID",
            "type": "string"
          },
          "integrationConfig": {
            "additionalProperties": {
              "description": "Integration configuration. See \n[Integration Configurations](//prisma-cloud/api/cspm/api-integration-config/).\n",
              "example": {
                "webhookUrl": "https://hooks.slack.com/abcdef"
              },
              "type": "object"
            },
            "description": "Integration configuration. See \n[Integration Configurations](//prisma-cloud/api/cspm/api-integration-config/).\n",
            "type": "object"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": [
              "slack",
              "splunk",
              "amazon_sqs",
              "webhook",
              "microsoft_teams",
              "azure_service_bus_queue",
              "jira",
              "service_now",
              "pager_duty",
              "demisto",
              "google_cscc",
              "aws_security_hub",
              "aws_s3",
              "snowflake"
            ],
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "User who modified integration last",
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Unix timestamp of last modification, in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Integration name",
            "type": "string"
          }
        },
        "required": [
          "customerId",
          "name"
        ],
        "type": "object"
      },
      "EventsPatchIntegrationRequest": {
        "properties": {
          "enabled": {
            "description": "true = Is enabled",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "EventsRegions": {
        "properties": {
          "regions": {
            "description": "AWS Region ID",
            "example": [
              "us-east-1"
            ],
            "items": {
              "description": "AWS Region ID",
              "example": "[\"us-east-1\"]",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventsTestIntegrationRequest": {
        "properties": {
          "integrationConfig": {
            "additionalProperties": {
              "description": "Integration configuration. See \n[Integration Configurations](//prisma-cloud/api/cspm/api-integration-config/).\n",
              "example": {
                "webhookUrl": "https://hooks.slack.com/abcdef"
              },
              "externalDocs": {
                "url": "//prisma-cloud/api/cspm/api-integration-config"
              },
              "type": "object"
            },
            "description": "Integration configuration. See \n[Integration Configurations](//prisma-cloud/api/cspm/api-integration-config/).\n",
            "externalDocs": {
              "url": "//prisma-cloud/api/cspm/api-integration-config"
            },
            "type": "object"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": [
              "slack",
              "splunk",
              "amazon_sqs",
              "webhook",
              "microsoft_teams",
              "azure_service_bus_queue",
              "jira",
              "service_now",
              "pager_duty",
              "demisto",
              "google_cscc",
              "aws_security_hub",
              "aws_s3",
              "snowflake"
            ],
            "example": "slack",
            "type": "string"
          },
          "name": {
            "description": "Integration name",
            "example": "sample-integration",
            "maxLength": 100,
            "minLength": 5,
            "pattern": "^[A-Za-z0-9](.){0,99}$",
            "type": "string"
          }
        },
        "required": [
          "integrationConfig",
          "integrationType",
          "name"
        ],
        "type": "object"
      },
      "EventsUpdateIntegrationRequest": {
        "properties": {
          "description": {
            "description": "Integration description",
            "example": "This is the sample integration",
            "type": "string"
          },
          "enabled": {
            "description": "Is enabled",
            "example": true,
            "type": "boolean"
          },
          "integrationConfig": {
            "additionalProperties": {
              "description": "Integration configuration. See \n[Integration Configurations](//prisma-cloud/api/cspm/api-integration-config/).\n",
              "example": {
                "webhookUrl": "https://hooks.slack.com/abcdef"
              },
              "type": "object"
            },
            "description": "Integration configuration. See \n[Integration Configurations](//prisma-cloud/api/cspm/api-integration-config/).\n",
            "type": "object"
          },
          "name": {
            "description": "Integration name",
            "example": "sample-integration",
            "maxLength": 100,
            "minLength": 5,
            "pattern": "^[A-Za-z0-9](.){0,99}$",
            "type": "string"
          }
        },
        "required": [
          "integrationConfig",
          "name"
        ],
        "type": "object"
      },
      "IntegrationModel": {
        "description": "Model for Integration",
        "properties": {
          "createdBy": {
            "description": "Created by",
            "readOnly": true,
            "type": "string"
          },
          "createdTs": {
            "description": "Creation timestamp in milliseconds",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "description": {
            "description": "Integration description",
            "type": "string"
          },
          "enabled": {
            "description": "true = Enabled",
            "type": "boolean"
          },
          "id": {
            "description": "Integration ID",
            "readOnly": true,
            "type": "string"
          },
          "integrationConfig": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Integration Configuration. The values depend on the integration type.",
            "type": "object"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": [
              "EMAIL",
              "SLACK",
              "SPLUNK",
              "AMAZON_SQS",
              "WEBHOOK",
              "MICROSOFT_TEAMS",
              "AZURE_SERVICE_BUS_QUEUE",
              "JIRA",
              "SERVICE_NOW",
              "PAGER_DUTY",
              "DEMISTO",
              "AWS_S3",
              "SNOWFLAKE",
              "TENABLE",
              "QUALYS",
              "AZURE_SECURITY_CENTER",
              "GOOGLE_CSCC",
              "AWS_SECURITY_HUB",
              "OKTA_IDP"
            ],
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Last modification timestamp in milliseconds",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Integration name",
            "type": "string"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationStatusDetails"
              },
              {
                "description": "Reason for marking the integration faulty",
                "readOnly": true
              }
            ]
          },
          "status": {
            "description": "State of integration",
            "enum": [
              "GREEN",
              "RED",
              "YELLOW",
              "NA"
            ],
            "readOnly": true,
            "type": "string"
          },
          "valid": {
            "description": "true = Is valid",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "IntegrationStatusDetails": {
        "description": "Model for Integration Status Details",
        "properties": {
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageDetails"
              },
              {
                "description": "Details",
                "readOnly": true
              }
            ]
          },
          "errorType": {
            "description": "Error type",
            "enum": [
              "INVALID_CONFIG",
              "TRANSLATION_EXCEPTION",
              "INVALID_TEMPLATE_CONFIG",
              "HTTP_EXCEPTION",
              "OTHERS",
              "TEST"
            ],
            "readOnly": true,
            "type": "string"
          },
          "lastUpdated": {
            "description": "Last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "message": {
            "description": "Message",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "IntegrationViewModel": {
        "description": "Model for IntegrationViewModel",
        "properties": {
          "alertRules": {
            "description": "Alert Rules",
            "items": {
              "$ref": "#/components/schemas/PolicyScanConfigModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "createdBy": {
            "description": "Created by",
            "readOnly": true,
            "type": "string"
          },
          "createdTs": {
            "description": "Creation timestamp in milliseconds",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "description": {
            "description": "Integration description",
            "type": "string"
          },
          "enabled": {
            "description": "true = Enabled",
            "type": "boolean"
          },
          "id": {
            "description": "Integration ID",
            "readOnly": true,
            "type": "string"
          },
          "integrationConfig": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Integration Configuration. The values depend on the integration type.",
            "type": "object"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": [
              "EMAIL",
              "SLACK",
              "SPLUNK",
              "AMAZON_SQS",
              "WEBHOOK",
              "MICROSOFT_TEAMS",
              "AZURE_SERVICE_BUS_QUEUE",
              "JIRA",
              "SERVICE_NOW",
              "PAGER_DUTY",
              "DEMISTO",
              "AWS_S3",
              "SNOWFLAKE",
              "TENABLE",
              "QUALYS",
              "AZURE_SECURITY_CENTER",
              "GOOGLE_CSCC",
              "AWS_SECURITY_HUB",
              "OKTA_IDP"
            ],
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Last modification timestamp in milliseconds",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Integration name",
            "type": "string"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationStatusDetails"
              },
              {
                "description": "Reason for marking the integration faulty",
                "readOnly": true
              }
            ]
          },
          "status": {
            "description": "State of integration",
            "enum": [
              "GREEN",
              "RED",
              "YELLOW",
              "NA"
            ],
            "readOnly": true,
            "type": "string"
          },
          "valid": {
            "description": "true = Is valid",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "MessageDetails": {
        "description": "Model for Message Details",
        "properties": {
          "i18nKey": {
            "description": "Internationalization key",
            "readOnly": true,
            "type": "string"
          },
          "statusCode": {
            "description": "Status code",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "subject": {
            "description": "Subject",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseStatus1": {
        "properties": {
          "i18nKey": {
            "type": "string"
          },
          "severity": {
            "enum": [
              "ERROR",
              "WARNING",
              "INFO"
            ],
            "type": "string"
          },
          "subject": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestInfo": {
        "properties": {
          "description": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ValidatorResponse": {
        "properties": {
          "errorMessages": {
            "items": {
              "$ref": "#/components/schemas/ResponseStatus1"
            },
            "type": "array"
          },
          "statusCode": {
            "format": "int32",
            "type": "integer"
          },
          "success": {
            "type": "boolean"
          },
          "tests": {
            "items": {
              "$ref": "#/components/schemas/TestInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IpAllowListParams": {
        "description": "Model for login IP allow list parameters",
        "properties": {
          "cidr": {
            "description": "List of CIDRs to Allow List for login access. You can include from 1 to 10 CIDRs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of CIDR (IP addresses) allow list",
            "type": "string"
          },
          "name": {
            "description": "Unique name for CIDR (IP addresses) allow list",
            "type": "string"
          }
        },
        "required": [
          "cidr",
          "name"
        ],
        "type": "object"
      },
      "LoginIpAllowListData": {
        "description": "Model for login IP allow list data",
        "properties": {
          "cidr": {
            "description": "List of CIDR blocks (IP addresses) from which access is allowed when Login IP Allow List is enabled.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "Login IP allow list ID",
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Timestamp for last modification of CIDR block list",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name of the list of CIDR blocks that are in allow list for access",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PublicNetwork": {
        "properties": {
          "cidrs": {
            "description": "CIDRs",
            "items": {
              "$ref": "#/components/schemas/PublicNetworkCidrBlock"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "Network Name",
            "type": "string"
          },
          "uuid": {
            "description": "Network ID",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "PublicNetworkCidrBlock": {
        "properties": {
          "cidr": {
            "description": "Valid CIDR. CIDR must be of the form [0-255].[0-255].[0-255].[0-255]/[1-32], must not have non-zero bits right of the netmask, and must not overlap any of the RFC 1918 defined private networks.",
            "type": "string"
          },
          "createdOn": {
            "description": "Created On",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "uuid": {
            "description": "CIDR ID",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "cidr"
        ],
        "type": "object"
      },
      "AccountDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ResourceUsageCount": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/AccountDetails"
          },
          "cloudType": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "resourceTypeCount": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "List of items. Each item contains cloud account name and the workload count of resource type"
      },
      "ResourceUsageCountResponse": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "description": "Total number of rows for the query",
            "format": "int32"
          },
          "stats": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "description": "Statistics to be shown. This contains the total workload per resource type.",
              "format": "int32"
            },
            "description": "Statistics to be shown. This contains the total workload per resource type."
          },
          "items": {
            "type": "array",
            "description": "List of items. Each item contains cloud account name and the workload count of resource type",
            "items": {
              "$ref": "#/components/schemas/ResourceUsageCount"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to be used for next page call"
          },
          "planType": {
            "type": "string",
            "description": "PlanType of the selected time range"
          }
        },
        "description": "Model containing Paginated License response"
      },
      "SpringErrorResponse": {
        "required": [
          "error",
          "message",
          "path",
          "status",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "timestamp"
          },
          "status": {
            "type": "integer",
            "description": "Http status",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "path": {
            "type": "string",
            "description": "Request path"
          }
        },
        "description": "Error Response"
      },
      "LicensingUsageApiRequest": {
        "required": [
          "accountIds",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "description": "List of account IDs",
            "items": {
              "type": "string",
              "description": "List of account IDs"
            }
          },
          "limit": {
            "type": "integer",
            "description": "Limit of items per request. Default is 1000.",
            "format": "int32",
            "example": 100
          },
          "cloudTypes": {
            "type": "array",
            "description": "List of cloud types",
            "items": {
              "type": "string",
              "description": "List of cloud types"
            }
          },
          "timeRange": {
            "$ref": "#/components/schemas/RelativeTimeRangeConfig"
          },
          "pageToken": {
            "type": "string",
            "description": "Page token for pagination",
            "example": "null"
          },
          "offset": {
            "type": "integer",
            "description": "Offset",
            "format": "int64",
            "example": 0
          }
        },
        "description": "Licensing Usage Api request payload"
      },
      "RelativeTimeDurationModel1": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Time unit",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year",
              "epoch",
              "login",
              "minute, hour, day, week, month, year, epoch, login"
            ]
          },
          "amount": {
            "type": "integer",
            "description": "Number of time units",
            "format": "int32"
          }
        },
        "description": "Model for RelativeTimeDuration"
      },
      "RelativeTimeRangeConfig": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "relative"
            ]
          },
          "value": {
            "$ref": "#/components/schemas/RelativeTimeDurationModel1"
          },
          "relativeTimeType": {
            "type": "string",
            "enum": [
              "BACKWARD"
            ]
          }
        },
        "description": "Model for RelativeTimeRangeConfig"
      },
      "GraphDataPoint": {
        "type": "object",
        "properties": {
          "timeRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "counts": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "Graph resource usage by cloud type",
                "format": "int32"
              },
              "description": "Graph resource usage by cloud type"
            },
            "description": "Graph resource usage by cloud type"
          }
        },
        "description": "Graph resource usage data points"
      },
      "ResourceUsageGraphResponse": {
        "type": "object",
        "properties": {
          "dataPoints": {
            "type": "array",
            "description": "Graph GraphDataPoint points",
            "items": {
              "$ref": "#/components/schemas/GraphDataPoint"
            }
          },
          "workloadsPurchased": {
            "type": "integer",
            "description": "Purchased workload count",
            "format": "int32"
          },
          "timeUnit": {
            "type": "string",
            "description": "Returned data in time unit",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year",
              "epoch",
              "login"
            ]
          },
          "availableAsOf": {
            "type": "integer",
            "description": "Selected data end time in milli second",
            "format": "int64"
          }
        },
        "description": "Graph resource usage"
      },
      "TimeRange": {
        "required": [
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              },
              "present": {
                "type": "boolean"
              },
              "asLong": {
                "type": "integer",
                "format": "int64"
              }
            },
            "description": "Start Time im Millis"
          },
          "endTime": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              },
              "present": {
                "type": "boolean"
              },
              "asLong": {
                "type": "integer",
                "format": "int64"
              }
            },
            "description": "End Time im Millis"
          }
        },
        "description": "Time range"
      },
      "CsvMessage": {
        "type": "object",
        "properties": {
          "headerComments": {
            "type": "array",
            "description": "List of header comments",
            "items": {
              "type": "string",
              "description": "List of header comments"
            }
          },
          "headers": {
            "type": "array",
            "description": "List of headers",
            "items": {
              "type": "string",
              "description": "List of headers"
            }
          },
          "rows": {
            "type": "array",
            "description": "List of rows",
            "items": {
              "type": "array",
              "description": "List of rows",
              "items": {
                "type": "string",
                "description": "List of rows"
              }
            }
          }
        },
        "description": "Model for CsvMessage"
      },
      "AccountListRequestModel1": {
        "required": [
          "accountIds",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "description": "List of account IDs",
            "items": {
              "type": "string",
              "description": "List of account IDs"
            }
          },
          "limit": {
            "type": "integer",
            "description": "Limit of items per request. Default is 1000.",
            "format": "int32",
            "example": 100
          },
          "timeRange": {
            "$ref": "#/components/schemas/RelativeTimeRangeConfig"
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud type values",
            "example": "aws"
          },
          "csvHeaderRequired": {
            "type": "boolean",
            "description": "CSV file header",
            "example": true
          }
        },
        "description": "Model for AccountListRequest"
      },
      "LicenseRequestModel": {
        "required": [
          "accountIds",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "description": "List of account IDs",
            "items": {
              "type": "string",
              "description": "List of account IDs"
            }
          },
          "limit": {
            "type": "integer",
            "description": "Limit no of records per request",
            "format": "int32",
            "example": 10
          },
          "timeRange": {
            "$ref": "#/components/schemas/RelativeTimeRangeConfig"
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud type values",
            "example": "aws"
          },
          "csvHeaderRequired": {
            "type": "boolean",
            "description": "CSV file header",
            "example": true
          },
          "pageToken": {
            "type": "string",
            "description": "Page token for pagination",
            "example": "null"
          },
          "offset": {
            "type": "integer",
            "description": "Offset",
            "format": "int64",
            "example": 0
          }
        },
        "description": "Model for LicenseRequest"
      },
      "Account": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "resourceTypeCount": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "description": "List of items. Each item contains cloud account name and the workload count of resource type"
      },
      "LicenseResponseModel": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "description": "Total number of rows for the query.",
            "format": "int64"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to be used for next page call."
          },
          "items": {
            "type": "array",
            "description": "List of items. Each item contains cloud account name and the workload count of resource type.",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "stats": {
            "$ref": "#/components/schemas/Stats"
          }
        },
        "description": "Model containing Paginated License response"
      },
      "Stats": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Statistics to be shown. This contains the total workload per resource type."
      },
      "OptimizeResourceCount": {
        "type": "object",
        "properties": {
          "timeRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "planType": {
            "type": "string"
          },
          "resourceTypeCount": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "AbsoluteTimeRangeConfig": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel1"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/Time"
              }
            }
          }
        ]
      },
      "FromNowTimeRangeConfig": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel1"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year",
                  "epoch",
                  "login"
                ]
              }
            }
          }
        ]
      },
      "Time": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TimeRangeConfigModel1": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "relative"
            ]
          },
          "value": {
            "$ref": "#/components/schemas/RelativeTimeDurationModel1"
          }
        },
        "description": "Model for TimeRangeConfig",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ToNowTimeRangeConfig": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel1"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year",
                  "epoch",
                  "login"
                ]
              }
            }
          }
        ]
      },
      "CustomerSupportFilter": {
        "required": [
          "accountIds",
          "accountNames",
          "customerName",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "timeRange": {
            "$ref": "#/components/schemas/RelativeTimeRangeConfig"
          },
          "customerName": {
            "type": "string",
            "description": "Customer name for Support users"
          },
          "accountIds": {
            "type": "array",
            "description": "List of accountIds",
            "items": {
              "type": "string",
              "description": "List of accountIds"
            }
          },
          "accountNames": {
            "type": "array",
            "description": "List of accountNames",
            "items": {
              "type": "string",
              "description": "List of accountNames"
            }
          },
          "limit": {
            "type": "integer",
            "description": "Limit of items per request. Default is 1000.",
            "format": "int32",
            "example": 100
          },
          "pageToken": {
            "type": "string",
            "description": "Page token for pagination",
            "example": "null"
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud type values",
            "example": "aws"
          },
          "cloudTypes": {
            "type": "array",
            "description": "List Cloud type values",
            "example": "aws,gcp",
            "items": {
              "type": "string",
              "description": "List Cloud type values",
              "example": "aws,gcp"
            }
          },
          "csvHeaderRequired": {
            "type": "boolean",
            "description": "CSV file header",
            "example": true
          }
        },
        "description": "Model for CustomerSupportFilter"
      },
      "OptimizeSubscriptionRequest": {
        "required": [
          "customerName",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "timeRange": {
            "$ref": "#/components/schemas/RelativeTimeRangeConfig"
          },
          "customerName": {
            "type": "string",
            "description": "Customer name for Support users"
          },
          "supportApi": {
            "type": "boolean"
          }
        },
        "description": "Model for OptimizeSubscriptionPage"
      },
      "CustomerNamesResponseModel": {
        "description": "Model for Customer Info shown during customer selection ",
        "properties": {
          "customerName": {
            "description": "Customer Name",
            "readOnly": true,
            "type": "string"
          },
          "prismaId": {
            "description": "Prisma Identifier",
            "readOnly": true,
            "type": "string"
          },
          "tosAccepted": {
            "description": "Terms of Service Accepted",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LoginModel": {
        "description": "Model used for authentication",
        "properties": {
          "customerName": {
            "description": "Customer Name",
            "type": "string"
          },
          "password": {
            "description": "Secret key",
            "type": "string"
          },
          "prismaId": {
            "description": "Unique Prisma Identifier",
            "type": "string"
          },
          "username": {
            "description": "Access key ID",
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ],
        "type": "object"
      },
      "LoginResponseModel": {
        "description": "Model containing authentication status and token",
        "properties": {
          "customerNames": {
            "description": "Customer names and property list",
            "items": {
              "$ref": "#/components/schemas/CustomerNamesResponseModel"
            },
            "type": "array"
          },
          "message": {
            "description": "Authentication status",
            "type": "string"
          },
          "roles": {
            "description": "List of user permissions based on user role type. This attribute is populated only for the refresh token response.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "token": {
            "description": "JSON Web Token (JWT)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventsCreateTemplateRequest": {
        "properties": {
          "integrationId": {
            "description": "Integration Id",
            "example": "123e4567-e89b-42d3-a456-55664244",
            "type": "string"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": [
              "email",
              "jira",
              "service_now"
            ],
            "example": "email",
            "type": "string"
          },
          "name": {
            "description": "Template name",
            "example": "sample-template",
            "maxLength": 100,
            "minLength": 5,
            "pattern": "^[A-Za-z0-9](.){0,99}$",
            "type": "string"
          },
          "templateConfig": {
            "additionalProperties": {
              "description": "Template configuration",
              "items": {
                "$ref": "#/components/schemas/EventsNotificationFieldsConfig"
              },
              "type": "array"
            },
            "description": "Template config",
            "type": "object"
          }
        },
        "required": [
          "integrationType",
          "name",
          "templateConfig"
        ],
        "type": "object"
      },
      "EventsFieldConfigOption": {
        "properties": {
          "id": {
            "description": "Field option ID",
            "type": "string"
          },
          "key": {
            "description": "Field option key",
            "type": "string"
          },
          "name": {
            "description": "Field option name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventsNotificationFieldsConfig": {
        "properties": {
          "aliasField": {
            "description": "Alias field",
            "type": "string"
          },
          "displayName": {
            "description": "Display name",
            "type": "string"
          },
          "fieldName": {
            "description": "Field name",
            "type": "string"
          },
          "maxLength": {
            "description": "Maximum length",
            "format": "int32",
            "type": "integer"
          },
          "options": {
            "items": {
              "$ref": "#/components/schemas/EventsFieldConfigOption"
            },
            "type": "array"
          },
          "redlockMapping": {
            "description": "true = Prisma Cloud will provide the field value for notification",
            "type": "boolean"
          },
          "required": {
            "description": "true = Required",
            "type": "boolean"
          },
          "type": {
            "description": "Type of field",
            "enum": [
              "list",
              "text",
              "array",
              "bool",
              "integer"
            ],
            "type": "string"
          },
          "typeaheadUri": {
            "description": "URL used to query suggestions for field value",
            "type": "string"
          },
          "value": {
            "description": "Field value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventsNotificationTemplate": {
        "properties": {
          "createdBy": {
            "description": "User who created the notification template",
            "type": "string"
          },
          "createdTs": {
            "description": "Creation Unix timestamp in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "enabled": {
            "description": "true = Enabled",
            "type": "boolean"
          },
          "id": {
            "description": "Notification template ID",
            "type": "string"
          },
          "integrationId": {
            "description": "Integration ID",
            "type": "string"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": [
              "email",
              "jira",
              "service_now"
            ],
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "User who modified template last",
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Modification Unix timestamp in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name. Cannot include special characters ('<', '>', '!', '=', '\\n', '\\r'). Maximum length is 99.\n",
            "type": "string"
          },
          "templateConfig": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/EventsNotificationFieldsConfig"
              },
              "type": "array"
            },
            "type": "object"
          }
        },
        "required": [
          "customerId",
          "integrationType",
          "name"
        ],
        "type": "object"
      },
      "EventsTestTemplateRequest": {
        "properties": {
          "integrationId": {
            "description": "Integration ID",
            "type": "string"
          },
          "integrationType": {
            "description": "Integration type",
            "enum": [
              "email",
              "jira",
              "service_now"
            ],
            "type": "string"
          },
          "name": {
            "description": "Template name",
            "type": "string"
          },
          "templateConfig": {
            "additionalProperties": {
              "description": "Template Config",
              "items": {
                "$ref": "#/components/schemas/EventsNotificationFieldsConfig"
              },
              "type": "array"
            },
            "description": "Template Config",
            "type": "object"
          }
        },
        "required": [
          "integrationId",
          "integrationType",
          "name",
          "templateConfig"
        ],
        "type": "object"
      },
      "AwsS3FlowLogsLoggingAccountsModel": {
        "description": "Model for AWS S3 Flow Logs Feature Logging Accounts Configuration",
        "properties": {
          "awsS3FlowLogsLoggingAccountId": {
            "description": "Logging Account Internal ID",
            "format": "int32",
            "type": "integer"
          },
          "bucketIds": {
            "description": "List of bucket Ids for the feature",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "buckets": {
            "description": "List of buckets for the feature",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "loggingAccountId": {
            "description": "Account ID of the Logging Account",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AwsS3FlowLogsModel": {
        "description": "Model for AWS S3 Flow Logs Feature Configuration",
        "properties": {
          "accountId": {
            "description": "Prisma Account ID from cloud_account table",
            "format": "int32",
            "type": "integer"
          },
          "loggingAccounts": {
            "description": "List of logging accounts with selected buckets for the given feature",
            "items": {
              "$ref": "#/components/schemas/AwsS3FlowLogsLoggingAccountsModel"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ErrorDetails": {
        "required": [
          "message",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SpringErrorResponse1": {
        "required": [
          "error",
          "message",
          "path",
          "status",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "message": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "UserAccount": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "timeZone"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "lastModifiedBy": {
            "type": "string",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "readOnly": true
          },
          "ssoBypassAllowed": {
            "type": "boolean"
          },
          "accessKeysAllowed": {
            "type": "boolean"
          },
          "defaultRoleId": {
            "type": "string"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileRoleDetail"
            }
          },
          "activeRole": {
            "$ref": "#/components/schemas/UserProfileRoleDetail"
          },
          "username": {
            "type": "string",
            "description": "User or service account name"
          },
          "type": {
            "type": "string",
            "description": "User type. Default is USER_ACCOUNT.",
            "enum": [
              "USER_ACCOUNT",
              "SERVICE_ACCOUNT"
            ]
          },
          "accessKeyName": {
            "type": "string"
          },
          "accessKeyExpiration": {
            "type": "integer",
            "description": "Access key expiration timestamp in milliseconds",
            "format": "int64"
          },
          "enableKeyExpiration": {
            "type": "boolean",
            "description": "true = Enable access key expiration. Default is false."
          },
          "accessKeysCount": {
            "type": "integer",
            "description": "Access key count",
            "format": "int32",
            "readOnly": true
          },
          "userRoleName": {
            "type": "string",
            "writeOnly": true
          }
        }
      },
      "UserProfileRoleDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "onlyAllowCIAccess": {
            "type": "boolean"
          },
          "onlyAllowComputeAccess": {
            "type": "boolean"
          },
          "onlyAllowReadAccess": {
            "type": "boolean"
          }
        }
      },
      "CreateUserAccessKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "secretKey": {
            "type": "string"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "SupportUserProfile": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "supportAccessLevel": {
            "type": "string",
            "enum": [
              "NONE",
              "LIGHT_AGENT",
              "AGENT",
              "ADMIN"
            ]
          },
          "failedLoginCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserProfile": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "roleId",
          "timeZone"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "roleId": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "role": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "readOnly": true
            },
            "readOnly": true
          },
          "roleType": {
            "type": "string",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "readOnly": true
          },
          "ssoBypassAllowed": {
            "type": "boolean"
          },
          "accessKeysAllowed": {
            "type": "boolean"
          },
          "userRoleName": {
            "type": "string",
            "writeOnly": true
          }
        }
      },
      "OpenIdConfigurationResponse": {
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string"
          },
          "authorization_endpoint": {
            "type": "string"
          },
          "jwks_uri": {
            "type": "string"
          },
          "token_endpoint": {
            "type": "string"
          },
          "token_endpoint_auth_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "introspection_endpoint": {
            "type": "string"
          },
          "introspection_endpoint_auth_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "revocation_endpoint": {
            "type": "string"
          },
          "response_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id_token_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "grant_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Feature1": {
        "required": [
          "featureName",
          "operations"
        ],
        "type": "object",
        "properties": {
          "featureName": {
            "type": "string",
            "description": "Prisma Cloud Feature Name. Prisma Cloud feature names can be retreived from GET: /authz/v1/feature API Endpoint"
          },
          "operations": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "A mapping of operations and a boolean value representing whether the privilege to perform the operation needs to be granted."
            },
            "description": "A mapping of operations and a boolean value representing whether the privilege to perform the operation needs to be granted."
          }
        },
        "description": "Collection of permitted features associated with the role. \n Refer to PermissionGroup API docs to get the entire list of PC features."
      },
      "RoleInternalPermissionGroup": {
        "required": [
          "custom",
          "features",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "PermissionGroup Name"
          },
          "custom": {
            "type": "boolean",
            "description": "Indicates whether the permissionGroup associated with the role is 'Default' or 'Custom' type."
          },
          "features": {
            "type": "array",
            "description": "Collection of permitted features associated with the role. \n Refer to PermissionGroup API docs to get the entire list of PC features.",
            "items": {
              "$ref": "#/components/schemas/Feature1"
            }
          }
        },
        "description": "Permission Group is only populated for the active role, i.e. active=true"
      },
      "UserInternalRole": {
        "required": [
          "active",
          "default",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id of the Role"
          },
          "name": {
            "type": "string",
            "description": "Name of the Role"
          },
          "active": {
            "type": "boolean",
            "description": "Indicates whether the role is active role or not"
          },
          "permissionGroup": {
            "$ref": "#/components/schemas/RoleInternalPermissionGroup"
          },
          "default": {
            "type": "boolean",
            "description": "Indicates whether the role is default or not"
          }
        }
      },
      "UserProfileV2": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "timeZone"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "accessKeysAllowed": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInternalRole"
            }
          }
        }
      },
      "AllowListParams": {
        "title": "IpAllowListParams",
        "required": [
          "cidr",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "cidr": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trimmedName": {
            "type": "string"
          },
          "trimmedDescription": {
            "type": "string"
          },
          "trimmedCidrs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Model for login IP allow list parameters"
      },
      "IpAllowListData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Login IP allow list ID",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "cidr": {
            "type": "array",
            "description": "List of CIDR blocks (IP addresses) from which access is allowed when Login IP Allow List flag is enabled.",
            "items": {
              "type": "string",
              "description": "List of CIDR blocks (IP addresses) from which access is allowed when Login IP Allow List flag is enabled."
            }
          },
          "lastModifiedTs": {
            "type": "integer",
            "description": "Timestamp for last modification of CIDR block list",
            "format": "int64",
            "readOnly": true
          }
        },
        "description": "Model for login IP allow list data"
      },
      "CustomerSupportFilter1": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "entitlementSerialNumber": {
            "type": "string"
          }
        }
      },
      "UserAccessKeyDetailResponse": {
        "type": "object",
        "properties": {
          "Access key id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdTs": {
            "type": "integer",
            "format": "int64"
          },
          "lastUsedTime": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "expiresOn": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Role of User"
            },
            "description": "Role of User"
          },
          "roleType": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "Attributes": {
        "type": "object",
        "properties": {
          "onlyAllowCIAccess": {
            "type": "boolean"
          },
          "onlyAllowComputeAccess": {
            "type": "boolean"
          },
          "hasDefenderPermissions": {
            "type": "boolean"
          },
          "onlyAllowReadAccess": {
            "type": "boolean"
          }
        }
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64"
          },
          "accountGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceListIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "codeRepositoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "associatedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restrictDismissalAccess": {
            "type": "boolean"
          },
          "additionalAttributes": {
            "$ref": "#/components/schemas/Attributes"
          },
          "roleType": {
            "type": "string"
          }
        }
      },
      "CustomerNameResponse": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string"
          },
          "prismaId": {
            "type": "string"
          },
          "tosAccepted": {
            "type": "boolean"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "customerNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerNameResponse"
            }
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetServicesResponse": {
        "required": [
          "services"
        ],
        "type": "object",
        "properties": {
          "services": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceResponse"
            }
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "JwkResponse": {
        "required": [
          "alg",
          "key_ops",
          "kid",
          "kty",
          "used_for_grant"
        ],
        "type": "object",
        "properties": {
          "kid": {
            "type": "string"
          },
          "kty": {
            "type": "string"
          },
          "alg": {
            "type": "string",
            "enum": [
              "HS256",
              "HS384",
              "HS512",
              "RS256",
              "RS384",
              "RS512"
            ]
          },
          "key_ops": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "used_for_grant": {
            "type": "boolean"
          },
          "expires_at": {
            "type": "integer",
            "format": "int64"
          },
          "token_duration_seconds": {
            "type": "integer",
            "format": "int64"
          },
          "k": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "d": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "dp": {
            "type": "string"
          },
          "dq": {
            "type": "string"
          },
          "qi": {
            "type": "string"
          }
        }
      },
      "JwksResponse": {
        "required": [
          "keys"
        ],
        "type": "object",
        "properties": {
          "keys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JwkResponse"
            }
          }
        }
      },
      "ServiceResponse": {
        "required": [
          "id",
          "is_enabled",
          "jwks",
          "password",
          "roles",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jwks": {
            "$ref": "#/components/schemas/JwksResponse"
          },
          "customer_name": {
            "type": "string",
            "deprecated": true
          },
          "prisma_id": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "LoginRequest": {
        "title": "Model used for authentication",
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "prismaId": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "tosAccepted": {
            "type": "boolean"
          },
          "ssoSession": {
            "type": "boolean"
          }
        },
        "description": "Model used for authentication"
      },
      "EntitlementToRoleSearchRequest": {
        "type": "object",
        "properties": {
          "resourceListIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accountGroupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "codeRepositoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserProfileInternal": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "timeZone"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "lastModifiedBy": {
            "type": "string",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "readOnly": true
          },
          "ssoBypassAllowed": {
            "type": "boolean"
          },
          "accessKeysAllowed": {
            "type": "boolean"
          },
          "defaultRoleId": {
            "type": "string"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileRoleDetail"
            }
          },
          "activeRole": {
            "$ref": "#/components/schemas/UserProfileRoleDetail"
          },
          "username": {
            "type": "string",
            "description": "User or service account name"
          },
          "type": {
            "type": "string",
            "description": "User type. Default is USER_ACCOUNT.",
            "enum": [
              "USER_ACCOUNT",
              "SERVICE_ACCOUNT"
            ]
          },
          "accessKeyName": {
            "type": "string"
          },
          "accessKeyExpiration": {
            "type": "integer",
            "description": "Access key expiration timestamp in milliseconds",
            "format": "int64"
          },
          "enableKeyExpiration": {
            "type": "boolean",
            "description": "true = Enable access key expiration. Default is false."
          },
          "accessKeysCount": {
            "type": "integer",
            "description": "Access key count",
            "format": "int32",
            "readOnly": true
          },
          "sfSyncStatus": {
            "type": "boolean"
          },
          "userRoleName": {
            "type": "string",
            "writeOnly": true
          }
        }
      },
      "PermissionGroupRequest": {
        "title": "Model used for permission group",
        "required": [
          "features",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Permission Group Name"
          },
          "description": {
            "type": "string",
            "description": "Permission Group Description"
          },
          "features": {
            "type": "array",
            "description": "List of Prisma Cloud Features",
            "items": {
              "$ref": "#/components/schemas/Feature1"
            }
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "resetToken": {
            "type": "string"
          },
          "recaptchaResponse": {
            "type": "string"
          }
        }
      },
      "PermissionGroupDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Permission Group Name"
          },
          "description": {
            "type": "string",
            "description": "Permission Group Description"
          },
          "type": {
            "type": "string",
            "description": "Permission Group Type",
            "enum": [
              "Default",
              "Custom",
              "Internal",
              "Default",
              "Custom"
            ]
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64"
          },
          "associatedRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Map of associated role Ids and Names"
            },
            "description": "Map of associated role Ids and Names"
          },
          "features": {
            "$ref": "#/components/schemas/Feature1"
          },
          "acceptAccountGroups": {
            "type": "boolean",
            "description": "acceptAccountGroups"
          },
          "acceptResourceLists": {
            "type": "boolean",
            "description": "acceptResourceLists"
          },
          "acceptCodeRepositories": {
            "type": "boolean",
            "description": "acceptCodeRepositories"
          },
          "custom": {
            "type": "boolean",
            "description": "Boolean value signifying whether this is a custom (i.e. user-defined) permission group. Is set to true if the attribute value of permissionGroupType is set to CUSTOM"
          },
          "id": {
            "type": "string",
            "description": "Permission Group ID"
          }
        }
      },
      "PermissionGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Permission Group Name"
          },
          "custom": {
            "type": "boolean",
            "description": "Boolean value signifying whether this is a custom (i.e. user-defined) permission group. Is set to true if the attribute value of permissionGroupType is set to CUSTOM"
          },
          "id": {
            "type": "string",
            "description": "Permission Group ID"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "resetToken": {
            "type": "string"
          },
          "resetTokenTs": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "deleted": {
            "type": "boolean"
          },
          "defaultUserRoleId": {
            "type": "string"
          },
          "userRoleDetails": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UserInternalRoleDetail"
            }
          },
          "customerName": {
            "type": "string"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64"
          },
          "tosBypassAllowed": {
            "type": "boolean"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64"
          },
          "tosAccepted": {
            "type": "boolean"
          },
          "ssoBypassAllowed": {
            "type": "boolean"
          },
          "sessionTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "provisional": {
            "type": "boolean"
          },
          "canAssumeRole": {
            "type": "boolean"
          },
          "supportAccessLevel": {
            "type": "string",
            "enum": [
              "NONE",
              "LIGHT_AGENT",
              "AGENT",
              "ADMIN"
            ]
          },
          "accessKeysAllowed": {
            "type": "boolean"
          },
          "sfSyncStatus": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "USER_ACCOUNT",
              "SERVICE_ACCOUNT"
            ]
          },
          "fullName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        },
        "description": "User object"
      },
      "UserInternalRoleDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissionGroup": {
            "$ref": "#/components/schemas/PermissionGroup"
          },
          "restrictedDismissalAccess": {
            "type": "boolean"
          },
          "hasDefenderPermissions": {
            "type": "boolean"
          },
          "onlyAllowReadAccess": {
            "type": "boolean"
          },
          "onlyAllowComputeAccess": {
            "type": "boolean"
          },
          "onlyAllowCIAccess": {
            "type": "boolean"
          }
        }
      },
      "MultiRoleUserProfile": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "timeZone"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "lastModifiedBy": {
            "type": "string",
            "readOnly": true
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "readOnly": true
          },
          "ssoBypassAllowed": {
            "type": "boolean"
          },
          "accessKeysAllowed": {
            "type": "boolean"
          },
          "defaultRoleId": {
            "type": "string"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileRoleDetail"
            }
          },
          "activeRole": {
            "$ref": "#/components/schemas/UserProfileRoleDetail"
          },
          "userRoleName": {
            "type": "string",
            "writeOnly": true
          }
        }
      },
      "SsoConfig": {
        "type": "object",
        "properties": {
          "identityProvider": {
            "title": "IdP Issuer URI",
            "type": "string"
          },
          "certificate": {
            "title": "IdP Certificate",
            "type": "string"
          },
          "enabled": {
            "title": "SSO Enabled",
            "type": "boolean"
          },
          "logoutRedirectUrl": {
            "title": "IdP Sign-Off URL",
            "type": "string"
          },
          "relayStateParamName": {
            "title": "IdP Relay State Param",
            "type": "string"
          },
          "lastLoginErrors": {
            "title": "Last Login Errors",
            "type": "array",
            "items": {
              "title": "Last Login Errors",
              "type": "string"
            }
          },
          "audienceUri": {
            "title": "AudienceUri or Prisma Cloud SP-Entity-Id",
            "type": "string"
          },
          "autoProvisionEnabled": {
            "title": "AutoProvision Enabled",
            "type": "boolean"
          },
          "requireAccessSamlUrlPublic": {
            "title": "Skip Public address check for Access SAML URL",
            "type": "boolean"
          },
          "autoProvisionSamlEmail": {
            "title": "AutoProvision SAML Attribute - Email (Mandatory)",
            "type": "string"
          },
          "autoProvisionSamlFirstName": {
            "title": "AutoProvision SAML Attribute - First name (Mandatory)",
            "type": "string"
          },
          "autoProvisionSamlLastName": {
            "title": "AutoProvision SAML Attribute - Last name (Mandatory)",
            "type": "string"
          },
          "autoProvisionSamlRole": {
            "title": "AutoProvision SAML Attribute - Role (Mandatory)",
            "type": "string"
          },
          "autoProvisionSamlTimezone": {
            "title": "AutoProvision SAML Attribute - TZ",
            "type": "string"
          },
          "redLockAccessSamlUrl": {
            "title": "IdP Configured Prisma Cloud Access URL",
            "type": "string"
          }
        }
      },
      "UserAccessKeyResponse": {
        "type": "object",
        "properties": {
          "Access key id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "expiresOn": {
            "type": "integer",
            "description": "Timestamp in milliseconds when access key expires",
            "format": "int64"
          }
        }
      },
      "AccountFilterVO": {
        "type": "object",
        "properties": {
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cloudTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fetchEnabledAccountsOnly": {
            "type": "boolean"
          }
        }
      },
      "ResourceListFilterVO": {
        "type": "object",
        "properties": {
          "resourceListIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceListNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceListTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TAG",
                "RESOURCE_ID",
                "STRING",
                "IP_ADDRESS",
                "NUMBER",
                "RESOURCE_GROUP",
                "COMPUTE_ACCESS_GROUP"
              ]
            }
          }
        }
      },
      "UserEntitlementsRequestVO": {
        "type": "object",
        "properties": {
          "redLockResourceType": {
            "type": "string"
          },
          "requestType": {
            "type": "string"
          },
          "accountFilters": {
            "$ref": "#/components/schemas/AccountFilterVO"
          },
          "resourceListFilters": {
            "$ref": "#/components/schemas/ResourceListFilterVO"
          },
          "userClientIp": {
            "type": "string"
          },
          "doIpWhitelistCheck": {
            "type": "boolean"
          },
          "doAuthorizationCheck": {
            "type": "boolean"
          },
          "fetchAccountGroups": {
            "type": "boolean"
          },
          "fetchAccounts": {
            "type": "boolean"
          },
          "fetchResourceLists": {
            "type": "boolean"
          },
          "fetchCodeRepositories": {
            "type": "boolean"
          },
          "fetchNonOnboardedAccounts": {
            "type": "boolean"
          },
          "doSupportAccessCheck": {
            "type": "boolean"
          },
          "requiredSupportAccessLevel": {
            "type": "string",
            "enum": [
              "NONE",
              "LIGHT_AGENT",
              "AGENT",
              "ADMIN"
            ]
          }
        }
      },
      "CloudAccountMetaVO": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "cloudType": {
            "type": "string"
          },
          "groupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JsonNode1": {
        "type": "object"
      },
      "ResourceListVO": {
        "required": [
          "resourceListType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "resourceListType": {
            "type": "string",
            "enum": [
              "TAG",
              "RESOURCE_ID",
              "STRING",
              "IP_ADDRESS",
              "NUMBER",
              "RESOURCE_GROUP",
              "COMPUTE_ACCESS_GROUP"
            ]
          },
          "description": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64"
          },
          "members": {
            "$ref": "#/components/schemas/JsonNode1"
          }
        }
      },
      "UserEntitlementsResponseVO": {
        "type": "object",
        "properties": {
          "userMeta": {
            "$ref": "#/components/schemas/UserMetaVO"
          },
          "groupIdVsName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "resourceLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceListVO"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccountMetaVO"
            }
          },
          "codeRepositoriesEntitlementUrl": {
            "type": "string"
          }
        }
      },
      "UserMetaVO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "roleType": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64"
          },
          "ssoSession": {
            "type": "boolean"
          },
          "customerCreatedTs": {
            "type": "integer",
            "format": "int64"
          },
          "licenseType": {
            "type": "string",
            "enum": [
              "ENTERPRISE",
              "BUSINESS"
            ]
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "prismaId": {
            "type": "string"
          },
          "activeUserRoleId": {
            "type": "string"
          },
          "supportAccessLevel": {
            "type": "string",
            "enum": [
              "NONE",
              "LIGHT_AGENT",
              "AGENT",
              "ADMIN"
            ]
          }
        }
      },
      "UsernameVsDisplayName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "UserEntitlementsMeta": {
        "type": "object",
        "properties": {
          "codeRepositoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceListIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accountGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "User entitlements"
      },
      "UserRoleView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64"
          },
          "accountGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceListIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "codeRepositoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "associatedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restrictDismissalAccess": {
            "type": "boolean"
          },
          "additionalAttributes": {
            "$ref": "#/components/schemas/Attributes"
          },
          "accountGroups": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "resourceLists": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "codeRepositories": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "accountIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roleType": {
            "type": "string"
          }
        }
      },
      "UsernameValidationResponse": {
        "type": "object",
        "properties": {
          "regex": {
            "type": "string"
          }
        }
      },
      "CreateServiceRequest": {
        "required": [
          "jwk",
          "roles",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "deprecated": true
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jwk": {
            "$ref": "#/components/schemas/Jwk"
          },
          "customer_name": {
            "type": "string",
            "deprecated": true
          },
          "prisma_id": {
            "type": "string"
          }
        }
      },
      "Jwk": {
        "required": [
          "alg",
          "token_duration_seconds"
        ],
        "type": "object",
        "properties": {
          "alg": {
            "type": "string",
            "enum": [
              "HS256",
              "HS384",
              "HS512",
              "RS256",
              "RS384",
              "RS512"
            ]
          },
          "kid": {
            "type": "string"
          },
          "token_duration_seconds": {
            "maximum": 3600,
            "minimum": 60,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SamlLoginResponse": {
        "type": "object",
        "properties": {
          "errorReasonExpectedValue": {
            "type": "string"
          },
          "errorReasonActualValue": {
            "type": "string"
          },
          "errorReasonKey": {
            "type": "string",
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "message": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "customerNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerNameResponse"
            }
          },
          "forwardLocation": {
            "type": "string"
          },
          "prismaSamlAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "pingSamlAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "errorInfoMultiple": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "errorInfoInvalid": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "errorInfoDisabled": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "errorInfoUnavailable": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "fullErrorMessage": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "prismaId": {
            "type": "string"
          }
        }
      },
      "ExternalJwtIntegration": {
        "title": "Model used for JWT integrations with external vendors",
        "type": "object",
        "properties": {
          "integration": {
            "type": "string"
          }
        },
        "description": "Model used for JWT integrations with external vendors"
      },
      "UserSearchCriteria": {
        "title": "User Search Request Filter",
        "type": "object",
        "properties": {
          "permissionGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userRoleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageListUserSearchVO": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSearchVO"
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "RoleDetail": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string"
          }
        },
        "description": "List of role IDs"
      },
      "UserSearchVO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User name / User email"
          },
          "roles": {
            "type": "array",
            "description": "List of role IDs",
            "items": {
              "$ref": "#/components/schemas/RoleDetail"
            }
          },
          "timezone": {
            "type": "string",
            "description": "timeZone"
          },
          "ssoBypassAllowed": {
            "type": "boolean",
            "description": "ssoBypassAllowed"
          },
          "accessKeysAllowed": {
            "type": "boolean",
            "description": "accessKeysAllowed"
          }
        }
      },
      "UserAccessKeyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Access Key Name"
          },
          "expiresOn": {
            "type": "integer",
            "description": "Timestamp in milliseconds when access key expires",
            "format": "int64"
          },
          "serviceAccountName": {
            "type": "string"
          }
        }
      },
      "UpdateServiceRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jwk": {
            "$ref": "#/components/schemas/Jwk"
          },
          "customer_name": {
            "type": "string",
            "deprecated": true
          },
          "prisma_id": {
            "type": "string"
          },
          "add_roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remove_roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "TokenInfoResponse": {
        "required": [
          "active"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorized": {
            "type": "boolean",
            "description": "Null if roles query param is not sent otherwise {true only if the roles are authorized for the token}"
          },
          "exp": {
            "type": "integer",
            "format": "int64"
          },
          "prismaId": {
            "type": "string"
          },
          "claims": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "ipAddressClaimIsTrusted": {
            "type": "string",
            "description": "ipAddress claim trusted ip outcome",
            "enum": [
              "NOT_PERFORMED",
              "PERFORMED_AND_VALID",
              "PERFORMED_AND_INVALID"
            ]
          },
          "customer_name": {
            "type": "string"
          },
          "user_type": {
            "type": "string",
            "enum": [
              "USER",
              "SERVICE"
            ]
          }
        }
      },
      "UsernamePasswordRequest": {
        "title": "Model used to validate user/password",
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RoleSwitchResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "SupportUserProfileRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "supportAccessLevel": {
            "type": "string"
          }
        }
      },
      "SamlLoginRequest": {
        "title": "Model used for saml authentication",
        "required": [
          "rawSaml",
          "requestIpAddress"
        ],
        "type": "object",
        "properties": {
          "rawSaml": {
            "type": "string"
          },
          "requestIpAddress": {
            "type": "string"
          },
          "relayState": {
            "type": "string"
          }
        }
      },
      "LegacyPolicyViewModel": {
        "description": "Model for Policy View",
        "properties": {
          "cloudType": {
            "description": "Cloud type (Required for config policies). Not case-sensitive. Default is **ALL**.",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "type": "string"
          },
          "complianceMetadata": {
            "description": "List of compliance data. Each item has compliance standard, requirement, and/or section information.",
            "items": {
              "$ref": "#/components/schemas/ComplianceMetadataModel"
            },
            "type": "array"
          },
          "createdBy": {
            "description": "Created by",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Created on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "deleted": {
            "description": "Deleted",
            "readOnly": true,
            "type": "boolean"
          },
          "description": {
            "description": "Policy description",
            "type": "string"
          },
          "enabled": {
            "description": "true=enabled. false=disabled.",
            "type": "boolean"
          },
          "findingTypes": {
            "description": "Finding Type",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "labels": {
            "description": "Labels",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last modified on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Policy name",
            "type": "string"
          },
          "openAlertsCount": {
            "description": "Open Alerts Count (Deprecated)",
            "format": "int32",
            "type": "integer"
          },
          "overridden": {
            "description": "Overridden",
            "readOnly": true,
            "type": "boolean"
          },
          "owner": {
            "description": "Owner",
            "type": "string"
          },
          "policyCategory": {
            "description": "PolicyCategory",
            "enum": [
              "risk",
              "incident"
            ],
            "type": "string"
          },
          "policyClass": {
            "description": "PolicyClass",
            "enum": [
              "behavioral",
              "privileged_activity_monitoring",
              "network_protection",
              "exposure",
              "vulnerabilities",
              "runtime_incident"
            ],
            "type": "string"
          },
          "policyId": {
            "description": "Policy ID",
            "readOnly": true,
            "type": "string"
          },
          "policyMode": {
            "description": "PolicyMode",
            "enum": [
              "custom/redlock_default"
            ],
            "type": "string"
          },
          "policySubTypes": {
            "description": "Policy subtype",
            "items": {
              "enum": [
                "run",
                "build",
                "run_and_build",
                "audit",
                "data_classification",
                "dns",
                "malware",
                "network_event",
                "network",
                "ueba",
                "permissions",
                "network_config",
                "identity"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": true
          },
          "policyType": {
            "description": "Policy type. Policy type **anomaly** is read-only.",
            "enum": [
              "config",
              "network",
              "audit_event",
              "anomaly",
              "data",
              "iam",
              "workload_vulnerability",
              "workload_incident",
              "waas_event",
              "attack_path"
            ],
            "type": "string"
          },
          "policyUpi": {
            "description": "Policy UPI",
            "readOnly": true,
            "type": "string"
          },
          "recommendation": {
            "description": "Remediation recommendation",
            "type": "string"
          },
          "remediable": {
            "description": "isRemediable",
            "readOnly": true,
            "type": "boolean"
          },
          "remediation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RemediationModel"
              },
              {
                "description": "Auto remediation info. Available only if policy is remediable."
              }
            ]
          },
          "restrictAlertDismissal": {
            "description": "Restrict alert dismissal",
            "readOnly": true,
            "type": "boolean"
          },
          "rule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuleModel"
              },
              {
                "description": "Policy rule (Contains RQL search query or saved search)"
              }
            ]
          },
          "ruleLastModifiedOn": {
            "description": "Rule last modified on",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "severity": {
            "description": "Severity",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "type": "string"
          },
          "systemDefault": {
            "description": "true = Policy is a Prisma Cloud system default policy",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "policyType",
          "rule",
          "severity"
        ],
        "type": "object"
      },
      "PolicyFilterSuggestion": {
        "description": "Model for PolicyFilterSuggestion",
        "properties": {
          "cloud.type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.class": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.complianceRequirement": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.complianceSection": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.complianceStandard": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.enabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.label": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.name": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.policyMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.remediable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.rule.type": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.severity": {
            "$ref": "#/components/schemas/FilterSuggestion"
          },
          "policy.subtype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.type": {
            "$ref": "#/components/schemas/FilterSuggestion"
          }
        },
        "type": "object"
      },
      "PolicyViewModel": {
        "description": "Model for Policy View V2",
        "properties": {
          "cloudType": {
            "description": "Cloud type (Required for config policies). Not case-sensitive. Default is **ALL**.",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "type": "string"
          },
          "complianceMetadata": {
            "description": "List of compliance data. Each item has compliance standard, requirement, and/or section information.",
            "items": {
              "$ref": "#/components/schemas/ComplianceMetadataModel"
            },
            "type": "array"
          },
          "createdBy": {
            "description": "Created by",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Created on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "deleted": {
            "description": "Deleted",
            "readOnly": true,
            "type": "boolean"
          },
          "description": {
            "description": "Policy description",
            "type": "string"
          },
          "enabled": {
            "description": "true=enabled. false=disabled.",
            "type": "boolean"
          },
          "findingTypes": {
            "description": "Finding Type",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "labels": {
            "description": "Labels",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Last modified on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Policy name",
            "type": "string"
          },
          "overridden": {
            "description": "Overridden",
            "readOnly": true,
            "type": "boolean"
          },
          "owner": {
            "description": "Owner",
            "type": "string"
          },
          "policyCategory": {
            "description": "PolicyCategory",
            "enum": [
              "risk",
              "incident"
            ],
            "type": "string"
          },
          "policyClass": {
            "description": "PolicyClass",
            "enum": [
              "behavioral",
              "privileged_activity_monitoring",
              "network_protection",
              "exposure",
              "vulnerabilities",
              "runtime_incident"
            ],
            "type": "string"
          },
          "policyId": {
            "description": "Policy ID",
            "readOnly": true,
            "type": "string"
          },
          "policyMode": {
            "description": "PolicyMode",
            "enum": [
              "custom/redlock_default"
            ],
            "type": "string"
          },
          "policySubTypes": {
            "description": "Policy subtype",
            "items": {
              "enum": [
                "run",
                "build",
                "run_and_build",
                "audit",
                "data_classification",
                "dns",
                "malware",
                "network_event",
                "network",
                "ueba",
                "permissions",
                "network_config",
                "identity"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": true
          },
          "policyType": {
            "description": "Policy type. Policy type **anomaly** is read-only.",
            "enum": [
              "config",
              "network",
              "audit_event",
              "anomaly",
              "data",
              "iam",
              "workload_vulnerability",
              "workload_incident",
              "waas_event",
              "attack_path"
            ],
            "type": "string"
          },
          "policyUpi": {
            "description": "Policy UPI",
            "readOnly": true,
            "type": "string"
          },
          "recommendation": {
            "description": "Remediation recommendation",
            "type": "string"
          },
          "remediable": {
            "description": "isRemediable",
            "readOnly": true,
            "type": "boolean"
          },
          "remediation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RemediationModel"
              },
              {
                "description": "Auto remediation info. Available only if policy is remediable."
              }
            ]
          },
          "restrictAlertDismissal": {
            "description": "Restrict alert dismissal",
            "readOnly": true,
            "type": "boolean"
          },
          "rule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuleModel"
              },
              {
                "description": "Policy rule (Contains RQL search query or saved search)"
              }
            ]
          },
          "ruleLastModifiedOn": {
            "description": "Rule last modified on",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "severity": {
            "description": "Severity",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "type": "string"
          },
          "systemDefault": {
            "description": "true = Policy is a Prisma Cloud system default policy",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "policyType",
          "rule",
          "severity"
        ],
        "type": "object"
      },
      "ComplianceAggregateCount": {
        "description": "Model for compliance aggregate count",
        "properties": {
          "criticalSeverityFailed": {
            "description": "Number of critical-severity failures",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "failed": {
            "description": "Failed",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "highSeverityFailed": {
            "description": "Number of high-severity failures",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "informationalSeverityFailed": {
            "description": "Number of informational-severity failures",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lowSeverityFailed": {
            "description": "Number of low-severity failures",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "mediumSeverityFailed": {
            "description": "Number of medium-severity failures",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "passed": {
            "description": "Passed",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "total": {
            "description": "Total",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReportFilterSuggestion": {
        "description": "Model for ReportFilterSuggestion",
        "properties": {
          "account.group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Account group"
              }
            ]
          },
          "cloud.account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Cloud account"
              }
            ]
          },
          "cloud.region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Cloud region"
              }
            ]
          },
          "cloud.type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "policy.complianceStandard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Policy compliance standard"
              }
            ]
          },
          "report.email.recipients": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "description": "Report email recepients"
              }
            ]
          },
          "report.frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "report.schedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          },
          "schedule.status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterSuggestion"
              },
              {
                "readOnly": true
              }
            ]
          }
        },
        "type": "object"
      },
      "ReportGenerationConfigApiModel": {
        "description": "Model for report generation configuration",
        "properties": {
          "cloudType": {
            "description": "Cloud type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ],
            "type": "string"
          },
          "complianceStandardDeleted": {
            "description": "Compliance Standard Deleted",
            "readOnly": true,
            "type": "boolean"
          },
          "complianceStandardId": {
            "description": "Compliance standard ID",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "counts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ComplianceAggregateCount"
              },
              {
                "description": "Model for compliance aggregate count",
                "readOnly": true
              }
            ]
          },
          "createdBy": {
            "description": "User who created this report",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Report created on this timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "id": {
            "description": "Report ID",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedOn": {
            "description": "Timestamp of last modification",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastScheduled": {
            "description": "Timestamp of last generated report",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "locale": {
            "description": "Locale of caller (e.g. en_us, jp). Default is en_us.",
            "type": "string"
          },
          "name": {
            "description": "Report name",
            "type": "string"
          },
          "nextSchedule": {
            "description": "Timestamp of next scheduled report",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "description": "Report generation status",
            "readOnly": true,
            "type": "string"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportTargetModel"
              },
              {
                "description": "Report definition"
              }
            ]
          },
          "totalInstanceCount": {
            "description": "Total number of reports for the report ID",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "description": "Report type. Default is COMPLIANCE.",
            "enum": [
              "COMPLIANCE",
              "RIS",
              "INVENTORY_OVERVIEW",
              "INVENTORY_DETAIL"
            ],
            "type": "string"
          }
        },
        "required": [
          "cloudType",
          "name",
          "target"
        ],
        "type": "object"
      },
      "ReportTargetModel": {
        "description": "Model for report target",
        "properties": {
          "accountGroups": {
            "description": "List of cloud account groups",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "accounts": {
            "description": "List of cloud accounts",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "complianceStandardIds": {
            "description": "List of compliance Standard IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "compressionEnabled": {
            "description": "Business unit detailed report compression enabled",
            "type": "boolean"
          },
          "downloadNow": {
            "description": "True = download now",
            "type": "boolean"
          },
          "notificationTemplateId": {
            "description": "Notification template id",
            "readOnly": true,
            "type": "string"
          },
          "notifyTo": {
            "description": "List of email addresses to receive notification",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "regions": {
            "description": "List of regions",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "schedule": {
            "description": "Recurring report schedule in RRULE format",
            "type": "string"
          },
          "scheduleEnabled": {
            "description": "Report scheduling enabled",
            "type": "boolean"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time range"
              }
            ]
          }
        },
        "required": [
          "timeRange"
        ],
        "type": "object"
      },
      "AlertIdAndSeverity": {
        "properties": {
          "id": {
            "type": "string"
          },
          "severity": {
            "enum": [
              "INFORMATIONAL",
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExternalFindingView": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "count": {
            "type": "string"
          },
          "createdOn": {
            "format": "int64",
            "type": "integer"
          },
          "customerId": {
            "format": "int32",
            "type": "integer"
          },
          "cveId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalFindingId": {
            "format": "int64",
            "type": "integer"
          },
          "findingId": {
            "type": "string"
          },
          "normalizedName": {
            "type": "string"
          },
          "normalizedNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "nvdUrl": {
            "type": "string"
          },
          "rawData": {
            "type": "string"
          },
          "regionId": {
            "type": "string"
          },
          "resourceCloudId": {
            "type": "string"
          },
          "resourceId": {
            "format": "int64",
            "type": "integer"
          },
          "resourceUrl": {
            "type": "string"
          },
          "riskFactors": {
            "items": {
              "enum": [
                "CRITICAL_SEVERITY",
                "HIGH_SEVERITY",
                "MEDIUM_SEVERITY",
                "HAS_FIX",
                "REMOTE_EXECUTION",
                "DOS",
                "RECENT_VULNERABILITY",
                "EXPLOIT_EXISTS",
                "ATTACK_COMPLEXITY_LOW",
                "ATTACK_VECTOR_NETWORK",
                "REACHABLE_FROM_THE_INTERNET",
                "LISTENING_PORTS",
                "CONTAINER_IS_RUNNING_AS_ROOT",
                "NO_MANDATORY_SECURITY_PROFILE_APPLIED",
                "RUNNING_AS_PRIVILEGED_CONTAINER",
                "PACKAGE_IN_USE"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "rlUpdatedOn": {
            "format": "int64",
            "type": "integer"
          },
          "scanId": {
            "type": "string"
          },
          "score": {
            "type": "object"
          },
          "severity": {
            "enum": [
              "INFORMATIONAL",
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL"
            ],
            "type": "string"
          },
          "source": {
            "enum": [
              "AWS_INSPECTOR",
              "AWS_GUARD_DUTY",
              "TENABLE",
              "QUALYS",
              "PRISMA_CLOUD",
              "AZURE_SECURITY_CENTER"
            ],
            "type": "string"
          },
          "sourceData": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "status": {
            "enum": [
              "PENDING",
              "NO_ERROR",
              "ERROR",
              "ENABLED",
              "DISABLED",
              "OPEN",
              "DISMISSED",
              "RESOLVED",
              "DESCOPED",
              "RISK_SCORING_ERROR",
              "ACTIVE",
              "CLOSED",
              "SUPPRESSED"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "HOST_VULNERABILITY_CVE",
              "COMPLIANCE_ISSUE_CIS",
              "AWS_INSPECTOR_SECURITY_BEST_PRACTICES",
              "AWS_INSPECTOR_RUNTIME_BEHAVIOR_ANALYSIS",
              "AWS_GUARD_DUTY_HOST_FINDING",
              "AWS_GUARD_DUTY_IAM_FINDING",
              "SERVERLESS_VULNERABILITY",
              "AZURE_SECURITY_CENTER_ALERTS",
              "PACKAGE_VULNERABILITY",
              "NETWORK_REACHABILITY",
              "AWS_GUARD_DUTY_EKS_FINDING",
              "AWS_GUARD_DUTY_ECS_FINDING",
              "AWS_GUARD_DUTY_CONTAINER_FINDING"
            ],
            "type": "string"
          },
          "updatedOn": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExternalIntegrationView": {
        "properties": {
          "assetJson": {
            "type": "string"
          },
          "firstSeen": {
            "format": "int64",
            "type": "integer"
          },
          "hasAgent": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "lastSeen": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "rlUpdatedOn": {
            "format": "int64",
            "type": "integer"
          },
          "source": {
            "enum": [
              "AWS_INSPECTOR",
              "AWS_GUARD_DUTY",
              "TENABLE",
              "QUALYS",
              "PRISMA_CLOUD",
              "AZURE_SECURITY_CENTER"
            ],
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RRNModel": {
        "description": "Model for RRN",
        "properties": {
          "accountId": {
            "description": "Account ID",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "readOnly": true,
            "type": "string"
          },
          "idmapId": {
            "description": "Hashed generated ID",
            "readOnly": true,
            "type": "string"
          },
          "regionId": {
            "description": "Region ID",
            "readOnly": true,
            "type": "string"
          },
          "resourceId": {
            "description": "Resource ID",
            "readOnly": true,
            "type": "string"
          },
          "resourceType": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceExplorerRequest": {
        "properties": {
          "excludeSeverityList": {
            "description": "External Findings Severitys to exclude",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "findingSource": {
            "description": "External Finding Sources",
            "items": {
              "enum": [
                "AWS_INSPECTOR",
                "AWS_GUARD_DUTY",
                "TENABLE",
                "QUALYS",
                "PRISMA_CLOUD",
                "AZURE_SECURITY_CENTER"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "findingType": {
            "description": "External Finding Types",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "riskFactors": {
            "description": "External finding risk factors",
            "items": {
              "enum": [
                "CRITICAL_SEVERITY",
                "HIGH_SEVERITY",
                "MEDIUM_SEVERITY",
                "HAS_FIX",
                "REMOTE_EXECUTION",
                "DOS",
                "RECENT_VULNERABILITY",
                "EXPLOIT_EXISTS",
                "ATTACK_COMPLEXITY_LOW",
                "ATTACK_VECTOR_NETWORK",
                "REACHABLE_FROM_THE_INTERNET",
                "LISTENING_PORTS",
                "CONTAINER_IS_RUNNING_AS_ROOT",
                "NO_MANDATORY_SECURITY_PROFILE_APPLIED",
                "RUNNING_AS_PRIVILEGED_CONTAINER",
                "PACKAGE_IN_USE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "rrn": {
            "description": "Restricted Resource Name",
            "type": "string"
          },
          "rrnList": {
            "description": "Restricted Resource Name",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "timelineItemId": {
            "description": "Timeline Item ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceMetaModel": {
        "description": "Model containing resource metadata",
        "properties": {
          "accountGroupName": {
            "description": "Account group name",
            "type": "string"
          },
          "accountId": {
            "description": "Account ID",
            "type": "string"
          },
          "accountName": {
            "description": "Account name",
            "type": "string"
          },
          "allowDrillDown": {
            "description": "allowDrillDown",
            "type": "boolean"
          },
          "assetId": {
            "description": "Asset ID",
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "type": "string"
          },
          "createdTs": {
            "description": "Creation timestamp",
            "format": "int64",
            "type": "integer"
          },
          "data": {
            "description": "Raw JSON data for the resource",
            "type": "object"
          },
          "deleted": {
            "description": "Deleted",
            "type": "boolean"
          },
          "dynamicData": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Dynamic data",
            "type": "object"
          },
          "hasExtFindingRiskFactors": {
            "description": "Has risk factors",
            "type": "boolean"
          },
          "hasExternalFinding": {
            "description": "Has external finding",
            "type": "boolean"
          },
          "hasExternalIntegration": {
            "description": "Has external integration",
            "type": "boolean"
          },
          "hasNetwork": {
            "description": "Has network",
            "type": "boolean"
          },
          "id": {
            "description": "ID",
            "type": "string"
          },
          "insertTs": {
            "description": "Insertion timestamp",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "regionId": {
            "description": "Region ID",
            "type": "string"
          },
          "regionName": {
            "description": "Region name",
            "type": "string"
          },
          "resourceConfigJsonAvailable": {
            "description": "allowDrillDown",
            "type": "boolean"
          },
          "resourceType": {
            "description": "Resource type",
            "type": "string"
          },
          "riskGrade": {
            "description": "Risk grade",
            "type": "string"
          },
          "rrn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RRNModel"
              },
              {
                "description": "RRN"
              }
            ]
          },
          "service": {
            "description": "Service",
            "type": "string"
          },
          "stateId": {
            "description": "State ID",
            "type": "string"
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags",
            "type": "object"
          },
          "url": {
            "description": "URL",
            "type": "string"
          },
          "vpcId": {
            "description": "Virtual private cloud ID",
            "type": "string"
          },
          "vpcName": {
            "description": "Virtual private cloud name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceTimelineItem": {
        "properties": {
          "alertIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discoveredTs": {
            "format": "int64",
            "type": "integer"
          },
          "eventName": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "firstState": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "previousStateId": {
            "type": "string"
          },
          "similarSince": {
            "format": "int64",
            "type": "integer"
          },
          "similarStateCount": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "enum": [
              "STATE_CHANGE",
              "EVENT",
              "VULNERABILITY"
            ],
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "vulnerabilities": {
            "items": {
              "$ref": "#/components/schemas/ResourceTimelineVulnerability"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SecurityGroupDetail": {
        "properties": {
          "access": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ips": {
            "type": "string"
          },
          "ports": {
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceListModel": {
        "description": "Model for Resource List",
        "properties": {
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "Resource list id",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Last modified time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "members": {
            "description": "Resource list members. Each member is raw JSON. The content depends on the resource list type. For example, if the resource list type is TAG, then the member  is a JSON array of TAG key/value pairs.",
            "type": "string"
          },
          "name": {
            "description": "Name",
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "resourceListType": {
            "description": "Resource list type. Note: COMPUTE_ACCESS_GROUP is available only if you have a Compute license",
            "enum": [
              "TAG",
              "COMPUTE_ACCESS_GROUP"
            ],
            "type": "string"
          }
        },
        "required": [
          "members",
          "name",
          "resourceListType"
        ],
        "type": "object"
      },
      "AggregateAuditEvent": {
        "properties": {
          "anomalies": {
            "format": "int32",
            "type": "integer"
          },
          "bruteForceAnomalies": {
            "format": "int32",
            "type": "integer"
          },
          "cityId": {
            "format": "int32",
            "type": "integer"
          },
          "cityName": {
            "type": "string"
          },
          "countryId": {
            "format": "int32",
            "type": "integer"
          },
          "countryName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deviceFingerprintLoginAnomalies": {
            "format": "int32",
            "type": "integer"
          },
          "distinctUsers": {
            "format": "int32",
            "type": "integer"
          },
          "events": {
            "format": "int32",
            "type": "integer"
          },
          "geoAnomalies": {
            "format": "int32",
            "type": "integer"
          },
          "geoAnomaliesByAccessKey": {
            "format": "int32",
            "type": "integer"
          },
          "geoAnomaliesByUser": {
            "format": "int32",
            "type": "integer"
          },
          "latitude": {
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "format": "double",
            "type": "number"
          },
          "service": {
            "type": "string"
          },
          "serviceAnomalies": {
            "format": "int32",
            "type": "integer"
          },
          "serviceAnomaliesByAccessKey": {
            "format": "int32",
            "type": "integer"
          },
          "serviceAnomaliesByUser": {
            "format": "int32",
            "type": "integer"
          },
          "serviceHighlighted": {
            "type": "boolean"
          },
          "serviceNGeoAnomalies": {
            "format": "int32",
            "type": "integer"
          },
          "serviceNGeoAnomaliesByAccessKey": {
            "format": "int32",
            "type": "integer"
          },
          "serviceNGeoAnomaliesByUser": {
            "format": "int32",
            "type": "integer"
          },
          "stateId": {
            "format": "int32",
            "type": "integer"
          },
          "stateName": {
            "type": "string"
          },
          "timeTravelAnomalies": {
            "format": "int32",
            "type": "integer"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer"
          },
          "unusualLocations": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuditEvent": {
        "properties": {
          "accessKey": {
            "type": "string"
          },
          "accessKeyUsed": {
            "type": "boolean"
          },
          "account": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "anomalyId": {
            "type": "string"
          },
          "browser": {
            "type": "string"
          },
          "cityId": {
            "format": "int32",
            "type": "integer"
          },
          "cityLatitude": {
            "format": "double",
            "type": "number"
          },
          "cityLongitude": {
            "format": "double",
            "type": "number"
          },
          "cityName": {
            "type": "string"
          },
          "countryId": {
            "format": "int32",
            "type": "integer"
          },
          "countryName": {
            "type": "string"
          },
          "dynamicData": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "eventTs": {
            "format": "int64",
            "type": "integer"
          },
          "flaggedFeature": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ingestionTs": {
            "format": "int64",
            "type": "integer"
          },
          "internal": {
            "type": "boolean"
          },
          "ip": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notPersisted": {
            "type": "boolean"
          },
          "objects": {
            "items": {
              "$ref": "#/components/schemas/ResourceIdBean"
            },
            "type": "array"
          },
          "os": {
            "type": "string"
          },
          "rawEvent": {
            "type": "object"
          },
          "reasonIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "regionApiIdentifier": {
            "type": "string"
          },
          "regionId": {
            "format": "int32",
            "type": "integer"
          },
          "regionName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "stateId": {
            "format": "int32",
            "type": "integer"
          },
          "stateName": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "subjectType": {
            "enum": [
              "AWS_OTHER",
              "AZURE_OTHER",
              "GCP_OTHER",
              "AWS_IAM_USER",
              "AWS_ROOT",
              "AWS_ASSUMED_ROLE",
              "AWS_ROLE",
              "GCP_USER",
              "GCP_SERVICE_ACCOUNT",
              "AZURE_AD_USER",
              "AZURE_APPLICATION",
              "AWS_ACCOUNT",
              "AWS_SERVICE",
              "AWS_FEDERATED_USER",
              "AWS_SAML_USER",
              "AWS_WEB_IDENTITY_USER",
              "AWS_DIRECTORY"
            ],
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string"
          },
          "type": {
            "enum": [
              "UNKNOWN",
              "CREATE",
              "READ",
              "UPDATE",
              "DELETE",
              "LOGIN",
              "TEST",
              "AUDITD"
            ],
            "type": "string"
          },
          "userAgentBrowser": {
            "$ref": "#/components/schemas/UserAgentBrowser"
          },
          "userAgentOs": {
            "$ref": "#/components/schemas/UserAgentOs"
          }
        },
        "type": "object"
      },
      "AuditEventPageParams": {
        "properties": {
          "limit": {
            "description": "Results per Page",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "Page Token",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuditEventSearchParamsModel": {
        "description": "Audit event search parameters model",
        "properties": {
          "alertId": {
            "description": "Alert ID",
            "type": "string"
          },
          "filters": {
            "description": "Filters",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "type": "array"
          },
          "groupBy": {
            "description": "Group By parameters",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "limit": {
            "description": "Limit",
            "format": "int32",
            "type": "integer"
          },
          "query": {
            "description": "RQL query",
            "type": "string"
          },
          "sort": {
            "description": "Sort Fields",
            "items": {
              "$ref": "#/components/schemas/SortAuditEventSortField"
            },
            "type": "array"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          }
        },
        "type": "object"
      },
      "AutocompleteInfo": {
        "description": "Model for AutocompleteInfo",
        "properties": {
          "links": {
            "description": "JSON query builder links",
            "type": "string"
          },
          "needsOffsetUpdate": {
            "description": "Needs offset update (for internal use)",
            "type": "boolean"
          },
          "offset": {
            "description": "Offset within query",
            "format": "int32",
            "type": "integer"
          },
          "suggestions": {
            "description": "List of suggestions",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "translate": {
            "description": "Translate (for internal use)",
            "type": "boolean"
          },
          "valid": {
            "description": "Query is valid",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ConfigCsvJobResponseModel": {
        "description": " Response Model for CreateConfigRuleSearchCsvDownloadJob",
        "properties": {
          "createdBy": {
            "description": "Job creator",
            "readOnly": true,
            "type": "string"
          },
          "createdOn": {
            "description": "Creation timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "getdownloadUri": {
            "description": "Status URI",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Job ID",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConfigRulePageParams": {
        "properties": {
          "limit": {
            "description": "Results per Page",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "Page Token",
            "type": "string"
          },
          "withResourceJson": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ConfigRuleSearchParams": {
        "properties": {
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "limit": {
            "description": "Results per page. Does not apply to asynchronous search jobs.",
            "format": "int32",
            "type": "integer"
          },
          "query": {
            "description": "RQL query",
            "type": "string"
          },
          "searchDescription": {
            "description": "Search description. For asynchronouse search jobs only.",
            "type": "string"
          },
          "searchName": {
            "description": "Search name. For asynchronouse search jobs only.",
            "type": "string"
          },
          "sort": {
            "description": "Sort field data",
            "items": {
              "$ref": "#/components/schemas/SortConfigRuleSortField"
            },
            "type": "array"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time range"
              }
            ]
          },
          "withResourceJson": {
            "description": "true = include resource JSON. Default is true.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PagedResultsAuditEvent": {
        "properties": {
          "dynamicColumns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "infoMsg": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AuditEvent"
            },
            "type": "array"
          },
          "nextPageToken": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "totalRows": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PagedResultsResourceMetaModel": {
        "properties": {
          "dynamicColumns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "infoMsg": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ResourceMetaModel"
            },
            "type": "array"
          },
          "nextPageToken": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "totalRows": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceIdBean": {
        "description": "Model for Resource ID Bean",
        "properties": {
          "account": {
            "description": "Account",
            "readOnly": true,
            "type": "string"
          },
          "apiName": {
            "description": "Resource API name",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "enum": [
              "ALL",
              "AWS",
              "AZURE",
              "GCP",
              "ALIBABA_CLOUD",
              "OCI",
              "IBM"
            ],
            "readOnly": true,
            "type": "string"
          },
          "insert_ts": {
            "description": "Insertion timestamp",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "region": {
            "description": "Region",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "Resource",
            "readOnly": true,
            "type": "string"
          },
          "resourceApiId": {
            "description": "Resource API ID",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          },
          "vpc": {
            "description": "VCP",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchModel": {
        "properties": {
          "alertId": {
            "description": "Alert ID",
            "readOnly": true,
            "type": "string"
          },
          "async": {
            "description": "true = Is Async",
            "readOnly": true,
            "type": "boolean"
          },
          "asyncResultUrl": {
            "description": "Async Result Url",
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ],
            "type": "string"
          },
          "cursor": {
            "description": "Cursor",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "description": "Search Description",
            "type": "string"
          },
          "filters": {
            "description": "View Order",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "groupBy": {
            "description": "Group By",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "name": {
            "description": "Search Name",
            "type": "string"
          },
          "query": {
            "description": "RQL Query",
            "type": "string"
          },
          "saved": {
            "description": "Search Exists",
            "type": "boolean"
          },
          "searchType": {
            "description": "Search Type",
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timeGranularity": {
            "description": "Time Granularity",
            "readOnly": true,
            "type": "string"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          }
        },
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object"
      },
      "SearchResponseModel": {
        "properties": {
          "alertId": {
            "description": "Alert ID",
            "readOnly": true,
            "type": "string"
          },
          "async": {
            "description": "true = Is Async",
            "readOnly": true,
            "type": "boolean"
          },
          "asyncResultUrl": {
            "description": "Async Result Url",
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ],
            "type": "string"
          },
          "cursor": {
            "description": "Cursor",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "type": "object"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "description": "Search Description",
            "type": "string"
          },
          "filters": {
            "description": "View Order",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "groupBy": {
            "description": "Group By",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "name": {
            "description": "Search Name",
            "type": "string"
          },
          "query": {
            "description": "RQL Query",
            "type": "string"
          },
          "saved": {
            "description": "Search Exists",
            "type": "boolean"
          },
          "searchType": {
            "description": "Search Type",
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timeGranularity": {
            "description": "Time Granularity",
            "readOnly": true,
            "type": "string"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          }
        },
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object"
      },
      "SearchResponseModelListAggregateAuditEvent": {
        "properties": {
          "alertId": {
            "description": "Alert ID",
            "readOnly": true,
            "type": "string"
          },
          "async": {
            "description": "true = Is Async",
            "readOnly": true,
            "type": "boolean"
          },
          "asyncResultUrl": {
            "description": "Async Result Url",
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ],
            "type": "string"
          },
          "cursor": {
            "description": "Cursor",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AggregateAuditEvent"
            },
            "type": "array"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "description": "Search Description",
            "type": "string"
          },
          "filters": {
            "description": "View Order",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "groupBy": {
            "description": "Group By",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "name": {
            "description": "Search Name",
            "type": "string"
          },
          "query": {
            "description": "RQL Query",
            "type": "string"
          },
          "saved": {
            "description": "Search Exists",
            "type": "boolean"
          },
          "searchType": {
            "description": "Search Type",
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timeGranularity": {
            "description": "Time Granularity",
            "readOnly": true,
            "type": "string"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          }
        },
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object"
      },
      "SearchResponseModelListObject": {
        "properties": {
          "alertId": {
            "description": "Alert ID",
            "readOnly": true,
            "type": "string"
          },
          "async": {
            "description": "true = Is Async",
            "readOnly": true,
            "type": "boolean"
          },
          "asyncResultUrl": {
            "description": "Async Result Url",
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ],
            "type": "string"
          },
          "cursor": {
            "description": "Cursor",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "description": "Search Description",
            "type": "string"
          },
          "filters": {
            "description": "View Order",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "groupBy": {
            "description": "Group By",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "name": {
            "description": "Search Name",
            "type": "string"
          },
          "query": {
            "description": "RQL Query",
            "type": "string"
          },
          "saved": {
            "description": "Search Exists",
            "type": "boolean"
          },
          "searchType": {
            "description": "Search Type",
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timeGranularity": {
            "description": "Time Granularity",
            "readOnly": true,
            "type": "string"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          }
        },
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object"
      },
      "SearchResponseModelPagedResultsAuditEvent": {
        "properties": {
          "alertId": {
            "description": "Alert ID",
            "readOnly": true,
            "type": "string"
          },
          "async": {
            "description": "true = Is Async",
            "readOnly": true,
            "type": "boolean"
          },
          "asyncResultUrl": {
            "description": "Async Result Url",
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ],
            "type": "string"
          },
          "cursor": {
            "description": "Cursor",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/PagedResultsAuditEvent"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "description": "Search Description",
            "type": "string"
          },
          "filters": {
            "description": "View Order",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "groupBy": {
            "description": "Group By",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "name": {
            "description": "Search Name",
            "type": "string"
          },
          "query": {
            "description": "RQL Query",
            "type": "string"
          },
          "saved": {
            "description": "Search Exists",
            "type": "boolean"
          },
          "searchType": {
            "description": "Search Type",
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timeGranularity": {
            "description": "Time Granularity",
            "readOnly": true,
            "type": "string"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          }
        },
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object"
      },
      "SearchResponseModelPagedResultsResourceMetaModel": {
        "properties": {
          "alertId": {
            "description": "Alert ID",
            "readOnly": true,
            "type": "string"
          },
          "async": {
            "description": "true = Is Async",
            "readOnly": true,
            "type": "boolean"
          },
          "asyncResultUrl": {
            "description": "Async Result Url",
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ],
            "type": "string"
          },
          "cursor": {
            "description": "Cursor",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/PagedResultsResourceMetaModel"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "description": "Search Description",
            "type": "string"
          },
          "filters": {
            "description": "View Order",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "groupBy": {
            "description": "Group By",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "name": {
            "description": "Search Name",
            "type": "string"
          },
          "query": {
            "description": "RQL Query",
            "type": "string"
          },
          "saved": {
            "description": "Search Exists",
            "type": "boolean"
          },
          "searchType": {
            "description": "Search Type",
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timeGranularity": {
            "description": "Time Granularity",
            "readOnly": true,
            "type": "string"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          }
        },
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object"
      },
      "SortAuditEventSortField": {
        "properties": {
          "direction": {
            "description": "Direction",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "field": {
            "enum": [
              "ID",
              "TIME",
              "OPERATION",
              "CLOUD_SERVICE",
              "CRUD",
              "USER",
              "CLOUD_ACCOUNT",
              "CLOUD_REGION",
              "TIMESTAMP"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "SortConfigRuleSortField": {
        "properties": {
          "direction": {
            "description": "Direction",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "field": {
            "enum": [
              "ID",
              "TIME",
              "API_NAME",
              "CUSTOMER_ID",
              "INSERT_TS",
              "JSON",
              "CLOUD_ACCOUNT",
              "CLOUD_REGION",
              "STATE_ID"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserAgentBrowser": {
        "properties": {
          "hash": {
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserAgentOs": {
        "properties": {
          "hash": {
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SavedRecentSearch": {
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "policies": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array"
          },
          "query": {
            "type": "string"
          },
          "searchModel": {
            "$ref": "#/components/schemas/SearchModel"
          },
          "searchName": {
            "type": "string"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SearchResponseModelSearchModel": {
        "properties": {
          "alertId": {
            "description": "Alert ID",
            "readOnly": true,
            "type": "string"
          },
          "async": {
            "description": "true = Is Async",
            "readOnly": true,
            "type": "boolean"
          },
          "asyncResultUrl": {
            "description": "Async Result Url",
            "example": "/search/config/jobs/2df49d4f72e842b582b123bc2b7826b3/download",
            "readOnly": true,
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud Type",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci"
            ],
            "type": "string"
          },
          "cursor": {
            "description": "Cursor",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/SearchModel"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "description": "Search Description",
            "type": "string"
          },
          "filters": {
            "description": "View Order",
            "items": {
              "$ref": "#/components/schemas/UIFilterModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "groupBy": {
            "description": "Group By",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Search ID",
            "type": "string"
          },
          "name": {
            "description": "Search Name",
            "type": "string"
          },
          "query": {
            "description": "RQL Query",
            "type": "string"
          },
          "saved": {
            "description": "Search Exists",
            "type": "boolean"
          },
          "searchType": {
            "description": "Search Type",
            "enum": [
              "network",
              "audit_event",
              "config",
              "asset"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timeGranularity": {
            "description": "Time Granularity",
            "readOnly": true,
            "type": "string"
          },
          "timeRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeRangeConfigModel"
              },
              {
                "description": "Time Range"
              }
            ]
          }
        },
        "required": [
          "query",
          "timeRange"
        ],
        "type": "object"
      },
      "EnterpriseSettingsRequestModel": {
        "description": "Model used for EnterpriseSettings",
        "properties": {
          "accessKeyMaxValidity": {
            "description": "Access Keys maximum validity in days",
            "format": "int32",
            "type": "integer"
          },
          "alarmEnabled": {
            "description": "Alarms enabled",
            "enum": [
              true,
              false
            ],
            "type": "boolean"
          },
          "applyDefaultPoliciesEnabled": {
            "description": "Apply default policies enabled",
            "enum": [
              true,
              false
            ],
            "type": "boolean"
          },
          "auditLogSiemIntgrIds": {
            "description": "Enabled Integration Ids for Audit Log and SIEM integration",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "auditLogsEnabled": {
            "description": "Audit Log Integrations Enabled",
            "enum": [
              true,
              false
            ],
            "type": "boolean"
          },
          "defaultPoliciesEnabled": {
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Default Policies Enabled. An example is {\"low\":true, \"medium\":true, \"high\":true}",
            "type": "object"
          },
          "namedUsersAccessKeysExpiryNotificationsEnabled": {
            "description": "Access Keys Expiry Notifications for Named User Accounts Enabled",
            "type": "boolean"
          },
          "notificationThresholdAccessKeysExpiry": {
            "description": "Access Keys Expiry Notifications Threshold Value",
            "format": "int32",
            "type": "integer"
          },
          "requireAlertDismissalNote": {
            "description": "Require Alert Dismissal Note",
            "type": "boolean"
          },
          "serviceUsersAccessKeysExpiryNotificationsEnabled": {
            "description": "Access Keys Expiry Notifications for Service User Accounts Enabled",
            "type": "boolean"
          },
          "sessionTimeout": {
            "description": "Browser Session Timeout",
            "format": "int32",
            "type": "integer"
          },
          "userAttributionInNotification": {
            "description": "User Attribution in Notification",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "TmpModel": {
        "properties": {
          "message": {
            "description": "Message",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MultiRoleUserProfile1": {
        "description": "Model containing user profile",
        "properties": {
          "accessKeysAllowed": {
            "description": "Access keys allowed",
            "type": "boolean"
          },
          "activeRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileRoleDetailModel"
              },
              {
                "description": "Active Role Info",
                "readOnly": true
              }
            ]
          },
          "defaultRoleId": {
            "description": "Default Role ID",
            "type": "string"
          },
          "displayName": {
            "description": "Display name",
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "description": "Email ID",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "readOnly": true,
            "type": "boolean"
          },
          "firstName": {
            "description": "First name. Maximum length is 300 characters.",
            "type": "string"
          },
          "lastLoginTs": {
            "description": "Last login time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time profile was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastName": {
            "description": "Last name.  Maximum length is 300 characters.",
            "type": "string"
          },
          "roleIds": {
            "description": "Role IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "roles": {
            "description": "All Role Info",
            "items": {
              "$ref": "#/components/schemas/UserProfileRoleDetailModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "timeZone": {
            "description": "Time zone (e.g. America/Los_Angeles)",
            "type": "string"
          }
        },
        "required": [
          "defaultRoleId",
          "email",
          "firstName",
          "lastName",
          "roleIds",
          "timeZone"
        ],
        "type": "object"
      },
      "UserAccountModel": {
        "description": "Model for User Account",
        "properties": {
          "accessKeyExpiration": {
            "description": "Access key expiration timestamp in milliseconds",
            "format": "int64",
            "type": "integer"
          },
          "accessKeyName": {
            "description": "Access key name",
            "type": "string"
          },
          "accessKeysAllowed": {
            "description": "Access keys allowed",
            "type": "boolean"
          },
          "accessKeysCount": {
            "description": "Access key count",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "activeRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileRoleDetailModel"
              },
              {
                "description": "Active Role Info",
                "readOnly": true
              }
            ]
          },
          "defaultRoleId": {
            "description": "Default Role ID",
            "type": "string"
          },
          "displayName": {
            "description": "Display name",
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "description": "Email ID",
            "type": "string"
          },
          "enableKeyExpiration": {
            "description": "true = Enable access key expiration. Default is false.",
            "type": "boolean"
          },
          "enabled": {
            "description": "Enabled",
            "readOnly": true,
            "type": "boolean"
          },
          "firstName": {
            "description": "First name. Maximum length is 300 characters.",
            "type": "string"
          },
          "lastLoginTs": {
            "description": "Last login time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time profile was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastName": {
            "description": "Last name.  Maximum length is 300 characters.",
            "type": "string"
          },
          "roleIds": {
            "description": "Role IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "roles": {
            "description": "All Role Info",
            "items": {
              "$ref": "#/components/schemas/UserProfileRoleDetailModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "timeZone": {
            "description": "Time zone (e.g. America/Los_Angeles)",
            "type": "string"
          },
          "type": {
            "description": "User type. Default is USER_ACCOUNT.",
            "enum": [
              "USER_ACCOUNT",
              "SERVICE_ACCOUNT"
            ],
            "type": "string"
          },
          "username": {
            "description": "User or service account name. Maximum length is 300 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserProfileModel": {
        "description": "Model containing user profile",
        "properties": {
          "accessKeysAllowed": {
            "description": "Access keys allowed",
            "type": "boolean"
          },
          "displayName": {
            "description": "Display name",
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "description": "Email ID",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled",
            "readOnly": true,
            "type": "boolean"
          },
          "firstName": {
            "description": "First name. Maximum length is 300 characters.",
            "type": "string"
          },
          "lastLoginTs": {
            "description": "Last login time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time profile was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastName": {
            "description": "Last name.  Maximum length is 300 characters.",
            "type": "string"
          },
          "role": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Role",
            "readOnly": true,
            "type": "object"
          },
          "roleId": {
            "description": "Role ID",
            "type": "string"
          },
          "roleType": {
            "description": "Role type",
            "readOnly": true,
            "type": "string"
          },
          "timeZone": {
            "description": "Time zone (e.g. America/Los_Angeles)",
            "type": "string"
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "roleId",
          "timeZone"
        ],
        "type": "object"
      },
      "UserProfileRoleDetailModel": {
        "description": "Model for User Profile Role Detail",
        "properties": {
          "id": {
            "description": "User Role ID",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "User Role Name",
            "readOnly": true,
            "type": "string"
          },
          "onlyAllowCIAccess": {
            "description": "true = Allow only CI Access for Build and Deploy security roles",
            "readOnly": true,
            "type": "boolean"
          },
          "onlyAllowComputeAccess": {
            "description": "true = Allow only Compute Access for reduced system admin roles",
            "readOnly": true,
            "type": "boolean"
          },
          "onlyAllowReadAccess": {
            "description": "true = Allow only Read Access for",
            "readOnly": true,
            "type": "boolean"
          },
          "type": {
            "description": "User Role Type (Default or Custom Permission Group Name).",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Attributes1": {
        "description": "Additional attributes of the the user role",
        "properties": {
          "hasDefenderPermissions": {
            "description": "User has compute defender permissions",
            "type": "boolean"
          },
          "onlyAllowCIAccess": {
            "description": "User can only use access keys to use Prisma Cloud. UI access will be unavailable.",
            "type": "boolean"
          },
          "onlyAllowComputeAccess": {
            "description": "User can only access the Prisma Cloud Compute Console",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UserRoleModel": {
        "description": "Model for User Role",
        "properties": {
          "accountGroupIds": {
            "description": "Accessible Account Group IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "additionalAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Attributes1"
              },
              {
                "description": "Additional attributes of the the user role"
              }
            ]
          },
          "associatedUsers": {
            "description": "Associated application users which cannot exist in the system without the user role",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "codeRepositoryIds": {
            "description": "Accessible Code Repository IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "User Role ID",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Last Modified Time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "resourceListIds": {
            "description": "Accessible Resource List IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "restrictDismissalAccess": {
            "type": "boolean"
          },
          "roleType": {
            "description": "User Role Type (Default or Custom Permission Group Name).",
            "type": "string"
          }
        },
        "required": [
          "name",
          "roleType"
        ],
        "type": "object"
      },
      "UserRoleViewModel": {
        "description": "Model for User Role View",
        "properties": {
          "accountGroupIds": {
            "description": "Accessible Account Group IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "accountGroups": {
            "description": "Associated Account Groups",
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "additionalAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Attributes1"
              },
              {
                "description": "Additional attributes of the the user role"
              }
            ]
          },
          "associatedUsers": {
            "description": "Associated application users which cannot exist in the system without the user role",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "codeRepositories": {
            "description": "Associated Code Repositories",
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "codeRepositoryIds": {
            "description": "Accessible Code Repository IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "User Role ID",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last Modified By",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Last Modified Time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "resourceListIds": {
            "description": "Accessible Resource List IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resourceLists": {
            "description": "Associated Resource Lists",
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "restrictDismissalAccess": {
            "type": "boolean"
          },
          "roleType": {
            "description": "User Role Type (Default or Custom Permission Group Name).",
            "type": "string"
          }
        },
        "required": [
          "name",
          "roleType"
        ],
        "type": "object"
      }
    },
    "requestBodies": {
      "AccountGroupModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AccountGroupModel"
            }
          }
        },
        "description": "Account Group",
        "required": true
      },
      "AdoptionAdvisorReportGenerationConfigApiModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AdoptionAdvisorReportGenerationConfigApiModel"
            }
          }
        }
      },
      "PolicyScanConfigModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/PolicyScanConfigModel"
            }
          }
        },
        "description": "Model for Policy Scan Config",
        "required": true
      },
      "FilterModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/FilterModel"
            }
          }
        }
      },
      "FilterModel2": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/FilterModel"
            }
          }
        },
        "description": "Model for Filter",
        "required": true
      },
      "FilterSuggestionModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/FilterSuggestionModel"
            }
          }
        }
      },
      "FilterModel3": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FilterModel"
            }
          }
        }
      },
      "AWSOrgRequestConfigModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/AWSOrgRequestConfigModel"
            }
          }
        }
      },
      "AwsCloudAccountRequestModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AwsCloudAccountRequestModel"
            }
          }
        },
        "description": "Cloud Account",
        "required": true
      },
      "GcpResourceControllerRequestModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GcpResourceControllerRequestModel"
            }
          }
        },
        "description": "The content of the credentials object is the Service Account Key for your Google Cloud service account",
        "required": true
      },
      "Resources": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Resources"
            }
          }
        },
        "description": "Cloud service provider resource IDs",
        "required": true
      },
      "add-cloud-accountBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          }
        },
        "description": "Cloud Account",
        "required": true
      },
      "get-list-of-children-under-parent-aws-legacyBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          }
        },
        "description": "Cloud Account JSON",
        "required": true
      },
      "ComplianceRequirementModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ComplianceRequirementModel"
            }
          }
        }
      },
      "ComplianceSectionModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ComplianceSectionModel"
            }
          }
        }
      },
      "ComplianceStandardModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ComplianceStandardModel"
            }
          }
        }
      },
      "DLPDashboardFilterModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/DLPDashboardFilterModel"
            }
          }
        }
      },
      "DLPInventoryFilterModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/DLPInventoryFilterModel"
            }
          }
        }
      },
      "DLPInventoryResourceExplorerRequest": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/DLPInventoryResourceExplorerRequest"
            }
          }
        }
      },
      "CreateDataPatternRequest": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/CreateDataPatternRequest"
            }
          }
        }
      },
      "DataProfile": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/DataProfile"
            }
          }
        }
      },
      "IntegrationModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/IntegrationModel"
            }
          }
        },
        "description": "Model for Integration",
        "required": true
      },
      "IpAllowListParams": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/IpAllowListParams"
            }
          }
        },
        "description": "Model for login IP allow list parameters",
        "required": true
      },
      "PublicNetwork": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/PublicNetwork"
            }
          }
        },
        "description": "Model for Public Network",
        "required": true
      },
      "PublicNetworkCidrBlock": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/PublicNetworkCidrBlock"
            }
          }
        },
        "description": "Model for Public Network CIDR Block",
        "required": true
      },
      "PolicyModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/PolicyModel"
            }
          }
        },
        "description": "Model for Policy",
        "required": true
      },
      "ResourceExplorerRequest": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/ResourceExplorerRequest"
            }
          }
        }
      },
      "AuditEventSearchParamsModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/AuditEventSearchParamsModel"
            }
          }
        },
        "description": "Audit event search parameters model",
        "required": true
      },
      "ConfigRuleSearchParams": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/ConfigRuleSearchParams"
            }
          }
        },
        "description": "Config rule search parameters model",
        "required": true
      },
      "SearchModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/SearchModel"
            }
          }
        },
        "description": "Search model",
        "required": true
      },
      "MultiRoleUserProfile": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MultiRoleUserProfile1"
            }
          }
        },
        "description": "Model containing user profile",
        "required": true
      },
      "UserRoleModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserRoleModel"
            }
          }
        },
        "description": "User Role",
        "required": true
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    },
    "headers": {
      "prismaId": {
        "description": "x-prisma-tenant-id",
        "style": "simple",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}