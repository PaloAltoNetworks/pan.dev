{
  "openapi": "3.0.1",
  "info": {
    "title": "Prisma Cloud Permission Groups API",
    "description": "Permission groups enable you to restrict access to one or more features available on the Prisma Cloud administrative console. Permission group APIs allow you to retrieve, update or delete one or more existing permissions groups. You can also use these APIs to create a custom permission group and then you must attach it to a role and assign the role to a user.",
    "contact": {},
    "version": "Latest"
  },
  "servers": [{ "url": "https://api.prismacloud.io" }],
  "tags": [
    {
      "description": "The Permission Groups endpoints are listed below.",
      "name": "Permission Groups"
    }
  ],
  "paths": {
    "/authz/v1/feature": {
      "get": {
        "tags": ["Permission Groups"],
        "summary": "Get all active features",
        "description": "Returns a list of Prisma Cloud features that can be added to Custom Permission Groups",
        "operationId": "getFeatures",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": { "type": "string" }
              }
            },
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/authz/v1/feature\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/authz/v1/feature \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/authz/v1/permission_group/{id}": {
      "get": {
        "tags": ["Permission Groups"],
        "summary": "Get an existing Permission Group by ID",
        "description": "Queries a list of existing permission groups by ID and returns a specific permission group that matches the Permission Group ID.",
        "operationId": "get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PermissionGroupID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "includeAssociatedRoles",
            "in": "query",
            "description": "To include associated roles in the response",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGroupDetail"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": { "type": "string" }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGroupDetail"
                }
              }
            }
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/authz/v1/permission_group/{id}\"\n\nquerystring = {\"includeAssociatedRoles\":\"SOME_BOOLEAN_VALUE\"}\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/authz/v1/permission_group/{id}?includeAssociatedRoles=SOME_BOOLEAN_VALUE' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "put": {
        "tags": ["Permission Groups"],
        "summary": "Update an existing Permission Group",
        "description": "Updates the parameters of an existing permission group.",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PermissionGroupId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": { "description": "Successful operation" },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": { "type": "string" }
              }
            }
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/authz/v1/permission_group/{id}\"\n\npayload = {\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"features\": [\n        {\n            \"featureName\": \"string\",\n            \"operations\": {\n                \"property1\": {},\n                \"property2\": {}\n            }\n        }\n    ]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/authz/v1/permission_group/{id} \\\n  --header 'content-type: application/json' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"name\":\"string\",\"description\":\"string\",\"features\":[{\"featureName\":\"string\",\"operations\":{\"property1\":{},\"property2\":{}}}]}'"
          }
        ]
      },
      "delete": {
        "tags": ["Permission Groups"],
        "summary": "Delete an existing Permission Group by ID",
        "description": "Deletes the default or custom permission group with the specified ID.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PermissionGroupID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Successful operation" },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": { "type": "string" }
              }
            }
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/authz/v1/permission_group/{id}\"\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.prismacloud.io/authz/v1/permission_group/{id} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/authz/v1/permission_group": {
      "get": {
        "tags": ["Permission Groups"],
        "summary": "Get all existing Permission Groups",
        "description": "Returns a list of all existing Permission Groups.",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "includeAssociatedRoles",
            "in": "query",
            "description": "To include associated roles in the response",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "includeFeatures",
            "in": "query",
            "description": "To include permitted features in the response",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionGroupDetail"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": { "type": "string" }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionGroupDetail"
                  }
                }
              }
            }
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/authz/v1/permission_group\"\n\nquerystring = {\"includeAssociatedRoles\":\"SOME_BOOLEAN_VALUE\",\"includeFeatures\":\"SOME_BOOLEAN_VALUE\"}\n\nheaders = {\"x-redlock-auth\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/authz/v1/permission_group?includeAssociatedRoles=SOME_BOOLEAN_VALUE&includeFeatures=SOME_BOOLEAN_VALUE' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "post": {
        "tags": ["Permission Groups"],
        "summary": "Add new Custom Permission Group",
        "description": "Creates a new custom permission group with granular permissions that restrict access to the Prisma Cloud administrative console. Values include name, optional description and selection of enabled features and functions.",
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": { "description": "Successful operation" },
          "4XX": {
            "description": "Client error",
            "headers": {
              "x-redlock-status": {
                "description": "error description",
                "style": "simple",
                "schema": { "type": "string" }
              }
            }
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/authz/v1/permission_group\"\n\npayload = {\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"features\": [\n        {\n            \"featureName\": \"string\",\n            \"operations\": {\n                \"property1\": {},\n                \"property2\": {}\n            }\n        }\n    ]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"x-redlock-auth\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/authz/v1/permission_group \\\n  --header 'content-type: application/json' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"name\":\"string\",\"description\":\"string\",\"features\":[{\"featureName\":\"string\",\"operations\":{\"property1\":{},\"property2\":{}}}]}'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorDetails": {
        "required": ["message", "name"],
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "message": { "type": "string" }
        }
      },
      "SpringErrorResponse": {
        "required": ["error", "message", "path", "status", "timestamp"],
        "type": "object",
        "properties": {
          "timestamp": { "type": "string" },
          "status": { "type": "integer", "format": "int32" },
          "error": { "type": "string" },
          "errorDetails": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ErrorDetails" }
          },
          "message": { "type": "string" },
          "path": { "type": "string" }
        }
      },
      "UserAccount": {
        "required": ["email", "firstName", "lastName", "timeZone"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "enabled": { "type": "boolean", "readOnly": true },
          "lastModifiedBy": { "type": "string", "readOnly": true },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "displayName": { "type": "string", "readOnly": true },
          "ssoBypassAllowed": { "type": "boolean" },
          "accessKeysAllowed": { "type": "boolean" },
          "defaultRoleId": { "type": "string" },
          "roleIds": { "type": "array", "items": { "type": "string" } },
          "roles": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserProfileRoleDetail" }
          },
          "activeRole": {
            "$ref": "#/components/schemas/UserProfileRoleDetail"
          },
          "username": {
            "type": "string",
            "description": "User or service account name"
          },
          "type": {
            "type": "string",
            "description": "User type. Default is USER_ACCOUNT.",
            "enum": ["USER_ACCOUNT", "SERVICE_ACCOUNT"]
          },
          "accessKeyName": { "type": "string" },
          "accessKeyExpiration": {
            "type": "integer",
            "description": "Access key expiration timestamp in milliseconds",
            "format": "int64"
          },
          "enableKeyExpiration": {
            "type": "boolean",
            "description": "true = Enable access key expiration. Default is false."
          },
          "accessKeysCount": {
            "type": "integer",
            "description": "Access key count",
            "format": "int32",
            "readOnly": true
          },
          "userRoleName": { "type": "string", "writeOnly": true }
        }
      },
      "UserProfileRoleDetail": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "onlyAllowCIAccess": { "type": "boolean" },
          "onlyAllowComputeAccess": { "type": "boolean" },
          "onlyAllowReadAccess": { "type": "boolean" }
        }
      },
      "CreateUserAccessKeyResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "secretKey": { "type": "string" }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "userName": { "type": "string" },
          "password": { "type": "string" },
          "newPassword": { "type": "string" }
        }
      },
      "SupportUserProfile": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "supportAccessLevel": {
            "type": "string",
            "enum": ["NONE", "LIGHT_AGENT", "AGENT", "ADMIN"]
          },
          "failedLoginCount": { "type": "integer", "format": "int32" }
        }
      },
      "UserProfile": {
        "required": ["email", "firstName", "lastName", "roleId", "timeZone"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "enabled": { "type": "boolean", "readOnly": true },
          "roleId": { "type": "string" },
          "lastModifiedBy": { "type": "string", "readOnly": true },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "role": {
            "type": "object",
            "additionalProperties": { "type": "string", "readOnly": true },
            "readOnly": true
          },
          "roleType": { "type": "string", "readOnly": true },
          "displayName": { "type": "string", "readOnly": true },
          "ssoBypassAllowed": { "type": "boolean" },
          "accessKeysAllowed": { "type": "boolean" },
          "userRoleName": { "type": "string", "writeOnly": true }
        }
      },
      "OpenIdConfigurationResponse": {
        "type": "object",
        "properties": {
          "issuer": { "type": "string" },
          "authorization_endpoint": { "type": "string" },
          "jwks_uri": { "type": "string" },
          "token_endpoint": { "type": "string" },
          "token_endpoint_auth_methods_supported": {
            "type": "array",
            "items": { "type": "string" }
          },
          "introspection_endpoint": { "type": "string" },
          "introspection_endpoint_auth_methods_supported": {
            "type": "array",
            "items": { "type": "string" }
          },
          "revocation_endpoint": { "type": "string" },
          "response_types_supported": {
            "type": "array",
            "items": { "type": "string" }
          },
          "subject_types_supported": {
            "type": "array",
            "items": { "type": "string" }
          },
          "id_token_signing_alg_values_supported": {
            "type": "array",
            "items": { "type": "string" }
          },
          "grant_types_supported": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "Feature": {
        "required": ["featureName", "operations"],
        "type": "object",
        "properties": {
          "featureName": {
            "type": "string",
            "description": "Prisma Cloud Feature Name. Prisma Cloud feature names can be retreived from GET: /authz/v1/feature API Endpoint"
          },
          "operations": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "A mapping of operations and a boolean value representing whether the privilege to perform the operation needs to be granted."
            },
            "description": "A mapping of operations and a boolean value representing whether the privilege to perform the operation needs to be granted."
          }
        },
        "description": "Collection of permitted features associated with the role. \n Refer to PermissionGroup API docs to get the entire list of PC features."
      },
      "RoleInternalPermissionGroup": {
        "required": ["custom", "features", "name"],
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "PermissionGroup Name" },
          "custom": {
            "type": "boolean",
            "description": "Indicates whether the permissionGroup associated with the role is 'Default' or 'Custom' type."
          },
          "features": {
            "type": "array",
            "description": "Collection of permitted features associated with the role. \n Refer to PermissionGroup API docs to get the entire list of PC features.",
            "items": { "$ref": "#/components/schemas/Feature" }
          }
        },
        "description": "Permission Group is only populated for the active role, i.e. active=true"
      },
      "UserInternalRole": {
        "required": ["active", "default", "id", "name"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Unique id of the Role" },
          "name": { "type": "string", "description": "Name of the Role" },
          "active": {
            "type": "boolean",
            "description": "Indicates whether the role is active role or not"
          },
          "permissionGroup": {
            "$ref": "#/components/schemas/RoleInternalPermissionGroup"
          },
          "default": {
            "type": "boolean",
            "description": "Indicates whether the role is default or not"
          }
        }
      },
      "UserProfileV2": {
        "required": ["email", "firstName", "lastName", "timeZone"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "displayName": { "type": "string" },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "accessKeysAllowed": { "type": "boolean" },
          "roles": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserInternalRole" }
          }
        }
      },
      "AllowListParams": {
        "title": "IpAllowListParams",
        "required": ["cidr", "name"],
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "cidr": { "type": "array", "items": { "type": "string" } },
          "trimmedName": { "type": "string" },
          "trimmedDescription": { "type": "string" },
          "trimmedCidrs": { "type": "array", "items": { "type": "string" } }
        },
        "description": "Model for login IP allow list parameters"
      },
      "IpAllowListData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Login IP allow list ID",
            "readOnly": true
          },
          "name": { "type": "string", "description": "Name" },
          "description": { "type": "string", "description": "Description" },
          "cidr": {
            "type": "array",
            "description": "List of CIDR blocks (IP addresses) from which access is allowed when Login IP Allow List flag is enabled.",
            "items": {
              "type": "string",
              "description": "List of CIDR blocks (IP addresses) from which access is allowed when Login IP Allow List flag is enabled."
            }
          },
          "lastModifiedTs": {
            "type": "integer",
            "description": "Timestamp for last modification of CIDR block list",
            "format": "int64",
            "readOnly": true
          }
        },
        "description": "Model for login IP allow list data"
      },
      "CustomerSupportFilter": {
        "type": "object",
        "properties": {
          "customerName": { "type": "string" },
          "customerId": { "type": "integer", "format": "int32" },
          "entitlementSerialNumber": { "type": "string" }
        }
      },
      "UserAccessKeyDetailResponse": {
        "type": "object",
        "properties": {
          "Access key id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": { "type": "string" },
          "createdBy": { "type": "string" },
          "createdTs": { "type": "integer", "format": "int64" },
          "lastUsedTime": { "type": "integer", "format": "int64" },
          "status": { "type": "string" },
          "expiresOn": { "type": "integer", "format": "int64" },
          "role": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Role of User"
            },
            "description": "Role of User"
          },
          "roleType": { "type": "string" },
          "username": { "type": "string" }
        }
      },
      "Attributes": {
        "type": "object",
        "properties": {
          "onlyAllowCIAccess": { "type": "boolean" },
          "onlyAllowComputeAccess": { "type": "boolean" },
          "hasDefenderPermissions": { "type": "boolean" },
          "onlyAllowReadAccess": { "type": "boolean" }
        }
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "lastModifiedBy": { "type": "string" },
          "lastModifiedTs": { "type": "integer", "format": "int64" },
          "accountGroupIds": { "type": "array", "items": { "type": "string" } },
          "resourceListIds": { "type": "array", "items": { "type": "string" } },
          "codeRepositoryIds": {
            "type": "array",
            "items": { "type": "string" }
          },
          "associatedUsers": { "type": "array", "items": { "type": "string" } },
          "restrictDismissalAccess": { "type": "boolean" },
          "additionalAttributes": { "$ref": "#/components/schemas/Attributes" },
          "roleType": { "type": "string" }
        }
      },
      "CustomerNameResponse": {
        "type": "object",
        "properties": {
          "customerName": { "type": "string" },
          "prismaId": { "type": "string" },
          "tosAccepted": { "type": "boolean" }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "token": { "type": "string" },
          "customerNames": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CustomerNameResponse" }
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "GetServicesResponse": {
        "required": ["services"],
        "type": "object",
        "properties": {
          "services": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/ServiceResponse" }
          },
          "errors": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          }
        }
      },
      "JwkResponse": {
        "required": ["alg", "key_ops", "kid", "kty", "used_for_grant"],
        "type": "object",
        "properties": {
          "kid": { "type": "string" },
          "kty": { "type": "string" },
          "alg": {
            "type": "string",
            "enum": ["HS256", "HS384", "HS512", "RS256", "RS384", "RS512"]
          },
          "key_ops": { "type": "array", "items": { "type": "string" } },
          "used_for_grant": { "type": "boolean" },
          "expires_at": { "type": "integer", "format": "int64" },
          "token_duration_seconds": { "type": "integer", "format": "int64" },
          "k": { "type": "string" },
          "e": { "type": "string" },
          "n": { "type": "string" },
          "d": { "type": "string" },
          "p": { "type": "string" },
          "q": { "type": "string" },
          "dp": { "type": "string" },
          "dq": { "type": "string" },
          "qi": { "type": "string" }
        }
      },
      "JwksResponse": {
        "required": ["keys"],
        "type": "object",
        "properties": {
          "keys": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/JwkResponse" }
          }
        }
      },
      "ServiceResponse": {
        "required": [
          "id",
          "is_enabled",
          "jwks",
          "password",
          "roles",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "username": { "type": "string" },
          "password": { "type": "string" },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "jwks": { "$ref": "#/components/schemas/JwksResponse" },
          "customer_name": { "type": "string", "deprecated": true },
          "prisma_id": { "type": "string" },
          "is_enabled": { "type": "boolean" }
        }
      },
      "LoginRequest": {
        "title": "Model used for authentication",
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "customerName": { "type": "string" },
          "prismaId": { "type": "string" },
          "password": { "type": "string" },
          "tosAccepted": { "type": "boolean" },
          "ssoSession": { "type": "boolean" }
        },
        "description": "Model used for authentication"
      },
      "EntitlementToRoleSearchRequest": {
        "type": "object",
        "properties": {
          "resourceListIds": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "accountGroupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "codeRepositoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "UserProfileInternal": {
        "required": ["email", "firstName", "lastName", "timeZone"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "enabled": { "type": "boolean", "readOnly": true },
          "lastModifiedBy": { "type": "string", "readOnly": true },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "displayName": { "type": "string", "readOnly": true },
          "ssoBypassAllowed": { "type": "boolean" },
          "accessKeysAllowed": { "type": "boolean" },
          "defaultRoleId": { "type": "string" },
          "roleIds": { "type": "array", "items": { "type": "string" } },
          "roles": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserProfileRoleDetail" }
          },
          "activeRole": {
            "$ref": "#/components/schemas/UserProfileRoleDetail"
          },
          "username": {
            "type": "string",
            "description": "User or service account name"
          },
          "type": {
            "type": "string",
            "description": "User type. Default is USER_ACCOUNT.",
            "enum": ["USER_ACCOUNT", "SERVICE_ACCOUNT"]
          },
          "accessKeyName": { "type": "string" },
          "accessKeyExpiration": {
            "type": "integer",
            "description": "Access key expiration timestamp in milliseconds",
            "format": "int64"
          },
          "enableKeyExpiration": {
            "type": "boolean",
            "description": "true = Enable access key expiration. Default is false."
          },
          "accessKeysCount": {
            "type": "integer",
            "description": "Access key count",
            "format": "int32",
            "readOnly": true
          },
          "sfSyncStatus": { "type": "boolean" },
          "userRoleName": { "type": "string", "writeOnly": true }
        }
      },
      "PermissionGroupRequest": {
        "title": "Model used for permission group",
        "required": ["features", "name"],
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Permission Group Name" },
          "description": {
            "type": "string",
            "description": "Permission Group Description"
          },
          "features": {
            "type": "array",
            "description": "List of Prisma Cloud Features",
            "items": { "$ref": "#/components/schemas/Feature" }
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "resetToken": { "type": "string" },
          "recaptchaResponse": { "type": "string" }
        }
      },
      "PermissionGroupDetail": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Permission Group Name" },
          "description": {
            "type": "string",
            "description": "Permission Group Description"
          },
          "type": {
            "type": "string",
            "description": "Permission Group Type",
            "enum": ["Default", "Custom", "Internal", "Default", "Custom"]
          },
          "lastModifiedBy": { "type": "string" },
          "lastModifiedTs": { "type": "integer", "format": "int64" },
          "associatedRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Map of associated role Ids and Names"
            },
            "description": "Map of associated role Ids and Names"
          },
          "features": { "$ref": "#/components/schemas/Feature" },
          "acceptAccountGroups": {
            "type": "boolean",
            "description": "acceptAccountGroups"
          },
          "acceptResourceLists": {
            "type": "boolean",
            "description": "acceptResourceLists"
          },
          "acceptCodeRepositories": {
            "type": "boolean",
            "description": "acceptCodeRepositories"
          },
          "custom": {
            "type": "boolean",
            "description": "Boolean value signifying whether this is a custom (i.e. user-defined) permission group. Is set to true if the attribute value of permissionGroupType is set to CUSTOM"
          },
          "id": { "type": "string", "description": "Permission Group ID" }
        }
      },
      "PermissionGroup": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Permission Group Name" },
          "custom": {
            "type": "boolean",
            "description": "Boolean value signifying whether this is a custom (i.e. user-defined) permission group. Is set to true if the attribute value of permissionGroupType is set to CUSTOM"
          },
          "id": { "type": "string", "description": "Permission Group ID" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" },
          "firstname": { "type": "string" },
          "lastname": { "type": "string" },
          "timezone": { "type": "string" },
          "resetToken": { "type": "string" },
          "resetTokenTs": { "type": "integer", "format": "int64" },
          "customerId": { "type": "integer", "format": "int32" },
          "deleted": { "type": "boolean" },
          "defaultUserRoleId": { "type": "string" },
          "userRoleDetails": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UserInternalRoleDetail"
            }
          },
          "customerName": { "type": "string" },
          "lastLoginTime": { "type": "integer", "format": "int64" },
          "tosBypassAllowed": { "type": "boolean" },
          "lastModifiedBy": { "type": "string" },
          "lastModifiedTs": { "type": "integer", "format": "int64" },
          "tosAccepted": { "type": "boolean" },
          "ssoBypassAllowed": { "type": "boolean" },
          "sessionTimeout": { "type": "integer", "format": "int32" },
          "provisional": { "type": "boolean" },
          "canAssumeRole": { "type": "boolean" },
          "supportAccessLevel": {
            "type": "string",
            "enum": ["NONE", "LIGHT_AGENT", "AGENT", "ADMIN"]
          },
          "accessKeysAllowed": { "type": "boolean" },
          "sfSyncStatus": { "type": "boolean" },
          "type": {
            "type": "string",
            "enum": ["USER_ACCOUNT", "SERVICE_ACCOUNT"]
          },
          "fullName": { "type": "string" },
          "active": { "type": "boolean" }
        },
        "description": "User object"
      },
      "UserInternalRoleDetail": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "permissionGroup": { "$ref": "#/components/schemas/PermissionGroup" },
          "restrictedDismissalAccess": { "type": "boolean" },
          "hasDefenderPermissions": { "type": "boolean" },
          "onlyAllowReadAccess": { "type": "boolean" },
          "onlyAllowComputeAccess": { "type": "boolean" },
          "onlyAllowCIAccess": { "type": "boolean" }
        }
      },
      "MultiRoleUserProfile": {
        "required": ["email", "firstName", "lastName", "timeZone"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "timeZone": {
            "type": "string",
            "description": "Time zone (e.g. America/Los_Angeles)"
          },
          "enabled": { "type": "boolean", "readOnly": true },
          "lastModifiedBy": { "type": "string", "readOnly": true },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastLoginTs": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "displayName": { "type": "string", "readOnly": true },
          "ssoBypassAllowed": { "type": "boolean" },
          "accessKeysAllowed": { "type": "boolean" },
          "defaultRoleId": { "type": "string" },
          "roleIds": { "type": "array", "items": { "type": "string" } },
          "roles": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserProfileRoleDetail" }
          },
          "activeRole": {
            "$ref": "#/components/schemas/UserProfileRoleDetail"
          },
          "userRoleName": { "type": "string", "writeOnly": true }
        }
      },
      "SsoConfig": {
        "type": "object",
        "properties": {
          "identityProvider": { "title": "IdP Issuer URI", "type": "string" },
          "certificate": { "title": "IdP Certificate", "type": "string" },
          "enabled": { "title": "SSO Enabled", "type": "boolean" },
          "logoutRedirectUrl": {
            "title": "IdP Sign-Off URL",
            "type": "string"
          },
          "relayStateParamName": {
            "title": "IdP Relay State Param",
            "type": "string"
          },
          "lastLoginErrors": {
            "title": "Last Login Errors",
            "type": "array",
            "items": { "title": "Last Login Errors", "type": "string" }
          },
          "audienceUri": {
            "title": "AudienceUri or Prisma Cloud SP-Entity-Id",
            "type": "string"
          },
          "autoProvisionEnabled": {
            "title": "AutoProvision Enabled",
            "type": "boolean"
          },
          "requireAccessSamlUrlPublic": {
            "title": "Skip Public address check for Access SAML URL",
            "type": "boolean"
          },
          "autoProvisionSamlEmail": {
            "title": "AutoProvision SAML Attribute - Email (Mandatory)",
            "type": "string"
          },
          "autoProvisionSamlFirstName": {
            "title": "AutoProvision SAML Attribute - First name (Mandatory)",
            "type": "string"
          },
          "autoProvisionSamlLastName": {
            "title": "AutoProvision SAML Attribute - Last name (Mandatory)",
            "type": "string"
          },
          "autoProvisionSamlRole": {
            "title": "AutoProvision SAML Attribute - Role (Mandatory)",
            "type": "string"
          },
          "autoProvisionSamlTimezone": {
            "title": "AutoProvision SAML Attribute - TZ",
            "type": "string"
          },
          "redLockAccessSamlUrl": {
            "title": "IdP Configured Prisma Cloud Access URL",
            "type": "string"
          }
        }
      },
      "UserAccessKeyResponse": {
        "type": "object",
        "properties": {
          "Access key id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": { "type": "string" },
          "expiresOn": {
            "type": "integer",
            "description": "Timestamp in milliseconds when access key expires",
            "format": "int64"
          }
        }
      },
      "AccountFilterVO": {
        "type": "object",
        "properties": {
          "groupIds": { "type": "array", "items": { "type": "string" } },
          "groupNames": { "type": "array", "items": { "type": "string" } },
          "cloudTypes": { "type": "array", "items": { "type": "string" } },
          "fetchEnabledAccountsOnly": { "type": "boolean" }
        }
      },
      "ResourceListFilterVO": {
        "type": "object",
        "properties": {
          "resourceListIds": { "type": "array", "items": { "type": "string" } },
          "resourceListNames": {
            "type": "array",
            "items": { "type": "string" }
          },
          "resourceListTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TAG",
                "RESOURCE_ID",
                "STRING",
                "IP_ADDRESS",
                "NUMBER",
                "RESOURCE_GROUP",
                "COMPUTE_ACCESS_GROUP"
              ]
            }
          }
        }
      },
      "UserEntitlementsRequestVO": {
        "type": "object",
        "properties": {
          "redLockResourceType": { "type": "string" },
          "requestType": { "type": "string" },
          "accountFilters": { "$ref": "#/components/schemas/AccountFilterVO" },
          "resourceListFilters": {
            "$ref": "#/components/schemas/ResourceListFilterVO"
          },
          "userClientIp": { "type": "string" },
          "doIpWhitelistCheck": { "type": "boolean" },
          "doAuthorizationCheck": { "type": "boolean" },
          "fetchAccountGroups": { "type": "boolean" },
          "fetchAccounts": { "type": "boolean" },
          "fetchResourceLists": { "type": "boolean" },
          "fetchCodeRepositories": { "type": "boolean" },
          "fetchNonOnboardedAccounts": { "type": "boolean" },
          "doSupportAccessCheck": { "type": "boolean" },
          "requiredSupportAccessLevel": {
            "type": "string",
            "enum": ["NONE", "LIGHT_AGENT", "AGENT", "ADMIN"]
          }
        }
      },
      "CloudAccountMetaVO": {
        "type": "object",
        "properties": {
          "accountId": { "type": "string" },
          "accountName": { "type": "string" },
          "enabled": { "type": "boolean" },
          "cloudType": { "type": "string" },
          "groupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "groupNames": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "JsonNode": { "type": "object" },
      "ResourceListVO": {
        "required": ["resourceListType"],
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "resourceListType": {
            "type": "string",
            "enum": [
              "TAG",
              "RESOURCE_ID",
              "STRING",
              "IP_ADDRESS",
              "NUMBER",
              "RESOURCE_GROUP",
              "COMPUTE_ACCESS_GROUP"
            ]
          },
          "description": { "type": "string" },
          "lastModifiedBy": { "type": "string" },
          "lastModifiedTs": { "type": "integer", "format": "int64" },
          "members": { "$ref": "#/components/schemas/JsonNode" }
        }
      },
      "UserEntitlementsResponseVO": {
        "type": "object",
        "properties": {
          "userMeta": { "$ref": "#/components/schemas/UserMetaVO" },
          "groupIdVsName": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          },
          "resourceLists": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResourceListVO" }
          },
          "accounts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CloudAccountMetaVO" }
          },
          "codeRepositoriesEntitlementUrl": { "type": "string" }
        }
      },
      "UserMetaVO": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "roleType": { "type": "string" },
          "customerName": { "type": "string" },
          "timeZone": { "type": "string" },
          "lastLoginTime": { "type": "integer", "format": "int64" },
          "ssoSession": { "type": "boolean" },
          "customerCreatedTs": { "type": "integer", "format": "int64" },
          "licenseType": {
            "type": "string",
            "enum": ["ENTERPRISE", "BUSINESS"]
          },
          "customerId": { "type": "integer", "format": "int32" },
          "prismaId": { "type": "string" },
          "activeUserRoleId": { "type": "string" },
          "supportAccessLevel": {
            "type": "string",
            "enum": ["NONE", "LIGHT_AGENT", "AGENT", "ADMIN"]
          }
        }
      },
      "UsernameVsDisplayName": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": { "empty": { "type": "boolean" } },
        "additionalProperties": { "type": "string" }
      },
      "UserEntitlementsMeta": {
        "type": "object",
        "properties": {
          "codeRepositoryIds": {
            "type": "array",
            "items": { "type": "string" }
          },
          "resourceListIds": { "type": "array", "items": { "type": "string" } },
          "accountGroupIds": { "type": "array", "items": { "type": "string" } }
        },
        "description": "User entitlements"
      },
      "UserRoleView": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "lastModifiedBy": { "type": "string" },
          "lastModifiedTs": { "type": "integer", "format": "int64" },
          "accountGroupIds": { "type": "array", "items": { "type": "string" } },
          "resourceListIds": { "type": "array", "items": { "type": "string" } },
          "codeRepositoryIds": {
            "type": "array",
            "items": { "type": "string" }
          },
          "associatedUsers": { "type": "array", "items": { "type": "string" } },
          "restrictDismissalAccess": { "type": "boolean" },
          "additionalAttributes": { "$ref": "#/components/schemas/Attributes" },
          "accountGroups": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "resourceLists": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "codeRepositories": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "accountIds": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "roleType": { "type": "string" }
        }
      },
      "UsernameValidationResponse": {
        "type": "object",
        "properties": { "regex": { "type": "string" } }
      },
      "CreateServiceRequest": {
        "required": ["jwk", "roles", "username"],
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string", "deprecated": true },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "jwk": { "$ref": "#/components/schemas/Jwk" },
          "customer_name": { "type": "string", "deprecated": true },
          "prisma_id": { "type": "string" }
        }
      },
      "Jwk": {
        "required": ["alg", "token_duration_seconds"],
        "type": "object",
        "properties": {
          "alg": {
            "type": "string",
            "enum": ["HS256", "HS384", "HS512", "RS256", "RS384", "RS512"]
          },
          "kid": { "type": "string" },
          "token_duration_seconds": {
            "maximum": 3600,
            "minimum": 60,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SamlLoginResponse": {
        "type": "object",
        "properties": {
          "errorReasonExpectedValue": { "type": "string" },
          "errorReasonActualValue": { "type": "string" },
          "errorReasonKey": {
            "type": "string",
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "message": { "type": "string" },
          "token": { "type": "string" },
          "customerNames": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CustomerNameResponse" }
          },
          "forwardLocation": { "type": "string" },
          "prismaSamlAttributes": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "pingSamlAttributes": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "errorInfoMultiple": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "errorInfoInvalid": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "errorInfoDisabled": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "errorInfoUnavailable": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "SAML_ASSERTION",
              "SAML_ASSERTION_AUDIENCE_URI",
              "SAML_ASSERTION_AUTHN_STATEMENT",
              "SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME",
              "SAML_ASSERTION_CONDITIONS",
              "SAML_ASSERTION_ISSUE_INSTANT",
              "SAML_ASSERTION_ISSUER_URI",
              "SAML_ASSERTION_SIGNATURE",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER",
              "SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT",
              "SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE",
              "SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER",
              "SAML_CERTIFICATE",
              "SAML_CONFIGURATION",
              "SAML_CUSTOMER",
              "SAML_DESTINATION_URI",
              "SAML_PARSING_STATUS_CODE",
              "SAML_RESPONSE",
              "SAML_USER"
            ]
          },
          "fullErrorMessage": { "type": "string" },
          "customerId": { "type": "integer", "format": "int32" },
          "prismaId": { "type": "string" }
        }
      },
      "ExternalJwtIntegration": {
        "title": "Model used for JWT integrations with external vendors",
        "type": "object",
        "properties": { "integration": { "type": "string" } },
        "description": "Model used for JWT integrations with external vendors"
      },
      "UserSearchCriteria": {
        "title": "User Search Request Filter",
        "type": "object",
        "properties": {
          "permissionGroupIds": {
            "type": "array",
            "items": { "type": "string" }
          },
          "userRoleIds": { "type": "array", "items": { "type": "string" } }
        }
      },
      "PageListUserSearchVO": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserSearchVO" }
          },
          "nextPageToken": { "type": "string" }
        }
      },
      "RoleDetail": {
        "type": "object",
        "properties": { "roleId": { "type": "string" } },
        "description": "List of role IDs"
      },
      "UserSearchVO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User name / User email"
          },
          "roles": {
            "type": "array",
            "description": "List of role IDs",
            "items": { "$ref": "#/components/schemas/RoleDetail" }
          },
          "timezone": { "type": "string", "description": "timeZone" },
          "ssoBypassAllowed": {
            "type": "boolean",
            "description": "ssoBypassAllowed"
          },
          "accessKeysAllowed": {
            "type": "boolean",
            "description": "accessKeysAllowed"
          }
        }
      },
      "UserAccessKeyRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Access Key Name" },
          "expiresOn": {
            "type": "integer",
            "description": "Timestamp in milliseconds when access key expires",
            "format": "int64"
          },
          "serviceAccountName": { "type": "string" }
        }
      },
      "UpdateServiceRequest": {
        "type": "object",
        "properties": {
          "password": { "type": "string" },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "jwk": { "$ref": "#/components/schemas/Jwk" },
          "customer_name": { "type": "string", "deprecated": true },
          "prisma_id": { "type": "string" },
          "add_roles": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "remove_roles": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "is_enabled": { "type": "boolean" }
        }
      },
      "TokenInfoResponse": {
        "required": ["active"],
        "type": "object",
        "properties": {
          "active": { "type": "boolean" },
          "username": { "type": "string" },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "authorized": {
            "type": "boolean",
            "description": "Null if roles query param is not sent otherwise {true only if the roles are authorized for the token}"
          },
          "exp": { "type": "integer", "format": "int64" },
          "prismaId": { "type": "string" },
          "claims": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "ipAddressClaimIsTrusted": {
            "type": "string",
            "description": "ipAddress claim trusted ip outcome",
            "enum": [
              "NOT_PERFORMED",
              "PERFORMED_AND_VALID",
              "PERFORMED_AND_INVALID"
            ]
          },
          "customer_name": { "type": "string" },
          "user_type": { "type": "string", "enum": ["USER", "SERVICE"] }
        }
      },
      "UsernamePasswordRequest": {
        "title": "Model used to validate user/password",
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "RoleSwitchResponse": {
        "type": "object",
        "properties": { "token": { "type": "string" } }
      },
      "SupportUserProfileRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "supportAccessLevel": { "type": "string" }
        }
      },
      "SamlLoginRequest": {
        "title": "Model used for saml authentication",
        "required": ["rawSaml", "requestIpAddress"],
        "type": "object",
        "properties": {
          "rawSaml": { "type": "string" },
          "requestIpAddress": { "type": "string" },
          "relayState": { "type": "string" }
        }
      }
    },
    "headers": {
      "prismaId": {
        "description": "x-prisma-tenant-id",
        "style": "simple",
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    }
  }
}
