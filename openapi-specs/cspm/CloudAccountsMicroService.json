{
  "openapi": "3.0.1",
  "info": {
    "title": "Cloud Accounts API",
    "description": "APIs for cloudAccount ops",
    "version": "3.0.1"
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ],
  "paths": {
    "/cas/v1/azure_template": {
      "post": {
        "tags": [
          "Cloud Accounts"
        ],
        "summary": "Generate and Download the Azure Terraform template",
        "description": "Generates the Azure Terraform template. The generated Terraform template includes the permissions based on selected features. The terraform template can be used to create an app registration and required roles on the Azure Portal.\n\n**Note**: This feature is available only for Prisma Commercial and Government stacks.",
        "operationId": "generate-template-link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureTemplateGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Failed with an exception.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Template Generated Successfully"
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/v1/aws_template/presigned_url": {
      "post": {
        "tags": [
          "Cloud Accounts"
        ],
        "summary": "Generate the AWS CFT Template Link",
        "description": "Generates the AWS Cloudformation Stack Quick create link with S3 presigned CFT URL. The Generated CFT template will include Prisma Cloud generated externalId and the permissions based on selected features.\n\n The response contains *createStackLinkWithS3PresignedUrl* key whose value can be used to create IAM role via AWS CloudFormation stack.\n\n There are 2 ways to create IAM role:\n\n 1. [Manual] If you are logged into your AWS Management console, directly open the value of the *createStackLinkWithS3PresignedUrl* key on a new tab in the browser.\n 2. [Automation] Else, you can extract the actual S3 Presigned CFT URL from the *createStackLinkWithS3PresignedUrl* key by splitting at templateURL= and url decoding the last index of the split(i.e right part of the split). This extracted decoded link can be used to create or update the IAM role CloudFormation stack. \n\n  **NOTE**: The *createStackLinkWithS3PresignedUrl* link is valid for 1hr",
        "operationId": "generate-cft-template-link-aws",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSTemplateGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Failed with an exception.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Template Generated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSCFTGenResponse"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/v1/aws_template": {
      "post": {
        "tags": [
          "Cloud Accounts"
        ],
        "summary": "Generate and Download the AWS CFT Template",
        "description": "Generates the AWS CFT template. The Generated CFT template includes Prisma Cloud generated externalId and the permissions based on selected features.\n The CFT template can be used to create IAM role via AWS CloudFormation stack.",
        "operationId": "generate-cft-template-aws",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSTemplateGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Failed with an exception.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Template Generated Successfully"
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/v1/features/cloud/{cloud_type}": {
      "post": {
        "tags": [
          "Cloud Accounts"
        ],
        "summary": "Fetch Supported Features For Cloud Type",
        "description": "Lists the features supported for the specified cloud type and account type. \n\n The response contains *supportedFeatures* key whose value contains supported feature names.\n\n  **NOTE**: The supportedFeatures returns \"Cloud Visibility Compliance and Governance\" string by default. Do not explicitly pass this string as a feature in the request body param in any cloud account API(Like in Add AWS Cloud Account, Update AWS Cloud Account,Generate and Download the AWS CFT Template, etc).",
        "operationId": "fetch-supported-features",
        "parameters": [
          {
            "name": "cloud_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "aws",
                "azure",
                "gcp"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeaturesAvailableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Failed with an Exception, Internal Error Occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Features supported for the cloud type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeaturesAvailableResponse"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "APIErrorObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "innererror": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "innerError": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          }
        }
      },
      "RestAPIErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/APIErrorObject"
          }
        }
      },
      "CloudAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "cloudType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "parentId": {
            "type": "string"
          },
          "storageScanEnabled": {
            "type": "boolean"
          },
          "addedOnTs": {
            "type": "integer",
            "format": "int64"
          },
          "parentName": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "account",
              "masterServiceAccount",
              "compartment",
              "management_group",
              "organization",
              "tenant",
              "workspace_domain"
            ]
          },
          "deleted": {
            "type": "boolean"
          },
          "protectionMode": {
            "type": "string"
          },
          "deploymentType": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerPrismaId": {
            "type": "integer",
            "format": "int64"
          },
          "createdEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "deploymentTypeDescription": {
            "type": "string"
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureDetails"
            }
          }
        }
      },
      "FeatureDetails": {
        "type": "object",
        "properties": {
          "featureName": {
            "type": "string"
          },
          "featureMode": {
            "type": "string"
          },
          "createdTs": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdatedTs": {
            "type": "integer",
            "format": "int64"
          },
          "featureState": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "IbmCloudAccountResponse": {
        "type": "object",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "svcIdIamId": {
            "type": "string"
          },
          "groupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PermissionsRequest": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string"
          },
          "deploymentType": {
            "type": "string"
          },
          "awsPartition": {
            "type": "string"
          },
          "authenticationType": {
            "type": "string"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          },
          "debugMessage": {
            "type": "string"
          }
        }
      },
      "AppCapabilityPermissionMapping": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "feature": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "services": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ComputeLimitStatusResponse": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "isAccountImported": {
            "type": "boolean"
          }
        }
      },
      "LoggingAccountMapRequest": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "bucketId": {
            "type": "integer",
            "format": "int32"
          },
          "action": {
            "type": "string"
          },
          "featureName": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "IngestionCloudAccount": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cloudType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "accountType": {
            "type": "integer",
            "format": "int32"
          },
          "credentials": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "homeRegionId": {
            "type": "string"
          },
          "regionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policyName": {
            "type": "string"
          }
        }
      },
      "AccountGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64"
          },
          "autoCreated": {
            "type": "boolean"
          }
        }
      },
      "AzureTokenRequest": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string"
          }
        }
      },
      "AzureTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "$ref": "#/components/schemas/IAuthenticationResultResponse"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "IAuthenticationResultResponse": {
        "type": "object",
        "properties": {
          "accessTokenType": {
            "type": "string"
          },
          "expiresOn": {
            "type": "integer",
            "format": "int64"
          },
          "idToken": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "expiresAfter": {
            "type": "integer",
            "format": "int64"
          },
          "expiresOnDate": {
            "type": "string",
            "format": "date-time"
          },
          "multipleResourceRefreshToken": {
            "type": "boolean"
          }
        }
      },
      "AddComputeLimitRequest": {
        "required": [
          "importedAccounts",
          "limit"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "importedAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GCPTokenRequest": {
        "type": "object",
        "properties": {
          "tokenExpirationDurationInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "serviceUrl": {
            "type": "string"
          }
        }
      },
      "GCPTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "type": "string"
          },
          "sessionToken": {
            "type": "string"
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "CloudAccountFeatureSaveRequest": {
        "required": [
          "featureName"
        ],
        "type": "object",
        "properties": {
          "featureName": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "AwsLoggingAccountBucket": {
        "type": "object",
        "properties": {
          "bucketName": {
            "type": "string"
          },
          "bucketRegion": {
            "type": "string"
          },
          "bucketPathPrefix": {
            "type": "string"
          },
          "kmsKeyArn": {
            "type": "string"
          },
          "featureName": {
            "type": "string"
          }
        }
      },
      "AwsLoggingAccountResponse": {
        "type": "object",
        "properties": {
          "loggingAccountId": {
            "type": "string"
          },
          "loggingAccountName": {
            "type": "string"
          },
          "roleArn": {
            "type": "string"
          },
          "loggingAccountBucketMap": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwsLoggingAccountBucket"
            }
          }
        }
      },
      "AwsLoggingAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "loggingAccountBucketMap": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AwsLoggingAccountBucket"
            }
          }
        }
      },
      "AwsMonitoredAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "cloudType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "parentId": {
            "type": "string"
          },
          "storageScanEnabled": {
            "type": "boolean"
          },
          "addedOnTs": {
            "type": "integer",
            "format": "int64"
          },
          "parentName": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "account",
              "masterServiceAccount",
              "compartment",
              "management_group",
              "organization",
              "tenant",
              "workspace_domain"
            ]
          },
          "deleted": {
            "type": "boolean"
          },
          "protectionMode": {
            "type": "string"
          },
          "deploymentType": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerPrismaId": {
            "type": "integer",
            "format": "int64"
          },
          "createdEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "deploymentTypeDescription": {
            "type": "string"
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureDetails"
            }
          },
          "monitoredAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "awsLoggingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwsLoggingAccount"
            }
          },
          "subscriptionUrl": {
            "type": "string"
          },
          "topicSubscriptionArnMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "customerRedlockId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CloudAccountFeaturePatchRequest": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "OciCredentialsData": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "userOcid": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "homeRegion": {
            "type": "string"
          },
          "privateKey": {
            "type": "string"
          },
          "fingerPrint": {
            "type": "string"
          },
          "tenancyId": {
            "type": "string"
          }
        }
      },
      "AzureCloudAccount": {
        "type": "object",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "tenantId": {
            "type": "string"
          },
          "servicePrincipalId": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "defaultAccountGroupId": {
            "type": "string"
          },
          "defaultAccountGroupName": {
            "type": "string"
          },
          "memberSyncEnabled": {
            "type": "boolean"
          },
          "templateUrl": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchySelection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            }
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "monitorFlowLogs": {
            "type": "boolean"
          },
          "environmentType": {
            "type": "string"
          }
        }
      },
      "HierarchySelection": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "nodeType": {
            "type": "string",
            "enum": [
              "ORG",
              "FOLDER",
              "PROJECT",
              "SUBSCRIPTION",
              "MANAGEMENT_GROUP",
              "TENANT",
              "ACCOUNT",
              "OU"
            ]
          },
          "selectionType": {
            "type": "string",
            "enum": [
              "ALL",
              "INCLUDE",
              "EXCLUDE"
            ]
          }
        }
      },
      "AccountGroupInfo": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "autoCreated": {
            "type": "boolean"
          }
        }
      },
      "CloudAccountFeatureModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "IbmCloudAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentAccountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cloudType": {
            "type": "string",
            "enum": [
              "all",
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci",
              "other",
              "ibm"
            ]
          },
          "accountType": {
            "type": "string",
            "enum": [
              "account",
              "masterServiceAccount",
              "compartment",
              "management_group",
              "organization",
              "tenant",
              "workspace_domain"
            ]
          },
          "enabled": {
            "type": "boolean"
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "storageScanEnabled": {
            "type": "boolean"
          },
          "storageUUID": {
            "type": "string"
          },
          "protectionMode": {
            "type": "string",
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ]
          },
          "ingestionMode": {
            "type": "integer",
            "format": "int32"
          },
          "cloudAccountOwner": {
            "type": "string"
          },
          "deploymentType": {
            "type": "string",
            "enum": [
              "az",
              "az-us-gov",
              "az-cn",
              "aws",
              "aws-us-gov",
              "aws-cn",
              "oci",
              "oci-us-gov",
              "oci-cn",
              "gcp",
              "gcp-us-gov",
              "gcp-cn",
              "ali-int",
              "ali-us-gov",
              "ali-cn",
              "ali-fn",
              "ibm",
              "ibm-us-gov",
              "ibm-cn"
            ]
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccountFeatureModel"
            }
          },
          "associatedAccountGroupsCount": {
            "type": "integer",
            "format": "int32"
          },
          "accountGroupInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            }
          },
          "cloudAccountOwnerCount": {
            "type": "integer",
            "format": "int32"
          },
          "svcIdIamId": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "addedOn": {
            "type": "integer",
            "format": "int64"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/NestedApiErrorResponse"
          }
        }
      },
      "NestedApiErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "innerError": {
            "$ref": "#/components/schemas/NestedInnerApiErrorResponse"
          }
        }
      },
      "NestedInnerApiErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "supportedValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CloudAccountModel": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string"
          },
          "customerPrismaId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cloudType": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "deploymentType": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "parentName": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "protectionMode": {
            "type": "string"
          },
          "createdEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "deploymentTypeDescription": {
            "type": "string"
          },
          "hasConfigError": {
            "type": "boolean"
          },
          "storageScanEnabled": {
            "type": "boolean"
          },
          "addedOn": {
            "type": "integer",
            "format": "int64"
          },
          "permissionStatusList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccountPermissionStatusApiRequest"
            }
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureDetails"
            }
          }
        }
      },
      "CloudAccountPermissionStatusApiRequest": {
        "type": "object",
        "properties": {
          "subComponent": {
            "type": "string"
          },
          "component": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "remediation": {
            "type": "string"
          },
          "statusTs": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GCPTemplateGenRequest": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "flowLogBucket": {
            "type": "string"
          },
          "authenticationType": {
            "type": "string"
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AzureTemplateGenRequest": {
        "required": [
          "accountType",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "description": "Cloud account type. \n\n **account** = Azure Subscription \n\n**tenant** = Azure Tenant",
            "enum": [
              "account",
              "tenant"
            ]
          },
          "subscriptionId": {
            "type": "string",
            "description": "*Required field for accountType: **account***.\n\n Azure Subscription ID"
          },
          "tenantId": {
            "type": "string",
            "description": "Azure Directory (Tenant) ID"
          },
          "rootSyncEnabled": {
            "type": "boolean",
            "description": "*Applicable only for accountType: **tenant***\n\n In order to onboard the account type **tenant** and its associated **management groups** and **subscriptions**, ```rootSyncEnabled``` must be set to ```true```"
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "description": "Features for which the permissions should be generated and included in the template. \n\n To get a list of all the supported features, call **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
            "example": [
              "Remediation"
            ],
            "items": {
              "type": "string",
              "description": "Features for which the permissions should be generated and included in the template. \n\n To get a list of all the supported features, call **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
              "example": "[\"Remediation\"]"
            }
          },
          "deploymentType": {
            "type": "string",
            "description": "*Applicable only for Prisma Commercial and Government stacks* \n\n**azure** = Commercial deployment type\n\n**azure_gov** = Government deployment type",
            "enum": [
              "azure",
              "azure_gov"
            ]
          }
        }
      },
      "CloudRegions": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AwsCloudAccount": {
        "type": "object",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "roleArn": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "defaultAccountGroupId": {
            "type": "string"
          },
          "defaultAccountGroupName": {
            "type": "string"
          },
          "memberRoleName": {
            "type": "string"
          },
          "memberExternalId": {
            "type": "string"
          },
          "hasMemberRole": {
            "type": "boolean"
          },
          "templateUrl": {
            "type": "string"
          },
          "memberTemplateUrl": {
            "type": "string"
          },
          "eventbridgeRuleNamePrefix": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "hierarchySelection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            }
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IBMTemplateGenRequest": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string"
          }
        }
      },
      "IamToken": {
        "type": "object",
        "properties": {
          "exception": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "classLoaderName": {
                            "type": "string"
                          },
                          "moduleName": {
                            "type": "string"
                          },
                          "moduleVersion": {
                            "type": "string"
                          },
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "expiration": {
            "type": "integer",
            "format": "int64"
          },
          "tokenValid": {
            "type": "boolean"
          }
        }
      },
      "IbmAccessTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "$ref": "#/components/schemas/IamToken"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "AWSTemplateGenRequest": {
        "required": [
          "accountId",
          "accountType"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "description": "Cloud Account Type",
            "enum": [
              "account",
              "organization"
            ]
          },
          "accountId": {
            "type": "string",
            "description": "Account Id"
          },
          "awsPartition": {
            "type": "string",
            "description": "*Applicable only for Prisma Government Stack(**app.gov.prismacloud.io**) and given if the Cloud account Global Deployment option is enabled*\n\n * **us-east-1** -  AWS Commercial/Global account\n\n * **us-gov-west-1** - AWS GovCloud account.",
            "enum": [
              "us-east-1",
              "us-gov-west-1"
            ]
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "description": "Features for which the permissions should be generated and included in the template. \n\n To get a list of all the supported features, call **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
            "example": [
              "Remediation"
            ],
            "items": {
              "type": "string",
              "description": "Features for which the permissions should be generated and included in the template. \n\n To get a list of all the supported features, call **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
              "example": "[\"Remediation\"]"
            }
          }
        }
      },
      "AWSCFTGenResponse": {
        "type": "object",
        "properties": {
          "createStackLinkWithS3PresignedUrl": {
            "type": "string",
            "description": "AWS Cloudformation Stack Quick Create link."
          },
          "externalId": {
            "type": "string"
          }
        }
      },
      "ComponentStatusModel": {
        "type": "object",
        "properties": {
          "component": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "remediation": {
            "type": "string"
          }
        }
      },
      "ComponentStatusUpdateRequest": {
        "type": "object",
        "properties": {
          "statusList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentStatusModel"
            }
          }
        }
      },
      "GCPTokenRequestV2": {
        "type": "object",
        "properties": {
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GCPTokenResponseV2": {
        "type": "object",
        "properties": {
          "rawAuthToken": {
            "type": "string"
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "CloudAccountFeature": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "cloudType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "parentId": {
            "type": "string"
          },
          "storageScanEnabled": {
            "type": "boolean"
          },
          "addedOnTs": {
            "type": "integer",
            "format": "int64"
          },
          "parentName": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "account",
              "masterServiceAccount",
              "compartment",
              "management_group",
              "organization",
              "tenant",
              "workspace_domain"
            ]
          },
          "deleted": {
            "type": "boolean"
          },
          "protectionMode": {
            "type": "string"
          },
          "deploymentType": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerPrismaId": {
            "type": "integer",
            "format": "int64"
          },
          "createdEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "deploymentTypeDescription": {
            "type": "string"
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureDetails"
            }
          },
          "feature": {
            "$ref": "#/components/schemas/FeatureDetails"
          }
        }
      },
      "CloudAccountPermissionStatus": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "feature": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "remediation": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "lastRunEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "lastSuccessEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "lastErrorEpochMillis": {
            "type": "integer",
            "format": "int64"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccountPermissionStatus"
            }
          }
        }
      },
      "CloudAccountIdentity": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cloudType": {
            "type": "string",
            "enum": [
              "all",
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci",
              "other",
              "ibm"
            ]
          },
          "parentAccountId": {
            "type": "string"
          },
          "parentName": {
            "type": "string"
          },
          "isOnboarded": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "CloudAccountMetadataPage": {
        "type": "object",
        "properties": {
          "cloudAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccountIdentity"
            }
          }
        }
      },
      "DeploymentTypeListResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentTypeResponse"
            }
          }
        }
      },
      "DeploymentTypeResponse": {
        "type": "object",
        "properties": {
          "deploymentType": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "FeaturesAvailableRequest": {
        "required": [
          "accountType"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "description": "Cloud Account Type. Supported values based on cloud_type are given below. \n\n * account, organization - cloud_type: **aws**\n\n * account, organization, masterServiceAccount - cloud_type: **gcp**\n\n * account, tenant - cloud_type: **azure**",
            "enum": [
              "account",
              "organization",
              "masterServiceAccount",
              "tenant"
            ]
          },
          "deploymentType": {
            "type": "string",
            "description": "*Applicable only for cloud_type: **azure**.*\n\n * **azure** -  Applicable for Prisma Commercial and Government stacks\n\n * **azure_gov** - Applicable for Prisma Commercial and Government stacks.\n\n * **azure_china** - Applicable for Prisma China Stack.",
            "enum": [
              "azure",
              "azure_gov",
              "azure_china"
            ]
          },
          "awsPartition": {
            "type": "string",
            "description": "*Applicable only for cloud_type: **aws** on Prisma Government Stack(**app.gov.prismacloud.io**) given if the Cloud account Global Deployment option is enabled*\n\n * **us-east-1** -  AWS Commercial/Global account\n\n * **us-gov-west-1** - AWS GovCloud account.",
            "enum": [
              "us-east-1",
              "us-gov-west-1"
            ]
          },
          "rootSyncEnabled": {
            "type": "boolean",
            "description": "*Applicable only for accountType: **tenant***\n\n In order to onboard the *\\\"tenant\\\"* and its associated **management groups** and **subscriptions**, ```rootSyncEnabled``` must be set to ```true```"
          }
        }
      },
      "FeaturesAvailableResponse": {
        "type": "object",
        "properties": {
          "cloudType": {
            "type": "string",
            "description": "Cloud Type"
          },
          "deploymentType": {
            "type": "string",
            "description": "Cloud Account Deployment Type. global, gov, or china"
          },
          "accountType": {
            "type": "string",
            "description": "Account Type"
          },
          "licenseType": {
            "type": "string",
            "description": "Customer License type."
          },
          "supportedFeatures": {
            "type": "array",
            "description": "List of supported feature names.",
            "items": {
              "type": "string",
              "description": "List of supported feature names."
            }
          }
        }
      },
      "GcpCloudAccountResponse": {
        "type": "object",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "hierarchySelection": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            }
          },
          "parentId": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "string"
          },
          "serviceAccountEmail": {
            "type": "string"
          },
          "authenticationType": {
            "type": "string"
          },
          "flowLogStorageBucket": {
            "type": "string"
          },
          "compressionEnabled": {
            "type": "boolean"
          },
          "accountGroupCreationMode": {
            "type": "string"
          },
          "dataflowEnabledProject": {
            "type": "string"
          },
          "credentials": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "defaultAccountGroupId": {
            "type": "string"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organizationName": {
            "type": "string"
          }
        }
      },
      "AWSTokenRequest": {
        "type": "object",
        "properties": {
          "durationInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "shouldRefreshMaxSessionDuration": {
            "type": "boolean"
          },
          "featureType": {
            "type": "string",
            "enum": [
              "AWS_S3_FLOWLOG_ACCOUNT_TOKEN",
              "AWS_CLOUD_TRAIL",
              "NONE"
            ]
          },
          "accountOnboardingType": {
            "type": "string",
            "enum": [
              "MONITORED",
              "LOGGING"
            ]
          },
          "tenantName": {
            "type": "string"
          }
        }
      },
      "AssumeRoleResult": {
        "type": "object",
        "properties": {
          "sdkResponseMetadata": {
            "$ref": "#/components/schemas/ResponseMetadata"
          },
          "sdkHttpMetadata": {
            "$ref": "#/components/schemas/SdkHttpMetadata"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credentials"
          },
          "assumedRoleUser": {
            "$ref": "#/components/schemas/AssumedRoleUser"
          },
          "packedPolicySize": {
            "type": "integer",
            "format": "int32"
          },
          "sourceIdentity": {
            "type": "string"
          }
        }
      },
      "AssumedRoleUser": {
        "type": "object",
        "properties": {
          "assumedRoleId": {
            "type": "string"
          },
          "arn": {
            "type": "string"
          }
        }
      },
      "AwsTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "$ref": "#/components/schemas/AssumeRoleResult"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "accessKeyId": {
            "type": "string"
          },
          "secretAccessKey": {
            "type": "string"
          },
          "sessionToken": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseMetadata": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          }
        }
      },
      "SdkHttpMetadata": {
        "type": "object",
        "properties": {
          "httpHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "httpStatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "allHttpHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "AccountStatusMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "staticMessage": {
            "type": "boolean"
          }
        }
      },
      "CloudAccountStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusMessage": {
            "$ref": "#/components/schemas/AccountStatusMessage"
          }
        }
      },
      "PermissionCheckResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccountStatus"
            }
          }
        }
      },
      "CloudAccountSecret": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecretDetails"
            }
          },
          "notFound": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SecretDetails": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    }
  }
}
