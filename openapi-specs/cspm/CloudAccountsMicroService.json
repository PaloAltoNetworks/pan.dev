{
  "openapi": "3.0.1",
  "info": {
    "title": "Cloud Accounts API",
    "description": "APIs for cloudAccount ops",
    "version": "3.0.1"
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ],
  "paths": {
    "/cas/v1/azure_template": {
      "post": {
        "tags": [
          "Cloud Accounts (Azure)"
        ],
        "summary": "Generate and Download the Terraform template (Azure)",
        "description": "Generates the Azure Terraform template. The generated Terraform template includes the permissions based on selected features. The terraform template can be used to create an app registration and required roles on the Azure Portal.\n\n**Note**: This feature is available only for Prisma Commercial and Government stacks.",
        "operationId": "generate-template-link",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureTemplateGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Template Generated Successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/v1/cloud/{cloudType}/deployment-type": {
      "get": {
        "tags": [
          "Cloud Accounts (OCI and Alibaba)"
        ],
        "summary": "Get Cloud Account Deployment Types (Alibaba)",
        "description": "List cloud account deployment types. Currently, this is applicable only for Alibaba cloud.",
        "operationId": "getCloudDeploymentTypes",
        "parameters": [
          {
            "name": "cloudType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Cloud Account Type",
              "example": null,
              "enum": [
                "alibaba-cloud"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of cloud deployment types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentTypeListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorObject"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorObject"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorObject"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorObject"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorObject"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/v1/gcp_template": {
      "post": {
        "tags": [
          "Cloud Accounts (GCP)"
        ],
        "summary": "Generate and Download the Terraform Template (GCP)",
        "description": "Generate the GCP Terraform template. The generated Terraform template includes the permissions based on selected features.",
        "operationId": "generate-template-link-gcp-gcp",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GCPTemplateGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Template Generated Successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/v1/aws_template/presigned_url": {
      "post": {
        "tags": [
          "Cloud Accounts (AWS)"
        ],
        "summary": "Generate the CFT Template Link (AWS)",
        "description": "Generates the AWS Cloudformation Stack Quick create link with S3 presigned CFT URL. The Generated CFT template will include Prisma Cloud generated externalId and the permissions based on selected features.\n\n The response contains *createStackLinkWithS3PresignedUrl* key whose value can be used to create IAM role via AWS CloudFormation stack.\n\n There are 2 ways to create IAM role:\n\n 1. [Manual] If you are logged into your AWS Management console, directly open the value of the *createStackLinkWithS3PresignedUrl* key on a new tab in the browser.\n 2. [Automation] Else, you can extract the actual S3 Presigned CFT URL from the *createStackLinkWithS3PresignedUrl* key by splitting at templateURL= and url decoding the last index of the split(i.e right part of the split). This extracted decoded link can be used to create or update the IAM role CloudFormation stack. \n\n  **NOTE**: The *createStackLinkWithS3PresignedUrl* link is valid for 1hr",
        "operationId": "generate-cft-template-link-aws",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSTemplateGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Template Generated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSCFTGenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/v1/aws_template": {
      "post": {
        "tags": [
          "Cloud Accounts (AWS)"
        ],
        "summary": "Generate and Download the CFT Template (AWS)",
        "description": "Generates the AWS CFT template. The Generated CFT template includes Prisma Cloud generated externalId and the permissions based on selected features.\n The CFT template can be used to create IAM role via AWS CloudFormation stack.",
        "operationId": "generate-cft-template-aws",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSTemplateGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Template Generated Successfully"
          },
          "400": {
            "description": "Bad Request/Bad Request with accountType account, only valid cftType is account/Bad Request with accountType organization, cftType account is not valid/AccountType can be one of the following [account , organization]/AccountId is not valid Feature list is invalid /Invalid usage of customMemberRoleNameEnabled"
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/api/v1/org/{id}/features": {
      "put": {
        "tags": [
          "Cloud Accounts (All)"
        ],
        "summary": "Update Feature State for Members of an Organization",
        "description": "Enable or disable the feature for list of member accounts linked to an organization.",
        "operationId": "save-Bulk-Cloud-Account-Feature",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": " For AWS, specify organization id.\n\nFor GCP, specify organization id or masterServiceAccount id.\n\nFor Azure, specify tenant id.\n\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudAccountBulkFeatureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully saved/updated cloud account feature for the given member accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Account Id/Member Ids cannot be empty or null/Member account list should be less than 500 in a single request/Feature {0} is not allowed/Invalid feature state {0} for feature {1}/Organisation Id {0} is not onboarded/AccountType of {0} is invalid, should be either of Organisation / Master Service Account / Tenant/Members account {0} do not belong to {1}/Compute features are not supported for {0}/Feature {0} is not present for given account,/For feature = {0}, parent feature state is {1}/Organisation / Master Service Account / Tenant Id {0} should not be part of memberIds list/AccountType of member account {0} is invalid. Member accountType should be of type {1}/",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAPIErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAPIErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAPIErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tenant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAPIErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAPIErrorResponse"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAPIErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAPIErrorResponse"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    },
    "/cas/v1/features/cloud/{cloud_type}": {
      "post": {
        "tags": [
          "Cloud Accounts (All)"
        ],
        "summary": "Fetch Supported Features For Cloud Type",
        "description": "Lists the features supported for the specified cloud type and account type. \n\n The response contains *supportedFeatures* key whose value contains supported feature names.\n\n  **NOTE**: The supportedFeatures returns \"Cloud Visibility Compliance and Governance\" string by default. Do not explicitly pass this string as a feature in the request body param in any cloud account API(Like in Add AWS Cloud Account, Update AWS Cloud Account,Generate and Download the AWS CFT Template, etc).",
        "operationId": "fetch-supported-features",
        "parameters": [
          {
            "name": "cloud_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": null,
              "enum": [
                "aws",
                "azure",
                "gcp",
                "alibaba",
                "oci",
                "ibm"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeaturesAvailableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Features supported for the cloud type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeaturesAvailableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Tenant License Expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "405": {
            "description": "Wrong Http Method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "425": {
            "description": "Too Early to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-public": "true",
        "security": [
          {
            "x-redlock-auth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": null,
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "message": {
            "type": "string",
            "example": null
          },
          "debugMessage": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "IamToken": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": null
          },
          "refreshToken": {
            "type": "string",
            "example": null
          },
          "tokenType": {
            "type": "string",
            "example": null
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "expiration": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "tokenValid": {
            "type": "boolean",
            "example": null
          },
          "exception": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string",
                      "example": null
                    },
                    "moduleName": {
                      "type": "string",
                      "example": null
                    },
                    "moduleVersion": {
                      "type": "string",
                      "example": null
                    },
                    "methodName": {
                      "type": "string",
                      "example": null
                    },
                    "fileName": {
                      "type": "string",
                      "example": null
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32",
                      "example": null
                    },
                    "nativeMethod": {
                      "type": "boolean",
                      "example": null
                    },
                    "className": {
                      "type": "string",
                      "example": null
                    }
                  },
                  "example": null
                }
              },
              "message": {
                "type": "string",
                "example": null
              },
              "suppressed": {
                "type": "array",
                "example": null,
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "example": null,
                      "items": {
                        "type": "object",
                        "properties": {
                          "classLoaderName": {
                            "type": "string",
                            "example": null
                          },
                          "moduleName": {
                            "type": "string",
                            "example": null
                          },
                          "moduleVersion": {
                            "type": "string",
                            "example": null
                          },
                          "methodName": {
                            "type": "string",
                            "example": null
                          },
                          "fileName": {
                            "type": "string",
                            "example": null
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32",
                            "example": null
                          },
                          "nativeMethod": {
                            "type": "boolean",
                            "example": null
                          },
                          "className": {
                            "type": "string",
                            "example": null
                          }
                        },
                        "example": null
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": null
                    },
                    "localizedMessage": {
                      "type": "string",
                      "example": null
                    }
                  },
                  "example": null
                }
              },
              "localizedMessage": {
                "type": "string",
                "example": null
              }
            },
            "example": null
          }
        },
        "example": null
      },
      "IbmAccessTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "$ref": "#/components/schemas/IamToken"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          }
        },
        "example": null
      },
      "PermissionsRequest": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "example": null
          },
          "deploymentType": {
            "type": "string",
            "example": null
          },
          "awsPartition": {
            "type": "string",
            "example": null
          },
          "authenticationType": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AppCapabilityPermissionMapping": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": null
          },
          "feature": {
            "type": "string",
            "example": null
          },
          "mode": {
            "type": "string",
            "example": null
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "services": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "scope": {
            "type": "string",
            "example": null
          },
          "action": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "CloudRegions": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          }
        },
        "example": null
      },
      "AccountGroupInfo": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "example": null
          },
          "lastModifiedBy": {
            "type": "string",
            "example": null
          },
          "groupId": {
            "type": "string",
            "example": null
          },
          "autoCreated": {
            "type": "boolean",
            "example": null
          }
        },
        "example": null
      },
      "AwsCloudAccount": {
        "type": "object",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "roleArn": {
            "type": "string",
            "example": null
          },
          "externalId": {
            "type": "string",
            "example": null
          },
          "defaultAccountGroupId": {
            "type": "string",
            "example": null
          },
          "defaultAccountGroupName": {
            "type": "string",
            "example": null
          },
          "memberRoleName": {
            "type": "string",
            "example": null
          },
          "memberExternalId": {
            "type": "string",
            "example": null
          },
          "hasMemberRole": {
            "type": "boolean",
            "example": null
          },
          "templateUrl": {
            "type": "string",
            "example": null
          },
          "memberTemplateUrl": {
            "type": "string",
            "example": null
          },
          "eventbridgeRuleNamePrefix": {
            "type": "string",
            "example": null
          },
          "assumeRoleAccount": {
            "type": "string",
            "example": null,
            "enum": [
              "REDLOCK",
              "EVIDENT",
              "US_GOV",
              "CHINA",
              "GLOBAL"
            ]
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "hierarchySelection": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            }
          },
          "groupIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "storageScanConfig": {
            "$ref": "#/components/schemas/StorageScanConfig"
          },
          "storageUUID": {
            "type": "string",
            "example": null
          },
          "accountGroupInfos": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            }
          },
          "customMemberRoleNameEnabled": {
            "type": "boolean",
            "example": null
          },
          "unifiedCftDisabled": {
            "type": "boolean",
            "example": null
          },
          "skipOverrideMemberRoleName": {
            "type": "boolean",
            "example": null
          },
          "useTenantExternalId": {
            "type": "boolean",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "accountTypeId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "cloudType": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "parentId": {
            "type": "string",
            "example": null
          },
          "storageScanEnabled": {
            "type": "boolean",
            "example": null
          },
          "addedOnTs": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "parentName": {
            "type": "string",
            "example": null
          },
          "accountType": {
            "type": "string",
            "example": null,
            "enum": [
              "account",
              "masterServiceAccount",
              "compartment",
              "management_group",
              "organization",
              "tenant",
              "workspace_domain"
            ]
          },
          "deleted": {
            "type": "boolean",
            "example": null
          },
          "protectionMode": {
            "type": "string",
            "example": null
          },
          "deploymentType": {
            "type": "string",
            "example": null
          },
          "customerName": {
            "type": "string",
            "example": null
          },
          "customerPrismaId": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "createdEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "createdBy": {
            "type": "string",
            "example": null
          },
          "lastModifiedEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "lastModifiedBy": {
            "type": "string",
            "example": null
          },
          "owner": {
            "type": "string",
            "example": null
          },
          "deploymentTypeDescription": {
            "type": "string",
            "example": null
          },
          "autoConsent": {
            "type": "string",
            "example": null
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/FeatureDetails"
            }
          }
        },
        "example": null
      },
      "FeatureDetails": {
        "type": "object",
        "properties": {
          "featureName": {
            "type": "string",
            "example": null
          },
          "featureMode": {
            "type": "string",
            "example": null
          },
          "createdTs": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "featureState": {
            "type": "string",
            "example": null
          },
          "displayName": {
            "type": "string",
            "example": null
          },
          "defaultMemberState": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "HierarchySelection": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "string",
            "example": null
          },
          "displayName": {
            "type": "string",
            "example": null
          },
          "nodeType": {
            "type": "string",
            "example": null,
            "enum": [
              "ORG",
              "FOLDER",
              "PROJECT",
              "SUBSCRIPTION",
              "MANAGEMENT_GROUP",
              "TENANT",
              "ACCOUNT",
              "OU"
            ]
          },
          "selectionType": {
            "type": "string",
            "example": null,
            "enum": [
              "ALL",
              "INCLUDE",
              "EXCLUDE"
            ]
          }
        },
        "example": null
      },
      "StorageScanConfig": {
        "type": "object",
        "properties": {
          "scanOption": {
            "type": "string",
            "example": null,
            "enum": [
              "Realtime",
              "Custom",
              "Full",
              "Historical"
            ]
          },
          "buckets": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              }
            },
            "example": null
          },
          "snsTopicArn": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AzureTemplateGenRequest": {
        "required": [
          "accountType",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "description": "Cloud account type. \n\n **account** = Azure Subscription \n\n**tenant** = Azure Tenant",
            "example": null,
            "enum": [
              "account",
              "tenant"
            ]
          },
          "subscriptionId": {
            "type": "string",
            "description": "*Required field for accountType: **account***.\n\n Azure Subscription ID",
            "example": null
          },
          "tenantId": {
            "type": "string",
            "description": "Azure Directory (Tenant) ID",
            "example": null
          },
          "rootSyncEnabled": {
            "type": "boolean",
            "description": "*Applicable only for accountType: **tenant***\n\n In order to onboard the account type **tenant** and its associated **management groups** and **subscriptions**, ```rootSyncEnabled``` must be set to ```true```",
            "example": null
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "description": "Features for which the permissions should be generated and included in the template. \n\n To get a list of all the supported features, call **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
            "example": [
              "Remediation"
            ],
            "items": {
              "type": "string",
              "description": "Features for which the permissions should be generated and included in the template. \n\n To get a list of all the supported features, call **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
              "example": "[\"Remediation\"]"
            }
          },
          "deploymentType": {
            "type": "string",
            "description": "*Applicable only for Prisma Commercial and Government stacks* \n\n**azure** = Commercial deployment type\n\n**azure_gov** = Government deployment type",
            "example": null,
            "enum": [
              "azure",
              "azure_gov"
            ]
          }
        },
        "example": null
      },
      "AzureTokenRequest": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AzureTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "$ref": "#/components/schemas/IAuthenticationResultResponse"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          }
        },
        "example": null
      },
      "IAuthenticationResultResponse": {
        "type": "object",
        "properties": {
          "accessTokenType": {
            "type": "string",
            "example": null
          },
          "expiresOn": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "idToken": {
            "type": "string",
            "example": null
          },
          "accessToken": {
            "type": "string",
            "example": null
          },
          "expiresAfter": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "expiresOnDate": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "multipleResourceRefreshToken": {
            "type": "boolean",
            "example": null
          }
        },
        "example": null
      },
      "AzureCloudAccount": {
        "type": "object",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "tenantId": {
            "type": "string",
            "example": null
          },
          "servicePrincipalId": {
            "type": "string",
            "example": null
          },
          "clientId": {
            "type": "string",
            "example": null
          },
          "defaultAccountGroupId": {
            "type": "string",
            "example": null
          },
          "defaultAccountGroupName": {
            "type": "string",
            "example": null
          },
          "memberSyncEnabled": {
            "type": "boolean",
            "example": null
          },
          "templateUrl": {
            "type": "string",
            "example": null
          },
          "key": {
            "type": "string",
            "example": null
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "hierarchySelection": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            }
          },
          "groupIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "monitorFlowLogs": {
            "type": "boolean",
            "example": null
          },
          "environmentType": {
            "type": "string",
            "example": null
          },
          "accountGroupMode": {
            "type": "string",
            "example": null
          },
          "accountGroupInfos": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            }
          }
        },
        "example": null
      },
      "AwsLoggingAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": null
          },
          "accountName": {
            "type": "string",
            "example": null
          },
          "loggingAccountBucketMap": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AwsLoggingAccountBucket"
            },
            "example": null
          }
        },
        "example": null
      },
      "AwsLoggingAccountBucket": {
        "type": "object",
        "properties": {
          "bucketName": {
            "type": "string",
            "example": null
          },
          "bucketRegion": {
            "type": "string",
            "example": null
          },
          "bucketPathPrefix": {
            "type": "string",
            "example": null
          },
          "kmsKeyArn": {
            "type": "string",
            "example": null
          },
          "featureName": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountModel": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string",
            "example": null
          },
          "customerPrismaId": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "accountId": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "cloudType": {
            "type": "string",
            "example": null
          },
          "accountType": {
            "type": "string",
            "example": null
          },
          "deploymentType": {
            "type": "string",
            "example": null
          },
          "parentId": {
            "type": "string",
            "example": null
          },
          "parentName": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "deleted": {
            "type": "boolean",
            "example": null
          },
          "protectionMode": {
            "type": "string",
            "example": null
          },
          "createdEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "createdBy": {
            "type": "string",
            "example": null
          },
          "lastModifiedEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "lastModifiedBy": {
            "type": "string",
            "example": null
          },
          "owner": {
            "type": "string",
            "example": null
          },
          "deploymentTypeDescription": {
            "type": "string",
            "example": null
          },
          "hasConfigError": {
            "type": "boolean",
            "example": null
          },
          "storageScanEnabled": {
            "type": "boolean",
            "example": null
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "addedOn": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "permissionStatusList": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CloudAccountPermissionStatusApiRequest"
            }
          },
          "awsLoggingAccounts": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AwsLoggingAccount"
            }
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/FeatureDetails"
            }
          }
        },
        "example": null
      },
      "CloudAccountPermissionStatusApiRequest": {
        "type": "object",
        "properties": {
          "subComponent": {
            "type": "string",
            "example": null
          },
          "component": {
            "type": "string",
            "example": null
          },
          "statusCode": {
            "type": "string",
            "example": null
          },
          "status": {
            "type": "string",
            "example": null
          },
          "error": {
            "type": "string",
            "example": null
          },
          "remediation": {
            "type": "string",
            "example": null
          },
          "statusTs": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "accountId": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AlibabaAccessTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "$ref": "#/components/schemas/Credentials"
          },
          "assumedRoleUser": {
            "$ref": "#/components/schemas/AssumedRoleUser"
          }
        },
        "example": null
      },
      "AssumedRoleUser": {
        "type": "object",
        "properties": {
          "assumedRoleId": {
            "type": "string",
            "example": null
          },
          "arn": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "accessKeyId": {
            "type": "string",
            "example": null
          },
          "secretAccessKey": {
            "type": "string",
            "example": null
          },
          "sessionToken": {
            "type": "string",
            "example": null
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountPermissionStatus": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": null
          },
          "feature": {
            "type": "string",
            "example": null
          },
          "displayName": {
            "type": "string",
            "example": null
          },
          "status": {
            "type": "string",
            "example": null
          },
          "message": {
            "type": "string",
            "example": null
          },
          "remediation": {
            "type": "string",
            "example": null
          },
          "errorCode": {
            "type": "string",
            "example": null
          },
          "lastRunEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "lastSuccessEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "lastErrorEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "components": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CloudAccountPermissionStatus"
            }
          }
        },
        "example": null
      },
      "AddComputeLimitRequest": {
        "required": [
          "importedAccounts",
          "limit"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "importedAccounts": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          }
        },
        "example": null
      },
      "GCPTokenRequest": {
        "type": "object",
        "properties": {
          "tokenExpirationDurationInSeconds": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "serviceUrl": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "GCPTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "type": "string",
            "example": null
          },
          "sessionToken": {
            "type": "string",
            "example": null
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          }
        },
        "example": null
      },
      "AwsMonitoredAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "accountTypeId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "cloudType": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "parentId": {
            "type": "string",
            "example": null
          },
          "storageScanEnabled": {
            "type": "boolean",
            "example": null
          },
          "addedOnTs": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "parentName": {
            "type": "string",
            "example": null
          },
          "accountType": {
            "type": "string",
            "example": null,
            "enum": [
              "account",
              "masterServiceAccount",
              "compartment",
              "management_group",
              "organization",
              "tenant",
              "workspace_domain"
            ]
          },
          "deleted": {
            "type": "boolean",
            "example": null
          },
          "protectionMode": {
            "type": "string",
            "example": null
          },
          "deploymentType": {
            "type": "string",
            "example": null
          },
          "customerName": {
            "type": "string",
            "example": null
          },
          "customerPrismaId": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "createdEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "createdBy": {
            "type": "string",
            "example": null
          },
          "lastModifiedEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "lastModifiedBy": {
            "type": "string",
            "example": null
          },
          "owner": {
            "type": "string",
            "example": null
          },
          "deploymentTypeDescription": {
            "type": "string",
            "example": null
          },
          "autoConsent": {
            "type": "string",
            "example": null
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/FeatureDetails"
            }
          },
          "monitoredAccountId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "awsLoggingAccounts": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AwsLoggingAccount"
            }
          },
          "subscriptionUrl": {
            "type": "string",
            "example": null
          },
          "topicSubscriptionArnMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "customerRedlockId": {
            "type": "integer",
            "format": "int32",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountWithFeatureDetails": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "accountTypeId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "cloudType": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "parentId": {
            "type": "string",
            "example": null
          },
          "storageScanEnabled": {
            "type": "boolean",
            "example": null
          },
          "addedOnTs": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "parentName": {
            "type": "string",
            "example": null
          },
          "accountType": {
            "type": "string",
            "example": null,
            "enum": [
              "account",
              "masterServiceAccount",
              "compartment",
              "management_group",
              "organization",
              "tenant",
              "workspace_domain"
            ]
          },
          "deleted": {
            "type": "boolean",
            "example": null
          },
          "protectionMode": {
            "type": "string",
            "example": null
          },
          "deploymentType": {
            "type": "string",
            "example": null
          },
          "customerName": {
            "type": "string",
            "example": null
          },
          "customerPrismaId": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "createdEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "createdBy": {
            "type": "string",
            "example": null
          },
          "lastModifiedEpochMillis": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "lastModifiedBy": {
            "type": "string",
            "example": null
          },
          "owner": {
            "type": "string",
            "example": null
          },
          "deploymentTypeDescription": {
            "type": "string",
            "example": null
          },
          "autoConsent": {
            "type": "string",
            "example": null
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/FeatureDetails"
            }
          },
          "feature": {
            "$ref": "#/components/schemas/FeatureDetails"
          }
        },
        "example": null
      },
      "CloudAccountSearchRequest": {
        "type": "object",
        "properties": {
          "selection": {
            "$ref": "#/components/schemas/Selection"
          },
          "filters": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          },
          "nextPageToken": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "Filter": {
        "type": "object",
        "properties": {
          "param": {
            "type": "string",
            "example": null
          },
          "op": {
            "type": "string",
            "example": null
          },
          "val": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "Selection": {
        "type": "object",
        "properties": {
          "includePermissionStatus": {
            "type": "boolean",
            "example": null
          },
          "includeFeatures": {
            "type": "boolean",
            "example": null
          }
        },
        "example": null
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/NestedApiErrorResponse"
          }
        },
        "example": null
      },
      "NestedApiErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": null
          },
          "message": {
            "type": "string",
            "example": null
          },
          "target": {
            "type": "string",
            "example": null
          },
          "innerError": {
            "$ref": "#/components/schemas/NestedInnerApiErrorResponse"
          }
        },
        "example": null
      },
      "NestedInnerApiErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": null
          },
          "supportedValues": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          }
        },
        "example": null
      },
      "CloudAccountSearchResults": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CloudAccountModel"
            }
          },
          "nextPageToken": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountFeatureModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": null
          },
          "mode": {
            "type": "string",
            "example": null
          },
          "state": {
            "type": "string",
            "example": null
          },
          "displayName": {
            "type": "string",
            "example": null
          },
          "defaultMemberState": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "IbmCloudAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "parentAccountId": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "cloudType": {
            "type": "string",
            "example": null,
            "enum": [
              "all",
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci",
              "other",
              "ibm"
            ]
          },
          "accountType": {
            "type": "string",
            "example": null,
            "enum": [
              "account",
              "masterServiceAccount",
              "compartment",
              "management_group",
              "organization",
              "tenant",
              "workspace_domain"
            ]
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "lastModifiedBy": {
            "type": "string",
            "example": null
          },
          "storageScanEnabled": {
            "type": "boolean",
            "example": null
          },
          "storageUUID": {
            "type": "string",
            "example": null
          },
          "protectionMode": {
            "type": "string",
            "example": null,
            "enum": [
              "MONITOR",
              "MONITOR_AND_PROTECT"
            ]
          },
          "ingestionMode": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "cloudAccountOwner": {
            "type": "string",
            "example": null
          },
          "deploymentType": {
            "type": "string",
            "example": null,
            "enum": [
              "az",
              "az-us-gov",
              "az-cn",
              "aws",
              "aws-us-gov",
              "aws-cn",
              "oci",
              "oci-us-gov",
              "oci-cn",
              "gcp",
              "gcp-us-gov",
              "gcp-cn",
              "ali-int",
              "ali-us-gov",
              "ali-cn",
              "ali-fn",
              "ibm",
              "ibm-us-gov",
              "ibm-cn"
            ]
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CloudAccountFeatureModel"
            }
          },
          "associatedAccountGroupsCount": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "accountGroupInfos": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            }
          },
          "cloudAccountOwnerCount": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "autoConsent": {
            "type": "string",
            "example": null
          },
          "svcIdIamId": {
            "type": "string",
            "example": null
          },
          "apiKey": {
            "type": "string",
            "example": null
          },
          "accountId": {
            "type": "string",
            "example": null
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "addedOn": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "groupIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          }
        },
        "example": null
      },
      "APIErrorObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": null,
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "message": {
            "type": "string",
            "example": null
          },
          "target": {
            "type": "string",
            "example": null
          },
          "innererror": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "innerError": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "writeOnly": true,
            "example": null
          }
        },
        "example": null
      },
      "DeploymentTypeListResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/DeploymentTypeResponse"
            }
          }
        },
        "example": null
      },
      "DeploymentTypeResponse": {
        "type": "object",
        "properties": {
          "deploymentType": {
            "type": "string",
            "example": null
          },
          "displayName": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountFeatureSaveRequest": {
        "required": [
          "featureName"
        ],
        "type": "object",
        "properties": {
          "featureName": {
            "type": "string",
            "example": null
          },
          "mode": {
            "type": "string",
            "example": null
          },
          "state": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "message": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "message": {
            "type": "string",
            "example": null
          },
          "timestamp": {
            "type": "string",
            "example": null
          },
          "details": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AccountGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "description": {
            "type": "string",
            "example": null
          },
          "lastModifiedBy": {
            "type": "string",
            "example": null
          },
          "lastModifiedTs": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "autoCreated": {
            "type": "boolean",
            "example": null
          }
        },
        "example": null
      },
      "ComponentStatusModel": {
        "type": "object",
        "properties": {
          "component": {
            "type": "string",
            "example": null
          },
          "status": {
            "type": "string",
            "example": null
          },
          "message": {
            "type": "string",
            "example": null
          },
          "remediation": {
            "type": "string",
            "example": null
          },
          "subComponents": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ComponentStatusModel"
            }
          }
        },
        "example": null
      },
      "ComponentStatusPatchRequest": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ComponentStatusModel"
          }
        },
        "example": null
      },
      "IBMTemplateGenRequest": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "GCPTemplateGenRequest": {
        "required": [
          "accountType",
          "authenticationType",
          "orgId",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "description": "Cloud Account Type\n\n**account**: GCP Project\n\n**organization**: GCP Organization\n\n**masterServiceAccount**: Onboards all GCP projects that are accessible by the service account",
            "example": null,
            "enum": [
              "account",
              "organization",
              "masterServiceAccount"
            ]
          },
          "projectId": {
            "type": "string",
            "description": "ID of your GCP project that must be onboarded.\n\nApplicable only if `accountType` is **account** or **masterServiceAccount**.",
            "example": null
          },
          "orgId": {
            "type": "string",
            "description": "ID of the GCP organization to be onboarded.\n\nApplicable only if the `accountType` is **organization**",
            "example": null
          },
          "flowLogBucket": {
            "type": "string",
            "description": "Cloud Storage Bucket name that stores the flow logs.\n\nRequired only if you want to enable flow logs and associate required permissions for the flow logs bucket",
            "example": null
          },
          "authenticationType": {
            "type": "string",
            "description": "**service_account**: Service Account Key\n\n**Default value**: service_account\n\nAuthentication mode used by Prisma Cloud to authenticate with GCP.",
            "example": null,
            "enum": [
              "service_account"
            ]
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "description": "Features for which the permissions should be generated and included in the template.\nTo get a list of all the supported features, see **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
            "example": [
              "Remediation"
            ],
            "items": {
              "type": "string",
              "description": "Features for which the permissions should be generated and included in the template.\nTo get a list of all the supported features, see **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
              "example": "[\"Remediation\"]"
            }
          }
        },
        "example": null
      },
      "CloudAccountSecret": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/SecretDetails"
            }
          },
          "notFound": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          }
        },
        "example": null
      },
      "SecretDetails": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": null
          },
          "secret": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "ComponentStatusUpdateRequest": {
        "type": "object",
        "properties": {
          "statusList": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/ComponentStatusModel"
            }
          }
        },
        "example": null
      },
      "IngestionCloudAccount": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "customerName": {
            "type": "string",
            "example": null
          },
          "id": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "cloudType": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "example": null
          },
          "accountType": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "credentials": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "homeRegionId": {
            "type": "string",
            "example": null
          },
          "regionIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "policyName": {
            "type": "string",
            "example": null
          },
          "autoConsent": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "GcpCloudAccountResponse": {
        "type": "object",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "hierarchySelection": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            }
          },
          "parentId": {
            "type": "string",
            "example": null
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "projectId": {
            "type": "string",
            "example": null
          },
          "serviceAccountEmail": {
            "type": "string",
            "example": null
          },
          "authenticationType": {
            "type": "string",
            "example": null
          },
          "flowLogStorageBucket": {
            "type": "string",
            "example": null
          },
          "compressionEnabled": {
            "type": "boolean",
            "example": null
          },
          "accountGroupCreationMode": {
            "type": "string",
            "example": null
          },
          "dataflowEnabledProject": {
            "type": "string",
            "example": null
          },
          "credentials": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          },
          "defaultAccountGroupId": {
            "type": "string",
            "example": null
          },
          "groupIds": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "organizationName": {
            "type": "string",
            "example": null
          },
          "accountGroupInfos": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AccountGroupInfo"
            }
          }
        },
        "example": null
      },
      "AWSTemplateGenRequest": {
        "required": [
          "accountId",
          "accountType"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "description": "Cloud Account Type",
            "example": null,
            "enum": [
              "account",
              "organization"
            ]
          },
          "accountId": {
            "type": "string",
            "description": "Account Id",
            "example": null
          },
          "awsPartition": {
            "type": "string",
            "description": "*Applicable only for Prisma Government Stack(**app.gov.prismacloud.io**) and given if the Cloud account Global Deployment option is enabled*\n\n * **us-east-1** -  AWS Commercial/Global account\n\n * **us-gov-west-1** - AWS GovCloud account.",
            "example": null,
            "enum": [
              "us-east-1",
              "us-gov-west-1"
            ]
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "description": "Features for which the permissions should be generated and included in the template. \n\n To get a list of all the supported features, call **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
            "example": [
              "Remediation"
            ],
            "items": {
              "type": "string",
              "description": "Features for which the permissions should be generated and included in the template. \n\n To get a list of all the supported features, call **[Get Supported Features](/prisma-cloud/api/cspm/fetch-supported-features)** endpoint",
              "example": "[\"Remediation\"]"
            }
          },
          "customMemberRoleNameEnabled": {
            "type": "boolean",
            "description": "Applicable only when accountType is organization the default is `false`. However, if set to true, you will be prompted to provide member role when using the terraform CFT template.",
            "example": null
          },
          "cftType": {
            "type": "string",
            "description": "The type of cft that you want to download.",
            "example": null,
            "enum": [
              "org_member",
              "org_management",
              "org_management_member",
              "account"
            ]
          },
          "useTenantExternalId": {
            "type": "boolean",
            "description": "Set it to true to use tenantExternalId. The default is `false`.",
            "example": null
          }
        },
        "example": null
      },
      "AWSCFTGenResponse": {
        "type": "object",
        "properties": {
          "createStackLinkWithS3PresignedUrl": {
            "type": "string",
            "description": "AWS Cloudformation Stack Quick Create link.",
            "example": null
          },
          "externalId": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "ComputeLimitStatusResponse": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "isAccountImported": {
            "type": "boolean",
            "example": null
          }
        },
        "example": null
      },
      "LoggingAccountMapRequest": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": null
          },
          "bucketId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "action": {
            "type": "string",
            "example": null
          },
          "featureName": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AwsLoggingAccountResponse": {
        "type": "object",
        "properties": {
          "loggingAccountId": {
            "type": "string",
            "example": null
          },
          "loggingAccountName": {
            "type": "string",
            "example": null
          },
          "roleArn": {
            "type": "string",
            "example": null
          },
          "loggingAccountBucketMap": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/AwsLoggingAccountBucket"
            }
          }
        },
        "example": null
      },
      "CloudAccountIdentity": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "cloudType": {
            "type": "string",
            "example": null,
            "enum": [
              "all",
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci",
              "other",
              "ibm"
            ]
          },
          "parentAccountId": {
            "type": "string",
            "example": null
          },
          "parentName": {
            "type": "string",
            "example": null
          },
          "isOnboarded": {
            "type": "boolean",
            "example": null
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true,
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountMetadataPage": {
        "type": "object",
        "properties": {
          "cloudAccounts": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CloudAccountIdentity"
            }
          }
        },
        "example": null
      },
      "GCPTokenRequestV2": {
        "type": "object",
        "properties": {
          "scopes": {
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          },
          "credentials": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          }
        },
        "example": null
      },
      "GCPTokenResponseV2": {
        "type": "object",
        "properties": {
          "rawAuthToken": {
            "type": "string",
            "example": null
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64",
            "example": null
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          }
        },
        "example": null
      },
      "OrgMember": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": null
          },
          "parentId": {
            "type": "string",
            "example": null
          },
          "type": {
            "type": "string",
            "example": null,
            "enum": [
              "ACCOUNT",
              "FOLDER",
              "ORG"
            ]
          },
          "id": {
            "type": "string",
            "example": null
          },
          "onboarded": {
            "type": "boolean",
            "example": null
          }
        },
        "example": null
      },
      "OrgMembersHierarchyResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/OrgMember"
            }
          },
          "nextPageToken": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "RestAPIErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/APIErrorObject"
          }
        },
        "example": null
      },
      "IbmCloudAccountResponse": {
        "type": "object",
        "properties": {
          "cloudAccount": {
            "$ref": "#/components/schemas/CloudAccount"
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "svcIdIamId": {
            "type": "string",
            "example": null
          },
          "groupIds": {
            "uniqueItems": true,
            "type": "array",
            "example": null,
            "items": {
              "type": "string",
              "example": null
            }
          }
        },
        "example": null
      },
      "AWSTokenRequest": {
        "type": "object",
        "properties": {
          "durationInSeconds": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "shouldRefreshMaxSessionDuration": {
            "type": "boolean",
            "example": null
          },
          "featureType": {
            "type": "string",
            "example": null,
            "enum": [
              "AWS_S3_FLOWLOG_ACCOUNT_TOKEN",
              "AWS_CLOUD_TRAIL",
              "NONE"
            ]
          },
          "accountOnboardingType": {
            "type": "string",
            "example": null,
            "enum": [
              "MONITORED",
              "LOGGING"
            ]
          },
          "tenantName": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AssumeRoleResult": {
        "type": "object",
        "properties": {
          "sdkResponseMetadata": {
            "$ref": "#/components/schemas/ResponseMetadata"
          },
          "sdkHttpMetadata": {
            "$ref": "#/components/schemas/SdkHttpMetadata"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credentials"
          },
          "assumedRoleUser": {
            "$ref": "#/components/schemas/AssumedRoleUser"
          },
          "packedPolicySize": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "sourceIdentity": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AwsTokenResponse": {
        "type": "object",
        "properties": {
          "rawToken": {
            "$ref": "#/components/schemas/AssumeRoleResult"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "example": null
            },
            "example": null
          }
        },
        "example": null
      },
      "ResponseMetadata": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "SdkHttpMetadata": {
        "type": "object",
        "properties": {
          "httpHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "example": null
            },
            "example": null
          },
          "httpStatusCode": {
            "type": "integer",
            "format": "int32",
            "example": null
          },
          "allHttpHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "example": null,
              "items": {
                "type": "string",
                "example": null
              }
            },
            "example": null
          }
        },
        "example": null
      },
      "OciCredentialsData": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "example": null
          },
          "userOcid": {
            "type": "string",
            "example": null
          },
          "groupName": {
            "type": "string",
            "example": null
          },
          "policyName": {
            "type": "string",
            "example": null
          },
          "homeRegion": {
            "type": "string",
            "example": null
          },
          "privateKey": {
            "type": "string",
            "example": null
          },
          "fingerPrint": {
            "type": "string",
            "example": null
          },
          "tenancyId": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountFeaturePatchRequest": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "example": null
          },
          "state": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountBulkFeatureModel": {
        "required": [
          "name",
          "state"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Feature name which has to be enabled or disabled.",
            "example": "Remediation",
            "enum": [
              "Agentless Scanning",
              "Serverless Function Scanning",
              "Agentless API Discovery"
            ]
          },
          "state": {
            "type": "string",
            "description": "Feature state whether to be enabled or disabled.",
            "example": null,
            "enum": [
              "enabled",
              "disabled"
            ]
          }
        },
        "description": "Features to be enabled or disabled. You can enable or disable only **Agentless Scanning** and **Serverless Function Scanning** feature.",
        "example": null
      },
      "CloudAccountBulkFeatureRequest": {
        "required": [
          "features",
          "memberIds"
        ],
        "type": "object",
        "properties": {
          "memberIds": {
            "type": "array",
            "description": "List of member ids for which the feature must be enabled or disabled.\n\nFor AWS, specify account ids.\n\nFor Azure, specify subscription ids.\n\nFor GCP, specify project ids.",
            "example": null,
            "items": {
              "type": "string",
              "description": "List of member ids for which the feature must be enabled or disabled.\n\nFor AWS, specify account ids.\n\nFor Azure, specify subscription ids.\n\nFor GCP, specify project ids.",
              "example": null
            }
          },
          "features": {
            "type": "array",
            "description": "Features to be enabled or disabled. You can enable or disable only **Agentless Scanning** and **Serverless Function Scanning** feature.",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CloudAccountBulkFeatureModel"
            }
          }
        },
        "example": null
      },
      "IbmPermissionCheckRequest": {
        "type": "object",
        "properties": {
          "svcIdIamId": {
            "type": "string",
            "example": null
          },
          "apiKey": {
            "type": "string",
            "example": null
          }
        },
        "example": null
      },
      "AccountStatusMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": null
          },
          "staticMessage": {
            "type": "boolean",
            "example": null
          }
        },
        "example": null
      },
      "CloudAccountStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": null
          },
          "name": {
            "type": "string",
            "example": null
          },
          "status": {
            "type": "string",
            "example": null
          },
          "statusMessage": {
            "$ref": "#/components/schemas/AccountStatusMessage"
          }
        },
        "example": null
      },
      "PermissionCheckResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "array",
            "example": null,
            "items": {
              "$ref": "#/components/schemas/CloudAccountStatus"
            }
          }
        },
        "example": null
      },
      "FeaturesAvailableRequest": {
        "required": [
          "accountType"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "description": "Cloud Account Type. \nSupported values based on the cloud type are as follows: \n\n **AWS Cloud -** account, organization - \n\n **GCP Cloud -** account, organization, masterServiceAccount, workspace_domain \n\n **Azure Cloud -** account, tenant",
            "example": null,
            "enum": [
              "account",
              "organization",
              "masterServiceAccount",
              "tenant",
              "workspace_domain"
            ]
          },
          "deploymentType": {
            "type": "string",
            "description": "*Applicable only for cloud_type: **azure**.*\n\n * **azure** -  Applicable for Prisma Commercial and Government stacks\n\n * **azure_gov** - Applicable for Prisma Commercial and Government stacks.\n\n * **azure_china** - Applicable for Prisma China Stack.",
            "example": null,
            "enum": [
              "azure",
              "azure_gov",
              "azure_china"
            ]
          },
          "awsPartition": {
            "type": "string",
            "description": "*Applicable only for cloud_type: **aws** on Prisma Government Stack(**app.gov.prismacloud.io**) given if the Cloud account Global Deployment option is enabled*\n\n * **us-east-1** -  AWS Commercial/Global account\n\n * **us-gov-west-1** - AWS GovCloud account.",
            "example": null,
            "enum": [
              "us-east-1",
              "us-gov-west-1"
            ]
          },
          "rootSyncEnabled": {
            "type": "boolean",
            "description": "*Applicable only for accountType: **tenant***\n\n In order to onboard the *\\\"tenant\\\"* and its associated **management groups** and **subscriptions**, ```rootSyncEnabled``` must be set to ```true```",
            "example": null
          }
        },
        "example": null
      },
      "FeaturesAvailableResponse": {
        "type": "object",
        "properties": {
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "example": null
          },
          "deploymentType": {
            "type": "string",
            "description": "Cloud Account Deployment Type. global, gov, or china",
            "example": null
          },
          "accountType": {
            "type": "string",
            "description": "Account Type",
            "example": null
          },
          "licenseType": {
            "type": "string",
            "description": "Customer License type.",
            "example": null
          },
          "supportedFeatures": {
            "type": "array",
            "description": "List of supported feature names.",
            "example": null,
            "items": {
              "type": "string",
              "description": "List of supported feature names.",
              "example": null
            }
          }
        },
        "example": null
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    }
  }
}
