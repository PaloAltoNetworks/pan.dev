{
  "openapi": "3.0.1",
  "info": {
    "title": "Audit log service",
    "description": "REST APIs of audit log service which manages user audit logs for actions on Prisma Cloud",
    "version": "v1",
    "contact": {
      "name": "Slack Us",
      "url": "https://panw-rnd.slack.com/archives/CTZ9QJAFP",
      "email": "pcs-scrum-core-all-aaaabxl7xfgelst2iyrjjwlhh4@paloaltonetworks.org.slack.com"
    }
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ],
  "paths": {
    "/audit/api/v1/log": {
      "post": {
        "tags": [
          "Audit Logs"
        ],
        "summary": "Get Audit Logs",
        "description": "Retrieves paginated audit logs based on the provided filter criteria.",
        "operationId": "getAuditLogs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogFilterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2ApiErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogViewResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-migrated-v3": "true",
        "x-public": "true"
      }
    },
    "/audit/api/v1/filter/suggest": {
      "post": {
        "tags": [
          "Audit Logs"
        ],
        "summary": "Get Filter Suggestions",
        "description": "Get UI Filter Suggestions for Resource Types and User",
        "operationId": "getResourceTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogFilterSuggestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2ApiErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogFilterSuggestion"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-public": "true"
      }
    }
  },
  "components": {
    "schemas": {
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error Codes: BadRequest(400), Unauthorized(401), Forbidden(403), TooManyRequests(429)."
          },
          "message": {
            "type": "string",
            "description": "A human-readable representation of the error."
          },
          "target": {
            "type": "string",
            "description": "The target of the error"
          },
          "details": {
            "type": "array",
            "description": "An array of details about specific errors that led to this reported error",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The actual error object"
      },
      "V2ApiErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "description": "Represents the error encountered while processing the request"
      },
      "AuditLogSetting": {
        "required": [
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int64",
            "example": 804430982135447552
          },
          "siemIntegration": {
            "$ref": "#/components/schemas/SiemIntegration"
          }
        }
      },
      "SiemIntegration": {
        "type": "object",
        "properties": {
          "auditLogSiemIntgrIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AuditLog_POST_VIEW": {
        "required": [
          "action",
          "tenantId",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int64",
            "example": 804430982135447552
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1623733133000
          },
          "action": {
            "type": "string",
            "example": "User foo@boo.com tried to create a policy"
          },
          "endPoint": {
            "type": "string",
            "example": "/policy"
          },
          "ipAddress": {
            "type": "string",
            "example": "0:0:0:0:0:0:0:1"
          },
          "operationType": {
            "type": "string",
            "example": "CREATE",
            "enum": [
              "CREATE",
              "READ",
              "UPDATE",
              "DELETE",
              "LOGIN"
            ]
          },
          "resourceName": {
            "type": "string",
            "example": "my special policy"
          },
          "resourceType": {
            "type": "string",
            "example": "policy"
          },
          "result": {
            "type": "string",
            "example": "Successful"
          },
          "source": {
            "type": "string",
            "example": "redlock-policy-api",
            "enum": [
              "redlock-login-api",
              "redlock-saml-login-api",
              "prisma-oauth2-login",
              "redlock-change-password-api",
              "redlock-reset-password-api",
              "redlock-search-api",
              "redlock-profile-api",
              "redlock-cloud-account-api",
              "redlock-sso-config-api",
              "redlock-policy-api",
              "redlock-forgot-password-token-api",
              "redlock-user-account-api",
              "redlock-user-access-key-api",
              "redlock-configs-key-api",
              "redlock-policy-scan-config-api",
              "redlock-anomaly-feature-config-api",
              "redlock-integration-feature-api",
              "redlock-notification-template-api",
              "redlock-alert-filter-api",
              "redlock-compliance-dashboard-filter-api",
              "redlock-bookmark",
              "redlock-alerts-api",
              "redlock-whitelist-api",
              "redlock-allow-list-api",
              "redlock-report-api",
              "redlock-account-group-api",
              "redlock-collections-api",
              "redlock-session-timeout-api",
              "redlock-user-role-api",
              "redlock-sso-bypass-management-api",
              "redlock-enterprise-settings-api",
              "redlock-inventory-dashboard-filter-api",
              "redlock-login-ip-whitelist",
              "redlock-iac-scan-api",
              "support-customer-api",
              "support-user-api",
              "support-tenant-config-api",
              "redlock-storage-dss-api",
              "redlock-anomaly-settings-api",
              "permission-group-api",
              "tenant-provisioner-create-api",
              "tenant-provisioner-update-api",
              "tenant-provisioner-support-delete-api",
              "customer-status-update-api",
              "tenant-license-renewal",
              "tenant-license-plan-update-api",
              "module-provisioner-dlp-provision-api",
              "module-provisioner-module-provision-api",
              "module-provisioner-delete-tenant",
              "ccs-suppression",
              "ccs-custom-policy",
              "ccs-default-policy",
              "ccs-enforcement-exception",
              "ccs-enforcement-settings",
              "ccs-repository",
              "ccs-sbom",
              "ccs-pr-fix",
              "ccs-notification-rule",
              "ccs-exclude-path-rule",
              "ccs-pr",
              "pcs-jit",
              "pan-it-saml-login-api"
            ]
          },
          "user": {
            "type": "string",
            "example": "foo@boo.com"
          },
          "raw": {
            "type": "string"
          }
        }
      },
      "AbsoluteTimeRangeValue": {
        "required": [
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "description": "Start Time for 'absolute' Time Range",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "description": "End Time for 'absolute' Time Range",
            "format": "int64"
          }
        },
        "description": "Object holds 'startTime' and 'endTime' for 'absolute' Time Range"
      },
      "AuditLogFilter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": "List of audit log filters"
      },
      "AuditLogFilterRequest": {
        "title": "Audit Log Filter Request",
        "required": [
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "timeRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "filters": {
            "type": "array",
            "description": "List of audit log filters",
            "items": {
              "$ref": "#/components/schemas/AuditLogFilter"
            }
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of results to return per page. Valid Range: [100, 500]",
            "format": "int32",
            "default": 500
          },
          "nextPageToken": {
            "type": "string",
            "description": "The optional token to retrieve the next page of results"
          }
        }
      },
      "RelativeTimeRangeValue": {
        "required": [
          "amount",
          "unit"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Time Amount for 'relative' Time Range",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "description": "Time Unit for 'relative' Time Range. 'login' not supported here",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          }
        },
        "description": "Object holds 'amount' and 'unit' for 'relative' Time Range"
      },
      "TimeRange": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Time Type",
            "enum": [
              "relative",
              "absolute",
              "to_now"
            ]
          },
          "value": {
            "type": "object",
            "description": "Time Range Value",
            "oneOf": [
              {
                "$ref": "#/components/schemas/RelativeTimeRangeValue"
              },
              {
                "$ref": "#/components/schemas/AbsoluteTimeRangeValue"
              },
              {
                "title": "ToNowTimeRangeValue",
                "type": "string",
                "description": "Represents a 'to_now' time type value.",
                "enum": [
                  "login"
                ]
              }
            ]
          }
        },
        "description": "The time range for the audit log filter",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "AuditLogGetViewModel": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "description": "The time stamp of the log entry",
            "format": "int64",
            "example": 1623733133000
          },
          "action": {
            "type": "string",
            "example": "User foo@boo.com logged in via password"
          },
          "ipAddress": {
            "type": "string",
            "description": "The IP address of associated with the performed the action",
            "example": "127.0.0.1"
          },
          "actionType": {
            "type": "string",
            "description": "Represents the type of action performed on a resource by a given user or system",
            "example": "LOGIN",
            "enum": [
              "CREATE",
              "READ",
              "UPDATE",
              "DELETE",
              "LOGIN"
            ]
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the resource associated with the action",
            "example": "foo@boo.com"
          },
          "resourceType": {
            "type": "string",
            "description": "The type of the resource associated with the action",
            "example": "Login"
          },
          "result": {
            "type": "string",
            "description": "The result of the action performed",
            "example": "Success"
          },
          "user": {
            "type": "string",
            "description": "The user associated with the action",
            "example": "foo@boo.com"
          }
        },
        "description": "The list of audit logs that match the request"
      },
      "AuditLogViewResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "description": "The list of audit logs that match the request",
            "items": {
              "$ref": "#/components/schemas/AuditLogGetViewModel"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to use to retrieve the next page of results"
          }
        }
      },
      "AuditLogFilterSuggestion": {
        "title": "Audit Log Filter Suggestion",
        "type": "object",
        "properties": {
          "suggestions": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of Suggestions",
            "items": {
              "type": "string",
              "description": "List of Suggestions"
            }
          },
          "queryRemainder": {
            "type": "string",
            "description": "Query Remainder"
          }
        }
      },
      "AuditLogFilterSuggestRequest": {
        "title": "Audit Log Filter Suggest Request",
        "required": [
          "filterName"
        ],
        "type": "object",
        "properties": {
          "filterName": {
            "type": "string",
            "description": "The name of the filter",
            "example": "resourceType"
          },
          "query": {
            "type": "string",
            "description": "Case-insensitive query to suggest filter values.  Includes only items that contain the query as a substring.",
            "example": "Login"
          }
        }
      },
      "AuditLog_GET_VIEW": {
        "required": [
          "action",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1623733133000
          },
          "action": {
            "type": "string",
            "example": "User foo@boo.com tried to create a policy"
          },
          "ipAddress": {
            "type": "string",
            "example": "0:0:0:0:0:0:0:1"
          },
          "actionType": {
            "type": "string",
            "enum": [
              "CREATE",
              "READ",
              "UPDATE",
              "DELETE",
              "LOGIN"
            ]
          },
          "resourceName": {
            "type": "string",
            "example": "my special policy"
          },
          "resourceType": {
            "type": "string",
            "example": "policy"
          },
          "result": {
            "type": "string",
            "example": "Successful"
          },
          "user": {
            "type": "string",
            "example": "foo@boo.com"
          }
        }
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    }
  }
}
