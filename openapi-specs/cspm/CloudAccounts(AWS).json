{
  "components": {
    "requestBodies": {
      "AWSOrgRequestConfigModel": {
        "content": {
          "application/json; charset=UTF-8": {
            "schema": {
              "$ref": "#/components/schemas/AWSOrgRequestConfigModel"
            }
          }
        }
      },
      "AwsCloudAccountRequestModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AwsCloudAccountRequestModel"
            }
          }
        },
        "description": "Cloud Account",
        "required": true
      },
      "get-list-of-children-under-parent-aws-legacyBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          }
        },
        "description": "Cloud Account JSON",
        "required": true
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    },
    "schemas": {
      "AWSOrgConfig": {
        "description": "Model for AWS Org Config",
        "properties": {
          "accountId": {
            "description": "AWS account ID",
            "type": "string"
          },
          "masterCftLandingPage": {
            "description": "AWS master CFT landing page",
            "type": "string"
          },
          "masterCftTemplate": {
            "description": "AWS member CFT template",
            "type": "string"
          },
          "masterCftUrl": {
            "description": "AWS master CFT URL",
            "type": "string"
          },
          "masterExternalId": {
            "description": "AWS master external ID, which establishes trust between your Prisma Cloud and AWS accounts",
            "type": "string"
          },
          "masterRoleArn": {
            "description": "AWS master role ARN for your Prisma Cloud role",
            "type": "string"
          },
          "memberCftTemplate": {
            "description": "AWS member CFT template",
            "type": "string"
          },
          "memberCftUrl": {
            "description": "AWS member CFT URL",
            "type": "string"
          },
          "memberExternalId": {
            "description": "AWS member external ID",
            "type": "string"
          },
          "memberRoleName": {
            "description": "AWS member role name",
            "type": "string"
          },
          "scanOption": {
            "description": "Scan option",
            "enum": [
              "Full",
              "Custom"
            ],
            "type": "string"
          },
          "snsEndpointUrl": {
            "description": "SNS subscription URL",
            "type": "string"
          },
          "snsTopicArn": {
            "description": "SNS topic ARN for notification of storage object changes",
            "type": "string"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "required": [
          "masterCftLandingPage",
          "masterCftTemplate",
          "masterCftUrl",
          "masterExternalId",
          "masterRoleArn",
          "memberCftTemplate",
          "memberCftUrl",
          "memberExternalId",
          "memberRoleName",
          "scanOption",
          "snsEndpointUrl",
          "snsTopicArn",
          "storageUUID"
        ],
        "type": "object"
      },
      "AWSOrgRequestConfigModel": {
        "description": "Model for AWS Org Request Config",
        "properties": {
          "accountId": {
            "description": "AWS account ID",
            "type": "string"
          },
          "cloudType": {
            "description": "Cloud type",
            "enum": [
              "AWS"
            ],
            "type": "string"
          },
          "masterExternalId": {
            "description": "AWS master external ID, which establishes trust between your Prisma Cloud and AWS accounts",
            "type": "string"
          },
          "masterRoleArn": {
            "description": "AWS master role ARN for your Prisma Cloud role",
            "type": "string"
          },
          "memberExternalId": {
            "description": "AWS member external ID",
            "type": "string"
          },
          "memberRoleName": {
            "description": "AWS memeber role name",
            "type": "string"
          },
          "scanOption": {
            "description": "Scan option",
            "enum": [
              "Full",
              "Custom"
            ],
            "type": "string"
          },
          "snsTopicArn": {
            "description": "SNS topic ARN for notification of storage object changes",
            "type": "string"
          },
          "storageUUID": {
            "description": "Storage UUID",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "cloudType",
          "masterExternalId",
          "masterRoleArn",
          "memberExternalId",
          "memberRoleName",
          "scanOption",
          "snsTopicArn",
          "storageUUID"
        ],
        "type": "object"
      },
      "AWSOrgStatusConfigModel": {
        "description": "Model for AWS Org Status Config",
        "properties": {
          "accountId": {
            "description": "AWS account ID",
            "type": "string"
          },
          "externalId": {
            "description": "AWS master external ID",
            "type": "string"
          },
          "roleArn": {
            "description": "AWS master role ARN",
            "type": "string"
          },
          "snsTopicArn": {
            "description": "SNS topic ARN for notification of storage object changes",
            "type": "string"
          },
          "tenantId": {
            "description": "Tenant Id",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "externalId",
          "roleArn",
          "snsTopicArn"
        ],
        "type": "object"
      },
      "AWSOrgStatusResponseModel": {
        "description": "Model for AWS Org Status Response",
        "properties": {
          "isSuccess": {
            "description": "Boolean indicating if the operation was a success",
            "type": "boolean"
          },
          "message": {
            "description": "List of error messages if the status check failed",
            "type": "string"
          },
          "sections": {
            "description": "List indicating the location of failure",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccountStatusMessage": {
        "properties": {
          "message": {
            "type": "string"
          },
          "staticMessage": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AwsCloudAccountRequestModel": {
        "description": "Model containing the request for AWS Standalone and Org Cloud Account",
        "properties": {
          "accountId": {
            "description": "AWS Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "organization",
              "account"
            ],
            "type": "string"
          },
          "defaultAccountGroupId": {
            "description": "*Applicable only for accountType: **organization**.*\n\n This is the Default Account Group ID for the AWS organization and its member accounts.",
            "type": "string"
          },
          "enabled": {
            "description": "Cloud Account Status. Whether or not the account is enabled",
            "type": "boolean"
          },
          "features": {
            "description": "Features to be enabled and/ or disabled. To get a list of all the supported features, call **[Fetch Supported Features endpoint](/prisma-cloud/api/cspm/fetch-supported-features)**",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "uniqueItems": true
          },
          "groupIds": {
            "description": "Account Group Ids for this account",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "hierarchySelection": {
            "description": "*Applicable only for accountType: **organization**.*\n\n Include/Exclude a list of AWS Organization Units (OU), AWS accounts, and AWS Organizations to onboard under this organization.",
            "items": {
              "$ref": "#/components/schemas/HierarchySelection"
            },
            "type": "array"
          },
          "name": {
            "description": "Name to be used for the account on the Prisma Cloud platform (must be unique)",
            "type": "string"
          },
          "roleArn": {
            "description": "AWS Role ARN",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "accountType",
          "name",
          "roleArn"
        ],
        "type": "object"
      },
      "AwsListChildrenApiResponseModel": {
        "description": "Model for AwsListChildrenApiResponse",
        "properties": {
          "accountNextPageToken": {
            "description": "Next page token for account",
            "type": "string"
          },
          "ouNextPageToken": {
            "description": "Next page token for Organizational Unit",
            "type": "string"
          },
          "response": {
            "description": "List of node info",
            "items": {
              "$ref": "#/components/schemas/AwsOrgTreeNode"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AwsNodeModel": {
        "description": "Model for AncestorApiResponse",
        "properties": {
          "ancestors": {
            "description": "List of ancestors",
            "items": {
              "$ref": "#/components/schemas/AwsOrgTreeNode"
            },
            "type": "array"
          },
          "resourceId": {
            "description": "Resource ID",
            "type": "string"
          },
          "responseCode": {
            "description": "Response code",
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "Status",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AwsOrgAncestorRequestModel": {
        "description": "Model containing the request for AWS Org Ancestors",
        "properties": {
          "accountId": {
            "description": "AWS Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "organization"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Cloud Account Status. Whether or not the account is enabled",
            "type": "boolean"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "resourceIds": {
            "description": "Array of resource IDs (account IDs and/or OU IDs)",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "roleArn": {
            "description": "AWS Role ARN",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "accountType",
          "resourceIds",
          "roleArn"
        ],
        "type": "object"
      },
      "AwsOrgChildrenRequestModel": {
        "description": "Model containing the request for AWS Org Children",
        "properties": {
          "accountId": {
            "description": "AWS Account ID",
            "type": "string"
          },
          "accountType": {
            "description": "Cloud Account Type",
            "enum": [
              "organization"
            ],
            "type": "string"
          },
          "enabled": {
            "description": "Cloud Account Status. Whether or not the account is enabled",
            "type": "boolean"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "roleArn": {
            "description": "AWS Role ARN",
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "accountType",
          "roleArn"
        ],
        "type": "object"
      },
      "AwsOrgTreeNode": {
        "description": "Model for Aws Org Tree Node",
        "properties": {
          "displayName": {
            "description": "Display name",
            "type": "string"
          },
          "hasChild": {
            "description": "Has Child",
            "enum": [
              true,
              false
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Node ID",
            "type": "string"
          },
          "parent": {
            "description": "Parent",
            "type": "string"
          },
          "type": {
            "description": "Node type",
            "enum": [
              "ORG",
              "FOLDER",
              "PROJECT",
              "SUBSCRIPTION",
              "MANAGEMENT_GROUP",
              "TENANT",
              "ACCOUNT",
              "OU"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudAccountStatus": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusMessage": {
            "$ref": "#/components/schemas/AccountStatusMessage"
          }
        },
        "type": "object"
      },
      "DLPAPIResponse": {
        "description": "Model for response from API",
        "properties": {
          "detail": {
            "description": "Exception details",
            "type": "string"
          },
          "message": {
            "description": "API response",
            "type": "string"
          },
          "name": {
            "description": "Exception name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Feature": {
        "description": "Model for Feature",
        "properties": {
          "defaultMemberState": {
            "description": "Enable or disable the feature for all the member accounts linked to this organization. You can enable or disable the defaultMemberState only if the feature state is enabled for the organization. Applicable only for ```Serverless Function Scanning``` and ```Agentless Workload Scanning``` features.",
            "enum": [
              "enabled",
              "disabled"
            ],
            "type": "string"
          },
          "name": {
            "description": "Feature name obtained from **[Fetch Supported Features endpoint](/prisma-cloud/api/cspm/fetch-supported-features)**",
            "example": "Remediation",
            "type": "string"
          },
          "state": {
            "description": "Feature state. Whether to be enabled or disabled",
            "enum": [
              "enabled",
              "disabled"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "HierarchySelection": {
        "description": "Model for HierarchySelection",
        "properties": {
          "displayName": {
            "description": "To get the display name of resource, Refer List Children of Parent. \n\n **aws**: [List Children of Parent (AWS)](/prisma-cloud/api/cspm/get-list-of-children-under-parent-aws/) \n\n **gcp**: [List Children of Parent (GCP)](/prisma-cloud/api/cspm/get-list-of-children-under-parent/). Display name is the organization name if `nodeType` is **ORG**\n\n**azure**: [List Children of Parent (Azure)](/prisma-cloud/api/cspm/list-children-under-parent/)",
            "example": "Root",
            "type": "string"
          },
          "nodeType": {
            "description": "Member account node type. Supported values based on cloud type: \n\n**aws**:  ORG, OU, or ACCOUNT\n\n **gcp**: ORG, FOLDER, or PROJECT\n\n**azure**: SUBSCRIPTION, MANAGEMENT_GROUP, or TENANT",
            "enum": [
              "ORG",
              "FOLDER",
              "PROJECT",
              "SUBSCRIPTION",
              "MANAGEMENT_GROUP",
              "TENANT",
              "ACCOUNT",
              "OU"
            ],
            "type": "string"
          },
          "resourceId": {
            "description": "To get the list of resource IDs and its details, Refer List Children of Parent. \n\n **aws**: [List Children of Parent (AWS)](/prisma-cloud/api/cspm/get-list-of-children-under-parent-aws/) \n\n **gcp**: [List Children of Parent (GCP)](/prisma-cloud/api/cspm/get-list-of-children-under-parent/) \n\n**azure**: [List Children of Parent (Azure)](/prisma-cloud/api/cspm/list-children-under-parent/)",
            "example": "root",
            "type": "string"
          },
          "selectionType": {
            "description": "Organization Member accounts Selection type. \n\n**ALL**: Include the resource and all its children \n\n**INCLUDE**: Include the specified resource\n\n**EXCLUDE**: Exclude the specified resource",
            "enum": [
              "ALL",
              "INCLUDE",
              "EXCLUDE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "To monitor the resources on your AWS cloud infrastructure, you must first add your AWS accounts to Prisma Cloud. When you add your cloud account to Prisma Cloud, the API integration between AWS and Prisma Cloud is established and you can begin monitoring the resources and identify potential security risks.\n\nThe Cloud Account (AWS) APIs enable you to add and manage AWS accounts on Prisma Cloud. For common operations related to cloud accounts, see [Cloud Accounts (All)](/prisma-cloud/api/cspm/cloud-accounts-all/).\n",
    "title": "AWS Cloud Accounts API Overview",
    "version": "Latest"
  },
  "openapi": "3.0.0",
  "paths": {
    "/dlp/api/v1/config/awsorg/status": {
      "post": {
        "deprecated": true,
        "description": "Returns whether or not the set up for your AWS Organization meets the prerequisites for successful creation of a data security configuration.",
        "operationId": "get-status-for-org",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AWSOrgStatusConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AWSOrgStatusResponseModel"
                }
              }
            },
            "description": "success"
          },
          "400": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "bad_request"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Check Data Security Preconditions (AWS Org)",
        "tags": [
          "Cloud Accounts (AWS)"
        ]
      }
    },
    "/dlp/api/config/v2": {
      "post": {
        "deprecated": true,
        "description": "Creates a data security configuration for an AWS Organization.",
        "operationId": "onboard-aws-org-scan",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AWSOrgRequestConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Add Data Security Config (AWS Org)",
        "tags": [
          "Cloud Accounts (AWS)"
        ]
      },
      "put": {
        "deprecated": true,
        "description": "Updates the data security configuration for the AWS Organization with the specified account ID.",
        "operationId": "update-aws-org-scan-config",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AWSOrgRequestConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/DLPAPIResponse"
                }
              }
            },
            "description": "success"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Update Data Security Config (AWS Org)",
        "tags": [
          "Cloud Accounts (AWS)"
        ]
      }
    },
    "/dlp/api/config/v2/{accountId}": {
      "get": {
        "deprecated": true,
        "description": "Returns the data security configuration for the AWS Organization with the specified account ID.",
        "operationId": "get-aws-org-scan-details",
        "parameters": [
          {
            "description": "AWS account ID",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AWSOrgConfig"
                }
              }
            },
            "description": "success"
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "summary": "Get Data Security Config (AWS Org)",
        "tags": [
          "Cloud Accounts (AWS)"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ],
  "tags": [
    {
      "name": "Cloud Accounts (AWS)",
      "description": "To monitor the resources on your AWS cloud infrastructure, you must first add your AWS accounts to Prisma Cloud. When you add your cloud account to Prisma Cloud, the API integration between AWS and Prisma Cloud is established and you can begin monitoring the resources and identify potential security risks.\n\nThe Cloud Account (AWS) APIs enable you to add and manage AWS accounts on Prisma Cloud. For common operations related to cloud accounts, see [Cloud Accounts (All)](/prisma-cloud/api/cspm/cloud-accounts-all/).\n"
    }
  ]
}