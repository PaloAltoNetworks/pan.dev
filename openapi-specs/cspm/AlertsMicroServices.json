{
  "openapi": "3.0.1",
  "info": {
    "title": "Alerts 2.0 API",
    "description": "REST interface for Alerts 2.0.",
    "version": "Latest"
  },
  "servers": [
    {
      "url": "https://api.prismacloud.io"
    },
    {
      "url": "https://api2.prismacloud.io"
    },
    {
      "url": "https://api3.prismacloud.io"
    },
    {
      "url": "https://api4.prismacloud.io"
    },
    {
      "url": "https://api.anz.prismacloud.io"
    },
    {
      "url": "https://api.eu.prismacloud.io"
    },
    {
      "url": "https://api2.eu.prismacloud.io"
    },
    {
      "url": "https://api.gov.prismacloud.io"
    },
    {
      "url": "https://api.prismacloud.cn"
    },
    {
      "url": "https://api.ca.prismacloud.io"
    },
    {
      "url": "https://api.sg.prismacloud.io"
    },
    {
      "url": "https://api.uk.prismacloud.io"
    },
    {
      "url": "https://api.ind.prismacloud.io"
    },
    {
      "url": "https://api.jp.prismacloud.io"
    },
    {
      "url": "https://api.fr.prismacloud.io"
    }
  ],
  "paths": {
    "/alert/v1/policy": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get Alert Count of Policies",
        "description": "Get the list of policies with alert count based on the input filter along with next pagination token.",
        "operationId": "alert-Policy-List",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyPageResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-public": "true"
      }
    },
    "/alert/v1/aggregate": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get Alert Count by Policy Groups",
        "description": "Get policy groups with alert count based on the group by policy and input filters. The list is paginated and to fetch the remaining data, provide the nextPageToken.",
        "operationId": "alert-Aggregation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPageResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-public": "true"
      }
    },
    "/alert/v1/{id}/graph": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get Alert Evidence Graph",
        "description": "Get the alert JSON graph format data by alert id.",
        "operationId": "get-Alert-Evidence-Graph",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The alert id of the evidence graph.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The alert id of the evidence graph."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request - request body contains a query that is not grammatically valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssetGraphs"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - user cannot be authenticated to service the request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - user is not authorized, or does not have the correct permissions, to make the call",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "PreConditions Failed - query fails domain specific validations",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - API is getting rate limited",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SpringErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "x-redlock-auth": []
          }
        ],
        "x-public": "true"
      }
    }
  },
  "components": {
    "schemas": {
      "AlertSyncRequest": {
        "required": [
          "alertIds",
          "customerId",
          "stackName"
        ],
        "type": "object",
        "properties": {
          "alertIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customerId": {
            "type": "string"
          },
          "stackName": {
            "type": "string"
          },
          "isStatusChange": {
            "type": "boolean"
          }
        }
      },
      "AlertDescopeRequest": {
        "required": [
          "customerId",
          "scopeChangeCalculation",
          "stackName"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "stackName": {
            "type": "string"
          },
          "statusChangedBy": {
            "type": "string"
          },
          "scopeChangeCalculation": {
            "$ref": "#/components/schemas/ScopeChangeCalculation"
          },
          "action": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          }
        }
      },
      "AlertRule": {
        "type": "object",
        "properties": {
          "alertRuleId": {
            "type": "string"
          },
          "oldAlertRule": {
            "$ref": "#/components/schemas/AlertRuleFields"
          },
          "newAlertRule": {
            "$ref": "#/components/schemas/AlertRuleFields"
          }
        }
      },
      "AlertRuleFields": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ScopeChangeCalculation": {
        "type": "object",
        "properties": {
          "alertRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertRule"
            }
          },
          "policyId": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "resourceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subjects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AlertStatusChangeRequestWithSearch": {
        "required": [
          "dismissalNote",
          "reason",
          "status"
        ],
        "type": "object",
        "properties": {
          "snoozeExpiryTs": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "dismissalNote": {
            "type": "string"
          },
          "statusChangedBy": {
            "type": "string"
          },
          "originalSnoozeDuration": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "open",
              "dismissed",
              "snoozed",
              "pending_resolution",
              "resolved"
            ]
          },
          "requestType": {
            "type": "string",
            "enum": [
              "ALERTRULE_DESCOPE_REQUEST",
              "POLICY_DESCOPE_REQUEST",
              "ACCOUNT_DESCOPE_REQUEST",
              "ALERT_STATUS_CHANGE_REQUEST",
              "ALERT_CREATE_REQUEST",
              "ALERT_SNOOZE_EXPIRED_REQUEST",
              "ALERT_REMEDIATION_REQUEST",
              "ALERT_CREATE_AND_DELETE_REQUEST",
              "ALERT_DELETE_REQUEST",
              "ALERT_UNDELETE_REQUEST",
              "ALERT_MIGRATION_REQUEST",
              "ALERT_DELETE_BY_RESOURCE_REQUEST",
              "ALERT_DELETE_BY_RESOURCE_REQUEST_INTERNAL",
              "ALERT_HISTORY_MIGRATION_REQUEST",
              "ALERT_HARD_DELETE_REQUEST",
              "ALERT_RECONCILE_STATUS_CHANGE_REQUEST",
              "ALERT_SYNC_REQUEST",
              "ALERT_HARD_SYNC_REQUEST",
              "ALERT_CASSANDRA_TO_ES_SYNC_REQUEST",
              "ALERT_OVERWRITE_CASSANDRA_ES_REQUEST",
              "ALERT_RESOURCE_GROUP_EXTRACT_REQUEST",
              "ALERT_UPDATE_REQUEST",
              "ALERT_DESCOPE_REQUEST",
              "ALERT_UPDATE_DECORATION_REQUEST",
              "ALERT_DESCOPE_DECORATION_REQUEST",
              "ALERT_PENDING_RESOLUTION_REQUEST"
            ]
          },
          "eventId": {
            "type": "string"
          },
          "alertsArchiveCntPerJob": {
            "type": "integer",
            "format": "int64"
          },
          "alertsArchiveJobId": {
            "type": "integer",
            "format": "int64"
          },
          "statusChangeRequestTs": {
            "type": "integer",
            "format": "int64"
          },
          "prismaId": {
            "type": "integer",
            "format": "int64"
          },
          "searchRequest": {
            "$ref": "#/components/schemas/SearchServiceRequest"
          },
          "alertPurgeJob": {
            "type": "boolean"
          }
        }
      },
      "ComputeAccessGroupMeta": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TAG",
              "RESOURCE_ID",
              "STRING",
              "IP_ADDRESS",
              "NUMBER",
              "RESOURCE_GROUP",
              "COMPUTE_ACCESS_GROUP"
            ]
          },
          "hosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "containers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "functions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "appIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "codeRepos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "namespaces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clusters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JsonNode": {
        "type": "object",
        "description": "MetaData Filter."
      },
      "SearchFilters": {
        "type": "object",
        "properties": {
          "resourceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "fieldWithInvalidValue": {
            "type": "string"
          },
          "alertIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accountIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "statusChangeReason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "statusChangeReasonToExclude": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceInternalIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "resourceApiIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "cloudServiceResourceApiIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "assetClassResourceApiIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "cloudTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTags"
            }
          },
          "policyIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policyTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "customerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "resourceApiIdsToExclude": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "accessibleResourceGroupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceGroupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allRuleCagMeta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComputeAccessGroupMeta"
            }
          },
          "computeEnabled": {
            "type": "boolean"
          },
          "userSelectedAccountFilter": {
            "type": "boolean"
          },
          "nonOnboardedAccountIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Search Filter Conditions."
      },
      "SearchServiceRequest": {
        "required": [
          "customerId",
          "fields",
          "filters",
          "stackName"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Customer Id associated to the Alert."
          },
          "stackName": {
            "type": "string",
            "description": "Stack Name associated to the Alert."
          },
          "fields": {
            "type": "array",
            "description": "Field Name for the filter that will be retrieved.",
            "items": {
              "type": "string",
              "description": "Field Name for the filter that will be retrieved."
            }
          },
          "filters": {
            "$ref": "#/components/schemas/SearchFilters"
          },
          "metadataFilters": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "returnCountOnly": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "searchAfter": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "numBuckets": {
            "type": "integer",
            "format": "int32"
          },
          "disableTrackTotalHit": {
            "type": "boolean",
            "description": "Tracks the total hits for a search request"
          },
          "skipCustomerIdFilter": {
            "type": "boolean",
            "description": "Stack level search request, basically skip customerId filter in the ES query"
          }
        },
        "description": "Search Service Request."
      },
      "SearchTags": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "column": {
            "type": "string"
          },
          "sortDirection": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "description": "Search Service Column Sort"
      },
      "TimeRange": {
        "required": [
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "forField": {
            "type": "string"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AlertStatusChangeRequest": {
        "required": [
          "dismissalNote",
          "reason",
          "status"
        ],
        "type": "object",
        "properties": {
          "snoozeExpiryTs": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "dismissalNote": {
            "type": "string"
          },
          "statusChangedBy": {
            "type": "string"
          },
          "originalSnoozeDuration": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "open",
              "dismissed",
              "snoozed",
              "pending_resolution",
              "resolved"
            ]
          },
          "requestType": {
            "type": "string",
            "enum": [
              "ALERTRULE_DESCOPE_REQUEST",
              "POLICY_DESCOPE_REQUEST",
              "ACCOUNT_DESCOPE_REQUEST",
              "ALERT_STATUS_CHANGE_REQUEST",
              "ALERT_CREATE_REQUEST",
              "ALERT_SNOOZE_EXPIRED_REQUEST",
              "ALERT_REMEDIATION_REQUEST",
              "ALERT_CREATE_AND_DELETE_REQUEST",
              "ALERT_DELETE_REQUEST",
              "ALERT_UNDELETE_REQUEST",
              "ALERT_MIGRATION_REQUEST",
              "ALERT_DELETE_BY_RESOURCE_REQUEST",
              "ALERT_DELETE_BY_RESOURCE_REQUEST_INTERNAL",
              "ALERT_HISTORY_MIGRATION_REQUEST",
              "ALERT_HARD_DELETE_REQUEST",
              "ALERT_RECONCILE_STATUS_CHANGE_REQUEST",
              "ALERT_SYNC_REQUEST",
              "ALERT_HARD_SYNC_REQUEST",
              "ALERT_CASSANDRA_TO_ES_SYNC_REQUEST",
              "ALERT_OVERWRITE_CASSANDRA_ES_REQUEST",
              "ALERT_RESOURCE_GROUP_EXTRACT_REQUEST",
              "ALERT_UPDATE_REQUEST",
              "ALERT_DESCOPE_REQUEST",
              "ALERT_UPDATE_DECORATION_REQUEST",
              "ALERT_DESCOPE_DECORATION_REQUEST",
              "ALERT_PENDING_RESOLUTION_REQUEST"
            ]
          },
          "eventId": {
            "type": "string"
          },
          "alertsArchiveCntPerJob": {
            "type": "integer",
            "format": "int64"
          },
          "alertsArchiveJobId": {
            "type": "integer",
            "format": "int64"
          },
          "statusChangeRequestTs": {
            "type": "integer",
            "format": "int64"
          },
          "prismaId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AlertList": {
        "type": "array",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "items": {
          "$ref": "#/components/schemas/AlertModel"
        }
      },
      "AlertModel": {
        "required": [
          "Account Id.",
          "Cloud Type.",
          "Metadata change Time Stamp.",
          "Policy Type.",
          "Policy change Time Stamp.",
          "Resource Id.",
          "Resource change Time Stamp.",
          "Stack Name.",
          "clientId",
          "verdict"
        ],
        "type": "object",
        "properties": {
          "Customer Id.": {
            "type": "string",
            "example": "'11111'"
          },
          "Prisma Id.": {
            "type": "integer",
            "format": "int64",
            "example": 11111123443
          },
          "Stack Name.": {
            "type": "string",
            "example": "'app2'"
          },
          "Account Id.": {
            "type": "string",
            "example": "'ACC657432'"
          },
          "Resource Id.": {
            "type": "string",
            "example": "'1gs010101'"
          },
          "External Resouce Id.Id Provided by the cloud provider": {
            "type": "string",
            "example": "'1010101'"
          },
          "Resource Name.": {
            "type": "string",
            "example": "'web server'"
          },
          "RRN.": {
            "type": "string",
            "example": "'rrn:aws:storageObject:us-east-2:1234'"
          },
          "url.": {
            "type": "string",
            "example": "'rrn:aws:storageObject:us-east-2:1234:app-qa-logs:/AWSLogs/1234/2020/04/04/1234.log.gz'"
          },
          "Resource Api Id.": {
            "type": "integer",
            "format": "int32"
          },
          "Policy Id.": {
            "type": "string",
            "example": "'222233'"
          },
          "Policy Type.": {
            "type": "integer",
            "format": "int32"
          },
          "Cloud Type.": {
            "type": "integer",
            "format": "int32"
          },
          "Region.": {
            "type": "string",
            "example": "'us-east-2'"
          },
          "Policy change Time Stamp.": {
            "type": "integer",
            "format": "int64"
          },
          "Resource change Time Stamp.": {
            "type": "integer",
            "format": "int64"
          },
          "Resource undeleted time Stamp.": {
            "type": "integer",
            "format": "int64"
          },
          "Metadata change Time Stamp.": {
            "type": "integer",
            "format": "int64"
          },
          "Alert Rule TS.": {
            "type": "integer",
            "format": "int64"
          },
          "Resource Deleted TS.": {
            "type": "integer",
            "format": "int64"
          },
          "reason.": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "Tags.": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertTags"
            }
          },
          "Json Metadata.": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "Resource Data": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "Resource Additional Info": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "additional Info": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "Time to Alert Info": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "Alert Rule Ids.": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Resolved Alert Rule Ids.": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "verdict": {
            "type": "string",
            "description": "Verdict from Config Scanner used for Create Alerts.",
            "enum": [
              "PASS",
              "FAIL"
            ]
          },
          "clientId": {
            "type": "string",
            "description": "client Id."
          },
          "Additional Hash.": {
            "type": "integer",
            "format": "int64",
            "example": 553195237
          },
          "allowAutoRemediation": {
            "type": "boolean",
            "description": "Allow auto remediation."
          },
          "attributionSupported": {
            "type": "boolean",
            "description": "Attribution supported."
          },
          "detectMode": {
            "type": "boolean"
          },
          "resourceInfoUpdated": {
            "type": "boolean"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoryModel"
            }
          },
          "commitContext": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "alertId": {
            "type": "string"
          }
        }
      },
      "AlertTags": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "HistoryModel": {
        "required": [
          "alertTs",
          "status"
        ],
        "type": "object",
        "properties": {
          "alertTs": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedBy": {
            "type": "string"
          },
          "reason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "note": {
            "type": "string"
          }
        }
      },
      "AbsoluteTimeRangeConfig": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/Time"
              }
            }
          }
        ]
      },
      "AlertFilterModel": {
        "required": [
          "timeZone"
        ],
        "type": "object",
        "properties": {
          "detailed": {
            "type": "boolean"
          },
          "webClient": {
            "type": "boolean"
          },
          "withAlertRuleInfo": {
            "type": "boolean"
          },
          "customerId": {
            "type": "string"
          },
          "prismaId": {
            "type": "integer",
            "format": "int64"
          },
          "stackName": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "userRoleType": {
            "type": "string",
            "enum": [
              "System Admin",
              "Account Group Admin",
              "Account Group Read Only",
              "SSO Admin",
              "Cloud Provisioning Admin",
              "Tenant Provisioning Admin",
              "Prisma Service User",
              "Account and Cloud Provisioning Admin",
              "Build and Deploy Security",
              "Build and Deploy Security CI",
              "Compute Admin",
              "NetSecOps",
              "NetSecOps Read Only",
              "Compute Account Admin",
              "Developer",
              "Compute Account Group Read Only",
              "Non System Admin"
            ]
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64"
          },
          "accessibleAccountIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accessibleResourceGroupIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accessiblePolicyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UIFilter"
            }
          },
          "restrictAlertDismissal": {
            "type": "boolean"
          },
          "timeRange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AbsoluteTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/FromNowTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/RelativeTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/ToNowTimeRangeConfig"
              }
            ]
          },
          "pageToken": {
            "type": "string"
          },
          "groupBy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "searchAfter": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "afterKey": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "sortBy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "numTimeBuckets": {
            "type": "integer",
            "format": "int32"
          },
          "subAggregationField": {
            "type": "string"
          },
          "timeRangeType": {
            "type": "string",
            "enum": [
              "ALERT_OPENED",
              "ALERT_UPDATED",
              "ALERT_STATUS_UPDATED"
            ]
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FromNowTimeRangeConfig": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year",
                  "epoch",
                  "login"
                ]
              }
            }
          }
        ]
      },
      "RelativeTimeDuration": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year",
              "epoch",
              "login"
            ]
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RelativeTimeRangeConfig": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/RelativeTimeDuration"
              },
              "relativeTimeType": {
                "type": "string",
                "enum": [
                  "BACKWARD",
                  "FORWARD"
                ]
              }
            }
          }
        ]
      },
      "Time": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TimeRangeConfigModel": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "Time type": {
            "type": "string",
            "enum": [
              "to_now,absolute,relative,from_now"
            ]
          },
          "Time value": {
            "type": "object",
            "enum": [
              "epoch"
            ]
          },
          "Field for range": {
            "type": "string",
            "enum": [
              "lastOpenStateTs",
              "lastStatusChangeTs",
              "lastOpenStateTs"
            ]
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Model for TimeRangeConfig",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ToNowTimeRangeConfig": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TimeRangeConfigModel"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year",
                  "epoch",
                  "login"
                ]
              }
            }
          }
        ]
      },
      "UIFilter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          }
        }
      },
      "ComplianceMetadata": {
        "type": "object",
        "properties": {
          "standardName": {
            "type": "string"
          },
          "standardDescription": {
            "type": "string"
          },
          "requirementId": {
            "type": "string"
          },
          "requirementName": {
            "type": "string"
          },
          "requirementDescription": {
            "type": "string"
          },
          "sectionId": {
            "type": "string"
          },
          "sectionDescription": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          },
          "complianceId": {
            "type": "string"
          },
          "sectionLabel": {
            "type": "string"
          },
          "sectionViewOrder": {
            "type": "integer",
            "format": "int32"
          },
          "requirementViewOrder": {
            "type": "integer",
            "format": "int32"
          },
          "systemDefault": {
            "type": "boolean"
          },
          "policyName": {
            "type": "string"
          },
          "customAssigned": {
            "type": "boolean"
          }
        },
        "description": "Compliance Standards"
      },
      "DecoratedAlert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "reason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "firstSeen": {
            "type": "integer",
            "format": "int64"
          },
          "lastSeen": {
            "type": "integer",
            "format": "int64"
          },
          "alertTime": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64"
          },
          "policyId": {
            "type": "string"
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyDetails"
          },
          "resource": {
            "$ref": "#/components/schemas/ResourceDetails"
          },
          "metadata": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "dismissedBy": {
            "type": "string"
          },
          "dismissalNote": {
            "type": "string"
          },
          "dismissalUntilTs": {
            "type": "integer",
            "format": "int64"
          },
          "dismissalDuration": {
            "type": "string"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DecoratedHistory"
            }
          },
          "autoActionLog": {
            "type": "string"
          },
          "alertAdditionalInfo": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "DecoratedHistory": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "open",
              "dismissed",
              "snoozed",
              "pending_resolution",
              "resolved"
            ]
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "PagedAlertsDecoratedAlert": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DecoratedAlert"
            }
          },
          "nextPageToken": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PolicyDetails": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "recommendation": {
            "type": "string"
          },
          "complianceMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComplianceMetadata"
            }
          },
          "labels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleted": {
            "type": "boolean"
          },
          "policyType": {
            "type": "string",
            "enum": [
              "config",
              "network",
              "audit_event",
              "anomaly",
              "data",
              "iam",
              "workload_vulnerability",
              "workload_incident",
              "api",
              "attack_path"
            ]
          },
          "systemDefault": {
            "type": "boolean"
          },
          "remediable": {
            "type": "boolean"
          },
          "severity": {
            "type": "string",
            "enum": [
              "informational",
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "remediation": {
            "$ref": "#/components/schemas/Remediation"
          },
          "lastModifiedOn": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "isHyperionPolicy": {
            "type": "boolean"
          }
        }
      },
      "Remediation": {
        "type": "object",
        "properties": {
          "templateType": {
            "type": "string",
            "enum": [
              "StaticTemplate",
              "DynamicTemplate",
              "AwsSecurityGroupTemplate",
              "AzureSecurityGroupTemplate",
              "Data"
            ]
          },
          "description": {
            "type": "string"
          },
          "impact": {
            "type": "string"
          },
          "cliScriptTemplate": {
            "type": "string"
          },
          "cliScriptJsonSchema": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RemediationAction"
            }
          },
          "dataRemediation": {
            "type": "string",
            "enum": [
              "reset_exposure",
              "delete_file"
            ]
          }
        }
      },
      "RemediationAction": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          }
        }
      },
      "ResourceDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "internalResourceId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "regionId": {
            "type": "string"
          },
          "resourceTs": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "cloudType": {
            "type": "string",
            "enum": [
              "all",
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci",
              "other",
              "ibm"
            ]
          },
          "resourceApiName": {
            "type": "string"
          },
          "cloudServiceName": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "resourceTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "cloudAccountGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rrn": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "additionalInfo": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "cloudAccountOwners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cloudAccountAncestors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unifiedAssetId": {
            "type": "string"
          },
          "resourceConfigJsonAvailable": {
            "type": "boolean"
          },
          "resourceDetailsAvailable": {
            "type": "boolean"
          }
        }
      },
      "PolicyPageResponse": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "description": "List of Policies",
            "items": {
              "$ref": "#/components/schemas/PolicyVO"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "token to fetch the next page"
          }
        }
      },
      "PolicyVO": {
        "type": "object",
        "properties": {
          "alertCount": {
            "type": "integer",
            "description": "alert count",
            "format": "int64"
          },
          "policyId": {
            "type": "string",
            "description": "Policy ID"
          },
          "policyName": {
            "type": "string",
            "description": "Policy Name"
          },
          "policyType": {
            "type": "string",
            "description": "Policy Type"
          },
          "severity": {
            "type": "string",
            "description": "Policy Severity",
            "enum": [
              "informational",
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "policyLabels": {
            "uniqueItems": true,
            "type": "array",
            "description": "Policy Labels",
            "items": {
              "type": "string",
              "description": "Policy Labels"
            }
          },
          "complianceMetadata": {
            "type": "array",
            "description": "Compliance Standards",
            "items": {
              "$ref": "#/components/schemas/ComplianceMetadata"
            }
          },
          "resourceType": {
            "type": "string",
            "description": "Resource Type"
          },
          "remediable": {
            "type": "boolean",
            "description": "Remediable"
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud Type",
            "enum": [
              "all",
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci",
              "other",
              "ibm"
            ]
          },
          "mittreAttacks": {
            "type": "array",
            "description": "Mittre Attacks",
            "items": {
              "type": "string",
              "description": "Mittre Attacks"
            }
          },
          "findingTypes": {
            "type": "array",
            "description": "Finding types",
            "items": {
              "type": "string",
              "description": "Finding types"
            }
          },
          "restrictAlertDismissal": {
            "type": "boolean",
            "description": "Restrict alert dismissal"
          }
        },
        "description": "Policy data with alert count"
      },
      "ErrorDetails": {
        "required": [
          "message",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SpringErrorResponse": {
        "required": [
          "error",
          "message",
          "path",
          "status",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "message": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "PolicyFilter": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Filter parameters",
            "items": {
              "$ref": "#/components/schemas/UIFilter"
            }
          },
          "sortBy": {
            "type": "array",
            "description": "Array of sort properties. \n\nAppend **:asc** or  **:desc** to the key to sort by ascending or descending order, respectively. Example: **id:asc**.",
            "items": {
              "type": "string",
              "description": "Array of sort properties. \n\nAppend **:asc** or  **:desc** to the key to sort by ascending or descending order, respectively. Example:**id:asc**."
            }
          },
          "groupBy": {
            "type": "string",
            "description": "Group by field.",
            "enum": [
              "policy.type",
              "policy.severity",
              "policy.label",
              "compliance.standard"
            ]
          },
          "size": {
            "type": "integer",
            "description": "Maximum number of items to return per page when data is paginated. The value cannot exceed 500 and default value is 50.",
            "format": "int32"
          },
          "nextPageToken": {
            "type": "string",
            "description": "The nextPageToken value from the previous response object, which is used to get the next page of data. "
          },
          "timeRange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AbsoluteTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/FromNowTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/RelativeTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/ToNowTimeRangeConfig"
              }
            ]
          }
        }
      },
      "GroupPageResponse": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupsResponse"
            }
          },
          "groupBy": {
            "type": "string"
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "GroupsResponse": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "description": "group by field, for example : policy type, compliance standard etc"
          },
          "totalAlerts": {
            "type": "integer",
            "description": "sum of all alert count for all policies in the group",
            "format": "int64"
          },
          "totalPolicies": {
            "type": "integer",
            "description": "number of policies in the group",
            "format": "int32"
          },
          "criticalAlertCount": {
            "type": "integer",
            "description": "alert count for policies with critical severity in the group",
            "format": "int64"
          },
          "highAlertCount": {
            "type": "integer",
            "description": "alert count for policies with high severity in the group",
            "format": "int64"
          },
          "mediumAlertCount": {
            "type": "integer",
            "description": "alert count for policies with medium severity in the group",
            "format": "int64"
          },
          "lowAlertCount": {
            "type": "integer",
            "description": "alert count for policies with low severity in the group",
            "format": "int64"
          },
          "informationalAlertCount": {
            "type": "integer",
            "description": "alert count for policies with informational severity in the group",
            "format": "int64"
          },
          "buildPolicyCount": {
            "type": "integer",
            "description": "number of build policy",
            "format": "int64"
          },
          "runPolicyCount": {
            "type": "integer",
            "description": "number of run policy",
            "format": "int64"
          },
          "findingTypes": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of finding types",
            "items": {
              "type": "string",
              "description": "List of finding types"
            }
          },
          "cloudTypes": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of cloud types",
            "items": {
              "type": "string",
              "description": "List of cloud types",
              "enum": [
                "all",
                "aws",
                "azure",
                "gcp",
                "alibaba_cloud",
                "oci",
                "other",
                "ibm"
              ]
            }
          },
          "policyIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of policy ids",
            "items": {
              "type": "string",
              "description": "List of policy ids"
            }
          }
        },
        "description": "List of groups for selected group by field"
      },
      "AlertSyncResponse": {
        "type": "object",
        "properties": {
          "inValidAlerts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AlertSearchKey": {
        "required": [
          "Account Id.",
          "Stack Name."
        ],
        "type": "object",
        "properties": {
          "Stack Name.": {
            "type": "string",
            "example": "'app2'"
          },
          "Account Id.": {
            "type": "string",
            "example": "'ACC657432'"
          },
          "External Resouce Id.Id Provided by the cloud provider": {
            "type": "string",
            "example": "'1010101'"
          },
          "Policy Id.": {
            "type": "string",
            "example": "'222233'"
          }
        }
      },
      "AlertStatusChangeV2WithFilter": {
        "required": [
          "dismissFilterType"
        ],
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dismissalNote": {
            "type": "string"
          },
          "statusChangedBy": {
            "type": "string"
          },
          "dismissalTimeRange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AbsoluteTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/FromNowTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/RelativeTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/ToNowTimeRangeConfig"
              }
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/AlertFilterModel"
          },
          "isReopen": {
            "type": "boolean"
          },
          "dismissFilterType": {
            "type": "string",
            "enum": [
              "POLICY_IDS",
              "POLICY_AND_GENERIC_FILTERS",
              "ALERT_IDS",
              "GENERIC_FILTER",
              "ALERT_KEYS"
            ]
          },
          "alertSearchKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertSearchKey"
            }
          },
          "userRoleId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "prismaId": {
            "type": "integer",
            "format": "int64"
          },
          "reopen": {
            "type": "boolean"
          }
        }
      },
      "AggregateServiceCountResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TopNPolicy": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "policy.name": {
            "type": "string"
          },
          "policy.id": {
            "type": "string"
          }
        }
      },
      "AlertsReportRequest": {
        "required": [
          "customerId",
          "groupBy",
          "stackName",
          "timeRange"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "stackName": {
            "type": "string"
          },
          "groupBy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeRange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AbsoluteTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/FromNowTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/RelativeTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/ToNowTimeRangeConfig"
              }
            ]
          },
          "afterKey": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "AggregateReportResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "string"
          },
          "stackName": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "policyType": {
            "type": "string"
          },
          "alertStatus": {
            "type": "string"
          },
          "statusChangeReason": {
            "type": "string"
          }
        }
      },
      "AlertsReportResponse": {
        "type": "object",
        "properties": {
          "aggregateReportResponseList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregateReportResponse"
            }
          },
          "afterKey": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "AlertReconcileStatusWithFilter": {
        "required": [
          "statusChangeReason"
        ],
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dismissalNote": {
            "type": "string"
          },
          "statusChangedBy": {
            "type": "string"
          },
          "dismissalTimeRange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AbsoluteTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/FromNowTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/RelativeTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/ToNowTimeRangeConfig"
              }
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/AlertFilterModel"
          },
          "isReopen": {
            "type": "boolean"
          },
          "statusChangeReason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "reopen": {
            "type": "boolean"
          }
        }
      },
      "AlertStatusModel": {
        "required": [
          "Stack Name."
        ],
        "type": "object",
        "properties": {
          "Customer Id.": {
            "type": "string",
            "example": "'11111'"
          },
          "Stack Name.": {
            "type": "string",
            "example": "'app2'"
          }
        }
      },
      "BulkSearchAlertKeyByStatus": {
        "type": "object",
        "properties": {
          "filterStatuses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertModel"
            }
          },
          "detailed": {
            "type": "boolean"
          }
        }
      },
      "AlertStatusChangeWithFilter": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dismissalNote": {
            "type": "string"
          },
          "statusChangedBy": {
            "type": "string"
          },
          "dismissalTimeRange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AbsoluteTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/FromNowTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/RelativeTimeRangeConfig"
              },
              {
                "$ref": "#/components/schemas/ToNowTimeRangeConfig"
              }
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/AlertFilterModel"
          },
          "isReopen": {
            "type": "boolean"
          },
          "reopen": {
            "type": "boolean"
          }
        }
      },
      "AlertAggregateResult": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "alertCount": {
            "type": "integer",
            "format": "int64"
          },
          "saveSearchId": {
            "type": "string"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "classification": {
            "type": "string"
          },
          "objectExposure": {
            "type": "string"
          },
          "alertStatus": {
            "type": "string"
          },
          "policyType": {
            "type": "string"
          },
          "malwarev2": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "ems": {
            "$ref": "#/components/schemas/ExposureMalwareSeverity"
          },
          "ecs": {
            "$ref": "#/components/schemas/ExposureClassificationSeverity"
          }
        }
      },
      "ExposureClassificationSeverity": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "enum": [
              "informational",
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "classification": {
            "type": "string"
          },
          "objectExposure": {
            "type": "string"
          }
        }
      },
      "ExposureMalwareSeverity": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "enum": [
              "informational",
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "malwarev2": {
            "type": "string"
          },
          "objectExposure": {
            "type": "string"
          }
        }
      },
      "Policy": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "policyType": {
            "type": "string",
            "enum": [
              "config",
              "network",
              "audit_event",
              "anomaly",
              "data",
              "iam",
              "workload_vulnerability",
              "workload_incident",
              "api",
              "attack_path"
            ]
          },
          "policySubTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "run",
                "build",
                "run_and_build",
                "audit",
                "data_classification",
                "dns",
                "malware",
                "network_event",
                "network",
                "ueba",
                "permissions",
                "network_config",
                "identity",
                "sensitive_data_exposure",
                "internet_exposure",
                "injections",
                "vulnerability_scanning",
                "shellshock",
                "known_bots",
                "unknown_bots",
                "virtual_patches",
                "misconfig",
                "misconfig_and_event",
                "event"
              ]
            }
          },
          "category": {
            "type": "string",
            "enum": [
              "risk",
              "incident"
            ]
          },
          "systemDefault": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "informational",
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "recommendation": {
            "type": "string"
          },
          "cloudType": {
            "type": "string",
            "enum": [
              "all",
              "aws",
              "azure",
              "gcp",
              "alibaba_cloud",
              "oci",
              "other",
              "ibm"
            ]
          },
          "complianceMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComplianceMetadata"
            }
          },
          "remediation": {
            "$ref": "#/components/schemas/Remediation"
          },
          "labels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedOn": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "ruleLastModifiedOn": {
            "type": "integer",
            "format": "int64"
          },
          "overridden": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "restrictAlertDismissal": {
            "type": "boolean"
          },
          "saveSearchId": {
            "type": "string"
          },
          "findingTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mitreTactics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "majorApiName": {
            "type": "string"
          },
          "isRemediable": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "AlertDeleteRequest": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AlertFilterModel"
          },
          "deleteRequestedBy": {
            "type": "string"
          },
          "deleteRequest": {
            "type": "boolean"
          }
        }
      },
      "AlertTimelineCountResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AlertAttribution": {
        "type": "object",
        "properties": {
          "attributionEventList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributionEvent"
            }
          },
          "resourceCreatedOn": {
            "type": "integer",
            "format": "int64"
          },
          "resourceCreatedBy": {
            "type": "string"
          }
        }
      },
      "AlertDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "firstSeen": {
            "type": "integer",
            "format": "int64"
          },
          "lastSeen": {
            "type": "integer",
            "format": "int64"
          },
          "alertTime": {
            "type": "integer",
            "format": "int64"
          },
          "dismissedBy": {
            "type": "string"
          },
          "dismissalNote": {
            "type": "string"
          },
          "dismissalUntilTs": {
            "type": "integer",
            "format": "int64"
          },
          "dismissalDuration": {
            "type": "string"
          },
          "reason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyDetails"
          },
          "alertRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertRuleConfig"
            }
          },
          "resource": {
            "$ref": "#/components/schemas/ResourceDetails"
          },
          "metadata": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertHistoryDetails"
            }
          },
          "alertAttribution": {
            "$ref": "#/components/schemas/AlertAttribution"
          },
          "autoActionLog": {
            "type": "string"
          },
          "appMetadata": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "description": "Alert details Model for L3 page"
      },
      "AlertHistoryDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string",
            "enum": [
              "RESOURCE_DELETED",
              "RESOURCE_UPDATED",
              "POLICY_UNAVAILABLE",
              "POLICY_UPDATED",
              "POLICY_DISABLED",
              "POLICY_DELETED",
              "ALERT_RULE_UPDATED",
              "ALERT_RULE_DISABLED",
              "ALERT_RULE_DELETED",
              "ACCOUNT_GROUP_UPDATED",
              "ACCOUNT_GROUP_DELETED",
              "TENANT_DELETED",
              "ANOMALY_CONFIG_CHANGED",
              "REMEDIATED",
              "USER_DISMISSED",
              "USER_REOPENED",
              "MDC_REOPEN_FOR_ACCIDENTAL_DELETE",
              "NEW_ALERT",
              "RESOURCE_LIST_DISMISSED",
              "RESOURCE_LIST_SNOOZED",
              "EXISTING_ALERT_RESOURCE_UPDATED",
              "RESOURCE_POLICY_RESCOPED",
              "NETWORK_DISMISSED_AUTO_REOPEN",
              "SNOOZED_AUTO_REOPEN",
              "RESOURCE_ADDED",
              "POLICY_ENABLED",
              "ACCOUNT_ENABLED",
              "ACCOUNT_DISABLED",
              "ACCOUNT_DELETED",
              "ACCOUNT_ADDED",
              "ALERT_RULE_ADDED",
              "ALERT_RULE_UPDATED_DESCOPE",
              "ALERT_RULE_UPDATED_UPSCOPE",
              "MDC_UNDELETED",
              "MDC_DELETE",
              "ALERT_REMEDIATED",
              "SNOOZE_EXPIRED",
              "SCHEDULED",
              "AUTO_REMEDIATED",
              "MANUALLY_REMEDIATED"
            ]
          },
          "note": {
            "type": "string"
          }
        }
      },
      "AlertRuleConfig": {
        "type": "object",
        "properties": {
          "policyScanConfigId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean"
          },
          "scanAll": {
            "type": "boolean"
          },
          "policies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policyLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excludedPolicies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "target": {
            "$ref": "#/components/schemas/TargetFilter"
          },
          "createdOn": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedOn": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "systemDefault": {
            "type": "boolean"
          },
          "firstScanCompletedAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleted": {
            "type": "boolean"
          },
          "allowAutoRemediate": {
            "type": "boolean"
          },
          "delayNotificationMs": {
            "type": "integer",
            "format": "int64"
          },
          "alertAssociationTime": {
            "type": "integer",
            "format": "int64"
          },
          "alertRuleNotificationConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertRuleNotificationConfigModel"
            }
          },
          "notifyOnOpen": {
            "type": "boolean"
          },
          "notifyOnSnoozed": {
            "type": "boolean"
          },
          "notifyOnDismissed": {
            "type": "boolean"
          },
          "notifyOnResolved": {
            "type": "boolean"
          }
        }
      },
      "AlertRuleNotificationConfigModel": {
        "type": "object",
        "properties": {
          "Alert rule notification config ID": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "as_it_happens, daily, weekly, monthly"
            ]
          },
          "Scan enabled": {
            "type": "boolean"
          },
          "List of unique email addresses to notify": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Provide csv detailed report": {
            "type": "boolean",
            "description": "default false"
          },
          "Compress detailed report": {
            "type": "boolean"
          },
          "Include remediation in detailed report": {
            "type": "boolean"
          },
          "Last Updated": {
            "type": "integer",
            "format": "int64"
          },
          "Time of last notification in milliseconds": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "rruleSchedule": {
            "type": "string"
          }
        },
        "description": "Model for Alert Rule Notification Config"
      },
      "AttributionEvent": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "event_ts": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResourceListsCollection": {
        "type": "object",
        "properties": {
          "computeAccessGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComputeAccessGroupMeta"
            }
          },
          "computeAccessGroupIds": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TargetFilter": {
        "type": "object",
        "properties": {
          "accountGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excludedAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetTag"
            }
          },
          "includedResourceLists": {
            "$ref": "#/components/schemas/ResourceListsCollection"
          },
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TargetTag": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResourceIdAggregateResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "resource.id": {
            "type": "string"
          }
        }
      },
      "PolicyTypeAggregateResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "policyType": {
            "type": "string"
          }
        }
      },
      "AlertOverTimeAggregateResult": {
        "type": "object",
        "properties": {
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "interval": {
            "type": "string"
          },
          "aggregations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertAggregateResult"
            }
          }
        }
      },
      "PagedAlertsResourceAndTimestampsByPolicyResponse": {
        "type": "object",
        "properties": {
          "totalRows": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAndTimestampsByPolicyResponse"
            }
          },
          "nextPageToken": {
            "type": "string"
          },
          "sortAllowedColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResourceAndTimestampsByPolicyResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "policyId": {
            "type": "string"
          },
          "firstSeen": {
            "type": "integer",
            "format": "int64"
          },
          "lastSeen": {
            "type": "integer",
            "format": "int64"
          },
          "resourceIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          }
        }
      },
      "SeverityAggregateResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "policy.severity": {
            "type": "string"
          }
        }
      },
      "PolicyIdAggregateResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "policy.id": {
            "type": "string"
          }
        }
      },
      "AggregateByECSResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "malwarev2": {
            "type": "string"
          },
          "policy.severity": {
            "type": "string"
          },
          "object.classification": {
            "type": "string"
          },
          "object.exposure": {
            "type": "string"
          }
        }
      },
      "AlertStatusAggregateResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "alertStatus": {
            "type": "string"
          }
        }
      },
      "OnDemandNotificationConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "generatorType": {
            "type": "string"
          },
          "integrationType": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "recipients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OnDemandNotificationConfigRequest": {
        "type": "object",
        "properties": {
          "prismaId": {
            "type": "integer",
            "format": "int64"
          },
          "alertId": {
            "type": "string"
          },
          "onDemandNotificationConfig": {
            "$ref": "#/components/schemas/OnDemandNotificationConfig"
          }
        }
      },
      "BridgeCrewDecorationRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "prismaId": {
            "type": "integer",
            "format": "int64"
          },
          "stackName": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          },
          "policyType": {
            "type": "integer",
            "format": "int32"
          },
          "resourceApiId": {
            "type": "integer",
            "format": "int32"
          },
          "cloudTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "region": {
            "type": "string"
          },
          "externalResourceId": {
            "type": "string"
          },
          "additionalMetadata": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "decorationRequestType": {
            "type": "string",
            "enum": [
              "ALERTRULE_DESCOPE_REQUEST",
              "POLICY_DESCOPE_REQUEST",
              "ACCOUNT_DESCOPE_REQUEST",
              "ALERT_STATUS_CHANGE_REQUEST",
              "ALERT_CREATE_REQUEST",
              "ALERT_SNOOZE_EXPIRED_REQUEST",
              "ALERT_REMEDIATION_REQUEST",
              "ALERT_CREATE_AND_DELETE_REQUEST",
              "ALERT_DELETE_REQUEST",
              "ALERT_UNDELETE_REQUEST",
              "ALERT_MIGRATION_REQUEST",
              "ALERT_DELETE_BY_RESOURCE_REQUEST",
              "ALERT_DELETE_BY_RESOURCE_REQUEST_INTERNAL",
              "ALERT_HISTORY_MIGRATION_REQUEST",
              "ALERT_HARD_DELETE_REQUEST",
              "ALERT_RECONCILE_STATUS_CHANGE_REQUEST",
              "ALERT_SYNC_REQUEST",
              "ALERT_HARD_SYNC_REQUEST",
              "ALERT_CASSANDRA_TO_ES_SYNC_REQUEST",
              "ALERT_OVERWRITE_CASSANDRA_ES_REQUEST",
              "ALERT_RESOURCE_GROUP_EXTRACT_REQUEST",
              "ALERT_UPDATE_REQUEST",
              "ALERT_DESCOPE_REQUEST",
              "ALERT_UPDATE_DECORATION_REQUEST",
              "ALERT_DESCOPE_DECORATION_REQUEST",
              "ALERT_PENDING_RESOLUTION_REQUEST"
            ]
          }
        }
      },
      "AlertEvidenceGraph": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssetNode"
                },
                {
                  "$ref": "#/components/schemas/FindingNode"
                },
                {
                  "$ref": "#/components/schemas/VulnerabilityNode"
                }
              ]
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphEdge"
            }
          },
          "add": {
            "writeOnly": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AssetNode"
              },
              {
                "$ref": "#/components/schemas/FindingNode"
              },
              {
                "$ref": "#/components/schemas/VulnerabilityNode"
              }
            ]
          }
        },
        "description": "The resource specific graph"
      },
      "AssetGraphs": {
        "required": [
          "graphs"
        ],
        "type": "object",
        "properties": {
          "graphs": {
            "type": "array",
            "description": "The list of graphs representing a primary asset and its associations.",
            "items": {
              "$ref": "#/components/schemas/GraphAlertEvidenceGraph"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "The next page token"
          }
        }
      },
      "AssetNode": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Node"
          },
          {
            "type": "object",
            "properties": {
              "metadata": {
                "$ref": "#/components/schemas/AssetNodeMetadata"
              }
            }
          }
        ]
      },
      "AssetNodeMetadata": {
        "type": "object",
        "properties": {
          "lastModifiedAt": {
            "type": "integer",
            "description": "Last modified time for the asset",
            "format": "int64"
          },
          "externalAssetId": {
            "type": "string",
            "description": "ExternalId for asset"
          },
          "assetApiId": {
            "type": "integer",
            "description": "ExternalId for asset",
            "format": "int32"
          },
          "accountId": {
            "type": "string"
          }
        },
        "description": "Primary Asset Node Metadata"
      },
      "CloudNetworkGraph": {
        "type": "object",
        "properties": {
          "cloudGraphs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CloudNetworkGraphResponse"
            },
            "description": "The cloud network graphs"
          },
          "errors": {
            "type": "array",
            "description": "The error message for cloud network graph.",
            "items": {
              "type": "string",
              "description": "The error message for cloud network graph."
            }
          }
        },
        "description": "Represents the associated network graph for this finding"
      },
      "CloudNetworkGraphResponse": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NodeDataType"
            },
            "description": "The nodes associated with this network graph"
          },
          "paths": {
            "type": "array",
            "description": "The associated paths in the network graph",
            "items": {
              "type": "array",
              "description": "The associated paths in the network graph",
              "items": {
                "$ref": "#/components/schemas/Path"
              }
            }
          }
        },
        "description": "The cloud network graphs"
      },
      "CloudNetworkNode": {
        "required": [
          "cloudType",
          "type",
          "unifiedAssetID"
        ],
        "type": "object",
        "properties": {
          "unifiedAssetID": {
            "type": "string",
            "description": "Prisma Cloud Unified Asset Identifier"
          },
          "nativeID": {
            "type": "string",
            "description": "The native ID of the node"
          },
          "name": {
            "type": "string",
            "description": "Name of the object"
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud type of the entity"
          },
          "type": {
            "type": "string",
            "description": "Type of the endpoint"
          },
          "subType": {
            "type": "string",
            "description": "Asset sub-type information"
          },
          "rrn": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "APIID": {
            "type": "integer",
            "description": "Asset APIID",
            "format": "int32"
          }
        },
        "description": "Represents a network node"
      },
      "EdgeMetadata": {
        "required": [
          "severity"
        ],
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "description": "Effective Severity"
          }
        },
        "description": "Edge Metadata"
      },
      "FindingBuildTimeRemediationMetadata": {
        "type": "object",
        "properties": {
          "buildtime_resource_id": {
            "type": "string"
          },
          "buildtime_resource_name": {
            "type": "string"
          },
          "git_filename": {
            "type": "string"
          },
          "git_directory": {
            "type": "string"
          },
          "git_provider": {
            "type": "string"
          },
          "git_last_modified_time": {
            "type": "integer",
            "format": "int64"
          },
          "git_last_modified_by": {
            "type": "string"
          },
          "git_modifiers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "git_org": {
            "type": "string"
          },
          "git_repository": {
            "type": "string"
          },
          "git_repo_id": {
            "type": "string"
          },
          "depends_on": {
            "type": "string"
          },
          "dependents": {
            "type": "string"
          },
          "yor_trace": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "framework": {
            "type": "string"
          },
          "code_security_url": {
            "type": "string"
          },
          "bc_resource_id": {
            "type": "string"
          },
          "alert_decoration_status": {
            "type": "string"
          },
          "fix_pr_url": {
            "type": "string"
          },
          "has_fix": {
            "type": "boolean"
          }
        }
      },
      "FindingNode": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Node"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The node type",
                "enum": [
                  "Finding"
                ]
              },
              "metadata": {
                "$ref": "#/components/schemas/FindingNodeMetadata"
              }
            }
          }
        ]
      },
      "FindingNodeMetadata": {
        "required": [
          "description",
          "lastModifiedAt",
          "policyType",
          "severity",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Finding Type"
          },
          "policyType": {
            "type": "string",
            "description": "Policy Type"
          },
          "severity": {
            "type": "string",
            "description": "Finding Severity"
          },
          "description": {
            "type": "string",
            "description": "Finding description"
          },
          "lastModifiedAt": {
            "type": "integer",
            "description": "Time when the finding was reported",
            "format": "int64"
          },
          "findingRemediationDetails": {
            "$ref": "#/components/schemas/FindingRemediationDetails"
          },
          "permissionGraph": {
            "$ref": "#/components/schemas/IAMPermissionGraph"
          },
          "networkGraph": {
            "$ref": "#/components/schemas/CloudNetworkGraph"
          },
          "isRemediable": {
            "type": "boolean",
            "description": "isRemediable"
          }
        },
        "description": "Finding Node Metadata"
      },
      "FindingRemediationDetails": {
        "type": "object",
        "properties": {
          "buildTimeMetadata": {
            "$ref": "#/components/schemas/FindingBuildTimeRemediationMetadata"
          },
          "runtimeMetadata": {
            "$ref": "#/components/schemas/FindingRuntimeRemediationMetadaa"
          }
        },
        "description": "Represents the RemediationDetails for this finding"
      },
      "FindingRuntimeRemediationMetadaa": {
        "type": "object",
        "properties": {
          "remediationTs": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GraphAlertEvidenceGraph": {
        "type": "object",
        "properties": {
          "graph": {
            "$ref": "#/components/schemas/AlertEvidenceGraph"
          }
        },
        "description": "The list of graphs representing a primary asset and its associations"
      },
      "GraphEdge": {
        "required": [
          "source",
          "target"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Edge Id"
          },
          "source": {
            "type": "string",
            "description": "Source node"
          },
          "target": {
            "type": "string",
            "description": "Target node"
          },
          "metadata": {
            "$ref": "#/components/schemas/EdgeMetadata"
          }
        }
      },
      "IAMPermissionGraph": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Permission graph items",
            "items": {
              "$ref": "#/components/schemas/IAMPermissionsResponse"
            }
          }
        },
        "description": "Represents the associated permission graph for this finding"
      },
      "IAMPermissionsResponse": {
        "type": "object",
        "properties": {
          "grantedByCloudType": {
            "type": "string",
            "description": "Granted by cloud type"
          },
          "grantedByEntityType": {
            "type": "string",
            "description": "Granted by entity type name"
          },
          "grantedByEntityTypeId": {
            "type": "integer",
            "description": "Granted by entity type identifier",
            "format": "int32"
          },
          "grantedByEntityName": {
            "type": "string",
            "description": "Granted by entity name"
          },
          "grantedByEntityAssetId": {
            "type": "string",
            "description": "Granted by entity asset identifier"
          },
          "destCloudType": {
            "type": "string",
            "description": "Destination cloud type"
          },
          "destCloudServiceName": {
            "type": "string",
            "description": "Destination cloud service name"
          },
          "destCloudResourceName": {
            "type": "string",
            "description": "Destination cloud resource name"
          },
          "destResourceTypeId": {
            "type": "integer",
            "description": "Destination cloud resource type identifier",
            "format": "int32"
          },
          "destResourceAssetId": {
            "type": "string",
            "description": "Destination cloud resource asset identifier"
          }
        },
        "description": "Permission graph items"
      },
      "Node": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A dictionary of the node identifier and the associated node",
        "discriminator": {
          "propertyName": "type"
        },
        "anyOf": [
          {
            "$ref": "#/components/schemas/AssetNode"
          },
          {
            "$ref": "#/components/schemas/FindingNode"
          },
          {
            "$ref": "#/components/schemas/VulnerabilityNode"
          }
        ]
      },
      "NodeDataType": {
        "type": "object",
        "properties": {
          "nodeData": {
            "$ref": "#/components/schemas/CloudNetworkNode"
          },
          "type": {
            "type": "string",
            "description": "Represents a network node type"
          }
        },
        "description": "The nodes associated with this network graph"
      },
      "Path": {
        "type": "object",
        "properties": {
          "nativeID": {
            "type": "string",
            "description": "The native ID of the node"
          }
        },
        "description": "The associated paths in the network graph"
      },
      "VulnerabilityMetadata": {
        "required": [
          "exploitable",
          "patchable",
          "published",
          "score",
          "severity"
        ],
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "description": "Severity of the vulnerability"
          },
          "score": {
            "type": "number",
            "description": "Score of the vulnerability",
            "format": "float"
          },
          "patchable": {
            "type": "boolean",
            "description": "Boolean value representing whether this vulnerability is patchable"
          },
          "exploitable": {
            "type": "boolean",
            "description": "Boolean value representing whether this vulnerability is exploitable"
          },
          "published": {
            "type": "integer",
            "description": "Long value representing when the vulnerability was published",
            "format": "int64"
          }
        },
        "description": "Vulnerability Node Metadata"
      },
      "VulnerabilityNode": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Node"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The node type",
                "enum": [
                  "Vulnerability"
                ]
              },
              "metadata": {
                "$ref": "#/components/schemas/VulnerabilityMetadata"
              }
            }
          }
        ]
      }
    },
    "headers": {
      "prismaId": {
        "description": "x-prisma-tenant-id",
        "style": "simple",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "The x-redlock-auth value is a JSON Web Token (JWT).",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    }
  }
}
