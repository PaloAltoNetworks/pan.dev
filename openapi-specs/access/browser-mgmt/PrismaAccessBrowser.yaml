components:
  schemas:
    ApplicationResponse:
      properties:
        appId:
          type: integer
        category:
          format: string
          type: string
        id:
          description: Unique identifier
          format: string
          type: string
        name:
          description: Name of the application
          format: string
          type: string
        primaryUrl:
          format: string
          type: string
        reputation:
          type: integer
        resetPasswordUrl:
          format: string
          type: string
        routeToPrisma:
          type: boolean
        type:
          format: string
          type: string
        urls:
          description: Url Pattenrs for the application
          items:
            type: string
          type: array
      required:
      - id
      - createTime
      - updateTime
      - name
      - urls
      type: object
    CrowdstrikeZTAPosture:
      properties:
        CID:
          type: string
        osScore:
          type: integer
        score:
          type: integer
        sensorScore:
          type: integer
      required:
      - score
      - sensorScore
      - osScore
      - CID
      type: object
    Device:
      properties:
        arch:
          description: Architecture
          type: string
        browserVersion:
          description: Browser Version
          type: string
        crowdstrikeZTA:
          $ref: '#/components/schemas/CrowdstrikeZTAPosture'
        deviceEPP:
          $ref: '#/components/schemas/DeviceEPP'
        deviceManagement:
          $ref: '#/components/schemas/DeviceManagement'
        devicePassword:
          $ref: '#/components/schemas/DevicePasswordPosture'
        deviceType:
          description: Device Type
          enum:
          - unknown
          - desktop
          - laptop
          - vm
          - smartphone
          - tablet
          - chromebook
          type: string
        diskEncryptionStatus:
          description: Disk Encryption Status
          enum:
          - DiskEncryptionStatusUnknown
          - DiskEncryptionStatusDisabled
          - DiskEncryptionStatusEnabled
          type: string
        externalId:
          description: External identifier
          format: string
          type: string
        firewallStatus:
          description: Firewall Status
          enum:
          - FireWallStatusUnknown
          - FireWallStatusDisabled
          - FireWallStatusEnabled
          type: string
        firstSeen:
          description: First seen time
          format: date-time
          type: string
        hostname:
          description: Hostname
          type: string
        id:
          description: Unique identifier
          format: string
          type: string
        ip:
          description: IP Address
          nullable: true
          type: string
        lastSeen:
          description: Last seen time
          format: date-time
          type: string
        macAddresses:
          description: MAC Addresses
          items:
            type: string
          type: array
        model:
          description: Device Model
          type: string
        nativeArch:
          description: Native Architecture
          type: string
        osType:
          description: Operating System type
          enum:
          - windows
          - macOS
          - linux
          - ios
          - android
          - unknown
          type: string
        osVersion:
          description: OS Version
          type: string
        screenLockStatus:
          description: Screen Lock Status
          enum:
          - ScreenLockStatusUnknown
          - ScreenLockStatusDisabled
          - ScreenLockStatusEnabled
          type: string
        serialNumber:
          description: Serial Number
          type: string
        systemIntegrity:
          $ref: '#/components/schemas/SystemIntegrityPosture'
        talonExtensionVersion:
          description: Talon Extension Version
          type: string
        user:
          $ref: '#/components/schemas/User'
        userAgent:
          description: User Agent
          type: string
      required:
      - id
      - firstSeen
      - lastSeen
      - osType
      - arch
      - nativeArch
      - hostname
      - model
      - serialNumber
      - macAddresses
      - screenLockStatus
      - diskEncryptionStatus
      - firewallStatus
      - userAgent
      - talonExtensionVersion
      - browserVersion
      - channel
      - deviceType
      - osVersion
      - externalId
      type: object
    DeviceEPP:
      properties:
        enabled:
          type: boolean
        products:
          items:
            $ref: '#/components/schemas/EPP'
          type: array
      required:
      - products
      - enabled
      type: object
    DeviceManagement:
      properties:
        status:
          enum:
          - managed
          - unmanaged
          type: string
        systems:
          description: Device Management
          items:
            $ref: '#/components/schemas/DeviceManagementSystem'
          type: array
      required:
      - status
      - systems
      type: object
    DeviceManagementSystem:
      properties:
        details:
          type: string
        system:
          enum:
          - ad
          - azureAd
          - intune
          - jamf
          type: string
      type: object
    DevicePasswordPosture:
      properties:
        enabled:
          type: boolean
        passwordPolicy:
          $ref: '#/components/schemas/DevicePasswordPosturePolicy'
      required:
      - enabled
      - products
      type: object
    DevicePasswordPosturePolicy:
      properties:
        complexityReq:
          type: boolean
        maxPasswordAge:
          type: integer
        minPasswordLength:
          type: integer
      required:
      - complexityReq
      - maxPasswordAge
      - minPasswordLength
      type: object
    EPP:
      properties:
        name:
          type: string
        state:
          type: string
        version:
          type: string
      required:
      - name
      - version
      - state
      type: object
    ErrorResponse:
      properties:
        error:
          type: string
        message:
          type: string
      required:
      - message
      type: object
    Order:
      description: The sort order
      enum:
      - asc
      - desc
      type: string
    PageInfo:
      properties:
        cursor:
          description: When paginating forwards, the cursor to continue.
          nullable: true
          type: string
        hasNextPage:
          description: When paginating forwards, are there more items?
          type: boolean
      required:
      - hasNextPage
      type: object
    Plugin:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/PluginElement'
          type: array
        events:
          items:
            $ref: '#/components/schemas/PluginEvent'
          type: array
        links:
          items:
            $ref: '#/components/schemas/PluginLink'
          type: array
      type: object
    PluginElement:
      properties:
        elementType:
          enum:
          - excludeAccountShield
          - includeAccountShield
          type: string
        selectors:
          items:
            type: string
          type: array
        urlPattern:
          type: string
      required:
      - elementType
      - selectors
      type: object
    PluginEvent:
      properties:
        eventType:
          enum:
          - loginFail
          - loginAttempt
          - passwordReset
          - userRegistration
          type: string
        headers:
          items:
            properties:
              content:
                type: string
              name:
                type: string
            required:
            - name
            - content
            type: object
          type: array
        maxContentLength:
          type: integer
        method:
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          type: string
        minContentLength:
          type: integer
        requestUrl:
          type: string
        statusCode:
          type: integer
        triggerOnFail:
          type: boolean
        triggerOnSuccess:
          type: boolean
        triggerUrl:
          type: string
      required:
      - eventType
      type: object
    PluginLink:
      properties:
        loginPageUrl:
          type: string
        resetPasswordUrl:
          type: string
        urlPattern:
          type: string
      type: object
    PluginResponse:
      properties:
        applicationId:
          description: Application ID of the application the plugin is associated
            to
          type: string
        createTime:
          description: Creation time of the plugin
          format: date-time
          type: string
        id:
          description: Unique identifier
          format: string
          type: string
        plugin:
          $ref: '#/components/schemas/Plugin'
        updateTime:
          description: Last update time of the plugin
          format: date-time
          type: string
      required:
      - id
      - createTime
      - updateTime
      - plugin
      - applicationId
      type: object
    RequestAction:
      properties:
        action:
          description: Action to perform on the request
          enum:
          - approve
          - decline
          type: string
        adminBypassTimeframe:
          description: The timeframe for which the approval is valid
          enum:
          - Once
          - 10m
          - 1h
          - 4h
          - 9h
          - 12h
          - 24h
          - 3d
          - 7d
          - 14d
          - 30d
          - 60d
          - 90d
          type: string
        adminComment:
          description: Admin comment on the action
          format: string
          type: string
      required:
      - action
      type: object
    RequestError:
      properties:
        error_message:
          type: string
      type: object
    RevokeRequestAction:
      properties:
        revokerComment:
          description: Admin revoke comment
          format: string
          type: string
      required:
      - action
      type: object
    SystemIntegrityPosture:
      properties:
        services:
          $ref: '#/components/schemas/SystemIntegrityPostureServices'
        status:
          enum:
          - pass
          - fail
          - unknown
          type: string
      required:
      - status
      - services
      type: object
    SystemIntegrityPostureServices:
      properties:
        SIP:
          type: boolean
        driversSigningEnforcement:
          type: boolean
        gatekeeper:
          type: boolean
        kernelDebugger:
          type: boolean
        secureBoot:
          type: boolean
      type: object
    User:
      properties:
        deletedTime:
          description: Deleted Time
          format: date-time
          type: string
        deviceIds:
          description: Device IDs
          items:
            type: string
          type: array
        email:
          description: Email
          type: string
        externalId:
          description: External identifier
          format: string
          type: string
        firstSeen:
          description: First seen time
          format: date-time
          type: string
        id:
          description: Unique identifier
          format: string
          type: string
        lastSeen:
          description: Last seen time
          format: date-time
          type: string
        name:
          description: Name
          type: string
        profilePictureURL:
          description: Profile Picture URL
          type: string
        provider:
          description: Provider
          enum:
          - saml
          - local
          - oidc
          type: string
        userGroups:
          description: User Groups
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
      required:
      - id
      - email
      - lastSeen
      - firstSeen
      - name
      - profilePictureURL
      - deletedTime
      - provider
      - externalId
      type: object
    UserGroup:
      properties:
        createdAt:
          description: Created at
          format: date-time
          type: string
        id:
          description: Unique identifier
          type: string
        lastUpdated:
          description: Last updated
          format: date-time
          type: string
        name:
          description: Name
          type: string
        provider:
          description: Provider
          enum:
          - sso
          - local
          type: string
      required:
      - id
      - name
      type: object
    UserRequest:
      properties:
        adminBypassTimeframe:
          description: The timeframe for which the approval is valid
          format: string
          type: integer
        adminComment:
          description: Admin comment
          format: string
          type: string
        createdAt:
          description: Request created at
          format: date-time
          type: string
        deviceId:
          description: Device unique identifier
          format: string
          type: string
        id:
          description: Unique identifier
          format: string
          type: string
        reason:
          description: reason for request
          format: string
          type: string
        respondedBy:
          description: Response by
          format: string
          type: string
        responseTime:
          description: Admin response time
          format: date-time
          type: string
        revokedAt:
          description: Admin revoke time
          format: date-time
          type: string
        revokedBy:
          description: Revoked by
          format: string
          type: string
        revokerComment:
          description: Revoke comment
          format: string
          type: string
        ruleId:
          description: Blocking rule unique identifier
          format: string
          type: string
        status:
          description: Request status
          format: string
          type: string
        type:
          description: Request type
          format: string
          type: string
        url:
          description: bypassing url
          format: string
          type: string
        userAcceptedAt:
          description: User accepted response at
          format: date-time
          type: string
        userId:
          description: Request unique identifier
          format: string
          type: string
      required:
      - id
      - userId
      - status
      - type
      - url
      - reason
      - ruleId
      - createdAt
      - deviceId
      type: object
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http
info:
  contact:
    email: support@paloaltonetworks.com
  description: "This Open API spec file represents the APIs available for Palo Alto\
    \ Networks Prisma Access Browser Management APIs. \nThese APIs are available for\
    \ all PAB tenants to scale and automate their processes related to the browser.\n\
    \nAll of the functionality exposed by these APIs can also be performed using the\
    \ [Prisma Access Browser User Interface](https://docs.paloaltonetworks.com/prisma-access-browser).\n\
    \nThese APIs use the common SASE authentication mechanism and base URL. See the\n\
    [Prisma SASE API Get Started](https://pan.dev/sase/docs/getstarted) guide for\
    \ more information.\n\nThis Open API spec file was created on January 30, 2025.\
    \ To check for a more recent version of this file, see\n[Prisma Access Browser\
    \ APIs on pan.dev](https://pan.dev/access/api/browser-mgmt/browser-mgmt-api.html).\n\
    \n\xA9 2024 Palo Alto Networks, Inc. Palo Alto Networks is a registered trademark\
    \ of Palo\nAlto Networks. A list of our trademarks can be found at\n\n[https://www.paloaltonetworks.com/company/trademarks.html](https://www.paloaltonetworks.com/company/trademarks.html)\n\
    \nAll other marks mentioned herein may be trademarks of their respective companies.\n"
  title: Prisma Access Browser APIs
  version: '1.0'
openapi: 3.0.0
paths:
  /seb-api/v1/applications:
    get:
      description: 'Returns a list of [applications](https://docs.paloaltonetworks.com/prisma-access-browser/administration/manage-prisma-access-browser-applications).

        '
      operationId: get-seb-api-v1-applications
      parameters:
      - description: Optional name string to search in applications
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: Optional url string to search in applications
        in: query
        name: url
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ApplicationResponse'
                    type: array
                type: object
          description: A list of all application objects
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Get application list
      tags:
      - Applications
  /seb-api/v1/applications/plugins:
    get:
      description: 'Returns a list of application plugins.

        '
      operationId: get-seb-api-v1-applications-plugins
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/PluginResponse'
                    type: array
                type: object
          description: A list of all application plugin objects
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Get application plugins list
      tags:
      - Applications
  /seb-api/v1/applications/{id}/plugins:
    delete:
      description: 'Deletes the plugin associated with the application ID.

        '
      operationId: delete-seb-api-v1-applications-id-plugins
      parameters:
      - description: The ID of the application associated with the plugin to delete
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  pluginId:
                    description: The ID of the deleted plugin
                    type: string
                type: object
          description: Plugin deleted successfully
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: User group not found
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Delete plugin
      tags:
      - Applications
    get:
      description: 'Retrieves the plugin associated with the application ID

        '
      operationId: get-seb-api-v1-applications-id-plugins
      parameters:
      - description: The ID of the application to retrieve the plugin for
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResponse'
          description: A single plugin associated with the application ID
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Plugin not found
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Get application
      tags:
      - Applications
    post:
      description: 'Creates a new plugin associated with the application ID.

        '
      operationId: post-seb-api-v1-applications-id-plugins
      parameters:
      - description: The ID of the application to create the plugin for
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                plugin:
                  $ref: '#/components/schemas/Plugin'
              required:
              - plugin
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  pluginId:
                    description: The ID of the newly created plugin
                    type: string
                type: object
          description: Plugin created successfully
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Create plugin
      tags:
      - Applications
    put:
      description: 'Updates the plugin associated with the application ID

        '
      operationId: put-seb-api-v1-applications-id-plugins
      parameters:
      - description: The ID of the application to update the plugin for
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                plugin:
                  $ref: '#/components/schemas/Plugin'
              required:
              - plugin
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  pluginId:
                    description: The ID of the updated plugin
                    type: string
                type: object
          description: Plugin updated successfully
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Plugin not found
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Update plugin
      tags:
      - Applications
  /seb-api/v1/devices:
    get:
      description: 'Retrieve a list of [devices](https://docs.paloaltonetworks.com/prisma-access-browser/administration/manage-prisma-access-browser-devices).

        '
      operationId: get-seb-api-v1-devices
      parameters:
      - description: 'Number of devices to return

          '
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: 'Filter by hostname.

          '
        in: query
        name: device.hostname
        required: false
        schema:
          type: string
      - description: 'Filter by user name.

          '
        in: query
        name: user.name
        required: false
        schema:
          type: string
      - description: 'Filter by OS type.

          '
        in: query
        name: device.os_type
        required: false
        schema:
          type: string
      - description: 'Filter by first seen time or after.

          '
        in: query
        name: device.first_seen_gte
        required: false
        schema:
          format: date-time
          type: string
      - description: 'Filter by last seen time or before.

          '
        in: query
        name: device.last_seen_lte
        required: false
        schema:
          format: date-time
          type: string
      - description: 'Filter by device type.

          '
        in: query
        name: device.type
        required: false
        schema:
          type: string
      - description: 'Filter by firewall status

          '
        in: query
        name: device.firewall_status
        required: false
        schema:
          type: string
      - description: 'Filter by screen lock status.

          '
        in: query
        name: device.screen_lock_status
        required: false
        schema:
          type: string
      - description: 'Filter by disk encryption status

          '
        in: query
        name: device.disk_encryption_status
        required: false
        schema:
          type: string
      - description: 'An optional opaque string that defines from where to start listing.

          '
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: 'The field to sort by.

          '
        in: query
        name: sort
        required: false
        schema:
          enum:
          - device.hostname
          - device.os_type
          - device.browser_version
          - device.first_seen
          - device.last_seen
          - user.name
          type: string
      - description: 'The sort order

          '
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Device'
                    type: array
                  pageInfo:
                    $ref: '#/components/schemas/PageInfo'
                type: object
          description: A list of devices with pagination info
        '400':
          description: Bad request
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: List of devices
      tags:
      - Devices
  /seb-api/v1/devices/{id}:
    get:
      description: 'Retrieve a device by [ID](https://docs.paloaltonetworks.com/prisma-access-browser/administration/manage-prisma-access-browser-devices).

        '
      operationId: get-seb-api-v1-devices-id
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: A device
        '404':
          description: Device not found
      security:
      - Bearer: []
      summary: Get device by ID
      tags:
      - Devices
  /seb-api/v1/user-groups:
    get:
      description: 'Retrieve a list of user groups.

        '
      operationId: get-seb-api-v1-user-groups
      parameters:
      - description: "Number of user requests to return. \n"
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: "An optional opaque string that defines from where to start listing.\
          \ \n"
        in: query
        name: cursor
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/UserGroup'
                    type: array
                  pageInfo:
                    $ref: '#/components/schemas/PageInfo'
                type: object
          description: A list of user groups
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: List of user groups
      tags:
      - User Groups
    post:
      operationId: post-seb-api-v1-user-groups
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the user group
                  type: string
                userIds:
                  description: List of user IDs
                  items:
                    type: string
                  type: array
              required:
              - name
              - userIds
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  userGroupId:
                    description: The ID of the newly created user group
                    type: string
                type: object
          description: User group created successfully
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Creates a new user group
      tags:
      - User Groups
  /seb-api/v1/user-groups/{id}:
    delete:
      operationId: delete-seb-api-v1-user-groups-id
      parameters:
      - description: The ID of the user group to delete
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  userGroupId:
                    description: The ID of the deleted user group
                    type: string
                type: object
          description: User group deleted successfully
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: User group not found
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Deletes a user group
      tags:
      - User Groups
    get:
      description: 'Returns a single user group by ID.

        '
      operationId: get-seb-api-v1-user-groups-id
      parameters:
      - description: The ID of the user group to retrieve
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: A single user group
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: User group not found
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Get single user group by ID
      tags:
      - User Groups
    put:
      operationId: put-seb-api-v1-user-groups-id
      parameters:
      - description: The ID of the user group to update
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                users:
                  description: List of user updates
                  items:
                    properties:
                      action:
                        description: Action to perform (add or remove the user)
                        enum:
                        - add
                        - remove
                        type: string
                      userId:
                        description: User ID
                        type: string
                    required:
                    - userId
                    - action
                    type: object
                  type: array
              required:
              - users
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  userGroupId:
                    description: The ID of the updated user group
                    type: string
                type: object
          description: User group updated successfully
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
                type: object
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: User group not found
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Updates a user group
      tags:
      - User Groups
  /seb-api/v1/user-requests:
    get:
      description: 'Returns a list of user requests.

        '
      operationId: get-seb-api-v1-user-requests
      parameters:
      - description: 'Number of user requests to return.

          '
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: 'Filter by request type.

          '
        in: query
        name: request.type
        required: false
        schema:
          enum:
          - WebAccess
          - AppLogin
          type: string
      - description: 'Filter by request user id

          '
        in: query
        name: request.user_id
        required: false
        schema:
          type: string
      - description: 'Filter by request device id.

          '
        in: query
        name: request.device_id
        required: false
        schema:
          type: string
      - description: 'Filter by request rule id.

          '
        in: query
        name: request.rule_id
        required: false
        schema:
          type: string
      - description: 'Filter by request url.

          '
        in: query
        name: request.url
        required: false
        schema:
          type: string
      - description: 'Filter by response by user id.

          '
        in: query
        name: request.responded_by
        required: false
        schema:
          type: string
      - description: 'Filter by request status.

          '
        in: query
        name: request.status
        required: false
        schema:
          enum:
          - Approved
          - Declined
          - Pending
          - Revoked
          type: string
      - description: 'An optional opaque string that defines from where to start listing

          '
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The field to sort by
        in: query
        name: sort
        required: false
        schema:
          enum:
          - request.created_at
          - request.type
          - request.status
          - request.response_time
          - request.url
          type: string
      - description: The sort order
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/UserRequest'
                    type: array
                  pageInfo:
                    $ref: '#/components/schemas/PageInfo'
                type: object
          description: A list of requests with pagination info
        '400':
          description: Bad request
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Get user requests list
      tags:
      - User Requests
  /seb-api/v1/user-requests/{id}:
    get:
      description: 'Retrieve a request by its ID.

        '
      operationId: get-seb-api-v1-user-requests-id
      parameters:
      - description: Request ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRequest'
          description: A request
        '404':
          description: Request not found
      security:
      - Bearer: []
      summary: Retrieve request
      tags:
      - User Requests
  /seb-api/v1/user-requests/{id}/action:
    post:
      description: 'Process a user request.

        '
      operationId: post-seb-api-v1-user-requests-id-action
      parameters:
      - description: Request ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRequest'
          description: Action performed on request
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Request not found
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Process user request
      tags:
      - User Requests
  /seb-api/v1/user-requests/{id}/revoke:
    post:
      description: 'Revoke the already approved request.

        '
      operationId: post-seb-api-v1-user-requests-id-revoke
      parameters:
      - description: Request ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeRequestAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRequest'
          description: Action performed on request
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Request not found
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Revoke approval
      tags:
      - User Requests
  /seb-api/v1/users:
    get:
      description: 'Retrieve a list of [users](https://docs.paloaltonetworks.com/prisma-access-browser/administration/manage-prisma-access-browser-users).

        '
      operationId: get-seb-api-v1-users
      parameters:
      - description: "Number of users to return. \n"
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: 'Include deleted users.

          '
        in: query
        name: includeDeleted
        required: false
        schema:
          type: boolean
      - description: 'Filter by user name.

          '
        in: query
        name: user.name
        required: false
        schema:
          type: string
      - description: "Filter by user email. \n"
        in: query
        name: user.email
        required: false
        schema:
          type: string
      - description: 'Filter by first seen time or after.

          '
        in: query
        name: user.first_seen_gte
        required: false
        schema:
          format: date-time
          type: string
      - description: 'Filter by last seen time or before.

          '
        in: query
        name: user.last_seen_lte
        required: false
        schema:
          format: date-time
          type: string
      - description: 'An optional opaque string that defines from where to start listing

          '
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: "The field to sort by. \n"
        in: query
        name: sort
        required: false
        schema:
          enum:
          - user.name
          - user.email
          - user.first_seen
          - user.last_seen
          type: string
      - description: 'The sort order.

          '
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/User'
                    type: array
                  pageInfo:
                    $ref: '#/components/schemas/PageInfo'
                type: object
          description: A list of users with pagination info
        '400':
          description: Bad request
        '500':
          description: Internal server error
      security:
      - Bearer: []
      summary: Get users List
      tags:
      - Users
  /seb-api/v1/users/{id}:
    get:
      description: 'Retrieve a user by [ID]([https://docs.paloaltonetworks.com/prisma-access-browser/administration/manage-prisma-access-browser-users]).

        '
      operationId: get-seb-api-v1-users-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: A user
        '404':
          description: User not found
      security:
      - Bearer: []
      summary: Users List by ID
      tags:
      - Users
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- description: 'Returns a list of users.

    '
  name: Users API
- description: 'Returns a list of devices.

    '
  name: Devices API
- description: 'Returns a list of user groups.

    '
  name: User group API
- description: 'Returns a list of applications

    '
  name: Applications API
- description: 'Returns a list of user requests

    '
  name: User Requests API
