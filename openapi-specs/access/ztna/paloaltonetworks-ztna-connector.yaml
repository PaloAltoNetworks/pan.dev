components:
  examples:
    401.NotAuthenticated.json:
      summary: Not Authenticated
      value:
        error:
          code: 16
          message: Not Authenticated
    401.TokenExpired.json:
      summary: Token Expired
      value:
        error:
          code: 16
          message: Token Expired
  parameters:
    limit:
      description: How many records to get
      in: query
      name: limit
      schema:
        type: number
    offset:
      description: 0-based offset into the list, starting entity for pagination
      in: query
      name: offset
      schema:
        type: number
    oid:
      description: Object ID
      in: path
      name: oid
      required: true
      schema:
        type: string
    region:
      description: The region of the tenant
      in: header
      name: X-PANW-Region
      schema:
        enum:
        - americas
        - au
        - ca
        - de
        - europe
        - in
        - jp
        - sg
        - uk
        type: string
  responses:
    201.Created:
      description: Created
    202.Accepted:
      description: Accepted
    204.NoContent:
      description: No Content
    400.BadRequest:
      content:
        application/json:
          schema:
            properties:
              error:
                oneOf:
                - $ref: '#/components/schemas/google.rpc.Code.InvalidArgument'
                - $ref: '#/components/schemas/google.rpc.Code.FailedPrecondition'
            type: object
      description: Bad Request because an oid required by specific endpoint is missing
        from request
    401.Unauthorized:
      content:
        application/json:
          examples:
            not_authenticated:
              $ref: '#/components/examples/401.NotAuthenticated.json'
            token_expired:
              $ref: '#/components/examples/401.TokenExpired.json'
          schema:
            properties:
              error:
                $ref: '#/components/schemas/google.rpc.Code.Unauthenticated'
            type: object
      description: Unauthorized
    403.Forbidden:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/google.rpc.Code.PermissionDenied'
            type: object
      description: Forbidden
    404.NotFound:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/google.rpc.Code.NotFound'
            type: object
      description: 404 Not Found
    409.Conflict:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/google.rpc.Code.AlreadyExists'
            type: object
      description: Conflict
  schemas:
    Application:
      allOf:
      - $ref: '#/components/schemas/Application.EntityBase'
      - $ref: '#/components/schemas/Application.EntitySpec'
    Application.Create:
      properties:
        app_enabled:
          type: boolean
        description:
          type: string
        group:
          description: Connector Group oid
          type: string
        name:
          description: name of the application
          maxLength: 32
          type: string
        spec:
          properties:
            fqdn:
              description: FQDN of application to be created
              type: string
            port:
              description: port application is listening on
              type: number
            protocol:
              description: ("tcp" or "udp")
              enum:
              - tcp
              - udp
              type: string
          required:
          - fqdn
          - protocol
          - port
          type: object
      required:
      - name
      - spec
      - group
      - app_enabled
      type: object
    Application.EntityBase:
      properties:
        app_enabled:
          type: boolean
        description:
          type: string
        group:
          description: Connector Group ID
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        oid:
          description: Application ID
          readOnly: true
          type: string
      required:
      - oid
      - name
      - group
      - app_enabled
      type: object
    Application.EntitySpec:
      properties:
        spec:
          items:
            properties:
              fqdn:
                type: string
              port:
                type: number
              protocol:
                description: ("tcp" or "udp")
                enum:
                - tcp
                - udp
                type: string
            required:
            - fqdn
            - port
            - protocol
            type: object
          type: array
      type: object
    Application.Status:
      properties:
        error:
          type: string
        spec:
          items:
            properties:
              fqdn:
                type: string
              path:
                type: string
              port:
                type: number
              protocol:
                description: ("tcp" or "udp")
                enum:
                - tcp
                - udp
                type: string
            type: object
          type: array
        state:
          type: number
        state_bits:
          type: number
      type: object
    Application.Summary:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/Application.Status'
      - $ref: '#/components/schemas/EntityMeta'
    Applications.Summary:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Application.Summary'
            type: array
        required:
        - data
        type: object
    CIEAppSpec:
      properties:
        fqdn:
          type: string
        port:
          type: string
        protocol:
          type: string
      type: object
    CIEApplication:
      properties:
        app_spec:
          items:
            allOf:
            - $ref: '#/components/schemas/CIEAppSpec'
          type: array
        fqdn:
          type: string
        id:
          type: string
        name:
          type: string
        port:
          type: string
        protocol:
          type: string
        provider:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
    Connector:
      properties:
        description:
          type: string
        group:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        oid:
          readOnly: true
          type: string
      required:
      - oid
      - name
      - group
      type: object
    Connector.Create:
      properties:
        description:
          type: string
        group:
          type: string
        name:
          type: string
        oid:
          type: string
      required:
      - oid
      - name
      - group
      type: object
    Connector.ScheduledUpgrade:
      properties:
        image_id:
          type: string
        scheduled_download:
          type: string
        scheduled_upgrade:
          type: string
      required:
      - image_id
      type: object
    Connector.Status:
      properties:
        block_id:
          type: number
        cgnx_element_id:
          type: string
        cgnx_element_serial_no:
          type: string
        cgnx_fabric_route_id:
          type: string
        cgnx_internet_circuit_id:
          type: string
        cgnx_ipsec_intf_id:
          type: string
        cgnx_ipsec_profile:
          type: string
        cgnx_lan_intf_id:
          type: string
        cgnx_machine_id:
          type: string
        cgnx_nat_policyset:
          type: string
        cgnx_nat_setstack:
          type: string
        cgnx_nat_zone:
          type: string
        cgnx_site_id:
          type: string
        cgnx_snat_rule:
          type: string
        cgnx_sw_version:
          type: string
        cgnx_tenant_id:
          type: string
        cgnx_vion_ip:
          type: string
        cgnx_wan_intf_id:
          type: string
        cidr:
          type: string
        error:
          type: object
        fabric_address_cidr:
          type: string
        group:
          description: Oid of connector group
          type: string
        is_autoscaled:
          type: boolean
        latitude:
          type: string
        local_ip:
          type: string
        longitude:
          type: string
        name:
          type: string
        peer_id:
          type: string
        pool_id:
          type: number
        psk:
          type: string
        sc_id:
          description: Service Connection ID
          type: string
        scaled_down_time:
          type: string
        site:
          type: string
        state:
          type: number
        state_bits:
          type: number
        tenant_id:
          type: string
        token_active:
          type: string
        token_secret:
          type: string
        tun_mon_ip:
          type: string
      type: object
    Connector.Summary:
      allOf:
      - $ref: '#/components/schemas/Connector'
      - $ref: '#/components/schemas/Connector.Status'
      - $ref: '#/components/schemas/EntityMeta'
    ConnectorGroup:
      properties:
        description:
          type: string
        is_autoscale:
          type: boolean
        name:
          readOnly: true
          type: string
        oid:
          description: Connector Group ID
          readOnly: true
          type: string
      required:
      - oid
      - name
      - is_autoscale
      type: object
    ConnectorGroup.Applications:
      properties:
        applications:
          $ref: '#/components/schemas/Applications.Summary'
        group:
          $ref: '#/components/schemas/ConnectorGroup'
      type: object
    ConnectorGroup.Connectors:
      properties:
        connectors:
          $ref: '#/components/schemas/Connectors.Summary'
        group:
          $ref: '#/components/schemas/ConnectorGroup'
      type: object
    ConnectorGroup.Status:
      properties:
        error:
          type: object
        is_autoscale:
          type: boolean
        state:
          type: number
        state_bits:
          type: number
        token_active:
          type: string
        token_secret:
          type: string
      type: object
    ConnectorGroup.Summary:
      allOf:
      - $ref: '#/components/schemas/ConnectorGroup'
      - $ref: '#/components/schemas/EntityMeta'
      - $ref: '#/components/schemas/ConnectorGroup.Status'
      - properties:
          applications:
            description: App oid to app name mappings
            type: object
          connectors:
            description: Connector oid to connector name mappings
            type: object
        type: object
    Connectors.Summary:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Connector.Summary'
            type: array
        required:
        - data
        type: object
    DiscoveredApplications:
      properties:
        applications:
          items:
            allOf:
            - $ref: '#/components/schemas/CIEApplication'
          type: array
        cie_tenant_id:
          type: string
        count:
          type: number
        tenant_id:
          type: string
      type: object
    EntityMeta:
      properties:
        created_time:
          type: string
        updated_time:
          type: string
      type: object
    LicenseInfo:
      properties:
        applications:
          type: number
        connectors:
          type: number
        expiry:
          format: date-time
          type: string
        license_name:
          type: string
        max_applications:
          type: number
        max_connectors:
          type: number
      type: object
    Pagination:
      properties:
        limit:
          description: The offset that points to the beginning of the next page. May
            be same as total.
          type: number
        offset:
          description: Starting entity for Pagination (0-based. i.e. first entity
            starts at 0)
          type: number
        total:
          description: Total number of entries available
          type: number
      required:
      - total
      - offset
      - limit
      type: object
    google-cloud-api.CauseInfo:
      properties:
        '@type':
          enum:
          - google-cloud-api/CauseInfo
          type: string
        causes:
          $ref: '#/components/schemas/google-cloud-api.CauseInfo.Causes'
      required:
      - '@type'
      - causes
      title: Cause Info
      type: object
    google-cloud-api.CauseInfo.Cause:
      additionalProperties: true
      properties:
        causes:
          $ref: '#/components/schemas/google-cloud-api.CauseInfo.Causes'
        message:
          type: string
        module:
          type: string
      required:
      - message
      type: object
    google-cloud-api.CauseInfo.Causes:
      items:
        $ref: '#/components/schemas/google-cloud-api.CauseInfo.Cause'
      type: array
    google.protobuf.Duration:
      properties:
        nanos:
          type: number
        seconds:
          type: number
      type: object
    google.rpc.BadRequest:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.BadRequest
          type: string
        field_violations:
          items:
            $ref: '#/components/schemas/google.rpc.BadRequest.FieldViolation'
          type: array
      title: Bad Request
      type: object
    google.rpc.BadRequest.FieldViolation:
      properties:
        description:
          type: string
        field:
          type: string
      title: Field Violation
      type: object
    google.rpc.Code.AlreadyExists:
      properties:
        code:
          enum:
          - 6
          type: number
        details:
          $ref: '#/components/schemas/google.rpc.ErrorDetails'
        message:
          type: string
      type: object
    google.rpc.Code.FailedPrecondition:
      properties:
        code:
          enum:
          - 9
          type: number
        details:
          $ref: '#/components/schemas/google.rpc.ErrorDetails'
        message:
          type: string
      type: object
    google.rpc.Code.InvalidArgument:
      properties:
        code:
          enum:
          - 3
          type: number
        details:
          $ref: '#/components/schemas/google.rpc.ErrorDetails'
        message:
          type: string
      type: object
    google.rpc.Code.NotFound:
      properties:
        code:
          enum:
          - 5
          type: number
        details:
          $ref: '#/components/schemas/google.rpc.ErrorDetails'
        message:
          type: string
      type: object
    google.rpc.Code.PermissionDenied:
      properties:
        code:
          enum:
          - 7
          type: number
        details:
          $ref: '#/components/schemas/google.rpc.ErrorDetails'
        message:
          type: string
      type: object
    google.rpc.Code.Unauthenticated:
      properties:
        code:
          enum:
          - 16
          type: number
        details:
          $ref: '#/components/schemas/google.rpc.ErrorDetails'
        message:
          type: string
      type: object
    google.rpc.DebugInfo:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.DebugInfo
          type: string
        detail:
          type: string
        stack_entries:
          items:
            type: string
          type: array
      title: Debug Info
      type: object
    google.rpc.ErrorDetails:
      items:
        anyOf:
        - $ref: '#/components/schemas/google.rpc.RetryInfo'
        - $ref: '#/components/schemas/google.rpc.DebugInfo'
        - $ref: '#/components/schemas/google.rpc.QuotaFailure'
        - $ref: '#/components/schemas/google.rpc.ErrorInfo'
        - $ref: '#/components/schemas/google.rpc.PreconditionFailure'
        - $ref: '#/components/schemas/google.rpc.BadRequest'
        - $ref: '#/components/schemas/google.rpc.RequestInfo'
        - $ref: '#/components/schemas/google.rpc.ResourceInfo'
        - $ref: '#/components/schemas/google.rpc.Help'
        - $ref: '#/components/schemas/google.rpc.LocalizedMessage'
        - $ref: '#/components/schemas/google-cloud-api.CauseInfo'
      type: array
    google.rpc.ErrorInfo:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.ErrorInfo
          type: string
        domain:
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
        reason:
          type: string
      title: Error Info
      type: object
    google.rpc.Help:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.Help
          type: string
        links:
          items:
            $ref: '#/components/schemas/google.rpc.Help.Link'
          type: array
      title: Help
      type: object
    google.rpc.Help.Link:
      properties:
        description:
          type: string
        url:
          type: string
      title: Link
      type: object
    google.rpc.LocalizedMessage:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.LocalizedMessage
          type: string
        locale:
          type: string
        message:
          type: string
      title: Localized Message
      type: object
    google.rpc.PreconditionFailure:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.PreconditionFailure
          type: string
        violations:
          items:
            $ref: '#/components/schemas/google.rpc.PreconditionFailure.Violation'
          type: array
      title: Precondition Failure
      type: object
    google.rpc.PreconditionFailure.Violation:
      properties:
        description:
          type: string
        subject:
          type: string
        type:
          type: string
      title: Violation
      type: object
    google.rpc.QuotaFailure:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.QuotaFailure
          type: string
        violations:
          items:
            $ref: '#/components/schemas/google.rpc.QuotaFailure.Violation'
          type: array
      title: Quota Failure
      type: object
    google.rpc.QuotaFailure.Violation:
      properties:
        description:
          type: string
        subject:
          type: string
      title: Violation
      type: object
    google.rpc.RequestInfo:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.RequestInfo
          type: string
        request_id:
          type: string
        serving_data:
          type: string
      title: Request Info
      type: object
    google.rpc.ResourceInfo:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.ResourceInfo
          type: string
        description:
          type: string
        owner:
          type: string
        resource_name:
          type: string
        resource_type:
          type: string
      title: Resource Info
      type: object
    google.rpc.RetryInfo:
      properties:
        '@type':
          enum:
          - type.googleapis.com/google.rpc.RetryInfo
          type: string
        retry_delay:
          $ref: '#/components/schemas/google.protobuf.Duration'
      title: Retry Info
      type: object
info:
  contact:
    email: someaddress@paloaltonetworks.com
  description: "This Open API spec file represents the APIs available for the ZTNA\
    \ Connector APIs.\n\nThese APIs use the common SASE authentication mechanism and\
    \ base URL. See the\n[Prisma SASE API Get Started](https://pan.dev/sase/docs/getstarted)\
    \ guide for more information.\n\nThis Open API spec file was created on March\
    \ 20, 2023.\n\n\xA9 2023 Palo Alto Networks, Inc. Palo Alto Networks is a registered\
    \ trademark of Palo\nAlto Networks. A list of our trademarks can be found at\n\
    [https://www.paloaltonetworks.com/company/trademarks.html](https://www.paloaltonetworks.com/company/trademarks.html).\n\
    All other marks mentioned herein may be trademarks of their respective companies.\n"
  license:
    name: Palo Alto Networks EULA
    url: https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/legal/palo-alto-networks-end-user-license-agreement-eula.pdf
  title: ZTNA Connector APIs
  version: '2.0'
openapi: 3.0.0
paths:
  /sse/connector/v2.0/api/applications:
    get:
      description: 'TBD

        '
      operationId: getApplications
      parameters:
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications.Summary'
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
      summary: Get all applications
      tags:
      - Applications
    post:
      description: 'TBD

        '
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application.Create'
      responses:
        '201':
          $ref: '#/components/responses/201.Created'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
        '409':
          $ref: '#/components/responses/409.Conflict'
      summary: Create applications
      tags:
      - Applications
  /sse/connector/v2.0/api/applications/{oid}:
    delete:
      description: 'TBD

        '
      operationId: deleteApplication
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '202':
          $ref: '#/components/responses/202.Accepted'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Delete an application
      tags:
      - Applications
    get:
      description: 'TBD

        '
      operationId: getApplication
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Application.Summary'
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Get an application
      tags:
      - Applications
    put:
      description: 'TBD

        '
      operationId: updateApplication
      parameters:
      - $ref: '#/components/parameters/oid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '201':
          $ref: '#/components/responses/201.Created'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
        '409':
          $ref: '#/components/responses/409.Conflict'
      summary: Update an application
      tags:
      - Applications
  /sse/connector/v2.0/api/connector-groups:
    get:
      description: 'TBD

        '
      operationId: getConnectorGroups
      parameters:
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Pagination'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ConnectorGroup.Summary'
                      type: array
                  required:
                  - data
                  type: object
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
      summary: Get all connector groups
      tags:
      - ConnectorGroups
    post:
      description: 'TBD

        '
      operationId: createConnectorGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorGroup'
      responses:
        '201':
          $ref: '#/components/responses/201.Created'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
        '409':
          $ref: '#/components/responses/409.Conflict'
      summary: Create connector groups
      tags:
      - ConnectorGroups
  /sse/connector/v2.0/api/connector-groups/{oid}:
    delete:
      description: 'TBD

        '
      operationId: deleteConnectorGroup
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '202':
          $ref: '#/components/responses/202.Accepted'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Delete a connector group
      tags:
      - ConnectorGroups
    get:
      description: 'TBD

        '
      operationId: getConnectorGroup
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorGroup.Summary'
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Get a connector group
      tags:
      - ConnectorGroups
    put:
      description: 'TBD

        '
      operationId: updateConnectorGroup
      parameters:
      - $ref: '#/components/parameters/oid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorGroup'
      responses:
        '201':
          $ref: '#/components/responses/201.Created'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
        '409':
          $ref: '#/components/responses/409.Conflict'
      summary: Update a connector group
      tags:
      - ConnectorGroups
  /sse/connector/v2.0/api/connector-groups/{oid}/applications:
    get:
      description: 'TBD

        '
      operationId: getApplicationsPerConnectorGroup
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorGroup.Applications'
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Get applications in the group
      tags:
      - ConnectorGroups
  /sse/connector/v2.0/api/connector-groups/{oid}/connectors:
    get:
      description: 'TBD

        '
      operationId: getConnectorsPerConnectorGroup
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorGroup.Connectors'
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Get connectors in the group
      tags:
      - ConnectorGroups
  /sse/connector/v2.0/api/connectors:
    get:
      description: 'TBD

        '
      operationId: getConnectors
      parameters:
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Pagination'
                - properties:
                    data:
                      items:
                        allOf:
                        - $ref: '#/components/schemas/Connector.Summary'
                      type: array
                  required:
                  - data
                  type: object
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
      summary: Get all connectors
      tags:
      - Connectors
    post:
      description: 'TBD

        '
      operationId: createConnector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connector.Create'
      responses:
        '200':
          $ref: '#/components/responses/201.Created'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
        '409':
          $ref: '#/components/responses/409.Conflict'
      summary: Create connectors
      tags:
      - Connectors
  /sse/connector/v2.0/api/connectors/{oid}:
    delete:
      description: 'TBD

        '
      operationId: deleteConnector
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '202':
          $ref: '#/components/responses/202.Accepted'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Delete a connector
      tags:
      - Connectors
    get:
      description: 'TBD

        '
      operationId: getConnector
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Connector.Summary'
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Get a connector
      tags:
      - Connectors
    put:
      description: 'TBD

        '
      operationId: updateConnector
      parameters:
      - $ref: '#/components/parameters/oid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connector'
      responses:
        '201':
          $ref: '#/components/responses/201.Created'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
        '409':
          $ref: '#/components/responses/409.Conflict'
      summary: Update a connector
      tags:
      - Connectors
  /sse/connector/v2.0/api/connectors/{oid}/scheduled-upgrade:
    delete:
      description: 'TBD

        '
      operationId: deleteScheduledUpgrade
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '202':
          $ref: '#/components/responses/202.Accepted'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '403':
          $ref: '#/components/responses/403.Forbidden'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Delete the scheduled upgrade
      tags:
      - Connectors
    get:
      description: 'TBD

        '
      operationId: getConnectorScheduledUpgrade
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector.ScheduledUpgrade'
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Get the scheduled upgrade
      tags:
      - Connectors
    post:
      description: 'TBD

        '
      operationId: createConnectorScheduledUpgrade
      parameters:
      - $ref: '#/components/parameters/oid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connector.ScheduledUpgrade'
      responses:
        '201':
          $ref: '#/components/responses/201.Created'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Create a scheduled upgrade
      tags:
      - Connectors
    put:
      description: 'TBD

        '
      operationId: updateConnectorScheduledUpgrade
      parameters:
      - $ref: '#/components/parameters/oid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connector.ScheduledUpgrade'
      responses:
        '204':
          $ref: '#/components/responses/204.NoContent'
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '404':
          $ref: '#/components/responses/404.NotFound'
      summary: Modify the scheduled upgrade
      tags:
      - Connectors
  /sse/connector/v2.0/api/connectors/{oid}/upgradable-versions:
    get:
      operationId: getConnectorUpgradeableVersions
      parameters:
      - $ref: '#/components/parameters/oid'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
      summary: Gets a list of upgradable versions for this connector
      tags:
      - Connectors
  /sse/connector/v2.0/api/discovered-applications:
    get:
      description: 'TBD

        '
      operationId: getDiscoveredApplications
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Pagination'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/DiscoveredApplications'
                      type: array
                  required:
                  - data
                  type: object
          description: OK
        '202':
          description: Retry later, CIE domain data missing
        '400':
          $ref: '#/components/responses/400.BadRequest'
        '401':
          $ref: '#/components/responses/401.Unauthorized'
      summary: Get all discovered applications
      tags:
      - Applications
  /sse/connector/v2.0/api/license:
    get:
      description: 'TBD

        '
      operationId: getLicense
      parameters:
      - $ref: '#/components/parameters/region'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseInfo'
          description: OK
        '401':
          $ref: '#/components/responses/401.Unauthorized'
      summary: Get license
      tags:
      - Licensing
  /sse/connector/v2.0/api/tenant:start-onboarding:
    put:
      description: 'TBD

        '
      operationId: startTenantOnboarding
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  msg:
                    type: string
                type: object
          description: OK
        '401':
          $ref: '#/components/responses/401.Unauthorized'
      summary: Start tenant onboarding
      tags:
      - Tenant
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- description: 'TBD

    '
  name: ZTNA License
- description: 'TBD

    '
  name: Tenant Management
- description: 'TBD

    '
  name: Application Management
- description: 'TBD

    '
  name: Connector Management
- description: 'TBD

    '
  name: Connector Group Management
