{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "securitySchemes": {
      "CustomAuthorizer": {
        "in": "header",
        "name": "authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authorizer": {
          "authorizerResultTtlInSeconds": 0,
          "authorizerUri": "arn:aws:apigateway:{Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:{Region}:{AccountId}:function:bc-authorization-v2-authorizer-{UniqueTag}{Alias}/invocations",
          "identitySource": "method.request.header.authorization",
          "type": "request"
        },
        "x-amazon-apigateway-authtype": "custom"
      }
    },
    "schemas": {
      "CatalogCategory": {
        "enum": ["VCS", "CI/CD", "Registries", "Production"],
        "type": "string"
      },
      "CatalogGroup": { "enum": ["Code", "Build", "Deploy"], "type": "string" },
      "CatalogName": {
        "enum": [
          "Github",
          "Gitlab",
          "Bitbucket",
          "Azure Repos",
          "CodeCommit",
          "Jenkins",
          "TeamCity",
          "Travis CI",
          "GitHub Actions",
          "GitLab CI/CD",
          "Bitbucket Pipelines",
          "CodeFresh",
          "CircleCI",
          "Argo CD",
          "Concourse CI",
          "BuildKite",
          "AWS CodeBuild",
          "AWS CodeDeploy",
          "AWS CodePipeline",
          "Drone",
          "JFrog Artifactory",
          "AWS ECR",
          "Nexus",
          "Docker Hub",
          "GitHub Registry",
          "AWS EC2",
          "AWS EKS",
          "AWS ECS",
          "AWS Lambda",
          "AWS App Mesh",
          "AWS API Gateway",
          "AWS Elastic Load Balancing",
          "Azure Virtual Machines",
          "Azure Functions",
          "Azure AKS",
          "Azure Container Instances",
          "Azure Service Fabric",
          "Google Kubernetes Engine",
          "Google Compute Engine",
          "Google Container Registry",
          "Chromatic",
          "env0",
          "FireFly",
          "Testim",
          "Unity",
          "JfrogXray",
          "Buddy.Works",
          "Snowflake",
          "databricks",
          "Heroku",
          "Netlify",
          "PagerDuty",
          "Ngrok",
          "Google Play",
          "FireBase",
          "npm",
          "Grafana",
          "AWS DynamoDB",
          "Google Cloud Functions",
          "Google Cloud Build",
          "Azure Pipelines",
          "AWS CodeArtifact",
          "AWS STS",
          "AWS SQS",
          "AWS SNS",
          "AWS S3",
          "HashiCorp Consul",
          "Datadog",
          "SENTRY",
          "Bamboo",
          "Terraform Cloud",
          "Nx Cloud",
          "DeployHQ",
          "Cloudflare",
          "Allure TestOps",
          "Bitrise",
          "Skaffold",
          "Google Cloud Run",
          "Codecov",
          "Checkov",
          "Cypress",
          "Snyk",
          "Helm",
          "Salesforce",
          "Nginx",
          "Bandit",
          "Velocity",
          "CoveragePy",
          "HashiCorpVault",
          "Zapier",
          "Ansible",
          "Yor",
          "Semgrep",
          "TrivyAction",
          "Slack",
          "GitLeaks",
          "Azure Artifacts Feed",
          "Adobe Cloud Manager",
          "Adobe Cloud Package Manager"
        ],
        "type": "string"
      },
      "DataStatus": { "enum": ["ok", "empty"], "type": "string" },
      "EvidanceData": {
        "additionalProperties": {},
        "properties": {
          "firstSeen": { "format": "double", "type": "number" },
          "id": { "type": "string" },
          "lastSeen": { "format": "double", "type": "number" },
          "lastUpdated": { "format": "double", "type": "number" }
        },
        "required": ["id", "firstSeen", "lastUpdated", "lastSeen"],
        "type": "object"
      },
      "Executable": {
        "additionalProperties": false,
        "properties": {
          "insight": { "$ref": "#/components/schemas/Insight" },
          "name": { "type": "string" }
        },
        "required": ["name", "insight"],
        "type": "object"
      },
      "GetResponse": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/IScan" },
          "status": { "$ref": "#/components/schemas/DataStatus" }
        },
        "required": ["status", "data"],
        "type": "object"
      },
      "IResolvedCatalog": {
        "additionalProperties": false,
        "properties": {
          "category": { "$ref": "#/components/schemas/CatalogCategory" },
          "description": { "type": "string" },
          "firstSeen": { "format": "double", "type": "number" },
          "group": { "$ref": "#/components/schemas/CatalogGroup" },
          "lastSeen": { "format": "double", "type": "number" },
          "lastUpdated": { "format": "double", "type": "number" },
          "name": { "$ref": "#/components/schemas/CatalogName" },
          "sources": {
            "items": { "$ref": "#/components/schemas/IResolvedSource" },
            "type": "array"
          }
        },
        "required": [
          "name",
          "description",
          "group",
          "category",
          "firstSeen",
          "lastSeen",
          "lastUpdated",
          "sources"
        ],
        "type": "object"
      },
      "IResolvedSource": {
        "additionalProperties": false,
        "properties": {
          "evidanceData": {
            "items": { "$ref": "#/components/schemas/EvidanceData" },
            "type": "array"
          },
          "firstSeen": { "format": "double", "type": "number" },
          "lastSeen": { "format": "double", "type": "number" },
          "lastUpdated": { "format": "double", "type": "number" },
          "name": { "$ref": "#/components/schemas/SourceName" }
        },
        "required": [
          "name",
          "firstSeen",
          "lastSeen",
          "lastUpdated",
          "evidanceData"
        ],
        "type": "object"
      },
      "IScan": {
        "properties": {
          "id": { "type": "string" },
          "lastCleared": { "format": "double", "type": "number" },
          "lastScan": { "format": "double", "type": "number" },
          "lastUpdated": { "format": "double", "type": "number" },
          "results": {
            "items": { "$ref": "#/components/schemas/IResolvedCatalog" },
            "type": "array"
          }
        },
        "required": ["results", "lastUpdated", "lastScan", "id"],
        "type": "object"
      },
      "IVCSInstalledApp": {
        "additionalProperties": false,
        "properties": {
          "adminPermissions": {
            "description": "VCS App installed with repository or organization level admin permissions",
            "items": { "type": "string" },
            "type": "array"
          },
          "customerName": {
            "description": "Customer Prisma ID",
            "type": "string"
          },
          "events": {
            "description": "VCS webhook events the App listens on",
            "items": { "type": "string" },
            "type": "array"
          },
          "htmlUrl": {
            "description": "VCS App settings URL",
            "type": "string"
          },
          "id": { "description": "VCS App ID", "type": "string" },
          "name": { "description": "VCS App name", "type": "string" },
          "nodeCreatedTimestamp": { "format": "double", "type": "number" },
          "readPermissions": {
            "description": "VCS App read permissions",
            "items": { "type": "string" },
            "type": "array"
          },
          "repositorySelection": {
            "description": "repositorySelection:\n  - `all`: VCS App installed on organization level\n  - `selected`: VCS App installed on selected repositories",
            "type": "string"
          },
          "timestamp": { "format": "double", "type": "number" },
          "type": {
            "enum": ["VCSInstalledApp"],
            "nullable": false,
            "type": "string"
          },
          "vendorCreatedTimestamp": {
            "description": "Webhook creation date",
            "format": "double",
            "type": "number"
          },
          "writePermissions": {
            "description": "VCS App write permissions",
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "required": [
          "id",
          "type",
          "customerName",
          "name",
          "timestamp",
          "events",
          "readPermissions",
          "writePermissions",
          "adminPermissions",
          "repositorySelection",
          "htmlUrl"
        ],
        "type": "object"
      },
      "IVCSWebhook": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "description": "Webhook creation date",
            "format": "double",
            "type": "number"
          },
          "customerName": {
            "description": "Customer Prisma ID",
            "type": "string"
          },
          "domain": { "description": "Webhook URL domain", "type": "string" },
          "id": { "description": "VCS App ID", "type": "string" },
          "isSSLVerificationEnabled": {
            "description": "Webhook SSL verification enabled/disabled",
            "type": "boolean"
          },
          "name": { "description": "VCS App name", "type": "string" },
          "nodeCreatedTimestamp": { "format": "double", "type": "number" },
          "timestamp": { "format": "double", "type": "number" },
          "triggers": {
            "description": "Webhook events triggers",
            "items": { "type": "string" },
            "type": "array"
          },
          "type": {
            "enum": ["VCSWebhook"],
            "nullable": false,
            "type": "string"
          },
          "url": { "description": "Webhook URL", "type": "string" },
          "vendorCreatedTimestamp": {
            "description": "Webhook creation date",
            "format": "double",
            "type": "number"
          },
          "webhookType": { "description": "Webhook type", "type": "string" },
          "workspaceId": {
            "description": "VCS workspace/integration ID",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "customerName",
          "name",
          "timestamp",
          "url",
          "domain",
          "webhookType",
          "triggers"
        ],
        "type": "object"
      },
      "Insight": {
        "additionalProperties": false,
        "properties": {
          "isVerified": { "type": "boolean" },
          "labels": {
            "items": { "$ref": "#/components/schemas/Labels" },
            "type": "array"
          },
          "owner": { "type": "string" },
          "stars": { "format": "double", "type": "number" },
          "usage": { "format": "double", "type": "number" }
        },
        "required": ["labels", "stars", "usage", "owner"],
        "type": "object"
      },
      "Labels": {
        "additionalProperties": false,
        "properties": {
          "id": { "format": "double", "type": "number" },
          "name": { "type": "string" },
          "tooltip": { "type": "string" }
        },
        "required": ["id", "name", "tooltip"],
        "type": "object"
      },
      "ParsedInventory": {
        "additionalProperties": false,
        "properties": {
          "appName": { "description": "Pipeline tool name", "type": "string" },
          "description": {
            "description": "Pipeline tool description",
            "type": "string"
          },
          "executables": {
            "description": "Pipeline tool executables",
            "items": { "$ref": "#/components/schemas/Executable" },
            "type": "array"
          },
          "link": { "description": "Pipeline tool link", "type": "string" },
          "logo": { "type": "string" },
          "sources": {
            "description": "Pipeline tool sources",
            "items": {
              "properties": {
                "arguments": {
                  "anyOf": [
                    { "items": { "type": "string" }, "type": "array" },
                    {
                      "items": {
                        "properties": {
                          "command": { "type": "string" },
                          "name": { "type": "string" }
                        },
                        "required": ["command", "name"],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  ],
                  "description": "Pipeline tool arguments"
                },
                "casId": { "type": "string" },
                "filePath": {
                  "description": "Pipeline tool CI file path",
                  "type": "string"
                },
                "lineNumber": {
                  "description": "Pipeline tool line number in CI file",
                  "format": "double",
                  "type": "number"
                },
                "name": {
                  "description": "Pipeline tool name",
                  "type": "string"
                },
                "repoId": {
                  "description": "VCS repository ID",
                  "type": "string"
                },
                "workspaceId": {
                  "description": "VCS workspace/integration ID",
                  "type": "string"
                }
              },
              "required": [
                "lineNumber",
                "filePath",
                "workspaceId",
                "casId",
                "repoId",
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "vendor": { "type": "string" }
        },
        "required": [
          "appName",
          "vendor",
          "description",
          "link",
          "logo",
          "sources"
        ],
        "type": "object"
      },
      "SourceName": {
        "enum": [
          "VCS Webhooks",
          "VCS App",
          "VCS DeployKey",
          "CI Credentials",
          "CI Plugins",
          "CI Files",
          "VCS Credentials",
          "Pipeline Configurations",
          "Pipeline Tools",
          "Integrations"
        ],
        "type": "string"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "The Technologies endpoints are listed below.\n",
    "title": "Prisma Cloud Technologies API Overview",
    "version": "Latest"
  },
  "openapi": "3.0.0",
  "paths": {
    "/code/api/v1/apps-webhooks/apps": {
      "get": {
        "description": "Get an inventory of third-party applications (apps) found in your organization's version control system (VCS).",
        "operationId": "getApps",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/IVCSInstalledApp" },
                  "type": "array"
                }
              }
            },
            "description": "apps"
          }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get VCS 3rd Party Apps",
        "tags": ["Technologies"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/apps-webhooks/apps\"\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://undefinedundefined/code/api/v1/apps-webhooks/apps \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/apps-webhooks/webhooks": {
      "get": {
        "description": "Get an inventory of third-party webhooks found in your organization’s version control system (VCS).",
        "operationId": "getWebhooks",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/IVCSWebhook" },
                  "type": "array"
                }
              }
            },
            "description": "webhooks"
          }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get VCS 3rd Party Webhooks",
        "tags": ["Technologies"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/apps-webhooks/webhooks\"\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://undefinedundefined/code/api/v1/apps-webhooks/webhooks \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/assets-inventory": {
      "get": {
        "description": "List all technologies and their sources",
        "operationId": "assetsInventoryGetAll",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetResponse" }
              }
            },
            "description": "Get assets inventory"
          },
          "500": { "description": "failed to fetch assets inventory" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "List Technologies",
        "tags": ["Technologies"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/assets-inventory\"\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://undefinedundefined/code/api/v1/assets-inventory \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/ci-inventory": {
      "get": {
        "description": "Get an inventory of all third-party services and tools used by an organization’s CI/CD pipeline.",
        "operationId": "getCiInventory",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ParsedInventory" },
                  "type": "array"
                }
              }
            },
            "description": "pipeline tools"
          }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get Pipeline Tools",
        "tags": ["Technologies"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://undefinedundefined/code/api/v1/ci-inventory\"\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://undefinedundefined/code/api/v1/ci-inventory \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    }
  },
  "servers": null,
  "tags": [{ "name": "Technologies" }]
}
