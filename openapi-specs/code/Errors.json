{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "securitySchemes": {
      "CustomAuthorizer": {
        "in": "header",
        "name": "authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authorizer": {
          "authorizerResultTtlInSeconds": 0,
          "authorizerUri": "arn:aws:apigateway:{Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:{Region}:{AccountId}:function:bc-authorization-authorizer-{UniqueTag}{Alias}/invocations",
          "identitySource": "method.request.header.authorization",
          "type": "request"
        },
        "x-amazon-apigateway-authtype": "custom"
      }
    },
    "schemas": {
      "BaseViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment"],
        "type": "object"
      },
      "CICDCve": {
        "additionalProperties": false,
        "properties": {
          "CICDRunId": { "format": "double", "type": "number" },
          "bulkSuppression": { "type": "boolean" },
          "id": { "type": "string" },
          "justification": { "$ref": "#/components/schemas/Justification" },
          "repository": { "type": "string" },
          "resourceId": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "id",
          "violationId",
          "resourceId",
          "CICDRunId",
          "repository"
        ],
        "type": "object"
      },
      "CICDViolation": {
        "additionalProperties": false,
        "properties": {
          "CICDRunId": { "format": "double", "type": "number" },
          "bulkSuppression": { "type": "boolean" },
          "commentIds": { "items": { "type": "string" }, "type": "array" },
          "creationDate": { "type": "string" },
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "frameworkType": { "type": "string" },
          "justification": { "$ref": "#/components/schemas/Justification" },
          "justificationId": { "nullable": true, "type": "string" },
          "metadataChecksMetadataPath": { "type": "string" },
          "metadataLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "repository": { "type": "string" },
          "resourceId": { "type": "string" },
          "runtimeId": { "nullable": true, "type": "string" },
          "runtimeSourceId": { "nullable": true, "type": "string" },
          "s3FilePath": { "type": "string" },
          "s3FixFilePath": { "nullable": true, "type": "string" },
          "severity": { "type": "string" },
          "status": { "type": "string" },
          "updatedDate": { "type": "string" },
          "vcsCommentLine": { "nullable": true, "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "metadataChecksMetadataPath",
          "metadataLines",
          "violationId",
          "resourceId",
          "frameworkType",
          "s3FilePath",
          "CICDRunId",
          "justificationId",
          "status",
          "repository",
          "s3FixFilePath",
          "creationDate",
          "updatedDate",
          "commentIds",
          "vcsCommentLine",
          "errorLines",
          "severity"
        ],
        "type": "object"
      },
      "CVE": {
        "additionalProperties": false,
        "properties": {
          "causePacakgeId": { "type": "string" },
          "causePackageName": { "type": "string" },
          "causePackageVersion": { "type": "string" },
          "cveId": { "type": "string" },
          "cvss": { "format": "double", "type": "number" },
          "description": { "type": "string" },
          "link": { "type": "string" },
          "packageName": { "type": "string" },
          "packageVersion": { "type": "string" },
          "publishedDate": { "format": "date-time", "type": "string" },
          "riskFactors": { "type": "string" },
          "severity": { "type": "string" },
          "status": { "type": "string" },
          "vector": { "type": "string" }
        },
        "required": [
          "cveId",
          "status",
          "cvss",
          "vector",
          "description",
          "severity",
          "packageName",
          "packageVersion",
          "riskFactors",
          "link",
          "publishedDate",
          "causePacakgeId",
          "causePackageName",
          "causePackageVersion"
        ],
        "type": "object"
      },
      "Category": {
        "enum": [
          "IAM",
          "Compute",
          "Monitoring",
          "Networking",
          "Kubernetes",
          "General",
          "Storage",
          "Secrets",
          "Public",
          "Vulnerabilities",
          "Drift",
          "BuildIntegrity",
          "Licenses"
        ],
        "type": "string"
      },
      "CodeStatus": { "enum": ["hasFix"], "nullable": false, "type": "string" },
      "CvesAccountsViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "accountIds": { "items": { "type": "string" }, "type": "array" },
          "comment": { "type": "string" },
          "cves": { "items": { "type": "string" }, "type": "array" },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "suppressionType",
          "comment",
          "accountIds",
          "cves"
        ],
        "type": "object"
      },
      "CvesViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "accountIds": { "items": { "type": "string" }, "type": "array" },
          "comment": { "type": "string" },
          "cves": {
            "items": {
              "properties": {
                "cve": { "type": "string" },
                "id": { "type": "string" },
                "uuid": { "type": "string" }
              },
              "required": ["uuid", "id", "cve"],
              "type": "object"
            },
            "type": "array"
          },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment", "cves"],
        "type": "object"
      },
      "DefaultBranchViolationToFix": {
        "additionalProperties": false,
        "properties": {
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "fixPath": { "nullable": true, "type": "string" },
          "fixedCode": { "nullable": true, "type": "string" },
          "fixes": {
            "items": { "$ref": "#/components/schemas/SmartFix" },
            "type": "array"
          },
          "frameworkType": { "type": "string" },
          "fullId": { "type": "string" },
          "inspectedKey": { "nullable": true, "type": "string" },
          "metadataChecksMetadataPath": { "type": "string" },
          "metadataLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "owner": { "type": "string" },
          "repoName": { "type": "string" },
          "resourceCode": { "nullable": true, "type": "string" },
          "resourceId": { "type": "string" },
          "runtimeId": { "nullable": true, "type": "string" },
          "runtimeSourceId": { "nullable": true, "type": "string" },
          "s3FilePath": { "type": "string" },
          "selectedFix": { "nullable": true, "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "metadataChecksMetadataPath",
          "metadataLines",
          "violationId",
          "resourceId",
          "frameworkType",
          "s3FilePath",
          "owner",
          "repoName",
          "fullId"
        ],
        "type": "object"
      },
      "ErrorInFile": {
        "additionalProperties": false,
        "properties": {
          "author": { "type": "string" },
          "commitHash": { "type": "string" },
          "date": { "format": "date-time", "type": "string" },
          "errorId": { "type": "string" },
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "fileMetadataUuid": { "type": "string" },
          "filePath": { "type": "string" },
          "fixPath": { "type": "string" },
          "frameworkType": { "type": "string" },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "metadataChecksMetadataPath": { "type": "string" },
          "module": { "$ref": "#/components/schemas/module" },
          "resourceCode": { "type": "string" },
          "resourceFixCode": { "type": "string" },
          "resourceId": { "type": "string" },
          "resourceType": { "type": "string" },
          "resourceUuid": { "type": "string" },
          "runtimeFrameworkType": { "type": "string" },
          "runtimeId": { "type": "string" },
          "runtimeSourceId": { "type": "string" },
          "s3FilePath": { "type": "string" },
          "scannerType": { "type": "string" },
          "sourceType": { "$ref": "#/components/schemas/SourceType" },
          "status": { "type": "string" },
          "variableCode": { "type": "string" },
          "variableFixCode": { "type": "string" },
          "variableRendering": {
            "$ref": "#/components/schemas/VariableRendering"
          }
        },
        "required": [
          "filePath",
          "resourceId",
          "resourceCode",
          "resourceType",
          "fixPath",
          "errorId",
          "lines",
          "status",
          "scannerType",
          "sourceType",
          "metadataChecksMetadataPath",
          "frameworkType",
          "variableRendering",
          "module",
          "errorLines",
          "author",
          "commitHash",
          "date",
          "runtimeId",
          "runtimeSourceId",
          "fileMetadataUuid"
        ],
        "type": "object"
      },
      "ErrorType": {
        "enum": ["violation", "dockerCve", "packageCve"],
        "type": "string"
      },
      "ErrorsInFileCount": {
        "additionalProperties": false,
        "properties": {
          "errorsCount": { "format": "double", "type": "number" },
          "filePath": { "type": "string" },
          "fixedCount": { "format": "double", "type": "number" },
          "openErrorsCount": { "format": "double", "type": "number" },
          "passedCount": { "format": "double", "type": "number" },
          "suppressedErrorsCount": { "format": "double", "type": "number" },
          "type": { "$ref": "#/components/schemas/ErrorType" }
        },
        "required": [
          "filePath",
          "errorsCount",
          "openErrorsCount",
          "suppressedErrorsCount",
          "passedCount",
          "fixedCount",
          "type"
        ],
        "type": "object"
      },
      "ErrorsInFileWithPaginationResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ViolationError" },
            "type": "array"
          },
          "hasNext": { "type": "boolean" }
        },
        "required": ["data", "hasNext"],
        "type": "object"
      },
      "FileMetadataWithErrors": {
        "additionalProperties": false,
        "properties": {
          "commitId": { "type": "string" },
          "creationDate": { "type": "string" },
          "errorsCount": { "format": "double", "type": "number" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "prId": { "type": "string" },
          "repositoryId": { "type": "string" },
          "type": { "$ref": "#/components/schemas/FileTypeEnum" },
          "updatedDate": { "type": "string" }
        },
        "required": [
          "id",
          "name",
          "type",
          "commitId",
          "prId",
          "path",
          "repositoryId",
          "creationDate",
          "updatedDate"
        ],
        "type": "object"
      },
      "FileType": {
        "enum": [
          "tf",
          "json",
          "yml",
          "yaml",
          "template",
          ".checkov.baseline",
          "hcl",
          "Dockerfile",
          "package.json",
          "package-lock.json",
          "bower.json",
          "pom.xml",
          "build.gradle",
          "build.gradle.kts",
          "gradle.properties",
          "gradle-wrapper.properties",
          "go.sum",
          "go.mod",
          "requirements.txt",
          "METADATA",
          "bicep",
          "Pipfile.lock",
          "Pipfile",
          "yarn.lock",
          "Gemfile",
          "Gemfile.lock",
          "gemspec",
          "env",
          "settings.py",
          "main.py",
          "application.py",
          "config.py",
          "app.js",
          "config.js",
          "dev.js",
          "db.properties",
          "application.properties",
          "private.pem",
          "privatekey.pem",
          "index.php",
          "config.php",
          "config.xml",
          "strings.xml",
          "app.module.ts",
          "environment.ts",
          "tpl",
          "tfvars",
          "unknown"
        ],
        "type": "string"
      },
      "FileTypeEnum": {
        "enum": [
          "tf",
          "json",
          "yml",
          "yaml",
          "template",
          ".checkov.baseline",
          "hcl",
          "Dockerfile",
          "package.json",
          "package-lock.json",
          "bower.json",
          "pom.xml",
          "build.gradle",
          "build.gradle.kts",
          "gradle.properties",
          "gradle-wrapper.properties",
          "go.sum",
          "go.mod",
          "requirements.txt",
          "METADATA",
          "bicep",
          "Pipfile.lock",
          "Pipfile",
          "yarn.lock",
          "Gemfile",
          "Gemfile.lock",
          "gemspec",
          "env",
          "settings.py",
          "main.py",
          "application.py",
          "config.py",
          "app.js",
          "config.js",
          "dev.js",
          "db.properties",
          "application.properties",
          "private.pem",
          "privatekey.pem",
          "index.php",
          "config.php",
          "config.xml",
          "strings.xml",
          "app.module.ts",
          "environment.ts",
          "tpl",
          "tfvars",
          "unknown"
        ],
        "type": "string"
      },
      "GetErrorsFilesResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ErrorsInFileCount" },
            "type": "array"
          }
        },
        "required": ["data"],
        "type": "object"
      },
      "GetErrorsFilters": {
        "additionalProperties": false,
        "properties": {
          "CICDRunId": { "format": "double", "type": "number" },
          "authors": { "items": { "type": "string" }, "type": "array" },
          "branch": { "nullable": true, "type": "string" },
          "categories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "codeStatus": {
            "items": { "$ref": "#/components/schemas/CodeStatus" },
            "type": "array"
          },
          "excludeCategories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "fileTypes": {
            "items": { "$ref": "#/components/schemas/FileType" },
            "type": "array"
          },
          "repository": { "type": "string" },
          "repositoryId": { "type": "string" },
          "search": { "$ref": "#/components/schemas/Search" },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "sourceTypes": {
            "items": { "$ref": "#/components/schemas/SourceType" },
            "type": "array"
          },
          "tags": {
            "items": {
              "properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          },
          "types": {
            "items": { "$ref": "#/components/schemas/Type" },
            "type": "array"
          }
        },
        "required": ["repository", "sourceTypes"],
        "type": "object"
      },
      "GetErrorsInFileWithFilters": {
        "additionalProperties": false,
        "properties": {
          "CICDRunId": { "format": "double", "type": "number" },
          "authors": { "items": { "type": "string" }, "type": "array" },
          "branch": { "nullable": true, "type": "string" },
          "categories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "codeStatus": {
            "items": { "$ref": "#/components/schemas/CodeStatus" },
            "type": "array"
          },
          "excludeCategories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "filePath": { "type": "string" },
          "fileTypes": {
            "items": { "$ref": "#/components/schemas/FileType" },
            "type": "array"
          },
          "repository": { "type": "string" },
          "repositoryId": { "type": "string" },
          "search": { "$ref": "#/components/schemas/Search" },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "sourceTypes": {
            "items": { "$ref": "#/components/schemas/SourceType" },
            "type": "array"
          },
          "tags": {
            "items": {
              "properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          },
          "types": {
            "items": { "$ref": "#/components/schemas/Type" },
            "type": "array"
          }
        },
        "required": ["repository", "sourceTypes", "filePath"],
        "type": "object"
      },
      "GetFileMetadataResponse": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/FileMetadataWithErrors" }
        },
        "required": ["data"],
        "type": "object"
      },
      "Justification": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "createdBy": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" }
        },
        "required": ["comment", "createdBy"],
        "type": "object"
      },
      "License": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "license": { "type": "string" },
          "packageId": { "type": "string" },
          "packageName": { "type": "string" },
          "packageVersion": { "type": "string" },
          "parentId": { "type": "string" },
          "status": { "type": "string" }
        },
        "required": [
          "id",
          "status",
          "license",
          "parentId",
          "packageId",
          "packageName",
          "packageVersion"
        ],
        "type": "object"
      },
      "LicenseTypeSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "licenseTypes": { "items": { "type": "string" }, "type": "array" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "suppressionType",
          "comment",
          "licenseTypes"
        ],
        "type": "object"
      },
      "ModuleError": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "fixedCode": { "type": "string" },
          "moduleFile": { "type": "string" },
          "moduleReferences": {
            "items": { "$ref": "#/components/schemas/moduleReferences" },
            "type": "array"
          }
        },
        "required": ["moduleReferences", "moduleFile", "fixedCode", "code"],
        "type": "object"
      },
      "PackageLicenseSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "packages": { "items": { "type": "string" }, "type": "array" },
          "suppressByRoot": { "type": "boolean" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "suppressionType",
          "comment",
          "packages",
          "suppressByRoot"
        ],
        "type": "object"
      },
      "ResourceToSuppress": {
        "additionalProperties": false,
        "properties": {
          "accountId": { "type": "string" },
          "id": { "type": "string" }
        },
        "required": ["id", "accountId"],
        "type": "object"
      },
      "ResourceViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "resources": {
            "items": { "$ref": "#/components/schemas/ResourceToSuppress" },
            "type": "array"
          },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment", "resources"],
        "type": "object"
      },
      "Search": {
        "additionalProperties": false,
        "properties": {
          "options": {
            "items": { "enum": ["path", "code"], "type": "string" },
            "type": "array"
          },
          "text": { "type": "string" },
          "title": {
            "enum": ["title", "constructive_title", "descriptive_title"],
            "type": "string"
          }
        },
        "required": ["text", "options"],
        "type": "object"
      },
      "Severity": {
        "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFO"],
        "type": "string"
      },
      "SmartFix": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "fixedCode": { "type": "string" },
          "id": { "type": "string" },
          "inspectedKey": { "type": "string" },
          "percent": { "format": "double", "type": "number" },
          "recommenderType": { "type": "string" },
          "times": { "format": "double", "type": "number" }
        },
        "required": [
          "id",
          "times",
          "percent",
          "inspectedKey",
          "recommenderType"
        ],
        "type": "object"
      },
      "SourceType": {
        "enum": [
          "Github",
          "Bitbucket",
          "Gitlab",
          "AzureRepos",
          "cli",
          "AWS",
          "Azure",
          "GCP",
          "Docker",
          "githubEnterprise",
          "gitlabEnterprise",
          "bitbucketEnterprise",
          "terraformCloud",
          "githubActions",
          "circleci",
          "codebuild",
          "jenkins",
          "tfcRunTasks",
          "admissionController",
          "terraformEnterprise"
        ],
        "type": "string"
      },
      "SourcesViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "accountIds": { "items": { "type": "string" }, "type": "array" },
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment", "accountIds"],
        "type": "object"
      },
      "SubmitActionsMetadata": {
        "additionalProperties": false,
        "properties": {
          "owner": { "type": "string" },
          "pr": { "type": "string" },
          "repoName": { "type": "string" },
          "runNumber": { "format": "double", "type": "number" },
          "sourceBranchName": { "type": "string" }
        },
        "required": ["owner", "repoName", "runNumber"],
        "type": "object"
      },
      "SubmitActionsRequest": {
        "additionalProperties": false,
        "properties": {
          "cvesToSuppress": {
            "items": { "$ref": "#/components/schemas/CICDCve" },
            "type": "array"
          },
          "metadata": { "$ref": "#/components/schemas/SubmitActionsMetadata" },
          "sourceType": { "type": "string" },
          "type": { "$ref": "#/components/schemas/SubmitActionsType" },
          "violationsToFix": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/CICDViolation" },
                { "$ref": "#/components/schemas/DefaultBranchViolationToFix" },
                { "$ref": "#/components/schemas/VulnerabilityToFix" }
              ]
            },
            "type": "array"
          },
          "violationsToSuppress": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/CICDViolation" },
                {
                  "$ref": "#/components/schemas/CvesAccountsViolationToSuppress"
                },
                { "$ref": "#/components/schemas/ResourceViolationToSuppress" },
                { "$ref": "#/components/schemas/TagsViolationToSuppress" },
                { "$ref": "#/components/schemas/SourcesViolationToSuppress" },
                { "$ref": "#/components/schemas/BaseViolationToSuppress" },
                { "$ref": "#/components/schemas/CvesViolationToSuppress" },
                { "$ref": "#/components/schemas/LicenseTypeSuppress" },
                { "$ref": "#/components/schemas/PackageLicenseSuppress" }
              ]
            },
            "type": "array"
          }
        },
        "required": ["type", "violationsToFix", "violationsToSuppress"],
        "type": "object"
      },
      "SubmitActionsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/SubmitResponse" }
        },
        "required": ["data"],
        "type": "object"
      },
      "SubmitActionsType": { "enum": ["default", "pr"], "type": "string" },
      "SubmitResponse": {
        "additionalProperties": false,
        "properties": {
          "message": { "type": "string" },
          "remediationsResponse": {
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "required": ["message"],
        "type": "object"
      },
      "SupplyChainFixRequest": {
        "additionalProperties": false,
        "properties": {
          "packagesToFix": { "items": { "type": "string" }, "type": "array" },
          "repositoryId": { "type": "string" },
          "resourcesToFix": { "items": { "type": "string" }, "type": "array" }
        },
        "required": ["repositoryId", "resourcesToFix", "packagesToFix"],
        "type": "object"
      },
      "TagsViolationToSuppress": {
        "additionalProperties": false,
        "properties": {
          "comment": { "type": "string" },
          "expirationTime": { "format": "double", "type": "number" },
          "suppressionType": { "type": "string" },
          "tags": {
            "items": {
              "properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          },
          "violationId": { "type": "string" }
        },
        "required": ["violationId", "suppressionType", "comment", "tags"],
        "type": "object"
      },
      "Type": {
        "enum": ["Errors", "Suppressed", "Passed", "Fixed"],
        "type": "string"
      },
      "VariableRendering": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "path": { "type": "string" }
        },
        "required": ["path", "lines", "code"],
        "type": "object"
      },
      "VariableRenderingError": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "fixedCode": { "type": "string" },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "path": { "type": "string" }
        },
        "required": ["path", "lines", "code", "fixedCode"],
        "type": "object"
      },
      "ViolationError": {
        "additionalProperties": false,
        "properties": {
          "author": { "type": "string" },
          "commitHash": { "type": "string" },
          "createdBy": { "type": "string" },
          "cves": {
            "items": { "$ref": "#/components/schemas/CVE" },
            "type": "array"
          },
          "date": { "format": "date-time", "type": "string" },
          "errorId": { "type": "string" },
          "errorLines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "fileMetadataUuid": { "type": "string" },
          "filePath": { "type": "string" },
          "fixPath": { "type": "string" },
          "fixedCode": { "type": "string" },
          "fixes": {
            "items": { "$ref": "#/components/schemas/SmartFix" },
            "type": "array"
          },
          "frameworkType": { "type": "string" },
          "isFixable": { "type": "boolean" },
          "licenses": {
            "items": { "$ref": "#/components/schemas/License" },
            "type": "array"
          },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "metadataChecksMetadataPath": { "type": "string" },
          "module": { "$ref": "#/components/schemas/ModuleError" },
          "resourceCode": { "type": "string" },
          "resourceId": { "type": "string" },
          "resourceType": { "type": "string" },
          "runtimeFrameworkType": { "type": "string" },
          "runtimeId": { "type": "string" },
          "runtimeSourceId": { "type": "string" },
          "scannerType": { "type": "string" },
          "secrets": {
            "items": { "$ref": "#/components/schemas/ErrorInFile" },
            "type": "array"
          },
          "selectedFix": {
            "allOf": [{ "$ref": "#/components/schemas/SmartFix" }],
            "nullable": true
          },
          "sourceType": { "$ref": "#/components/schemas/SourceType" },
          "status": { "type": "string" },
          "variableRendering": {
            "$ref": "#/components/schemas/VariableRenderingError"
          }
        },
        "required": [
          "resourceCode",
          "filePath",
          "resourceId",
          "resourceType",
          "errorId",
          "fixedCode",
          "status",
          "scannerType",
          "metadataChecksMetadataPath",
          "frameworkType",
          "errorLines",
          "fixPath",
          "lines",
          "author",
          "commitHash",
          "date",
          "variableRendering",
          "module",
          "runtimeId",
          "runtimeSourceId",
          "fixes",
          "sourceType",
          "fileMetadataUuid"
        ],
        "type": "object"
      },
      "VulnerabilityToFix": {
        "additionalProperties": false,
        "properties": {
          "frameworkType": { "type": "string" },
          "owner": { "type": "string" },
          "packageName": { "type": "string" },
          "packageVersion": { "type": "string" },
          "repoName": { "type": "string" },
          "resourceId": { "type": "string" },
          "s3FilePath": { "type": "string" },
          "violationId": { "type": "string" }
        },
        "required": [
          "violationId",
          "resourceId",
          "frameworkType",
          "s3FilePath",
          "owner",
          "repoName",
          "packageName",
          "packageVersion"
        ],
        "type": "object"
      },
      "module": {
        "additionalProperties": false,
        "properties": {
          "moduleFile": { "type": "string" },
          "moduleReferences": {
            "items": { "$ref": "#/components/schemas/moduleReferences" },
            "type": "array"
          }
        },
        "required": ["moduleReferences", "moduleFile"],
        "type": "object"
      },
      "moduleReferences": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "displayPath": { "type": "string" },
          "lines": {
            "items": { "format": "double", "type": "number" },
            "type": "array"
          },
          "name": { "type": "string" },
          "path": { "type": "string" }
        },
        "required": ["name", "path", "displayPath", "lines", "code"],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "The Errors endpoints are listed below.\n",
    "title": "Prisma Cloud Code Errors API Overview",
    "version": "Latest"
  },
  "openapi": "3.0.0",
  "paths": {
    "/code/api/v1/errors/files": {
      "post": {
        "description": "List files with errors",
        "operationId": "getErrorsFiles",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetErrorsFilters" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": [
                        {
                          "errorsCount": 0,
                          "filePath": "/terraform/gcp/instances.tf",
                          "fixedCount": 0,
                          "openErrorsCount": 0,
                          "passedCount": 3,
                          "suppressedErrorsCount": 0
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetErrorsFilesResponseBody"
                }
              }
            },
            "description": "Get errors files"
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "Couldn't fetch files with errors" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Lists scanned files that contain errors.",
        "tags": ["Errors"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/files\"\n\npayload = {\n    \"CICDRunId\": 0,\n    \"authors\": [\"string\"],\n    \"branch\": \"string\",\n    \"categories\": [\"IAM\"],\n    \"codeStatus\": [\"hasFix\"],\n    \"excludeCategories\": [\"IAM\"],\n    \"fileTypes\": [\"tf\"],\n    \"repository\": \"string\",\n    \"repositoryId\": \"string\",\n    \"search\": {\n        \"options\": [\"path\"],\n        \"text\": \"string\",\n        \"title\": \"title\"\n    },\n    \"severities\": [\"CRITICAL\"],\n    \"sourceTypes\": [\"Github\"],\n    \"tags\": [\n        {\n            \"key\": \"string\",\n            \"value\": \"string\"\n        }\n    ],\n    \"types\": [\"Errors\"]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/errors/files \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"CICDRunId\":0,\"authors\":[\"string\"],\"branch\":\"string\",\"categories\":[\"IAM\"],\"codeStatus\":[\"hasFix\"],\"excludeCategories\":[\"IAM\"],\"fileTypes\":[\"tf\"],\"repository\":\"string\",\"repositoryId\":\"string\",\"search\":{\"options\":[\"path\"],\"text\":\"string\",\"title\":\"title\"},\"severities\":[\"CRITICAL\"],\"sourceTypes\":[\"Github\"],\"tags\":[{\"key\":\"string\",\"value\":\"string\"}],\"types\":[\"Errors\"]}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/file": {
      "post": {
        "description": "List errors in files",
        "operationId": "getErrorsInFile",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": { "format": "int32", "minimum": 0, "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetErrorsInFileWithFilters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": [
                        {
                          "author": "author",
                          "commitHash": "5c6b5d60",
                          "createdBy": "checkov_terraform",
                          "errorId": "BC_AWS_S3_14",
                          "errorLines": [],
                          "fileMetadataUuid": "de707daa-2ef3-40e1-8bbf-5e39f86b927e",
                          "filePath": "/terraform/aws/s3.tf",
                          "fixPath": "checkov/yourname/yourGithubName/yourRepo/master/fixes/BC_AWS_S3_14/aws_s3_bucket.data/terraform/aws/s3.tf",
                          "fixedCode": "resource \"aws_s3_bucket\" \"data\" { \n  # bucket is public \n bucket        = \"$\n{local.resource_prefix.value}-data\" \n force_destroy = true \n tags = merge({ \n  Name        = \"${local.resource_prefix.value}-data\" \n Environment = local.resource_prefix.value \n }) \n server_side_encryption_configuration { \n rule { \n apply_server_side_encryption_by_default { \n sse_algorithm = \"AES256\" \n } \n } \n }",
                          "fixes": [],
                          "frameworkType": "Terraform",
                          "isFixable": true,
                          "lines": [1, 21],
                          "metadataChecksMetadataPath": "checkov/yourname/yourGithubName/yourRepo/master/checkov_results/terraform/checks_metadata.json",
                          "resourceCode": "resource \"aws_s3_bucket\" \"data\" { \n  # bucket is public \n bucket        = \"$\n{local.resource_prefix.value}-data\" \n force_destroy = true \n tags = merge({ \n  Name        = \"${local.resource_prefix.value}-data\" \n Environment = local.resource_prefix.value \n })",
                          "resourceId": "/terraform/aws/s3.tf:aws_s3_bucket.data",
                          "resourceType": "aws_s3_bucket.data",
                          "runtimeFrameworkType": null,
                          "runtimeId": null,
                          "runtimeSourceId": null,
                          "scannerType": "Checkov",
                          "selectedFix": null,
                          "sourceType": "Github",
                          "status": "OPEN"
                        }
                      ],
                      "hasNext": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorsInFileWithPaginationResponse"
                }
              }
            },
            "description": "Get errors in file"
          },
          "422": { "description": "Request arguments validation error" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Lists all errors found in a given file path.",
        "tags": ["Errors"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/file\"\n\nquerystring = {\"limit\":\"SOME_INTEGER_VALUE\",\"offset\":\"SOME_INTEGER_VALUE\"}\n\npayload = {\n    \"CICDRunId\": 0,\n    \"authors\": [\"string\"],\n    \"branch\": \"string\",\n    \"categories\": [\"IAM\"],\n    \"codeStatus\": [\"hasFix\"],\n    \"excludeCategories\": [\"IAM\"],\n    \"filePath\": \"string\",\n    \"fileTypes\": [\"tf\"],\n    \"repository\": \"string\",\n    \"repositoryId\": \"string\",\n    \"search\": {\n        \"options\": [\"path\"],\n        \"text\": \"string\",\n        \"title\": \"title\"\n    },\n    \"severities\": [\"CRITICAL\"],\n    \"sourceTypes\": [\"Github\"],\n    \"tags\": [\n        {\n            \"key\": \"string\",\n            \"value\": \"string\"\n        }\n    ],\n    \"types\": [\"Errors\"]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://api.prismacloud.io/code/api/v1/errors/file?limit=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"CICDRunId\":0,\"authors\":[\"string\"],\"branch\":\"string\",\"categories\":[\"IAM\"],\"codeStatus\":[\"hasFix\"],\"excludeCategories\":[\"IAM\"],\"filePath\":\"string\",\"fileTypes\":[\"tf\"],\"repository\":\"string\",\"repositoryId\":\"string\",\"search\":{\"options\":[\"path\"],\"text\":\"string\",\"title\":\"title\"},\"severities\":[\"CRITICAL\"],\"sourceTypes\":[\"Github\"],\"tags\":[{\"key\":\"string\",\"value\":\"string\"}],\"types\":[\"Errors\"]}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/files/{uuid}": {
      "get": {
        "description": "Get the file metadata by UUID based on the customer's repository",
        "operationId": "getErrorsInFiles",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "include",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": {
                        "commitId": null,
                        "creationDate": "2022-02-21T09:26:36.431Z",
                        "errorsCount": "46",
                        "id": "1ff27bcd-9044-42ab-a773-ba6707cb35a9",
                        "name": "rds.tf",
                        "path": "terraform/aws/rds.tf",
                        "prId": null,
                        "type": "tf",
                        "updatedDate": "2022-02-21T09:26:36.431Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetFileMetadataResponse"
                }
              }
            },
            "description": "Get errors in file"
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "failed to fetch file by UUID" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get the file metadata by UUID",
        "tags": ["Errors"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/files/{uuid}\"\n\nquerystring = {\"include\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/code/api/v1/errors/files/{uuid}?include=SOME_STRING_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/errors/gitBlameAuthors": {
      "get": {
        "description": "Get all git blame author names per full repo name (owner and name)",
        "operationId": "getGitBlameAuthors",
        "parameters": [
          {
            "in": "query",
            "name": "fullRepoName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "- Github, Bitbucket, Gitlab, AzureRepos, cli, AWS, Azure, GCP, githubEnterprise,\ngitlabEnterprise, bitbucketEnterprise, terraformCloud, tfcRunTasks, githubActions, circleci, codebuild,\njenkins, kubernetesWorkloads, Kubernetes, admissionController",
            "in": "query",
            "name": "sourceType",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "items": { "type": "string" }, "type": "array" }
              }
            },
            "description": "array of author names"
          },
          "400": {
            "description": "Could not get git blame authors, check GET query params"
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "Could not get git blames authors" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "List all the git authors of a repository",
        "tags": ["Errors"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/gitBlameAuthors\"\n\nquerystring = {\"fullRepoName\":\"SOME_STRING_VALUE\",\"sourceType\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/code/api/v1/errors/gitBlameAuthors?fullRepoName=SOME_STRING_VALUE&sourceType=SOME_STRING_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/errors/submitActions": {
      "post": {
        "description": "This api receive type of submit (PR\\DEFAULT), array of violationsToSuppress and array of violationsToFix, and\ninvoke the suppress\\fix function in the correct service (cicd\\remediations)",
        "operationId": "submitActions",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "type": "default",
                "violationsToFix": [
                  {
                    "fixedCode": "",
                    "frameworkType": "Terraform",
                    "fullId": "BC_AWS_S3_14::milkanas/terragoat::/terraform/aws/s3.tf:aws_s3_bucket.data",
                    "metadataChecksMetadataPath": "checkov/milkanast/milkanas/terragoat/master/checkov_results/terraform/checks_metadata.json",
                    "metadataLines": [1, 13],
                    "owner": "milkanas",
                    "repoName": "terragoat",
                    "resourceId": "/terraform/aws/s3.tf:aws_s3_bucket.data",
                    "runtimeId": null,
                    "runtimeSourceId": null,
                    "s3FilePath": "checkov/milkanast/milkanas/terragoat/master/src/terraform/aws/s3.tf",
                    "violationId": "BC_AWS_S3_14"
                  }
                ],
                "violationsToSuppress": [
                  {
                    "comment": "this is justification comment",
                    "resources": [
                      {
                        "accountId": "orevron/terragoat",
                        "id": "BC_GIT_6::orevron/terragoat::/terraform/providers.tf:4ec71f2183bf24b28320d0c2839bdd08c255f0bb"
                      },
                      {
                        "accountId": "orevron/terragoat",
                        "id": "BC_GIT_6::orevron/terragoat::/terraform/lambda.tf:ca61f30c56f9b66c8802632d559a391acd02d01d"
                      }
                    ],
                    "suppressionType": "Resources",
                    "violationId": "BC_AWS_S3_13"
                  }
                ]
              },
              "schema": { "$ref": "#/components/schemas/SubmitActionsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitActionsResponse"
                }
              }
            },
            "description": ""
          },
          "401": { "description": "Insufficient role permissions" },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "type: TYPE not supported." }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Submit remediation and suppression actions",
        "tags": ["Errors"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/submitActions\"\n\npayload = {\n    \"cvesToSuppress\": [\n        {\n            \"CICDRunId\": 0,\n            \"bulkSuppression\": True,\n            \"id\": \"string\",\n            \"justification\": {\n                \"comment\": \"string\",\n                \"createdBy\": \"string\",\n                \"expirationTime\": 0\n            },\n            \"repository\": \"string\",\n            \"resourceId\": \"string\",\n            \"violationId\": \"string\"\n        }\n    ],\n    \"metadata\": {\n        \"owner\": \"string\",\n        \"pr\": \"string\",\n        \"repoName\": \"string\",\n        \"runNumber\": 0,\n        \"sourceBranchName\": \"string\"\n    },\n    \"sourceType\": \"string\",\n    \"type\": \"default\",\n    \"violationsToFix\": [\n        {\n            \"CICDRunId\": 0,\n            \"bulkSuppression\": True,\n            \"commentIds\": [\"string\"],\n            \"creationDate\": \"string\",\n            \"errorLines\": [0],\n            \"frameworkType\": \"string\",\n            \"justification\": {\n                \"comment\": \"string\",\n                \"createdBy\": \"string\",\n                \"expirationTime\": 0\n            },\n            \"justificationId\": \"string\",\n            \"metadataChecksMetadataPath\": \"string\",\n            \"metadataLines\": [0],\n            \"repository\": \"string\",\n            \"resourceId\": \"string\",\n            \"runtimeId\": \"string\",\n            \"runtimeSourceId\": \"string\",\n            \"s3FilePath\": \"string\",\n            \"s3FixFilePath\": \"string\",\n            \"severity\": \"string\",\n            \"status\": \"string\",\n            \"updatedDate\": \"string\",\n            \"vcsCommentLine\": \"string\",\n            \"violationId\": \"string\"\n        }\n    ],\n    \"violationsToSuppress\": [\n        {\n            \"CICDRunId\": 0,\n            \"bulkSuppression\": True,\n            \"commentIds\": [\"string\"],\n            \"creationDate\": \"string\",\n            \"errorLines\": [0],\n            \"frameworkType\": \"string\",\n            \"justification\": {\n                \"comment\": \"string\",\n                \"createdBy\": \"string\",\n                \"expirationTime\": 0\n            },\n            \"justificationId\": \"string\",\n            \"metadataChecksMetadataPath\": \"string\",\n            \"metadataLines\": [0],\n            \"repository\": \"string\",\n            \"resourceId\": \"string\",\n            \"runtimeId\": \"string\",\n            \"runtimeSourceId\": \"string\",\n            \"s3FilePath\": \"string\",\n            \"s3FixFilePath\": \"string\",\n            \"severity\": \"string\",\n            \"status\": \"string\",\n            \"updatedDate\": \"string\",\n            \"vcsCommentLine\": \"string\",\n            \"violationId\": \"string\"\n        }\n    ]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/errors/submitActions \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"cvesToSuppress\":[{\"CICDRunId\":0,\"bulkSuppression\":true,\"id\":\"string\",\"justification\":{\"comment\":\"string\",\"createdBy\":\"string\",\"expirationTime\":0},\"repository\":\"string\",\"resourceId\":\"string\",\"violationId\":\"string\"}],\"metadata\":{\"owner\":\"string\",\"pr\":\"string\",\"repoName\":\"string\",\"runNumber\":0,\"sourceBranchName\":\"string\"},\"sourceType\":\"string\",\"type\":\"default\",\"violationsToFix\":[{\"CICDRunId\":0,\"bulkSuppression\":true,\"commentIds\":[\"string\"],\"creationDate\":\"string\",\"errorLines\":[0],\"frameworkType\":\"string\",\"justification\":{\"comment\":\"string\",\"createdBy\":\"string\",\"expirationTime\":0},\"justificationId\":\"string\",\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"repository\":\"string\",\"resourceId\":\"string\",\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\",\"s3FilePath\":\"string\",\"s3FixFilePath\":\"string\",\"severity\":\"string\",\"status\":\"string\",\"updatedDate\":\"string\",\"vcsCommentLine\":\"string\",\"violationId\":\"string\"}],\"violationsToSuppress\":[{\"CICDRunId\":0,\"bulkSuppression\":true,\"commentIds\":[\"string\"],\"creationDate\":\"string\",\"errorLines\":[0],\"frameworkType\":\"string\",\"justification\":{\"comment\":\"string\",\"createdBy\":\"string\",\"expirationTime\":0},\"justificationId\":\"string\",\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"repository\":\"string\",\"resourceId\":\"string\",\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\",\"s3FilePath\":\"string\",\"s3FixFilePath\":\"string\",\"severity\":\"string\",\"status\":\"string\",\"updatedDate\":\"string\",\"vcsCommentLine\":\"string\",\"violationId\":\"string\"}]}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/getFixedCode": {
      "post": {
        "description": "Returns a remediated resource code",
        "operationId": "getFixedCode",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "error": {
                    "$ref": "#/components/schemas/DefaultBranchViolationToFix"
                  }
                },
                "required": ["error"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": { "Example 1": {} },
                "schema": { "type": "string" }
              }
            },
            "description": "string representing a fixed resource code"
          },
          "422": { "description": "Request arguments validation error" },
          "500": {
            "description": "Could not get fixed code for customer $CUSTOMER_NAME with error $ERROR"
          }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Get a fixed resource code using the selectedFix",
        "tags": ["Errors"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/getFixedCode\"\n\npayload = {\"error\": {\n        \"errorLines\": [0],\n        \"fixPath\": \"string\",\n        \"fixedCode\": \"string\",\n        \"fixes\": [\n            {\n                \"code\": \"string\",\n                \"fixedCode\": \"string\",\n                \"id\": \"string\",\n                \"inspectedKey\": \"string\",\n                \"percent\": 0,\n                \"recommenderType\": \"string\",\n                \"times\": 0\n            }\n        ],\n        \"frameworkType\": \"string\",\n        \"fullId\": \"string\",\n        \"inspectedKey\": \"string\",\n        \"metadataChecksMetadataPath\": \"string\",\n        \"metadataLines\": [0],\n        \"owner\": \"string\",\n        \"repoName\": \"string\",\n        \"resourceCode\": \"string\",\n        \"resourceId\": \"string\",\n        \"runtimeId\": \"string\",\n        \"runtimeSourceId\": \"string\",\n        \"s3FilePath\": \"string\",\n        \"selectedFix\": \"string\",\n        \"violationId\": \"string\"\n    }}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/errors/getFixedCode \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"error\":{\"errorLines\":[0],\"fixPath\":\"string\",\"fixedCode\":\"string\",\"fixes\":[{\"code\":\"string\",\"fixedCode\":\"string\",\"id\":\"string\",\"inspectedKey\":\"string\",\"percent\":0,\"recommenderType\":\"string\",\"times\":0}],\"frameworkType\":\"string\",\"fullId\":\"string\",\"inspectedKey\":\"string\",\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"owner\":\"string\",\"repoName\":\"string\",\"resourceCode\":\"string\",\"resourceId\":\"string\",\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\",\"s3FilePath\":\"string\",\"selectedFix\":\"string\",\"violationId\":\"string\"}}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/supply-chain-fix": {
      "post": {
        "description": "The API is responsible for handling remediations from the supply chain screen. It receives a repository's UUID,\na list of IaC resources UUIDs and a list of packages UUIDs to be remediated, and returns the remediation response when available",
        "operationId": "supply-chain-fix",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "packagesToFix": [
                  "0cbcbeca-1318-4657-8994-6ea413fb9947",
                  "41732c34-6d28-4ea5-8d8a-0ff724884ac4"
                ],
                "repositoryId": "fa3219c3-7da5-41bb-a9a5-b2fb5542fc13",
                "resourcesToFix": [
                  "e8b299db-f08a-4870-9ed9-6d09409e4ce5",
                  "c3eb359e-c499-4b56-a1bb-77770be845ca"
                ]
              },
              "schema": { "$ref": "#/components/schemas/SupplyChainFixRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitActionsResponse"
                }
              }
            },
            "description": ""
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "Could not handle supply chain fix" }
        },
        "security": [{ "CustomAuthorizer": [] }],
        "summary": "Submit remediation operations from the supply chain screen",
        "tags": ["Errors"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/supply-chain-fix\"\n\npayload = {\n    \"packagesToFix\": [\"string\"],\n    \"repositoryId\": \"string\",\n    \"resourcesToFix\": [\"string\"]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/errors/supply-chain-fix \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"packagesToFix\":[\"string\"],\"repositoryId\":\"string\",\"resourcesToFix\":[\"string\"]}'"
          }
        ]
      }
    }
  },
  "servers": [{ "url": "https://api.prismacloud.io" }],
  "tags": [{ "name": "Errors" }]
}
