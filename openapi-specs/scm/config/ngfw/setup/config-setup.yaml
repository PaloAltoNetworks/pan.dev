openapi: 3.0.0
info:
  version: 2.0.0
  title: Configuration Setup
  description: These APIs are used to define how Strata Cloud Manager configurations are implemented.
  termsOfService: 'https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/legal/palo-alto-networks-end-user-license-agreement-eula.pdf'
  contact:
    email: support@paloaltonetworks.com
    name: Palo Alto Networks Technical Support
    url: 'https://support.paloaltonetworks.com'
  license:
    name: MIT
    url: https://opensource.org/license/mit
servers:
  - url: 'https://api.strata.paloaltonetworks.com/config/setup/v1'
    description: Current
tags:
  - name: Devices
    description: NGFW devices
  - name: Folders
    description: Configuration folders
  - name: Labels
    description: Configuration labels
  - name: Snippets
    description: Configuration snippets
  - name: Variables
    description: Configuration variables
paths:
  /labels:
    get:
      summary: List labels
      description: |
        Retrieve a list of labels.
      tags:
        - Labels
      operationId: ListLabels
      parameters:
        - $ref: '#/components/parameters/limit-optional'
        - $ref: '#/components/parameters/offset-optional'
        - $ref: '#/components/parameters/name-optional'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/labels'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      summary: Create a label
      description: |
        Create a new label.
      tags:
        - Labels
      operationId: CreateLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels'
        description: The `label` resource definition.
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /labels/{id}:
    get:
      summary: Get a label
      description: |
        Retrieve an existing label.
      tags:
        - Labels
      operationId: GetLabelByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/labels'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      summary: Update a label
      description: |
        Update an existing label.
      tags:
        - Labels
      operationId: UpdateLabelByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels'
        description: The `label` resource definition.
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      summary: Delete a label
      description: |
        Delete an existing label.
      tags:
        - Labels
      operationId: DeleteLabelByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/labels'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /variables:
    get:
      summary: List variables
      description: |
        Retrieve a list of variables.
      tags:
        - Variables
      operationId: ListVariables
      parameters:
        - $ref: '#/components/parameters/limit-optional'
        - $ref: '#/components/parameters/offset-optional'
        - $ref: '#/components/parameters/name-optional'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/variables'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      summary: Create a variable
      description: |
        Create a new variable.
      tags:
        - Variables
      operationId: CreateVariable
      parameters:
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variables'
        description: The `variable` resource definition.
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /variables/{id}:
    get:
      summary: Get a variables
      description: |
        Retrieve an existing variable.
      tags:
        - Variables
      operationId: GetVariableByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variables'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      summary: Update a variable
      description: |
        Update an existing variable.
      tags:
        - Variables
      operationId: UpdateVariableByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variables'
        description: The `variable` resource definition.
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      summary: Delete a variable
      description: |
        Delete an existing variable.
      tags:
        - Variables
      operationId: DeleteVariableByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variables'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /snippets:
    get:
      summary: List snippets
      description: |
        Retrieve a list of snippets.
      tags:
        - Snippets
      operationId: ListSnippets
      parameters:
        - $ref: '#/components/parameters/limit-optional'
        - $ref: '#/components/parameters/offset-optional'
        - $ref: '#/components/parameters/name-optional'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/snippets'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      summary: Create a snippet
      description: |
        Create a new snippet.
      tags:
        - Snippets
      operationId: CreateSnippet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snippets'
        description: The `snippet` resource definition.
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /snippets/{id}:
    get:
      summary: Get a snippet
      description: |
        Retrieve an existing snippet.
      tags:
        - Snippets
      parameters:
        - $ref: '#/components/parameters/uuid'
      operationId: GetSnippetByID
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snippets'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      summary: Update a snippet
      description: |
        Update an existing snippet.
      tags:
        - Snippets
      operationId: UpdateSnippetByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snippets'
        description: The `snippet` resource definition.
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      summary: Delete a snippet
      description: |
        Delete an existing snippet.
      tags:
        - Snippets
      operationId: DeleteSnippetByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snippets'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /folders:
    get:
      summary: List folders
      description: |
        Retrieve a list of folders.
      tags:
        - Folders
      operationId: ListFolders
      parameters:
        - $ref: '#/components/parameters/limit-optional'
        - $ref: '#/components/parameters/offset-optional'
        - $ref: '#/components/parameters/name-optional'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/folders'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      summary: Create a folder
      description: |
        Create a new folder.
      tags:
        - Folders
      operationId: CreateFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/folders'
        description: The `folder` resource definition
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /folders/{id}:
    get:
      summary: Get a folder
      description: |
        Retrieve an existing folder.
      tags:
        - Folders
      operationId: GetFolderByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folders'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      summary: Update a folder
      description: |
        Update an existing folder.
      tags:
        - Folders
      operationId: UpdateFolderByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/folders'
        description: The `folder` resource definition.
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      summary: Delete a folder
      description: |
        Delete an existing folder.
      tags:
        - Folders
      operationId: DeleteFolderByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folders'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /devices:
    get:
      summary: List devices
      description: |
        Retrieve a list of devices.
      tags:
        - Devices
      operationId: ListDevices
      parameters:
        - $ref: '#/components/parameters/limit-optional'
        - $ref: '#/components/parameters/offset-optional'
        - $ref: '#/components/parameters/name-optional'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/devices'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
  /devices/{id}:
    get:
      summary: Get a device
      description: |
        Retrieve an existing device.
      tags:
        - Devices
      operationId: GetDeviceByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/devices'
          description: OK
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      summary: Update a device
      description: |
        Update an existing device.
      tags:
        - Devices
      operationId: UpdateDeviceByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/devices'
        description: The `device` resource definition.
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
components:
  securitySchemes:
    scmOAuth:
      type: oauth2
      description: |
        Strata Cloud Manager APIs authenticate client requests using the 
        OAuth 2.0 Client Credentials flow.  Please use the `client_id`, 
        `client_secret` values associated with an IAM service account along 
        with a scope value of `tsg_id:XXXXXXXXXX`, where `XXXXXXXXXX` is the 
        Tenant Service Group (TSG) ID.  The resulting JWT access token should 
        be attached to all API calls as a `Bearer` token in the `Authorization` 
        header (ex. `Authorization: Bearer tokenstring`).
      flows: 
        clientCredentials:
          tokenUrl: https://auth.apps.paloaltonetworks.com/oauth2/access_token
          scopes: {}
    scmToken:
      type: http
      description: |
        Strata Cloud Manager APIs authenticate client requests using the 
        OAuth 2.0 Client Credentials flow.  Please use the `client_id`, 
        `client_secret` values associated with an IAM service account along 
        with a scope value of `tsg_id:XXXXXXXXXX`, where `XXXXXXXXXX` is the 
        Tenant Service Group (TSG) ID.  The resulting JWT access token should 
        be attached to all API calls as a `Bearer` token in the `Authorization` 
        header (ex. `Authorization: Bearer tokenstring`).
      scheme: bearer
      bearerFormat: JWT
  parameters:
    uuid:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: The UUID of the resource
    name-optional:
      name: name
      in: query
      required: false
      schema:
        type: string
      description: The name of the resource
    limit-optional:
      name: limit
      in: query
      required: false
      schema:
        type: number
      description: The maximum number of resources to return
    offset-optional:
      name: offset
      in: query
      required: false
      schema:
        type: number
      description: The offset into the list of resources returned
    folder:
      name: folder
      in: query
      required: false
      schema:
        type: string
      description: |
        The folder in which the resource is defined
    snippet:
      name: snippet
      in: query
      required: false
      schema:
        type: string
      description: |
        The snippet in which the resource is defined
    device:
      name: device
      in: query
      required: false
      schema:
        type: string
      description: |
        The device in which the resource is defined
  responses:
    http_ok:
      description: OK
    http_created:
      description: Created
    auth_errors:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            auth_not_authenticated:
              $ref: '#/components/examples/json_401_panui_auth_not_authenticated'
            invalid_credential:
              $ref: '#/components/examples/json_401_panui_auth_invalid_credential'
            key_too_long:
              $ref: '#/components/examples/json_401_panui_auth_key_too_long'
            key_expired:
              $ref: '#/components/examples/json_401_panui_auth_key_expired'
            need_password_change:
              $ref: '#/components/examples/json_401_panui_auth_need_password_change'
    access_errors:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            auth_unauthorized:
              $ref: '#/components/examples/json_403_panui_auth_unauthorized'
    bad_request_errors_basic:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            input_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_input_format_mismatch'
            output_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_output_format_mismatch'
            missing_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_missing_query_parameter'
            invalid_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_invalid_query_parameter'
    bad_request_errors_basic_with_body:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            input_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_input_format_mismatch'
            output_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_output_format_mismatch'
            missing_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_missing_query_parameter'
            invalid_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_invalid_query_parameter'
            missing_body:
              $ref: '#/components/examples/json_400_panui_restapi_missing_body'
            invalid_object:
              $ref: '#/components/examples/json_400_panui_mgmt_invalid_object'
    not_found:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            object_not_present:
              $ref: '#/components/examples/json_404_panui_mgmt_object_not_present'
    conflict_errors:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            object_not_unique:
              $ref: '#/components/examples/json_409_panui_mgmt_object_not_unique'
            name_not_unique:
              $ref: '#/components/examples/json_409_panui_mgmt_name_not_unique'
            reference_not_zero:
              $ref: '#/components/examples/json_409_panui_mgmt_reference_not_zero'
    default_errors:
      description: General Errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            version_not_supported:
              $ref: '#/components/examples/json_501_panui_restapi_version_not_supported'
            method_not_allowed:
              $ref: '#/components/examples/json_501_panui_restapi_method_not_supported'
            action_not_supported:
              $ref: '#/components/examples/json_405_panui_restapi_action_not_supported'
            bad_xpath:
              $ref: '#/components/examples/json_400_panui_mgmt_bad_xpath'
            invalid_command:
              $ref: '#/components/examples/json_400_panui_mgmt_invalid_command'
            malformed_command:
              $ref: '#/components/examples/json_400_panui_mgmt_malformed_command'
            session_timeout:
              $ref: '#/components/examples/json_504_panui_mgmt_session_timeout'
  examples:
    json_401_panui_auth_not_authenticated:
      summary: Not Authenticated
      value:
        _errors:
          - code: "E016"
            message: Not Authenticated
            details: {}
        _request_id: "abcd-1234"
    json_401_panui_auth_invalid_credential:
      summary: Invalid Credential
      value:
        _errors:
          - code: "E016"
            message: Invalid Credential
            details: {}
        _request_id: "abcd-1234"
    json_401_panui_auth_key_too_long:
      summary: Key Too Long
      value:
        _errors:
          - code: "E016"
            message: Key Too Long
            details: {}
        _request_id: "abcd-1234"
    json_401_panui_auth_key_expired:
      summary: Key Expired
      value:
        _errors:
          - code: "E016"
            message: Key Expired
            details: {}
        _request_id: "abcd-1234"
    json_401_panui_auth_need_password_change:
      summary: Need Password Change
      value:
        _errors:
          - code: "E016"
            message: The password needs to be changed.
            details: {}
        _request_id: "abcd-1234"
    json_403_panui_auth_unauthorized:
      summary: Unauthorized
      value:
        _errors:
          - code: "E007"
            message: Unauthorized
            details: {}
        _request_id: "abcd-1234"
    json_501_panui_restapi_version_not_supported:
      summary: Version Not Supported
      value:
        _errors:
          - code: "E012"
            message: Version Not Supported
            details: {}
        _request_id: "abcd-1234"
    json_501_panui_restapi_method_not_supported:
      summary: Method Not Supported
      value:
        _errors:
          - code: "E012"
            message: Method Not Supported
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_restapi_input_format_mismatch:
      summary: Input Format Mismatch
      value:
        _errors:
          - code: "E003"
            message: 'Input Format Mismatch: input-format=json'
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_restapi_output_format_mismatch:
      summary: Output Format Mismatch
      value:
        _errors:
          - code: "E003"
            message: 'Output Format Mismatch: output-format=json Accept=xml'
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_restapi_missing_query_parameter:
      summary: Missing Query Parameter
      value:
        _errors:
          - code: "E003"
            message: 'Missing Query Parameter: name'
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_restapi_invalid_query_parameter:
      summary: Invalid Query Parameter
      value:
        _errors:
          - code: "E003"
            message: 'Invalid Query Parameter: location=invalid'
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_restapi_missing_body:
      summary: Missing Body
      value:
        _errors:
          - code: "E003"
            message: Missing Body
            details: {}
        _request_id: "abcd-1234"
    json_405_panui_restapi_action_not_supported:
      summary: Action Not Supported
      value:
        _errors:
          - code: "E012"
            message: 'Action Not Supported: move'
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_mgmt_bad_xpath:
      summary: Bad XPath
      value:
        _errors:
          - code: "E013"
            message: Bad XPath
            details: {}
        _request_id: "abcd-1234"
    json_404_panui_mgmt_object_not_present:
      summary: Object Not Present
      value:
        _errors:
          - code: "E005"
            message: Object Not Present
            details: {}
        _request_id: "abcd-1234"
    json_409_panui_mgmt_object_not_unique:
      summary: Object Not Unique
      value:
        _errors:
          - code: "E016"
            message: Object Not Unique
            details: {}
        _request_id: "abcd-1234"
    json_409_panui_mgmt_name_not_unique:
      summary: Name Not Unique
      value:
        _errors:
          - code: "E006"
            message: Name Not Unique
            details: {}
        _request_id: "abcd-1234"
    json_409_panui_mgmt_reference_not_zero:
      summary: Reference Not Zero
      value:
        _errors:
          - code: "E009"
            message: Reference Not Zero
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_mgmt_invalid_object:
      summary: Invalid Object
      value:
        _errors:
          - code: "E003"
            message: Invalid Object
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_mgmt_invalid_command:
      summary: Invalid Command
      value:
        _errors:
          - code: "E003"
            message: Invalid Command
            details: {}
        _request_id: "abcd-1234"
    json_400_panui_mgmt_malformed_command:
      summary: Malformed Command
      value:
        _errors:
          - code: "E003"
            message: Malformed Command
            details: {}
        _request_id: "abcd-1234"
    json_504_panui_mgmt_session_timeout:
      summary: Session Timeout
      value:
        _errors:
          - code: '4'
            message: Session Timeout
            details: {}
        _request_id: "abcd-1234"
  schemas:
    generic_error:
      type: object
      properties:
        _errors:
          $ref: '#/components/schemas/error_detail_cause_infos'
        _request_id:
          type: string
    error_detail_cause_infos:
      type: array
      items:
        $ref: '#/components/schemas/error_detail_cause_info'
    error_detail_cause_info:
      title: Cause Info
      type: object
      properties:
        'code':
          type: string
        message:
          type: string
        details:
          type: object
        help:
          type: string
    variables:
      type: object
      required: 
        - 'name'
        - 'id'
        - 'type'
        - 'value'
      properties:
        id:
          type: string
          description: UUID of the variable
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the variable
          maxLength: 63
        type:
          type: string
          enum:
            - percent
            - count
            - ip-netmask
            - zone
            - ip-range
            - ip-wildcard
            - device-priority
            - device-id
            - egress-max
            - as-number
            - fqdn
            - port
            - link-tag
            - group-id
            - rate
            - router-id
            - qos-profile
            - timer
          description: The variable type
        value:
          type: string
          additionalProperties:
            oneOf:
              - type: string
              - type: integer
          description: The value of the variable
          default: None
        overridden:
          type: boolean
          readOnly: true
          description: Is the variable overridden?
        description:
          type: string
          description: The description of the variable
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    folders:
      type: object
      required:
        - "name"
        - "id"
        - "parent"
      properties:
        "name":
          type: string
          description: The name of the folder
        "id":
          type: string
          readOnly: true
          description: The UUID of the folder
        "parent":
          type: string
          description: The parent folder
        "description":
          type: string
          description: The description of the folder
        "labels":
          type: array
          items:
            type: string
          description: Labels assigned to the folder
        "snippets":
          type: array
          items:
            type: string
          description: Snippets associated with the folder
    snippets:
      type: object
      required:
        - "name"
        - "id"
      properties:
        "name":
          type: string
          description: The name of the snippet
        "description":
          type: string
          description: The description of the snippet
        "id":
          type: string
          description: The UUID of the snippet
          readOnly: true
        "type":
          type: string
          readOnly: true
          enum:
            - predefined
            - custom
          description: The snippet type
        "labels":
          type: array
          items:
            type: string
          description: Labels applied to the snippet
    labels:
      type: object
      required:
        - "name"
        - "id"
      properties:
        "name":
          type: string
          description: The name of the label
        "id":
          type: string
          readOnly: true
          description: The UUID of the label
        "description":
          type: string
          description: The description of the label
    devices:
      type: object
      required:
        - name
        - id
        - folder
      properties:
        "id": 
          type: string
          readOnly: true
          description: The UUID of the device
        "name":
          type: string
          description: The name of the device
        "folder":
          type: string
          description: The folder containing the device
        "description":
          type: string
          description: The description of the device
        "hostname": 
          type: string
          readOnly: true
          description: The hostname of the device
        "ip_address": 
          type: string
          readOnly: true
          description: The IPv4 address of the device
        "ipV6_address": 
          type: string
          readOnly: true
          description: The IPv6 address of the device
        "mac_address": 
          type: string
          readOnly: true
          description: The MAC address of the device
        "family": 
          type: string
          readOnly: true
          description: The product family of the device
        "model": 
          type: string
          readOnly: true
          description: The model of the device
        "labels":
          type: array
          items:
            type: string
          description: Labels assigned to the device
        "snippets":
          type: array
          items:
            type: string
          description: Snippets associated with the device
        "app_version": 
          type: string
          readOnly: true
        "threat_version": 
          type: string
          readOnly: true
        "anti_virus_version": 
          type: string
          readOnly: true
        "wf_ver": 
          type: string
          readOnly: true
        "iot_version": 
          type: string
          readOnly: true
        "url_db_type": 
          type: string
          readOnly: true
        "url_db_ver": 
          type: string
          readOnly: true
        "software_version": 
          type: string
          readOnly: true
        "vm_state": 
          type: string
          readOnly: true
        "gp_client_verion": 
          type: string
          readOnly: true
        "gp_data_version": 
          type: string
          readOnly: true
        "log_db_version": 
          type: string
          readOnly: true
        "uptime": 
          type: string
          readOnly: true
        "dev_cert_detail": 
          type: string
          readOnly: true
        "dev_cert_expiry_date": 
          type: string
          readOnly: true
        "ha_state": 
          type: string
          readOnly: true
        "ha_peer_serial": 
          type: string
          readOnly: true
        "ha_peer_state": 
          type: string
          readOnly: true
        "is_connected": 
          type: boolean
          readOnly: true
        "connected_since": 
          type: string
          format: date-time
          readOnly: true
        "app_release_date": 
          type: string
          readOnly: true
        "threat_release_date": 
          type: string
          readOnly: true
        "av_release_date": 
          type: string
          readOnly: true
        "wf_release_date": 
          type: string
          readOnly: true
        "iot_release_date": 
          type: string
          readOnly: true
        "license_match": 
          type: boolean
          readOnly: true
        "available_licensess": 
          type: array
          items: 
            type: object
            properties: 
              "issued": 
                type: string
                format: date
                readOnly: true
              "expires": 
                type: string
                format: date
                readOnly: true
              "feature": 
                type: string
                readOnly: true
              "authcode": 
                type: string
                readOnly: true
          readOnly: true
        "installed_licenses": 
          type: array
          items: 
            type: object
            properties: 
              "issued": 
                type: string
                format: date
                readOnly: true
              "expired": 
                type: string
                readOnly: true
              "expires": 
                type: string
                readOnly: true
              "feature": 
                type: string
                readOnly: true
              "authcode": 
                type: string
                readOnly: true
          readOnly: true
security:
  - scmToken: []
x-internal: false