openapi: 3.0.0
info:
  version: 2.0.0
  title: Network Deployment
  description: These APIs are used for defining and managing Prisma Access Remote Network and Service Connection configurations within Strata Cloud Manager.
  termsOfService: 'https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/legal/palo-alto-networks-end-user-license-agreement-eula.pdf'
  contact:
    email: support@paloaltonetworks.com
    name: Palo Alto Networks Technical Support
    url: 'https://support.paloaltonetworks.com'
  license:
    name: MIT
    url: https://opensource.org/license/mit
servers:
  - url: 'https://api.strata.paloaltonetworks.com/config/deployment/v1'
    description: Current
  - url: 'https://api.sase.paloaltonetworks.com/sse/config/v1'
    description: Legacy
tags:
  - name: Application Defaults
    description: Prisma Access tenant initialization
  - name: Bandwidth Allocations
    description: Bandwidth allocations for Remote Networks
  - name: BGP Routing
    description: BGP routing for Service Connections
  - name: Internal DNS Servers
    description: Internal DNS servers
  - name: Network Locations
    description: Prisma Access locations
  - name: Remote Networks
    description: Remote Networks
  - name: Service Connection Groups
    description: Service Connection groups
  - name: Service Connections
    description: Service Connections
  - name: Shared Infrastructure Settings
    description: Shared infrastructure settings
  - name: Sites
    description: Sites
  - name: Traffic Steering Rules
    description: Traffic steering rules for Service Connections
paths:
  /bandwidth-allocations:
    get:
      tags:
        - Bandwidth Allocations
      summary: List bandwidth regions
      description: |
        Retrieve a list of bandwidth regions.
      operationId: ListBandwidthAllocations
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/bandwidth-allocations'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Bandwidth Allocations
      summary: Create a bandwidth allocation
      description: |
        Create a new bandwidth allocation.
      operationId: CreateBandwidthAllocations
      requestBody:
        description: The `bandwidth-allocations` resource definition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bandwidth-allocations'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Bandwidth Allocations
      summary: Update a bandwidth allocation
      description: |
        Update an existing bandwidth allocation.
      operationId: UpdateBandwidthAllocations
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bandwidth-allocations'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Bandwidth Allocations
      summary: Delete a bandwidth allocation
      description: |
        Delete a bandwidth allocation.
      operationId: DeleteBandwidthAllocations
      parameters:
        - $ref: '#/components/parameters/aggregated-bandwidth-region-name-required'
        - $ref: '#/components/parameters/aggregated-bandwidth-spn-name-list-required'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /bgp-routing:
    get:
      tags:
        - BGP Routing
      summary: Get BGP routing settings
      description: |
        Get Service Connection BGP routing settings.
      operationId: GetBGPRouting
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bgp-routing'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - BGP Routing
      summary: Update BGP routing settings
      description: |
        Update Service Connection BGP routing settings.
      operationId: UpdateBGPRouting
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bgp-routing'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /enable:
    post:
      tags:
        - Application Defaults
      summary: Create application defaults
      description: |
        Create Prisma Access application defaults.

        *These application defaults are normally created in the UI. This endpoint is necessary for customers that do not use the UI to create these application defaults such as certificates and configuration nodes.  This endpoint will be deprecated once the UI dependencies have been eliminated.*
      operationId: CreateApplicationDefaults
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /internal-dns-servers:
    get:
      tags:
        - Internal DNS Servers
      summary: List internal DNS servers
      description: |
        Retrieve a list of internal DNS servers.
      operationId: ListInternalDNSServers
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/internal-dns-servers'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Internal DNS Servers
      summary: Create a internal DNS server
      description: |
        Create a new internal DNS server.
      operationId: CreateInternalDNSServers
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/internal-dns-servers'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/internal-dns-servers/{id}':
    get:
      tags:
        - Internal DNS Servers
      summary: Get an internal DNS server
      description: |
        Get an existing internal DNS server.
      operationId: GetInternalDNSServersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-dns-servers'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Internal DNS Servers
      summary: Update an internal DNS server
      description: |
        Update an existing internal dns server.
      operationId: UpdateInternalDNSServersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/internal-dns-servers'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Internal DNS Servers
      summary: Delete an internal DNS server
      description: |
        Delete an internal DNS server.
      operationId: DeleteInternalDNSServersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /locations:
    get:
      tags:
        - Network Locations
      summary: List locations
      description: |
        Retrieve a list of Prisma Access locations.
      operationId: ListLocations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/locations'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /remote-networks:
    get:
      tags:
        - Remote Networks
      summary: List remote networks
      description: |
        Retrieve a list of remote networks.
      operationId: ListRemoteNetworks
      parameters:
        - $ref: '#/components/parameters/folder-remotenetworks'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/remote-networks'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Remote Networks
      summary: Create a remote network
      description: |
        Create a new remote network.
      operationId: CreateRemoteNetworks
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/remote-networks'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/remote-networks/{id}':
    get:
      tags:
        - Remote Networks
      summary: Get a remote network
      description: |
        Get an existing remote network.
      operationId: GetRemoteNetworksByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/remote-networks'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Remote Networks
      summary: Update a remote network
      description: |
        Update an existing remote network.
      operationId: UpdateRemoteNetworksByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/remote-networks'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Remote Networks
      summary: Delete a remote network
      description: |
        Delete a remote network.
      operationId: DeleteRemoteNetworksByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /service-connections:
    get:
      tags:
        - Service Connections
      summary: List service connections
      description: |
        Retrieve a list of service connections.
      operationId: ListServiceConnections
      parameters:
        - $ref: '#/components/parameters/folder-serviceconnections'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/service-connections'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Service Connections
      summary: Create a service connection
      description: |
        Create a new service connection.
      operationId: CreateServiceConnections
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service-connections'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/service-connections/{id}':
    get:
      tags:
        - Service Connections
      summary: Get a service connection
      description: |
        Get an existing service connection.
      operationId: GetServiceConnectionsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-connections'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Service Connections
      summary: Update a service connection
      description: |
        Update an existing service connection.
      operationId: UpdateServiceConnectionsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service-connections'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Service Connections
      summary: Delete a service connection
      description: |
        Delete a service connection.
      operationId: DeleteServiceConnectionsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /service-connection-groups:
    get:
      tags:
        - Service Connection Groups
      summary: List service connection groups
      description: |
        Retrieve a list of service connection groups.
      operationId: ListServiceConnectionGroups
      parameters:
        - $ref: '#/components/parameters/folder-serviceconnections'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/service-connection-groups'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Service Connection Groups
      summary: Create a service connection group
      description: |
        Create a new service connection group.
      operationId: CreateServiceConnectionGroups
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service-connection-groups'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/service-connection-groups/{id}':
    get:
      tags:
        - Service Connection Groups
      summary: Get a service connection group
      description: |
        Get an existing service connection group.
      operationId: GetServiceConnectionGroupsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-connection-groups'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Service Connection Groups
      summary: Update a service connection group
      description: |
        Update an existing service connection group.
      operationId: UpdateServiceConnectionGroupsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service-connection-groups'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Service Connection Groups
      summary: Delete a service connection group
      description: |
        Delete a service connection group.
      operationId: DeleteServiceConnectionGroupsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /shared-infrastructure-settings:
    get:
      tags:
        - Shared Infrastructure Settings
      summary: Get shared infrastructure settings
      description: |
        Get the Prisma Access shared infrastructure settings.
      operationId: GetSharedInfrastructureSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shared-infrastructure-settings'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Shared Infrastructure Settings
      summary: Update infrastructure settings
      description: |
        Update the Prisma Access shared infrastructure settings.
      operationId: UpdateSharedInfrastructureSettings
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edit-shared-infrastructure-settings'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /traffic-steering-rules:
    get:
      tags:
        - Traffic Steering Rules
      summary: List traffic steering rules
      description: |
        Retrieve a list of Service Connection traffic steering rules.
      operationId: ListTrafficSteeringRules
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder-serviceconnections'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/traffic-steering-rules'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Traffic Steering Rules
      summary: Create a traffic steering rule
      description: |
        Create a new Service Connection traffic steering rule.
      operationId: CreateTrafficSteeringRules
      parameters:
        - $ref: '#/components/parameters/folder-serviceconnections'
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/traffic-steering-rules'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/traffic-steering-rules/{id}':
    get:
      tags:
        - Traffic Steering Rules
      summary: Get a traffic steering rule
      description: |
        Get an existing Service Connection traffic steering rule.
      operationId: GetTrafficSteeringRulesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/traffic-steering-rules'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Traffic Steering Rules
      summary: Update a traffic steering rule
      description: |
        Update an existing Service Connection traffic steering rule.
      operationId: UpdateTrafficSteeringRulesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/traffic-steering-rules'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Traffic Steering Rules
      summary: Delete a traffic steering rule
      description: |
        Delete a Service Connection traffic steering rule.
      operationId: DeleteTrafficSteeringRulesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /sites:
    get:
      tags:
        - Sites
      summary: List sites
      description: Retrieve a list of sites.
      operationId: ListSites
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder-remotenetworks'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/sites'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Sites
      summary: Create a site
      description: Create a new sites.
      operationId: CreateSites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sites'
        description: The site you want to create
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sites'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /sites/{id}:
    get:
      tags:
        - Sites
      summary: Get a site
      description: |
        Get an existing site.
      operationId: GetSitesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sites'
          description: Get a site's details by sdwan-site-id.
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Sites
      summary: Update a site
      description: |
        Update an existing site.
      operationId: UpdateSitesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sites'
        description: The site you want to edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sites'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Sites
      summary: Delete a site
      description: |
        Delete a site.
      operationId: DeleteSitesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sites'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
components:
  securitySchemes:
    scmOAuth:
      type: oauth2
      description: |
        Strata Cloud Manager APIs authenticate client requests using the 
        OAuth 2.0 Client Credentials flow.  Please use the `client_id`, 
        `client_secret` values associated with an IAM service account along 
        with a scope value of `tsg_id:XXXXXXXXXX`, where `XXXXXXXXXX` is the 
        Tenant Service Group (TSG) ID.  The resulting JWT access token should 
        be attached to all API calls as a `Bearer` token in the `Authorization` 
        header (ex. `Authorization: Bearer tokenstring`).
      flows: 
        clientCredentials:
          tokenUrl: https://auth.apps.paloaltonetworks.com/oauth2/access_token
          scopes: {}
    scmToken:
      type: http
      description: |
        Strata Cloud Manager APIs authenticate client requests using the 
        OAuth 2.0 Client Credentials flow.  Please use the `client_id`, 
        `client_secret` values associated with an IAM service account along 
        with a scope value of `tsg_id:XXXXXXXXXX`, where `XXXXXXXXXX` is the 
        Tenant Service Group (TSG) ID.  The resulting JWT access token should 
        be attached to all API calls as a `Bearer` token in the `Authorization` 
        header (ex. `Authorization: Bearer tokenstring`).
      scheme: bearer
      bearerFormat: JWT
  parameters:
    name:
      name: name
      in: query
      description: The name of the configuration resource
      required: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: The maximum number of results per page
      required: false
      schema:
        type: number
        default: 200
    offset:
      name: offset
      in: query
      description: The offset into the list of results returned
      required: false
      schema:
        type: number
        default: 0
    folder-remotenetworks:
      name: folder
      in: query
      description: |
        The folder in which the resource is defined
      required: true
      schema:
        enum:
          - Remote Networks
        pattern: '^[0-9a-zA-Z._-\s]{1,}$'
        default: Remote Networks
    folder-serviceconnections:
      name: folder
      in: query
      description: |
        The folder in which the resource is defined
      required: true
      schema:
        enum:
          - Service Connections
        pattern: '^[0-9a-zA-Z._-\s]{1,}$'
        default: Service Connections
    aggregated-bandwidth-region-name-required:
      name: name
      in: query
      description: The name of the aggregated bandwidth region
      required: true
      schema:
        type: string
    aggregated-bandwidth-spn-name-list-required:
      name: spn_name_list
      in: query
      description: Comma separated of the spn_name_list name per region
      required: true
      schema:
        type: string
    uuid:
      name: id
      in: path
      description: The UUID of the configuration resource
      required: true
      schema:
        type: string
  responses:
    http_ok:
      description: OK
    http_created:
      description: Created
    auth_errors:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            auth_not_authenticated:
              $ref: '#/components/examples/json_401_panui_auth_not_authenticated'
            invalid_credential:
              $ref: '#/components/examples/json_401_panui_auth_invalid_credential'
            key_too_long:
              $ref: '#/components/examples/json_401_panui_auth_key_too_long'
            key_expired:
              $ref: '#/components/examples/json_401_panui_auth_key_expired'
            need_password_change:
              $ref: '#/components/examples/json_401_panui_auth_need_password_change'
    access_errors:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            auth_unauthorized:
              $ref: '#/components/examples/json_403_panui_auth_unauthorized'
    bad_request_errors_basic:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            input_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_input_format_mismatch'
            output_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_output_format_mismatch'
            missing_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_missing_query_parameter'
            invalid_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_invalid_query_parameter'
    bad_request_errors_basic_with_body:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            input_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_input_format_mismatch'
            output_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_output_format_mismatch'
            missing_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_missing_query_parameter'
            invalid_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_invalid_query_parameter'
            missing_body:
              $ref: '#/components/examples/json_400_panui_restapi_missing_body'
            invalid_object:
              $ref: '#/components/examples/json_400_panui_mgmt_invalid_object'
    not_found:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            object_not_present:
              $ref: '#/components/examples/json_404_panui_mgmt_object_not_present'
    conflict_errors:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            object_not_unique:
              $ref: '#/components/examples/json_409_panui_mgmt_object_not_unique'
            name_not_unique:
              $ref: '#/components/examples/json_409_panui_mgmt_name_not_unique'
            reference_not_zero:
              $ref: '#/components/examples/json_409_panui_mgmt_reference_not_zero'
    default_errors:
      description: General Errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            version_not_supported:
              $ref: '#/components/examples/json_501_panui_restapi_version_not_supported'
            method_not_allowed:
              $ref: '#/components/examples/json_501_panui_restapi_method_not_supported'
            action_not_supported:
              $ref: '#/components/examples/json_405_panui_restapi_action_not_supported'
            bad_xpath:
              $ref: '#/components/examples/json_400_panui_mgmt_bad_xpath'
            invalid_command:
              $ref: '#/components/examples/json_400_panui_mgmt_invalid_command'
            malformed_command:
              $ref: '#/components/examples/json_400_panui_mgmt_malformed_command'
            session_timeout:
              $ref: '#/components/examples/json_504_panui_mgmt_session_timeout'
  examples:
    json_401_panui_auth_not_authenticated:
      summary: Not Authenticated
      value:
        _errors:
          - code: E016
            message: Not Authenticated
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_401_panui_auth_invalid_credential:
      summary: Invalid Credential
      value:
        _errors:
          - code: E016
            message: Invalid Credential
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_401_panui_auth_key_too_long:
      summary: Key Too Long
      value:
        _errors:
          - code: E016
            message: Key Too Long
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_401_panui_auth_key_expired:
      summary: Key Expired
      value:
        _errors:
          - code: E016
            message: Key Expired
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_401_panui_auth_need_password_change:
      summary: Need Password Change
      value:
        _errors:
          - code: E016
            message: The password needs to be changed.
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_403_panui_auth_unauthorized:
      summary: Unauthorized
      value:
        _errors:
          - code: E007
            message: Unauthorized
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_501_panui_restapi_version_not_supported:
      summary: Version Not Supported
      value:
        _errors:
          - code: E012
            message: Version Not Supported
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_501_panui_restapi_method_not_supported:
      summary: Method Not Supported
      value:
        _errors:
          - code: E012
            message: Method Not Supported
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_input_format_mismatch:
      summary: Input Format Mismatch
      value:
        _errors:
          - code: E003
            message: 'Input Format Mismatch: input-format=json'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_output_format_mismatch:
      summary: Output Format Mismatch
      value:
        _errors:
          - code: E003
            message: 'Output Format Mismatch: output-format=json Accept=xml'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_missing_query_parameter:
      summary: Missing Query Parameter
      value:
        _errors:
          - code: E003
            message: 'Missing Query Parameter: name'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_invalid_query_parameter:
      summary: Invalid Query Parameter
      value:
        _errors:
          - code: E003
            message: 'Invalid Query Parameter: location=invalid'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_missing_body:
      summary: Missing Body
      value:
        _errors:
          - code: E003
            message: Missing Body
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_405_panui_restapi_action_not_supported:
      summary: Action Not Supported
      value:
        _errors:
          - code: E012
            message: 'Action Not Supported: move'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_mgmt_bad_xpath:
      summary: Bad XPath
      value:
        _errors:
          - code: E013
            message: Bad XPath
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_404_panui_mgmt_object_not_present:
      summary: Object Not Present
      value:
        _errors:
          - code: E005
            message: Object Not Present
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_409_panui_mgmt_object_not_unique:
      summary: Object Not Unique
      value:
        _errors:
          - code: E016
            message: Object Not Unique
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_409_panui_mgmt_name_not_unique:
      summary: Name Not Unique
      value:
        _errors:
          - code: E006
            message: Name Not Unique
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_409_panui_mgmt_reference_not_zero:
      summary: Reference Not Zero
      value:
        _errors:
          - code: E009
            message: Reference Not Zero
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_mgmt_invalid_object:
      summary: Invalid Object
      value:
        _errors:
          - code: E003
            message: Invalid Object
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000

    json_400_panui_mgmt_invalid_command:
      summary: Invalid Command
      value:
        _errors:
          - code: E003
            message: Invalid Command
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_mgmt_malformed_command:
      summary: Malformed Command
      value:
        _errors:
          - code: E003
            message: Malformed Command
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_504_panui_mgmt_session_timeout:
      summary: Session Timeout
      value:
        _errors:
          - code: '4'
            message: Session Timeout
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
  schemas:
    bandwidth-allocations:
      type: object
      properties:
        name:
          type: string
          description: name of the aggregated bandwidth region
        allocated_bandwidth:
          type: number
          description: bandwidth to allocate in Mbps
        spn_name_list:
          type: array
          items:
            type: string
        qos:
          type: object
          properties:
            enabled:
              type: boolean
            customized:
              type: boolean
            profile:
              type: string
            guaranteed_ratio:
              type: number
      required:
        - name
        - allocated_bandwidth
    bgp-routing:
      type: object
      properties:
        routing_preference:
          type: object
          oneOf:
            - type: object
              title: default
              properties:
                default:
                  type: object
            - type: object
              title: hot_potato_routing
              properties:
                hot_potato_routing:
                  type: object
        backbone_routing:
          enum:
            - no-asymmetric-routing
            - asymmetric-routing-only
            - asymmetric-routing-with-load-share
        accept_route_over_SC:
          type: boolean
        outbound_routes_for_services:
          type: array
          items:
            type: string
        add_host_route_to_ike_peer:
          type: boolean
        withdraw_static_route:
          type: boolean
    internal-dns-servers:
      type: object
      properties:
        id:
          type: string
          description: The UUID of the internet DNS server resource
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the internet DNS server resource
        domain_name:
          type: array
          items:
            type: string
          description: The DNS domain name(s)
        primary:
          type: string
          format: ipv4
          description: The IP address of the primary DNS server
        secondary:
          type: string
          format: ipv4
          description: The IP address of the secondary DNS server
      required:
        - id
        - name
        - domain_name
        - primary
    locations:
      type: object
      properties:
        value:
          type: string
          example: us-west-1
        display:
          type: string
          example: US West
          description: The location as displayed in the Strata Cloud Manager portal
        continent:
          type: string
          example: North America
          description: The continent in which the location exists
        latitude:
          type: number
          format: float
          minimum: -90
          maximum: 90
          example: 37.38314
          description: The latitudinal position of the location
        longitude:
          type: number
          format: float
          minimum: -180
          maximum: 180
          example: -121.98306
          description: The longitudinal position of the location
        region:
          type: string
          example: us-west-1
        aggregate_region:
          type: string
          example: us-southwest
    remote-networks:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The UUID of the remote network
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the remote network
          maxLength: 63
        folder:
          type: string
          description: The folder that contains the remote network
          default: Remote Networks
        ipsec_tunnel:
          type: string
          description: ipsec_tunnel is required when ecmp_load_balancing is disable
        secondary_ipsec_tunnel:
          type: string
          description: specify secondary ipsec_tunnel if needed
        license_type:
          type: string
          description: New customer will only be on aggregate bandwidth licensing
          minLength: 1
          default: FWAAS-AGGREGATE
        connection_type:
          type: string
          description: The connection type for the remote network
          default: prisma-access
          enum:
            - prisma-access
            - meraki
            - cisco-catalyst-sdwan
            - velocloud
            - prisma-sdwan
        region:
          type: string
          minLength: 1
        subnets:
          type: array
          items:
            type: string
        protocol:
          type: object
          description: setup the protocol when ecmp_load_balancing is disable
          properties:
            bgp:
              $ref: '#/components/schemas/remote-networks-protocol-bgp'
            bgp_peer:
              type: object
              description: secondary bgp routing as bgp_peer
              properties:
                same_as_primary:
                  description: If true, the secondary BGP peer configuration will be the same as the primary BGP peer.
                  type: boolean
                  default: true
                peer_ip_address:
                  description: Remote peer IP address (secondary WAN)
                  type: string
                local_ip_address:
                  description: Local peer IP address (secondary WAN)
                  type: string
                secret:
                  description: BGP peering secret (secondary WAN)
                  type: string
                  format: password
        spn_name:
          type: string
          description: spn-name is needed when license_type is FWAAS-AGGREGATE
        ecmp_load_balancing:
          type: string
          enum:
            - enable
            - disable
          default: disable
        ecmp_tunnels:
          type: array
          description: ecmp_tunnels is required when ecmp_load_balancing is enable
          items:
            maxItems: 4
            type: object
            properties:
              name:
                type: string
              ipsec_tunnel:
                type: string
              protocol:
                type: object
                properties:
                  bgp:
                    $ref: '#/components/schemas/remote-networks-protocol-bgp'
            required:
              - name
              - ipsec_tunnel
              - protocol
      required:
        - id
        - name
        - folder
        - license_type
        - region
    remote-networks-protocol-bgp:
      type: object
      properties:
        enable:
          description: Enable BGP peering?
          type: boolean
        summarize_mobile_user_routes:
          description: Summarize mobile user routes?
          type: boolean
        originate_default_route:
          description: Originate default route?
          type: boolean
        do_not_export_routes:
          description: Do not export routes?
          type: boolean
        peer_ip_address:
          description: Remote peer IP address
          type: string
        peer_as:
          description: BGP peer ASN
          type: string
        local_ip_address:
          description: Local peer IP address
          type: string
        secret:
          description: BGP peering secret
          type: string
          format: password
        peering_type:
          description: Route exchange types
          type: string
          enum:
            - exchange-v4-over-v4
            - exchange-v4-v6-over-v4
            - exchange-v4-over-v4-v6-over-v6
            - exchange-v6-over-v6
    service-connections:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The UUID of the service connection
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the service connection
        folder:
          type: string
          description: The folder containing the service connection
          default: Service Connections
        ipsec_tunnel:
          type: string
        onboarding_type:
          enum:
            - classic
          default: classic
        region:
          type: string
        backup_SC:
          type: string
        bgp_peer:
          type: object
          properties:
            local_ip_address:
              type: string
            local_ipv6_address:
              type: string
            peer_ip_address:
              type: string
            peer_ipv6_address:
              type: string
            secret:
              type: string
              format: password
        nat_pool:
          type: string
        no_export_community:
          enum:
            - Disabled
            - Enabled-In
            - Enabled-Out
            - Enabled-Both
        protocol:
          type: object
          properties:
            bgp:
              type: object
              properties:
                do_not_export_routes:
                  type: boolean
                enable:
                  type: boolean
                fast_failover:
                  type: boolean
                local_ip_address:
                  type: string
                originate_default_route:
                  type: boolean
                peer_as:
                  type: string
                peer_ip_address:
                  type: string
                secret:
                  type: string
                  format: password
                summarize_mobile_user_routes:
                  type: boolean
        qos:
          type: object
          properties:
            enable:
              type: boolean
            qos_profile:
              type: string
        secondary_ipsec_tunnel:
          type: string
        source_nat:
          type: boolean
        subnets:
          type: array
          items:
            type: string
      required:
        - id
        - name
        - folder
        - ipsec_tunnel
        - region
    service-connection-groups:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The UUID of the service connection group
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
        folder:
          type: string
          description: The folder containing the service connection group
          default: Service Connections
        disable_snat:
          type: boolean
        pbf_only:
          type: boolean
        target:
          type: array
          items:
            type: string
      required:
        - id
        - name
        - folder
        - target
    shared-infrastructure-settings:
      type: object
      properties:
        folder:
          type: string
          description: The folder containing the shared infrastructure settings
          default: Shared
          readOnly: true
        infra_bgp_as:
          type: string
        infrastructure_subnet:
          type: string
        ipv6:
          type: boolean
        infrastructure_subnet_ipv6:
          type: string
        tunnel_monitor_ip_address:
          type: string
        captive_portal_redirect_ip_address:
          type: string
        loopback_ips:
          type: array
          items:
            type: string
        egress_ip_notification_url:
          type: string
        api_key:
          type: string
    edit-shared-infrastructure-settings:
      type: object
      properties:
        infrastructure_subnet:
          type: string
        infrastructure_subnet_ipv6:
          type: string
        infra_bgp_as:
          type: string
        egress_ip_notification_url:
          type: string
    traffic-steering-rules:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The UUID of the traffic steering rule
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
        folder:
          type: string
          description: The folder containing the traffic steering rule
          default: Service Connections
        action:
          type: object
          oneOf:
            - type: object
              title: forward
              properties:
                forward:
                  type: object
                  properties:
                    target:
                      type: string
                no-pbf:
                  type: object
        category:
          type: array
          items:
            type: string
        destination:
          type: array
          default:
            - any
          items:
            type: string
        service:
          type: array
          default:
            - any
          items:
            type: string
        source:
          type: array
          default:
            - any
          items:
            type: string
        source_user:
          type: array
          default:
            - any
          items:
            type: string
      required:
        - id
        - name
        - folder
        - service
        - source
    sites:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          description: The UUID of the site
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the site
          maxLength: 63
          example: Bengaluru
        type:
          type: string
          description: The site type
          enum:
            - prisma-sdwan
            - third-party-branch
            - third-party-discovered
        members:
          type: array
          items:
            type: object
            required: 
              - name
              - mode
            properties:
              name:
                type: string
                description: The member name
                example: Connection A
              remote_network:
                type: string
                description: The remote network name
                example: Connection A
              mode:
                type: string
                description: The mode of the remote network
                enum:
                  - active
                  - backup
              id:
                type: string
                description: UUID of the remote network
                example: e51fa715-3da5-4f98-bb78-eb56757e7719
        country:
          type: string
          example: India
          description: The country in which the site exists
        city:
          type: string
          example: Bengaluru
          description: The city in which the site exists
        state:
          type: string
          example: Karnataka
          description: The state in which the site exists
        address_line_1:
          type: string
          description: The address in which the site exists
          example: 2nd Floor, Quay Building, Bagmane Tech Park
        address_line_2:
          type: string
          description: The address in which the site exists (continued)
          example: C V Raman Nagar
        latitude:
          type: number
          example: 12.978150
          description: The latitude coordinate for the site
        longitude:
          type: number
          example: 77.665340
          description: The longitude coordinate for the site 
        zip_code:
          type: string
          example: '560093'
          description: The postal code in which the site exists
        license_type:
          type: string
          example: 'FWAAS-SITE-1000Mbps'
          description: The license type for the site
        enable_adem:
          type: boolean
          example: true
          description: Whether ADEM is enabled for the site
        qos:
          type: object
          properties:
            profile:
              type: string
              description: The name of the site QoS profile
              example: VoIP
            cir:
              type: number
              example: 10
              description: The CIR in Mbps. This is distributed equally for all tunnels in the site.
            backup_cir:
              type: number
              example: 10
              description: The backup CIR in Mbps. This is distributed equally for all tunnels in the site.
    generic_error:
      type: object
      properties:
        _errors:
          $ref: '#/components/schemas/error_detail_cause_infos'
        _request_id:
          type: string
      x-examples: {}
    error_detail_cause_infos:
      type: array
      items:
        $ref: '#/components/schemas/error_detail_cause_info'
      x-examples: {}
    error_detail_cause_info:
      type: object
      title: Cause Info
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
        help:
          type: string
security:
  - scmToken: []
x-internal: false
