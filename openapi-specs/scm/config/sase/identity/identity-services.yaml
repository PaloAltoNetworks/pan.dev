openapi: 3.0.0
info:
  version: 2.0.0
  title: Identity Services
  description: These APIs are used for defining and managing identity services configurations within Strata Cloud Manager.
  termsOfService: 'https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/legal/palo-alto-networks-end-user-license-agreement-eula.pdf'
  contact:
    email: support@paloaltonetworks.com
    name: Palo Alto Networks Technical Support
    url: 'https://support.paloaltonetworks.com'
  license:
    name: MIT
    url: https://opensource.org/license/mit
servers:
  - url: 'https://api.strata.paloaltonetworks.com/config/identity/v1'
    description: Current
  - url: 'https://api.sase.paloaltonetworks.com/sse/config/v1'
    description: Legacy
tags:
  - name: Authentication Portals
    description: Authentication Portals
  - name: Authentication Profiles
    description: Authentication Profiles
  - name: Authentication Rules
    description: Authentication Rules
  - name: Authentication Sequences
    description: Authentication Sequences
  - name: Certificate Profiles
    description: Certificate Profiles
  - name: Certificates
    description: Certificate management
  - name: Kerberos Server Profiles
    description: Kerberos Server Profiles
  - name: LDAP Server Profiles
    description: LDAP Server Profiles
  - name: Local User Groups
    description: Local User Groups
  - name: Local Users
    description: Local Users
  - name: MFA Servers
    description: MFA Servers
  - name: OCSP Responders
    description: OCSP Responders
  - name: RADIUS Server Profiles
    description: RADIUS Server Profiles
  - name: SAML Server Profiles
    description: SAML Server Profiles
  - name: SCEP Profiles
    description: SCEP Profiles
  - name: TACACS Server Profiles
    description: TACACS Server Profiles
  - name: TLS Service Profiles
    description: TLS Service Profiles
  - name: Trusted Certificate Authorities
    description: Trusted Certificate Authorities
paths:
  /authentication-rules:
    get:
      tags:
        - Authentication Rules
      summary: List authentication rules
      description: |
        Retrieve a list of authentication rules.
      operationId: ListAuthenticationRules
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/position'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/authentication-rules'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Authentication Rules
      summary: Create an authentication rule
      description: |
        Create a new authentication rule.
      operationId: CreateAuthenticationRules
      parameters:
        - $ref: '#/components/parameters/position'
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication-rules'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/authentication-rules/{id}':
    get:
      tags:
        - Authentication Rules
      summary: Get an authentication rule
      description: |
        Get an existing authentication rule.
      operationId: GetAuthenticationRulesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-rules'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Authentication Rules
      summary: Update an authentication rule
      description: |
        Update an existing authentication rule.
      operationId: UpdateAuthenticationRulesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication-rules'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Authentication Rules
      summary: Delete an authentication rule
      description: |
        Delete an authentication rule.
      operationId: DeleteAuthenticationRulesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/authentication-rules/{id}:move':
    post:
      tags:
        - Authentication Rules
      summary: Move an authentication rule
      description: |
        Move an existing authentication rule.
      operationId: MoveAuthenticationRulesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rule-based-move'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /authentication-portals:
    get:
      tags:
        - Authentication Portals
      summary: List authentication portals
      description: |
        Retreive a list of authentication portals.
      operationId: ListAuthenticationPortals
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/authentication-portals'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Authentication Portals
      summary: Create an authentication portal
      description: |
        Create a new authentication portal.
      operationId: CreateAuthenticationPortals
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication-portals'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/authentication-portals/{id}':
    get:
      tags:
        - Authentication Portals
      summary: Get an authentication portal
      description: |
        Get an existing authentication portal.
      operationId: GetAuthenticationPortalsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-portals'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Authentication Portals
      summary: Update an authentication portal
      description: |
        Update an existing authentication portal.
      operationId: UpdateAuthenticationPortalsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication-portals'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Authentication Portals
      summary: Delete an authentication portal
      description: |
        Delete an authentication portal.
      operationId: DeleteAuthenticationPortalsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /authentication-profiles:
    get:
      tags:
        - Authentication Profiles
      summary: List authentication profiles
      description: |
        Retrieve a list of authentication profiles.
      operationId: ListAuthenticationProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/authentication-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Authentication Profiles
      summary: Create an authentication profile
      description: |
        Create an authentication profile.
      operationId: CreateAuthenticationProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/authentication-profiles/{id}':
    get:
      tags:
        - Authentication Profiles
      summary: Get an authentication profile
      description: |
        Get an existing authentication profile.
      operationId: GetAuthenticationProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Authentication Profiles
      summary: Update an authentication profile
      description: |
        Update an existing authentication profile.
      operationId: UpdateAuthenticationProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Authentication Profiles
      summary: Delete an authentication profile
      description: |
        Delete an authentication profile.
      operationId: DeleteAuthenticationProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /local-users:
    get:
      tags:
        - Local Users
      summary: List local users
      description: |
        Retrieve a list of local users.
      operationId: ListLocalUsers
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/local-users'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Local Users
      summary: Create a local user
      description: |
        Create a new local user.
      operationId: CreateLocalUsers
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/local-users'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/local-users/{id}':
    get:
      tags:
        - Local Users
      summary: Get a local user
      description: |
        Get an existing local user.
      operationId: GetLocalUsersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-users'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Local Users
      summary: Update a local user
      description: |
        Update an existing local user.
      operationId: UpdateLocalUsersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/local-users'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Local Users
      summary: Delete a local user
      description: |
        Delete a local user.
      operationId: DeleteLocalUsersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /local-user-groups:
    get:
      tags:
        - Local User Groups
      summary: List local user groups
      description: |
        Retrieve a list of local user groups.
      operationId: ListLocalUserGroups
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/local-user-groups'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Local User Groups
      summary: Create a local user group
      description: |
        Create a new local user group.
      operationId: CreateLocalUserGroups
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/local-user-groups'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/local-user-groups/{id}':
    get:
      tags:
        - Local User Groups
      summary: Get a local user group
      description: |
        Get an existing local user group.
      operationId: GetLocalUserGroupsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-user-groups'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Local User Groups
      summary: Update a local user group
      description: |
        Update an existing local user group.
      operationId: UpdateLocalUserGroupsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/local-user-groups'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Local User Groups
      summary: Delete a local user group
      description: |
        Delete a local user group.
      operationId: DeleteLocalUserGroupsByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /saml-server-profiles:
    get:
      tags:
        - SAML Server Profiles
      summary: List SAML server profiles
      description: |
        Retrieve a list of SAML server profiles.
      operationId: ListSAMLServerProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/saml-server-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - SAML Server Profiles
      summary: Create a SAML server profile
      description: |
        Create a new SAML server profile.
      operationId: CreateSAMLServerProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/saml-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/saml-server-profiles/{id}':
    get:
      tags:
        - SAML Server Profiles
      summary: Get a SAML server profile
      description: |
        Get an existing SAML server profile.
      operationId: GetSAMLServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/saml-server-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - SAML Server Profiles
      summary: Update a SAML server profile
      description: |
        Update an existing SAML server profile.
      operationId: UpdateSAMLServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/saml-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - SAML Server Profiles
      summary: Delete a SAML server profile
      description: |
        Delete a SAML server profile.
      operationId: DeleteSAMLServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /ldap-server-profiles:
    get:
      tags:
        - LDAP Server Profiles
      summary: List LDAP server profiles
      description: |
        Retrieve a list of LDAP server profiles.
      operationId: ListLDAPServerProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/ldap-server-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - LDAP Server Profiles
      summary: Create an LDAP server profile
      description: |
        Create a new LDAP server profile.
      operationId: CreateLDAPServerProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ldap-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/ldap-server-profiles/{id}':
    get:
      tags:
        - LDAP Server Profiles
      summary: Get an LDAP server profile
      description: |
        Get an existing LDAP server profile.
      operationId: GetLDAPServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ldap-server-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - LDAP Server Profiles
      summary: Update an LDAP server profile
      description: |
        Update an existing LDAP server profile.
      operationId: UpdateLDAPServerProfiles
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ldap-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - LDAP Server Profiles
      summary: Delete an LDAP server profile
      description: |
        Delete a LDAP server profile.
      operationId: DeleteLDAPServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /radius-server-profiles:
    get:
      tags:
        - RADIUS Server Profiles
      summary: List RADIUS server profiles
      description: |
        Retreive a list of RADIUS server profiles.
      operationId: ListRADIUSServerProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/radius-server-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - RADIUS Server Profiles
      summary: Create a RADIUS server profile
      description: |
        Create a new RADIUS server profile.
      operationId: CreateRADIUSServerProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/radius-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/radius-server-profiles/{id}':
    get:
      tags:
        - RADIUS Server Profiles
      summary: Get a RADIUS server profile
      description: |
        Get an existing RADIUS server profile.
      operationId: GetRADIUSServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/radius-server-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - RADIUS Server Profiles
      summary: Update a RADIUS server profile
      description: |
        Update an existing RADIUS server profile.
      operationId: UpdateRADIUSServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/radius-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - RADIUS Server Profiles
      summary: Delete a RADIUS server profile
      description: |
        Delete a RADIUS server profile.
      operationId: DeleteRADIUSServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /tacacs-server-profiles:
    get:
      tags:
        - TACACS Server Profiles
      summary: List TACACS server profiles
      description: |
        Retrieve a list of TACACS server profiles.
      operationId: ListTACACSServerProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/tacacs-server-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - TACACS Server Profiles
      summary: Create a TACACS server profile
      description: |
        Create a new TACACS server profile.
      operationId: CreateTACACSServerProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tacacs-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/tacacs-server-profiles/{id}':
    get:
      tags:
        - TACACS Server Profiles
      summary: Get a TACACS server profile
      description: |
        Get an existing TACACS server profile.
      operationId: GetTACACSServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tacacs-server-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - TACACS Server Profiles
      summary: Update a TACACS server profile
      description: |
        Update an existing TACACS server profile.
      operationId: UpdateTACACSServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tacacs-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - TACACS Server Profiles
      summary: Delete a TACACS server profile
      description: |
        Delete a TACACS server profile.
      operationId: DeleteTACACSServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /kerberos-server-profiles:
    get:
      tags:
        - Kerberos Server Profiles
      summary: List Kerberos server profiles
      description: |
        Retrieve a list of Kerberos server profiles.
      operationId: ListKerberosServerProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/kerberos-server-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Kerberos Server Profiles
      summary: Create a Kerberos server profile
      description: |
        Create a new Kerberos server profile.
      operationId: CreateKerberosServerProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/kerberos-server-profiles/{id}':
    get:
      tags:
        - Kerberos Server Profiles
      summary: Get a Kerberos server profile
      description: |
        Get an existing Kerberos server profile.
      operationId: GetKerberosServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kerberos-server-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Kerberos Server Profiles
      summary: Update a Kerberos server profile
      description: |
        Update an existing Kerberos server profile.
      operationId: UpdateKerberosServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos-server-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Kerberos Server Profiles
      summary: Delete a Kerberos server profile
      description: |
        Delete a Kerberos server profile.
      operationId: DeleteKerberosServerProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /authentication-sequences:
    get:
      tags:
        - Authentication Sequences
      summary: List authentication sequences
      description: |
        Retrieve a list of authentication sequences.
      operationId: ListAuthenticationSequences
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/authentication-sequences'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Authentication Sequences
      summary: Create an authentication sequence
      description: |
        Create a new authentication sequence.
      operationId: CreateAuthenticationSequences
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication-sequences'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/authentication-sequences/{id}':
    get:
      tags:
        - Authentication Sequences
      summary: Get an authentication sequence
      description: |
        Get an existing authentication sequence.
      operationId: GetAuthenticationSequencesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-sequences'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Authentication Sequences
      summary: Update an authentication sequence
      description: |
        Update an existing authentication sequence.
      operationId: UpdateAuthenticationSequencesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication-sequences'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Authentication Sequences
      summary: Delete an authentication sequence
      description: |
        Delete an authentication sequence.
      operationId: DeleteAuthenticationSequencesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /mfa-servers:
    get:
      tags:
        - MFA Servers
      summary: List MFA servers
      description: |
        Retrieve a list of MFA servers.
      operationId: ListMFAServers
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/position'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/mfa-servers'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - MFA Servers
      summary: Create an MFA server
      description: |
        Create a new MFA server.
      operationId: CreateMFAServers
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mfa-servers'
      responses:
        '200':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/mfa-servers/{id}':
    get:
      tags:
        - MFA Servers
      summary: Get an MFA server
      description: |
        Get an existing MFA server.
      operationId: GetMFAServersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mfa-servers'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - MFA Servers
      summary: Update an MFA server
      description: |
        Update an existing MFA server.
      operationId: UpdateMFAServersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mfa-servers'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - MFA Servers
      summary: Delete an MFA server
      description: |
        Delete an MFA server.
      operationId: DeleteMFAServersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /certificates:
    get:
      tags:
        - Certificates
      summary: List certificates
      description: |
        Retrieve a list of certificates.
      operationId: ListCertificates
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/certificates-get'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Certificates
      summary: Generate a certificate
      description: |
        Generate a new certificate.
      operationId: CreateCertificates
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificates-post'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/certificates:import':
    post:
      tags:
        - Certificates
      summary: Import a certificate
      description: |
        Import a certificate.
      operationId: ImportCertificates
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificates-import'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/certificates/{id}':
    get:
      tags:
        - Certificates
      summary: Get a certificate
      description: |
        Get an existing certificate.
      operationId: GetCertificatesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates-get'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Certificates
      summary: Delete a certificate
      description: |
        Delete a certificate.
      operationId: DeleteCertificatesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /certificates/{id}:export:
    post:
      tags:
        - Certificates
      summary: Export a certificate
      description: |
        Export a certificate.
      operationId: ExportCertificateByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: Export a Certificate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/export-certificate-payload'
      responses:
        '201':
          $ref: '#/components/responses/export-certificate-response'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /certificate-profiles:
    get:
      tags:
        - Certificate Profiles
      summary: List certificate profiles
      description: |
        Retrieve a list of certificate profiles.
      operationId: ListCertificateProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/certificate-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - Certificate Profiles
      summary: Create a certificate profile
      description: |
        Create a certificate profile.
      operationId: CreateCertificateProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificate-profiles'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/certificate-profiles/{id}':
    get:
      tags:
        - Certificate Profiles
      summary: Get a certificate profile
      description: |
        Get an existing certificate profile.
      operationId: GetCertificateProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - Certificate Profiles
      summary: Update a certificate profile
      description: |
        Update an existing certificate profile.
      operationId: UpdateCertificateProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificate-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - Certificate Profiles
      summary: Delete a certificate profile
      description: |
        Delete a certificate profile.
      operationId: DeleteCertificateProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /scep-profiles:
    get:
      tags:
        - SCEP Profiles
      summary: List SCEP profiles
      description: |
        Retrieve a list of SCEP profiles.
      operationId: ListSCEPProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/scep-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - SCEP Profiles
      summary: Create a SCEP profile
      description: |
        Create a new SCEP profile.
      operationId: CreateSCEPProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scep-profiles'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/scep-profiles/{id}':
    get:
      tags:
        - SCEP Profiles
      summary: Get a SCEP profile
      description: |
        Get an existing SCEP profile.
      operationId: GetSCEPProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scep-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - SCEP Profiles
      summary: Update a SCEP profile
      description: |
        Update an existing SCEP profile.
      operationId: UpdateSCEPProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scep-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - SCEP Profiles
      summary: Delete a SCEP profile
      description: |
        Delete a SCEP profile.
      operationId: DeleteSCEPProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /trusted-certificate-authorities:
    get:
      tags:
        - Trusted Certificate Authorities
      summary: List trusted certificate authorities
      description: |
        Retrieve a list of trusted certificate authorities.
      operationId: ListTrustedCertificateAuthorities
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/trusted-certificate-authorities'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
  /tls-service-profiles:
    get:
      tags:
        - TLS Service Profiles
      summary: List TLS service profiles
      description: |
        Retrieve a list of TLS service profiles.
      operationId: ListTLSServiceProfiles
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/tls-service-profiles'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - TLS Service Profiles
      summary: Create a TLS service profile
      description: |
        Create a new TLS service profile.
      operationId: CreateTLSServiceProfiles
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tls-service-profiles'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/tls-service-profiles/{id}':
    get:
      tags:
        - TLS Service Profiles
      summary: Get a TLS service profile
      description: |
        Get an existing TLS service profile.
      operationId: GetTLSServiceProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tls-service-profiles'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - TLS Service Profiles
      summary: Update a TLS service profile
      description: |
        Update an existing TLS service profile.
      operationId: UpdateTLSServiceProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificate-profiles'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - TLS Service Profiles
      summary: Delete a TLS service profile
      description: |
        Delete a TLS service profile.
      operationId: DeleteTLSServiceProfilesByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  /ocsp-responders:
    get:
      tags:
        - OCSP Responders
      summary: List OCSP responders
      description: |
        Retrieve a list of OCSP responders.
      operationId: ListOCSPResponders
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/folder'
        - $ref: '#/components/parameters/snippet'
        - $ref: '#/components/parameters/device'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/ocsp-responders'
                  limit:
                    type: number
                    default: 200
                  offset:
                    type: number
                    default: 0
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    post:
      tags:
        - OCSP Responders
      summary: Create an OCSP responder
      description: |
        Create a new OCSP responder.
      operationId: CreateOCSPResponders
      requestBody:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ocsp-responders'
      responses:
        '201':
          $ref: '#/components/responses/http_created'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
  '/ocsp-responders/{id}':
    get:
      tags:
        - OCSP Responders
      summary: Get an OCSP responder
      description: |
        Get an existing OCSP responder
      operationId: GetOCSPRespondersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ocsp-responders'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        default:
          $ref: '#/components/responses/default_errors'
    put:
      tags:
        - OCSP Responders
      summary: Update an OCSP responder
      description: |
        Update an existing OCSP responder.
      operationId: UpdateOCSPRespondersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ocsp-responders'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic_with_body'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
    delete:
      tags:
        - OCSP Responders
      summary: Delete an OCSP responder
      description: Delete an OCSP responder.
      operationId: DeleteOCSPRespondersByID
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          $ref: '#/components/responses/http_ok'
        '400':
          $ref: '#/components/responses/bad_request_errors_basic'
        '401':
          $ref: '#/components/responses/auth_errors'
        '403':
          $ref: '#/components/responses/access_errors'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict_errors'
        default:
          $ref: '#/components/responses/default_errors'
components:
  securitySchemes:
    scmOAuth:
      type: oauth2
      description: |
        Strata Cloud Manager APIs authenticate client requests using the 
        OAuth 2.0 Client Credentials flow.  Please use the `client_id`, 
        `client_secret` values associated with an IAM service account along 
        with a scope value of `tsg_id:XXXXXXXXXX`, where `XXXXXXXXXX` is the 
        Tenant Service Group (TSG) ID.  The resulting JWT access token should 
        be attached to all API calls as a `Bearer` token in the `Authorization` 
        header (ex. `Authorization: Bearer tokenstring`).
      flows: 
        clientCredentials:
          tokenUrl: https://auth.apps.paloaltonetworks.com/oauth2/access_token
          scopes: {}
    scmToken:
      type: http
      description: |
        Strata Cloud Manager APIs authenticate client requests using the 
        OAuth 2.0 Client Credentials flow.  Please use the `client_id`, 
        `client_secret` values associated with an IAM service account along 
        with a scope value of `tsg_id:XXXXXXXXXX`, where `XXXXXXXXXX` is the 
        Tenant Service Group (TSG) ID.  The resulting JWT access token should 
        be attached to all API calls as a `Bearer` token in the `Authorization` 
        header (ex. `Authorization: Bearer tokenstring`).
      scheme: bearer
      bearerFormat: JWT
  parameters:
    name:
      name: name
      in: query
      description: The name of the configuration resource
      required: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: The maximum number of results per page
      required: false
      schema:
        type: number
        default: 200
    offset:
      name: offset
      in: query
      description: The offset into the list of results returned
      required: false
      schema:
        type: number
        default: 0
    folder:
      name: folder
      in: query
      description: |
        The folder in which the resource is defined
      required: false
      schema:
        type: string
    snippet:
      name: snippet
      in: query
      description: |
        The snippet in which the resource is defined
      schema:
        type: string
    device:
      name: device
      in: query
      description: |
        The device in which the resource is defined
      schema:
        type: string
    position:
      name: position
      in: query
      description: |
        The relative position of the rule
      required: true
      schema:
        enum:
          - pre
          - post
        default: pre
    uuid:
      name: id
      in: path
      description: The UUID of the configuration resource
      required: true
      schema:
        type: string
        format: uuid
        example: 123e4567-e89b-12d3-a456-426655440000
  responses:
    http_ok:
      description: OK
    http_created:
      description: Created
    auth_errors:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            auth_not_authenticated:
              $ref: '#/components/examples/json_401_panui_auth_not_authenticated'
            invalid_credential:
              $ref: '#/components/examples/json_401_panui_auth_invalid_credential'
            key_too_long:
              $ref: '#/components/examples/json_401_panui_auth_key_too_long'
            key_expired:
              $ref: '#/components/examples/json_401_panui_auth_key_expired'
            need_password_change:
              $ref: '#/components/examples/json_401_panui_auth_need_password_change'
    export-certificate-response:
      description: Exported Certificate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/export-certificate-response'
    access_errors:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            auth_unauthorized:
              $ref: '#/components/examples/json_403_panui_auth_unauthorized'
    bad_request_errors_basic:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            input_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_input_format_mismatch'
            output_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_output_format_mismatch'
            missing_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_missing_query_parameter'
            invalid_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_invalid_query_parameter'
    bad_request_errors_basic_with_body:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            input_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_input_format_mismatch'
            output_format_mismatch:
              $ref: '#/components/examples/json_400_panui_restapi_output_format_mismatch'
            missing_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_missing_query_parameter'
            invalid_query_parameter:
              $ref: '#/components/examples/json_400_panui_restapi_invalid_query_parameter'
            missing_body:
              $ref: '#/components/examples/json_400_panui_restapi_missing_body'
            invalid_object:
              $ref: '#/components/examples/json_400_panui_mgmt_invalid_object'

    not_found:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            object_not_present:
              $ref: '#/components/examples/json_404_panui_mgmt_object_not_present'
    conflict_errors:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            object_not_unique:
              $ref: '#/components/examples/json_409_panui_mgmt_object_not_unique'
            name_not_unique:
              $ref: '#/components/examples/json_409_panui_mgmt_name_not_unique'
            reference_not_zero:
              $ref: '#/components/examples/json_409_panui_mgmt_reference_not_zero'
    default_errors:
      description: General Errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generic_error'
          examples:
            version_not_supported:
              $ref: '#/components/examples/json_501_panui_restapi_version_not_supported'
            method_not_allowed:
              $ref: '#/components/examples/json_501_panui_restapi_method_not_supported'
            action_not_supported:
              $ref: '#/components/examples/json_405_panui_restapi_action_not_supported'
            bad_xpath:
              $ref: '#/components/examples/json_400_panui_mgmt_bad_xpath'
            invalid_command:
              $ref: '#/components/examples/json_400_panui_mgmt_invalid_command'
            malformed_command:
              $ref: '#/components/examples/json_400_panui_mgmt_malformed_command'
            session_timeout:
              $ref: '#/components/examples/json_504_panui_mgmt_session_timeout'
  examples:
    json_401_panui_auth_not_authenticated:
      summary: Not Authenticated
      value:
        _errors:
          - code: E016
            message: Not Authenticated
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_401_panui_auth_invalid_credential:
      summary: Invalid Credential
      value:
        _errors:
          - code: E016
            message: Invalid Credential
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_401_panui_auth_key_too_long:
      summary: Key Too Long
      value:
        _errors:
          - code: E016
            message: Key Too Long
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_401_panui_auth_key_expired:
      summary: Key Expired
      value:
        _errors:
          - code: E016
            message: Key Expired
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_401_panui_auth_need_password_change:
      summary: Need Password Change
      value:
        _errors:
          - code: E016
            message: The password needs to be changed.
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_403_panui_auth_unauthorized:
      summary: Unauthorized
      value:
        _errors:
          - code: E007
            message: Unauthorized
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_501_panui_restapi_version_not_supported:
      summary: Version Not Supported
      value:
        _errors:
          - code: E012
            message: Version Not Supported
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_501_panui_restapi_method_not_supported:
      summary: Method Not Supported
      value:
        _errors:
          - code: E012
            message: Method Not Supported
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_input_format_mismatch:
      summary: Input Format Mismatch
      value:
        _errors:
          - code: E003
            message: 'Input Format Mismatch: input-format=json'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_output_format_mismatch:
      summary: Output Format Mismatch
      value:
        _errors:
          - code: E003
            message: 'Output Format Mismatch: output-format=json Accept=xml'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_missing_query_parameter:
      summary: Missing Query Parameter
      value:
        _errors:
          - code: E003
            message: 'Missing Query Parameter: name'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_invalid_query_parameter:
      summary: Invalid Query Parameter
      value:
        _errors:
          - code: E003
            message: 'Invalid Query Parameter: location=invalid'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_restapi_missing_body:
      summary: Missing Body
      value:
        _errors:
          - code: E003
            message: Missing Body
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_405_panui_restapi_action_not_supported:
      summary: Action Not Supported
      value:
        _errors:
          - code: E012
            message: 'Action Not Supported: move'
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_mgmt_bad_xpath:
      summary: Bad XPath
      value:
        _errors:
          - code: E013
            message: Bad XPath
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_404_panui_mgmt_object_not_present:
      summary: Object Not Present
      value:
        _errors:
          - code: E005
            message: Object Not Present
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_409_panui_mgmt_object_not_unique:
      summary: Object Not Unique
      value:
        _errors:
          - code: E016
            message: Object Not Unique
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_409_panui_mgmt_name_not_unique:
      summary: Name Not Unique
      value:
        _errors:
          - code: E006
            message: Name Not Unique
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_409_panui_mgmt_reference_not_zero:
      summary: Reference Not Zero
      value:
        _errors:
          - code: E009
            message: Reference Not Zero
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_mgmt_invalid_object:
      summary: Invalid Object
      value:
        _errors:
          - code: E003
            message: Invalid Object
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_mgmt_invalid_command:
      summary: Invalid Command
      value:
        _errors:
          - code: E003
            message: Invalid Command
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_400_panui_mgmt_malformed_command:
      summary: Malformed Command
      value:
        _errors:
          - code: E003
            message: Malformed Command
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
    json_504_panui_mgmt_session_timeout:
      summary: Session Timeout
      value:
        _errors:
          - code: '4'
            message: Session Timeout
            details: {}
        _request_id: 123e4567-e89b-12d3-a456-426655440000
  schemas:
    authentication-rules:
      type: object
      required: 
        - id
        - name
        - from
        - to
        - source
        - destination
        - service
      properties:
        id:
          type: string
          description: The UUID of the authentication rule
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the authentication rule
        authentication_enforcement:
          type: string
          description: The authentication profile name
        category:
          type: array
          items:
            type: string
          description: The destination URL categories
        description:
          type: string
          description: The description of the authentication rule
        destination:
          type: array
          items:
            type: string
          description: The destination addresses
        destination_hip:
          type: array
          items:
            type: string
          description: The destination Host Integrity Profile (HIP)
        disabled:
          type: boolean
          default: false
          description: Is the authentication rule disabled?
        from:
          type: array
          items:
            type: string
          description: The source security zones
        group_tag:
          type: string
        hip_profiles:
          type: array
          items:
            type: string
          description: The source Host Integrity Profile (HIP)
        log_authentication_timeout:
          type: boolean
          default: false
          description: Log authentication timeouts?
        log_setting:
          type: string
          description: The log forwarding profile name
        negate_destination:
          type: boolean
          default: false
          description: Are the destination addresses negated?
        negate_source:
          type: boolean
          default: false
          description: Are the source addresses negated?
        service:
          type: array
          items:
            type: string
          description: The destination ports
        source:
          type: array
          items:
            type: string
          description: The source addresses
        source_hip:
          type: array
          items:
            type: string
          description: The source Host Integrity Profile (HIP)
        source_user:
          type: array
          items:
            type: string
          description: The source users
        tag:
          type: array
          items:
            type: string
          description: The authentication rule tags
        timeout:
          type: integer
          minimum: 1
          maximum: 1440
          description: The authentication session timeout (seconds)
        to:
          type: array
          items:
            type: string
          description: The destination security zones
      oneOf:
        - title: folder
          properties:
            folder:
              type: string
        - title: snippet
          properties:
            snippet:
              type: string
        - title: device
          properties:
            device:
              type: string
    rule-based-move:
      type: object
      #title: rule-based-move
      properties:
        destination:
          enum:
            - top
            - bottom
            - before
            - after
          description: The position of the rule relative to other rules in this rulebase.
        rulebase:
          enum:
            - pre
            - post
          description: The position of the rule relative to the local rulebase
        destination_rule:
          type: string
          format: uuid
          description: A destination target rule UUID. This is only used if the `destination` value is `before` or `after`.
      required:
        - destination
        - rulebase
    authentication-portals:
      type: object
      required: 
        - id
        - redirect_host
      properties:
        id:
          type: string
          description: The UUID of the authentication portal
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        authentication_profile:
          type: string
          description: The authentication profile
        certificate_profile:
          type: string
          description: The certificate profile
        gp_udp_port:
          type: integer
          minimum: 1
          maximum: 65535
          description: The UDP port for inbound authentication prompts
        idle_timer:
          type: integer
          minimum: 1
          maximum: 1440
          description: The idle timeout value (minutes)
        redirect_host:
          type: string
          description: The authentication portal IP address or hostname
        tls_service_profile:
          type: string
          description: The SSL/TLS service profile
        timer:
          type: integer
          minimum: 1
          maximum: 1440
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    authentication-profiles:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: The UUID of the authentication profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the authentication profile
        allow_list:
          type: array
          items:
            type: string
          default:
            - all
        lockout:
          type: object
          properties:
            failed_attempts:
              type: integer
              minimum: 0
              maximum: 10
            lockout_time:
              type: integer
              minimum: 0
              maximum: 60
        method:
          type: object
          oneOf:
            - type: object
              title: local_database
              properties:
                local_database:
                  type: object
            - type: object
              title: saml_idp
              properties:
                saml_idp:
                  type: object
                  properties:
                    attribute_name_usergroup:
                      type: string
                      minLength: 1
                      maxLength: 63
                    attribute_name_username:
                      type: string
                      minLength: 1
                      maxLength: 63
                    certificate_profile:
                      type: string
                      maxLength: 31
                    enable_single_logout:
                      type: boolean
                    request_signing_certificate:
                      type: string
                      maxLength: 64
                    server_profile:
                      type: string
                      maxLength: 63
            - type: object
              title: ldap
              properties:
                ldap:
                  type: object
                  properties:
                    login_attribute:
                      type: string
                    passwd_exp_days:
                      type: integer
                    server_profile:
                      type: string
            - type: object
              title: radius
              properties:
                radius:
                  type: object
                  properties:
                    checkgroup:
                      type: boolean
                    server_profile:
                      type: string
            - type: object
              title: tacplus
              properties:
                tacplus:
                  type: object
                  properties:
                    checkgroup:
                      type: boolean
                    server_profile:
                      type: string
            - type: object
              title: kerberos
              properties:
                kerberos:
                  type: object
                  properties:
                    realm:
                      type: string
                    server_profile:
                      type: string
            - type: object
              title: cloud
              description: CIE is valid only when cas feature flag is enabled
              properties:
                cloud:
                  type: object
                  properties:
                    profile_name:
                      type: string
                      description: The tenant profile name
        multi_factor_auth:
          type: object
          properties:
            factors:
              type: array
              items:
                type: string
            mfa_enable:
              type: boolean
        single_sign_on:
          type: object
          properties:
            kerberos_keytab:
              type: string
              maxLength: 8192
            realm:
              type: string
              maxLength: 127
        user_domain:
          type: string
          maxLength: 63
        username_modifier:
          enum:
            - '%USERINPUT%'
            - '%USERINPUT%@%USERDOMAIN%'
            - '%USERDOMAIN%\\%USERINPUT%'
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    local-users:
      type: object
      required: 
        - id
        - name
        - password
      properties:
        id:
          type: string
          description: The UUID of the local user
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          maxLength: 31
          description: The name of the local user
        password:
          type: string
          format: password
          maxLength: 63
          description: The password of the local user
        disabled:
          type: boolean
          default: false
          description: Is the local user disabled?
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    local-user-groups:
      type: object
      required: 
        - id
        - name
      properties:
        id:
          type: string
          description: The UUID of the local user group
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          pattern: '^[a-zA-Z0-9._-]+$'
          maxLength: 31
          description: The name of the local user group
        user:
          type: array
          items:
            type: string
          description: The local user group users
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    saml-server-profiles:
      type: object
      required:
        - id
        - name
        - entity_id
        - certificate
        - sso_bindings
        - sso_url
      properties:
        id:
          type: string
          description: The UUID of the SAML server profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the SAML server profile
        certificate:
          type: string
          maxLength: 63
          description: The identity provider certificate
        entity_id:
          type: string
          minLength: 1
          maxLength: 1024
          description: The identity provider ID
        max_clock_skew:
          type: integer
          minimum: 1
          maximum: 900
          description: Maxiumum clock skew
        slo_bindings:
          enum:
            - post
            - redirect
          description: SAML HTTP binding for SLO requests to the identity provider
        sso_bindings:
          enum:
            - post
            - redirect
          description: SAML HTTP binding for SSO requests to the identity provider
        sso_url:
          type: string
          minLength: 1
          maxLength: 255
          description: Identity provider SSO URL
        validate_idp_certificate:
          type: boolean
          description: Validate the identity provider certificate?
        want_auth_requests_signed:
          type: boolean
          description: Sign SAML message to the identity provider?
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    ldap-server-profiles:
      type: object
      required:
        - id
        - name
        - server
      properties:
        id:
          type: string
          description: The UUID of the LDAP server profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the LDAP server profile
        base:
          type: string
          maxLength: 255
          description: The base DN
        bind_dn:
          type: string
          maxLength: 255
          description: The bind DN
        bind_password:
          type: string
          format: password
          maxLength: 121
          description: The bind password
        bind_timelimit:
          type: string
          description: The bind timeout (seconds)
        ldap_type:
          enum:
            - active-directory
            - e-directory
            - sun
            - other
          description: The LDAP server time
        retry_interval:
          type: integer
          description: The search retry interval (seconds)
        server:
          type: array
          items:
            type: object
            properties:
              port:
                type: integer
                minimum: 1
                maximum: 65535
                description: The LDAP server port
              name:
                type: string
                description: The LDAP server name
              address:
                type: string
                description: The LDAP server IP address
          description: The LDAP server configuration
        ssl:
          type: boolean
          description: Require SSL/TLS secured connection?
        verify_server_certificate:
          type: boolean
          description: Verify server certificate for SSL sessions?
        timelimit:
          type: integer
          description: The search timeout (seconds)
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    radius-server-profiles:
      type: object
      required:
        - id
        - name
        - server
        - protocol
      properties:
        id:
          type: string
          description: The UUID of the RADIUS server profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the RADIUS server profile
        protocol:
          type: object
          oneOf:
            - type: object
              title: CHAP
              properties:
                CHAP:
                  type: object
            - type: object
              title: EAP_TTLS_with_PAP
              properties:
                EAP_TTLS_with_PAP:
                  type: object
                  properties:
                    anon_outer_id:
                      type: boolean
                    radius_cert_profile:
                      type: string
            - type: object
              title: PAP
              properties:
                PAP:
                  type: object
            - type: object
              title: PEAP_MSCHAPv2
              properties:
                PEAP_MSCHAPv2:
                  type: object
                  properties:
                    anon_outer_id:
                      type: boolean
                    radius_cert_profile:
                      type: string
                    allow_pwd_change:
                      type: boolean
            - type: object
              title: PEAP_with_GTC
              properties:
                PEAP_with_GTC:
                  type: object
                  properties:
                    anon_outer_id:
                      type: boolean
                    radius_cert_profile:
                      type: string
          description: The RADIUS authentication protocol
        server:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the RADIUS server
              ip_address:
                type: string
                description: The IP address of the RADIUS server
              port:
                type: integer
                minimum: 1
                maximum: 65535
                description: The RADIUS server port
              secret:
                type: string
                format: password
                maxLength: 64
                description: The RADIUS secret
            description: The RADIUS server configuration
        retries:
          type: integer
          minimum: 1
          maximum: 5
          description: The number of RADIUS server retries
        timeout:
          type: integer
          minimum: 1
          maximum: 120
          description: The RADIUS server authentication timeout (seconds)
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    tacacs-server-profiles:
      type: object
      required:
        - id
        - name
        - server
        - protocol
      properties:
        id:
          type: string
          description: The UUID of the TACACS+ server profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the TACACS+ server profile
        protocol:
          enum:
            - CHAP
            - PAP
          description: The TACACS+ authentication protocol
        server:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the TACACS+ server
              address:
                type: string
                description: The IP address of the TACACS+ server
              port:
                type: integer
                minimum: 1
                maximum: 65535
                description: The TACACS+ server port
              secret:
                type: string
                format: password
                maxLength: 64
                description: The TACACS+ secret
          description: The TACACS+ server configuration
        timeout:
          type: integer
          minimum: 1
          maximum: 30
          description: The TACACS+ timeout (seconds)
        use_single_connection:
          type: boolean
          description: Use a single TACACS+ connection?
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    kerberos-server-profiles:
      type: object
      required: 
        - id
        - name
        - server
      properties:
        id:
          type: string
          description: The UUID of the Kerberos server profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the Kerberos server profile
        server:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The Kerberos server name
              host:
                type: string
                description: The Kerberos server IP address
              port:
                type: integer
                minimum: 1
                maximum: 65535
                description: The Kerberos server port
          description: The Kerberos server configuration
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    authentication-sequences:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: The UUID of the authentication sequence
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the authentication sequence
        authentication_profiles:
          type: array
          items:
            type: string
          description: An ordered list of authentication profiles
        use_domain_find_profile:
          type: boolean
          default: true
          description: Use domain to determine authentication profile?
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    mfa-servers:
      type: object
      required:
        - id
        - name
        - mfa_cert_profile
      properties:
        id:
          type: string
          description: The UUID of the MFA server
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the MFA server profile
        mfa_cert_profile:
          type: string
          description: The MFA server certificate profile
        mfa_vendor_type:
          type: object
          oneOf:
            - type: object
              title: okta_adaptive_v1
              properties:
                okta_adaptive_v1:
                  type: object
                  required: 
                    - okta_api_host
                    - okta_baseuri
                    - okta_token
                    - okta_org
                    - okta_timeout
                  properties:
                    okta_api_host:
                      type: string
                      format: hostname
                      minLength: 10
                      description: Okta API hostname
                    okta_token:
                      type: string
                      format: password
                      minLength: 8
                      description: Okta API token
                    okta_org:
                      type: string
                      description: Okta organization
                    okta_timeout:
                      type: integer
                      minimum: 5
                      maximum: 600
                      default: 30
                      description: Okta timeout (seconds)
                    okta_baseuri:
                      type: string
                      minLength: 2
                      default: /api/v1
                  description:
                    Integration with [Okta Adaptive MFA](https://www.okta.com/products/adaptive-multi-factor-authentication)
            - type: object
              title: ping_identity_v1
              properties:
                ping_identity_v1:
                  type: object
                  required:
                    - ping_baseuri
                    - ping_api_host
                    - ping_use_base64_key
                    - ping_token
                    - ping_org
                    - ping_timeout
                  properties:
                    ping_baseuri:
                      type: string
                      minLength: 2
                      default: /pingid/rest/4
                      description: Ping Identity API base URI
                    ping_api_host:
                      type: string
                      format: hostname
                      minLength: 16
                      default: idpxny3lm.pingidentity.com
                      description: Ping Identity API hostname
                    ping_use_base64_key:
                      type: string
                      format: password
                      minLength: 8
                      description: Ping Identity Base64 key
                    ping_token:
                      type: string
                      minLength: 8
                      description: Ping Identity API token
                    ping_org_alias:
                      type: string
                      minLength: 8
                      description: Ping Identity client organization ID
                    ping_timeout:
                      type: integer
                      minimum: 5
                      maximum: 600
                      default: 30
                      description: Ping Identity timeout (seconds)
                  description:
                    Integation with [Ping Identity](https://www.pingidentity.com/en/platform.html)
            - type: object
              title: rsa_securid_access_v1
              properties:
                rsa_securid_access_v1:
                  type: object
                  properties:
                    rsa_api_host:
                      type: string
                      format: hostname
                      minLength: 10
                      description: RSA SecurID hostname
                    rsa_baseuri:
                      type: string
                      minLength: 2
                      default: /mfa/v1_1
                      description: RSA SecurID API base URI
                    rsa_accesskey:
                      type: string
                      format: password
                      minLength: 8
                      description: RSA SecurID access key
                    rsa_accessid:
                      type: string
                      minLength: 8
                      description: RSA SecurID access ID
                    rsa_assurancepolicyid:
                      type: string
                      minLength: 3
                      description: RSA SecurID assurance level 
                    rsa_timeout:
                      type: integer
                      minimum: 5
                      maximum: 600
                      default: 30
                      description: RSA SecurID timeout (seconds)
                  description:
                    Integration with [RSA SecurID](https://www.rsa.com/products/securid/)
            - type: object
              title: duo_security_v2
              properties:
                duo_security_v2:
                  type: object
                  required: 
                    - duo_api_host
                    - duo_integration_key
                    - duo_secret_key
                    - duo_timeout
                    - duo_baseuri
                  properties:
                    duo_api_host:
                      type: string
                      format: hostname
                      minLength: 16
                      description: Duo Security API hostname
                    duo_baseuri:
                      type: string
                      default: /auth/v2
                      minLength: 2
                      description: Duo Security API base URI
                    duo_timeout:
                      type: integer
                      minimum: 5
                      maximum: 600
                      default: 30
                      description: Duo Security timeout (seconds)
                    duo_integration_key:
                      type: string
                      minLength: 16
                      description: Duo Security integration key
                    duo_secret_key:
                      type: string
                      format: password
                      minLength: 16
                      description: Duo Security secret key
                  description: |
                    Integration with [Duo Security](https://duo.com/product)
          description: The MFA vendor type
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    certificates-get:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The UUID of the certificate
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the certificate
        algorithm:
          type: string
          description: Algorithm
        ca:
          type: boolean
          description: CA certificate?
        common_name:
          type: string
          description: Common name
        common_name_int:
          type: string
        expiry_epoch:
          type: string
        issuer:
          type: string
          description: Issuer
        issuer_hash:
          type: string
          description: Issue hash
        not_valid_after:
          type: string
          format: date
          description: Not valid after this date
        not_valid_before:
          type: string
          format: date
          description: Not valid before this date
        public_key:
          type: string
          description: Public key
        subject:
          type: string
          description: Subject
        subject_hash:
          type: string
          description: Subject hash
        subject_int:
          type: string
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    certificates-post:
      type: object
      required: 
        - id
        - name
        - common_name
        - signed_by
        - algorithm
        - certificate_name
        - digest
      properties:
        algorithm:
          type: object
          oneOf:
            - type: object
              title: rsa_number_of_bits
              properties:
                rsa_number_of_bits:
                  enum:
                    - 512
                    - 1024
                    - 2048
                    - 3072
                    - 4096
              required:
                - rsa_number_of_bits
            - type: object
              title: ecdsa_number_of_bits
              properties:
                ecdsa_number_of_bits:
                  enum:
                    - 245
                    - 384
                    - 2048
                    - 3072
                    - 4096
              required:
                - ecdsa_number_of_bits
          description: Encryption algorithm 
        alternate_email:
          type: array
          items:
            type: string
          description: Alternate email
        certificate_name:
          type: string
          minLength: 1
          description: Certificate name
        common_name:
          type: string
          minLength: 1
          description: Common name
        country_code:
          type: string
          description: Country code
        day_till_expiration:
          type: integer
          description: Expiration (days)
        department:
          type: array
          items:
            type: string
          description: Department
        digest:
          enum:
            - sha1
            - sha256
            - sha384
            - sha512
            - md5
          description: Hash algorithm
        email:
          type: string
          format: email
          maxLength: 255
          description: Email
        hostname:
          type: array
          items:
            type: string
            format: hostname
            minLength: 1
            maxLength: 64
          description: Hostname
        ip:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 64
          description: IP address
        is_block_privateKey:
          type: boolean
          description: Block private key export?
        is_certificate_authority:
          type: boolean
          description: Certificate authority certificate?
        locality:
          type: string
          maxLength: 64
          description: Locality
        ocsp_responder_url:
          type: string
          maxLength: 64
          description: OCSP responder URL
        signed_by:
          type: string
          maxLength: 64
          description: Signed by
        state:
          type: string
          maxLength: 32
          description: State
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    certificates-import:
      type: object
      required:
        - name
        - certificate_file
        - format
      properties:
        name:
          type: string
          description: The name of the certificate
          minLength: 1
        certificate_file:
          type: string
          description: The Base64 encoded content of the certificate public key
        format:
          enum:
            - pem
            - pkcs12
            - der
          default: pem
          description: Certificate format
        key_file:
          type: string
          description: The Base64 encoded content of the certificate private key 
        passphrase:
          type: string
          format: password
          description: Passphrase to protect the certificate private key
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    certificate-profiles:
      type: object
      required:
        - id
        - name
        - ca_certificates
      properties:
        id:
          type: string
          description: The UUID of the certificate profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the certificate profile
          maxLength: 63
        username_field:
          type: object
          properties:
            subject:
              enum:
                - common-name
              description: Common name
            subject_alt:
              enum:
                - email
              description: Email address
          description: Certificate username field
        domain:
          type: string
          description: User domain
        ca_certificates:
          type: array
          items:
            type: object
            required: 
              -  name
            properties:
              name:
                type: string
                description: CA certificate name
              default_ocsp_url:
                type: string
                description: Default OCSP URL
              ocsp_verify_cert:
                type: string
                description: OCSP verify certificate
              template_name:
                type: string
                description: Template name/OID
            description: CA certificate
          description: An ordered list of CA certificates
        crl_receive_timeout:
          type: integer
          minimum: 1
          maximum: 60
          default: 5
          description: CRL receive timeout (seconds)
        ocsp_receive_timeout:
          type: integer
          minimum: 1
          maximum: 60
          default: 5
          description: OCSP receive timeout (seconds)
        cert_status_timeout:
          type: integer
          minimum: 1
          maximum: 60
          default: 5
          description: Certificate status timeout
        use_crl:
          type: boolean
          description: Use CRL?
        use_ocsp:
          type: boolean
          description: Use OCSP?
        block_unknown_cert:
          type: boolean
          description: 
            Block session if certificate status is unknown?
        block_timeout_cert:
          type: boolean
          description: 
            Block session if certificate status cannot be retrieved within timeout?
        block_unauthenticated_cert:
          type: boolean
          description: 
            Block session if the certificate was not issued to the authenticating device?
        block_expired_cert:
          type: boolean
          description: 
            Block sessions with expired certificates?
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    scep-profiles:
      type: object
      required:
        - id
        - name
        - scep_challenge
        - scep_url
        - ca_identity_name
        - subject
        - algorithm
        - digest
      properties:
        id:
          type: string
          description: The UUID of the SCEP profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          maxLength: 31
          description: The name of the SCEP profile
        scep_challenge:
          type: object
          description: One Time Password challenge
          oneOf:
            - type: object
              title: none
              properties:
                none:
                  enum:
                    - ''
                  description: No OTP
            - type: object
              title: fixed
              properties:
                fixed:
                  type: string
                  description: Challenge to use for SCEP server on mobile clients
                  maxLength: 1024
            - type: object
              title: dynamic
              properties:
                dynamic:
                  type: object
                  properties:
                    username:
                      type: string
                      maxLength: 255
                      description: OTP username
                    password:
                      type: string
                      format: password
                      maxLength: 255
                      description: OTP password
                    otp_server_url:
                      type: string
                      format: uri
                      maxLength: 255
                      description: OTP server URL
        scep_ca_cert:
          type: string
          description: SCEP server CA certificate
        scep_client_cert:
          type: string
          description: SCEP client ceertificate
        ca_identity_name:
          type: string
          description: Certificate Authority identity
        subject:
          type: string
          default: CN=$USERNAME
          description: Subject
        algorithm:
          type: object
          properties:
            rsa:
              type: object
              properties:
                rsa_nbits:
                  type: integer
                  enum:
                    - 1024
                    - 2048
                    - 3072
              description: Key length (bits)
        digest:
          type: string
          enum:
            - 'sha1'
            - 'sha256'
            - 'sha348'
            - 'sha512'
          description: Digest for CSR
        fingerprint:
          type: string
          description: CA certificate fingerprint
        certificate_attributes:
          type: object
          oneOf:
            - type: object
              title: rfc822name
              properties:
                rfc822name:
                  type: string
                  format: email
              description: Email address
            - type: object
              title: dnsname
              properties:
                dnsname:
                  type: string
                  format: fqdn
              description: Fully qualified hostname
            - type: object
              title: uniform_resource_identifier
              properties:
                uniform_resource_identifier:
                  type: string
                  format: uri
              description: Uniform resource identifier
          description: Subject Alternative name type
        use_as_digital_signature:
          type: boolean
          description: Use as digital signature?
        use_for_key_encipherment:
          type: boolean
          description: Use for key encipherment?
        scep_url:
          type: string
          format: uri
          description: SCEP server URL
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    trusted-certificate-authorities:
      type: object
      properties:
        id:
          type: string
          description: The UUID of the trusted certificate authority
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          maxLength: 63
          description: The trusted certificate authority name
        common_name:
          type: string
          maxLength: 255
          description: The trusted certificate authority common name
        expiry_epoch:
          type: string
        filename:
          type: string
          description: Certificate filename
        issuer:
          type: string
          description: Issuer
        not_valid_after:
          type: string
          description: Not valid after this date
        not_valid_before:
          type: string
          description: Not valid before this date
        serial_number:
          type: string
          description: Serial number
        subject:
          type: string
          description: Subject
    tls-service-profiles:
      type: object
      required:
        - id
        - name
        - certificate
        - protocol_settings
      properties:
        id:
          type: string
          description: The UUID of the TLS service profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: TLS service profile name. The value is `muCustomDomainSSLProfile` when it is used on mobile-agent infra settings.
          pattern: '^[a-zA-Z0-9._-]+$'
          maxLength: 127
        certificate:
          type: string
          maxLength: 255
          description: Certificate name
        protocol_settings:
          type: object
          properties:
            min_version:
              enum:
                - tls1-0
                - tls1-1
                - tls1-2
              default: tls1-2
              description: Minimum TLS version
            max_version:
              enum:
                - tls1-0
                - tls1-1
                - tls1-2
                - tls1-3
              default: tls1-3
              description: Maximum TLS version
            keyxchg_algo_rsa:
              type: boolean
              description: Allow RSA algorithm?
            keyxchg_algo_dhe:
              type: boolean
              description: Allow DHE algorithm?
            keyxchg_algo_ecdhe:
              type: boolean
              description: Allow ECDHE algorithm?
            enc_algo_3des:
              type: boolean
              description: Allow 3DES algorithm?
            enc_algo_rc4:
              type: boolean
              description: Allow RC4 algorithm?
            enc_algo_aes_128_cbc:
              type: boolean
              description: Allow AES-128-CBC algorithm?
            enc_algo_aes_256_cbc:
              type: boolean
              description: Allow AES-256-CBC algorithm?
            enc_algo_aes_128_gcm:
              type: boolean
              description: Allow AES-128-GCM algorithm?
            enc_algo_aes_256_gcm:
              type: boolean
              description: Allow algorithm AES-256-GCM
            auth_algo_sha1:
              type: boolean
              description: Allow SHA1 authentication?
            auth_algo_sha256:
              type: boolean
              description: Allow SHA256 authentication?
            auth_algo_sha384:
              type: boolean
              description: Allow SHA384 authentication?
          description: Protocol settings
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    ocsp-responders:
      type: object
      required:
        - id
        - name
        - host_name
      properties:
        id:
          type: string
          description: The UUID of the OCSP responder profile
          readOnly: true
          example: 123e4567-e89b-12d3-a456-426655440000
        name:
          type: string
          description: The name of the OCSP responder profile
          pattern: '^[a-zA-Z0-9._-]+$'
          maxLength: 63
        host_name:
          type: string
          minLength: 1
          maxLength: 255
          description: The hostname or IP address of the OCSP server
      oneOf:
        - type: object
          title: folder
          properties:
            folder:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The folder in which the resource is defined
              example: My Folder
          required: 
            -  folder
        - type: object
          title: snippet
          properties:
            snippet:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The snippet in which the resource is defined
              example: My Snippet
          required: 
            -  snippet
        - type: object
          title: device
          properties:
            device:
              type: string
              pattern: ^[a-zA-Z\d-_\. ]+$
              maxLength: 64
              description: The device in which the resource is defined
              example: My Device
          required: 
            -  device
    export-certificate-payload:
      type: object
      properties:
        format:
          type: string
        passphrase:
          type: string
          enum:
            - pkcs12
            - pem
            - der
            - pkcs10
      required:
        - format
    export-certificate-response:
      type: object
      properties:
        certificate:
          type: string
    generic_error:
      type: object
      properties:
        _errors:
          $ref: '#/components/schemas/error_detail_cause_infos'
        _request_id:
          type: string
      x-examples: {}
    error_detail_cause_infos:
      type: array
      items:
        $ref: '#/components/schemas/error_detail_cause_info'
      x-examples: {}
    error_detail_cause_info:
      type: object
      title: Cause Info
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
        help:
          type: string
security:
  - scmToken: []
x-internal: false
