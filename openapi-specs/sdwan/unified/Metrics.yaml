components:
  schemas:
    Aggregate:
      properties:
        data:
          description: 'The details of the aggregate data.

            '
          items:
            $ref: '#/components/schemas/AggregateData'
          type: array
        field:
          description: 'The field value.

            '
          type: string
        name:
          description: 'The name of the query response.

            '
          type: string
        operator:
          description: 'The operator values.

            '
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
        statistic:
          description: 'The aggregate statistics.

            '
          type: string
        unit:
          description: 'The unit.

            '
          type: string
    AggregateData:
      properties:
        value:
          description: 'Value of the aggregate data.

            '
          type: number
        view:
          description: 'View the aggregate date.

            '
          type: object
    AggregateMetric:
      properties:
        name:
          description: 'The name of the aggregate metric.

            '
          type: string
        statistic:
          description: 'QoS application aggregate statistics.

            '
          type: string
        unit:
          description: 'The unit.

            '
          type: string
      required:
      - statistic
      - unit
      - name
    AggregateStatsFilter:
      properties:
        app:
          description: 'Filter by aggregate stats app ID.

            '
          items:
            description: App
            type: string
          type: array
        path:
          description: 'Filter by path.

            '
          items:
            description: Path
            type: string
          type: array
        site:
          description: 'Filter by aggregate stats filter site ID.

            '
          items:
            description: Site
            type: string
          type: array
      required:
      - site
      - app
    AggregateStatsQuery:
      properties:
        aggregates:
          description: 'The aggregate number of supported app stats. Max number =
            10.

            '
          items:
            description: Aggregates
            type: map[string,aggregatestatstypeenum]
          type: array
        end_time:
          description: 'The end time to get the app stats.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/AggregateStatsFilter'
          description: "Filters according to the specifications. \n"
        name:
          description: 'The description of the app. Maz size = 128.

            '
          type: string
        start_time:
          description: "The start time to get the app statistics. \n"
          format: date
          type: string
      required:
      - filter
      - aggregates
    AggregateStatsResponse:
      properties:
        aggregates:
          description: 'The aggregate number of supported app stats. Max number =
            10.

            '
          items:
            type: object
          type: array
        end_time:
          description: 'The end time to get the app stats.

            '
          format: date
          type: string
        start_time:
          description: 'The start time to get the app statistics.

            '
          format: date
          type: string
    AggregatesQueryResponse:
      properties:
        aggregates:
          description: 'The application QoS aggregates.

            '
          items:
            $ref: '#/components/schemas/Aggregate'
          type: array
    AppObjectStatsResponse:
      properties:
        data:
          description: Data
          items:
            type: object
          type: array
        end_time:
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/AppStatsFilter'
          description: Filter
        object_type:
          description: Object Type
          enum:
          - PeerStatistics
          - IntfStatistics
          - CellularModuleStatistics
          - CellularAPNStatistics
          - CellularAPNV6Statistics
          - MulticastStatistics
          - SecurityPolicyRule
          - IntfPoEStatistics
          - IntfLLDPStatistics
          - IntfAAAStatistics
          - IntfSTPStatistics
          - STPStatistics
          - PoEStatistics
          - AppSummaryStats
          type: string
        start_time:
          format: date
          type: string
    AppStatsAggregate:
      properties:
        name:
          description: 'The name of the aggregate value.

            '
          enum:
          - WanCapacity
          - PolicyDataTrafficVolume
          - PolicyDataAppThroughput
          - WanEngineering
          - PrefixList
          type: string
        unit:
          description: Unit
          type: string
      required:
      - name
    AppStatsAggregateData:
      properties:
        data:
          description: 'The aggregate app statistics.

            '
          type: object
        end_time:
          description: 'The end time to get the app stats.

            '
          type: string
        name:
          description: 'The name of the aggregate value.

            '
          enum:
          - WanCapacity
          - PolicyDataTrafficVolume
          - PolicyDataAppThroughput
          - WanEngineering
          - PrefixList
          type: string
        start_time:
          description: "The start time to get the app statistics. \n"
          type: string
        unit:
          description: Unit
          type: string
    AppStatsAggregateFilter:
      properties:
        app:
          description: 'Filter by apps.

            '
          items:
            description: App
            type: string
          type: array
        element:
          description: "Filter by element. \n"
          items:
            description: Element
            type: string
          type: array
        path:
          description: 'Filter by path.

            '
          items:
            description: Path
            type: string
          type: array
        path_type:
          description: 'Filter by path type.

            '
          items:
            description: Path Type
            enum:
            - public_direct
            - public_vpn
            - private_direct
            - private_vpn
            - unknown
            - servicelink
            type: string
          type: array
        site:
          description: "Filter by site.  \n"
          items:
            description: Site
            type: string
          type: array
    AppStatsAggregateQueryResponse:
      properties:
        aggregates:
          description: 'The aggregate number of supported app stats. Max number =
            10.

            '
          items:
            $ref: '#/components/schemas/AppStatsAggregateData'
          type: array
        end_time:
          description: "The end time to get the app stats. \n"
          type: string
        start_time:
          description: "The start time to get the app statistics. \n"
          type: string
    AppStatsAggregatesQuery:
      properties:
        aggregates:
          description: 'The aggregate number of supported app stats. Max number =
            10.

            '
          items:
            $ref: '#/components/schemas/AppStatsAggregate'
          type: array
        end_time:
          description: 'The end time to get the app stats.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/AppStatsAggregateFilter'
          description: "Filters according to the specifications. \n"
        name:
          description: 'The description of the app. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the app statistics.

            '
          format: date
          type: string
      required:
      - aggregates
    AppStatsFilter:
      properties:
        health_score:
          description: Health Score
          type: map[appstatsoperatortype,string]
    AppStatsSupportedAggregate:
      properties:
        description:
          description: 'The description of the apps. Max size = 256.

            '
        name:
          description: 'The name of the apps. Max size = 126.

            '
          type: string
        units:
          description: 'The units of the app statistics.

            '
          items:
            description: Units
            type: string
          type: array
    AppStatsSupportedAggregatesResponse:
      properties:
        aggregates:
          description: Aggregates
          items:
            $ref: '#/components/schemas/AppStatsSupportedAggregate'
          type: array
    AppStatsTopNFilter:
      properties:
        app:
          description: 'Filter by apps.

            '
          items:
            description: App
            type: string
          type: array
        element:
          description: "Filter by element. \n"
          items:
            description: Element
            type: string
          type: array
        path:
          description: 'Filter by path.

            '
          items:
            description: Path
            type: string
          type: array
        path_type:
          description: 'Filter by path type.

            '
          items:
            description: Path Type
            enum:
            - public_direct
            - public_vpn
            - private_direct
            - private_vpn
            - unknown
            - servicelink
            type: string
          type: array
        site:
          description: 'Filter by site.

            '
          items:
            description: Site
            type: string
          type: array
        waninterface:
          description: "The WAN interface of the network. \n"
          items:
            description: Waninterface
            type: string
          type: array
    AppStatsTopNQuery:
      properties:
        end_time:
          description: 'The end time to get the Topn N reports. The time period for
            the Topn N reports is usually for a week.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/AppStatsTopNFilter'
          description: 'Details of the filter used in this query.

            '
        name:
          description: 'The name of the Top N report. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the Topn N reports. The time period
            for the Topn N reports is usually for week.

            '
          format: date
          type: string
        top_n:
          $ref: '#/components/schemas/AppStatsTopNView'
          description: 'The details of the limit and type of the Top N reports.

            '
        topn_basis:
          description: "The basis of the Top N reports. \n"
          enum:
          - traffic_volume
          - transaction_failure
          - initiation_failure
          - tcp_flow
          - udp_flow
          - audio_traffic_volume
          - video_traffic_volume
          - ingress_audio_pkt_loss
          - egress_audio_pkt_loss
          - ingress_video_pkt_loss
          - egress_video_pkt_loss
          - ingress_audio_jitter
          - egress_audio_jitter
          - ingress_video_jitter
          - egress_video_jitter
          - ingress_audio_mos
          - egress_audio_mos
          type: string
      required:
      - topn_basis
      - top_n
    AppStatsTopNResponse:
      properties:
        top_n:
          $ref: '#/components/schemas/AppStatsTopNResponseData'
          description: 'The details of the Top N reports.

            '
    AppStatsTopNResponseData:
      properties:
        end_time:
          description: 'The end time to get the Topn N reports. The time period for
            the Topn N reports is usually a week.

            '
          type: string
        items:
          description: 'The items in the query.

            '
          items:
            description: Items
            type: string
          type: array
        limit:
          description: 'The details of the limit and type of the Top N reports.

            '
          type: integer
        start_time:
          description: 'The start time to get the Topn N reports. The time period
            for the Topn N reports is usually a week.

            '
          type: string
        topn_basis:
          description: "The basis of the Top N reports. \n"
          enum:
          - traffic_volume
          - transaction_failure
          - initiation_failure
          - tcp_flow
          - udp_flow
          - audio_traffic_volume
          - video_traffic_volume
          - ingress_audio_pkt_loss
          - egress_audio_pkt_loss
          - ingress_video_pkt_loss
          - egress_video_pkt_loss
          - ingress_audio_jitter
          - egress_audio_jitter
          - ingress_video_jitter
          - egress_video_jitter
          - ingress_audio_mos
          - egress_audio_mos
          type: string
        type:
          description: 'The type of Top N report.

            '
          enum:
          - app
          - site
          type: string
    AppStatsTopNView:
      properties:
        limit:
          description: 'The limit of the Top N reports.

            '
          type: integer
        type:
          description: "The type of Top N reports. \n"
          enum:
          - app
          - site
          type: string
      required:
      - type
    ApplicationQosAggregatesQuery:
      properties:
        aggregates:
          description: 'The aggregate number of supported app stats. Max number =
            10.

            '
          items:
            $ref: '#/components/schemas/AggregateMetric'
          type: array
        end_time:
          description: 'The end time to get the app stats.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/ApplicationQosMetricsFilter'
          description: "Filters according to the specifications. \n"
        name:
          description: 'The description of the app. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the app statistics.

            '
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: "View the QoS metric details. \n"
      required:
      - filter
      - aggregates
    ApplicationQosMetricsFilter:
      properties:
        application_name:
          description: 'Filter by the name of the application.

            '
          type: string
        direction:
          description: 'Filter by the traffic direction.

            '
          enum:
          - Ingress
          - Egress
          type: string
        email:
          description: 'Filter by the email address.

            '
          items:
            description: Email
            type: string
          type: array
        site:
          description: 'Filter by the site.

            '
          items:
            description: Site
            type: string
          type: array
        user:
          description: "Filter by user.      \n"
          items:
            description: User
            type: string
          type: array
      required:
      - application_name
    ApplicationQosMetricsQuery:
      properties:
        end_time:
          description: 'The end time to get the application QoS metrics.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/ApplicationQosMetricsFilter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'The interval time of the application QoS metrics.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        max_datapoints:
          description: 'The max datapoints of the application QoS metrics.

            '
          format: int32
          type: integer
        metrics:
          description: 'Details of the application QoS metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
        name:
          description: 'The name of the Application QoS metric.

            '
          type: string
        start_time:
          description: 'The start time to get the application QoS metrics.

            '
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: 'View the application QoS metrics.

            '
      required:
      - filter
      - interval
      - metrics
    ApplicationQosMetricsResponse:
      properties:
        metrics:
          description: 'Details of the application metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
    ApplicationUserData:
      properties:
        client_ip:
          description: 'The client IP address.

            '
          type: string
        email:
          description: 'The email ID of the application user.

            '
          type: string
        site:
          description: 'The site.

            '
          type: string
        user_name:
          description: "The user name of the application user. \n"
          type: string
    ApplicationUsersQuery:
      properties:
        application_name:
          description: 'Filter by application name.

            '
          type: string
        end_time:
          description: 'Filter by end time.

            '
          format: date
          type: string
        name:
          description: 'Filter by app name.

            '
          type: string
        start_time:
          description: 'Filter by end time.

            '
          format: date
          type: string
      required:
      - application_name
    ApplicationUsersResponse:
      properties:
        data:
          description: Data
          items:
            $ref: '#/components/schemas/ApplicationUserData'
          type: array
    BaseTopNQuery:
      properties:
        end_time:
          description: 'The end time to get the Topn N reports. The time period for
            the Topn N reports is usually for week.

            '
          format: date
          type: string
        filter:
          description: 'Details of the filter used in this query.

            '
          type: object
        name:
          description: 'The name of the Top N report. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the Topn N reports. The time period
            for the Topn N reports is usually for week.

            '
          format: date
          type: string
        top_n:
          $ref: '#/components/schemas/BaseTopNView'
          description: 'The details of the limit and type of the Top N reports.

            '
        topn_basis:
          description: 'The basis of the Top N reports.

            '
          type: string
      required:
      - topn_basis
      - top_n
    BaseTopNResponse:
      properties:
        top_n:
          $ref: '#/components/schemas/BaseTopNResponseData'
          description: 'The details of the Top N reports.

            '
    BaseTopNResponseData:
      properties:
        end_time:
          description: 'The end time to get the Topn N reports. The time period for
            the Topn N reports is usually a week.

            '
          type: string
        items:
          description: 'The items in the query.

            '
          items:
            description: Items
            type: string
          type: array
        limit:
          description: 'The details of the limit and type of the Top N reports.

            '
          type: integer
        start_time:
          description: 'The start time to get the Topn N reports. The time period
            for the Topn N reports is usually a week.

            '
          type: string
        topn_basis:
          description: 'The basis of the Top N reports.

            '
          type: string
        type:
          description: 'The type of Top N report.

            '
          type: string
    BaseTopNView:
      properties:
        limit:
          description: 'The query limit of the Top N reports. Should be between 1
            and 10.

            '
          type: integer
        type:
          description: 'The type of Top N reports.

            '
          type: string
      required:
      - type
    CapacityPredictionFilter:
      properties:
        direction:
          description: 'Filter by direction of traffic.

            '
          enum:
          - Ingress
          - Egress
          type: string
        site:
          description: 'Filter by site.

            '
          items:
            description: Site
            type: string
          type: array
        wn_path:
          description: "Filter by WAN path. \n"
          items:
            description: Wn Path
            type: string
          type: array
    CapacityPredictionQuery:
      properties:
        anomaly:
          description: "The number of sites that will reach high capacity utilization\
            \ threshold within the next 28 days.          \n"
          items:
            $ref: '#/components/schemas/Forecast'
          type: array
        end_time:
          description: 'The end time of the capacity prediction query. End times need
            to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/CapacityPredictionFilter'
          description: 'Filters according to the specifications.

            '
        forecast:
          description: 'The details of the forecast.

            '
          items:
            $ref: '#/components/schemas/Forecast'
          type: array
        forecast_basis:
          description: 'The forecast basis types. Forecast basis need be to specified
            according to 2.0 specifications.

            '
          items:
            description: Forecast Basis Types
            enum:
            - CAPACITY_EXCEED_THRESHOLD
            - ANOMALY
            - CIRCUIT_CAPACITY_FORECAST
            - CIRCUIT_UTILIZATION
            - ANOMALY_SITE_CIRCUIT_DETAILS
            type: string
          type: array
        forecast_date:
          description: 'The forecast data.

            '
          format: date
          type: string
        name:
          description: 'The name of the capacity prediction query. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the capacity prediction query. Start
            times need to be specified in ISO8601 UTC format.,

            '
          format: date
          type: string
        type:
          description: 'The type of capacity prediction query. Type need to be specified
            according to the specifications.

            '
          enum:
          - SITE
          - CIRCUIT
          type: string
    CapacityPredictionResponse:
      properties:
        anomaly:
          description: "The number of sites that will reach high capacity utilization\
            \ threshold within the next 28 days.          \n"
          type: object
        end_time:
          description: "The end time of the capacity prediction query. End times need\
            \ to be specified in ISO8601 UTC format.          \n"
          format: date
          type: string
        forecast:
          description: "The details of the forecast.          \n"
          type: object
        forecast_date:
          description: "The forecast data.          \n"
          format: date
          type: string
        start_time:
          description: 'The start time to get the capacity prediction query. Start
            times need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
    CellularmetricsFilter:
      properties:
        apn:
          description: 'The APN name that provides access to the mobile broadband
            network.

            '
          items:
            description: Apn
            type: string
          type: array
        carrier:
          description: 'The name of the carrier.

            '
          items:
            description: Carrier
            type: string
          type: array
        cellular_module:
          description: 'The module of the cellular.

            '
          items:
            description: Cellular Module
            type: string
          type: array
        direction:
          description: 'The direction of the traffic.

            '
          enum:
          - Ingress
          - Egress
          type: string
        element:
          description: 'The element.

            '
          items:
            description: Element
            type: string
          type: array
        site:
          description: 'The site.

            '
          items:
            description: Site
            type: string
          type: array
    CellularmetricsQuery:
      properties:
        end_time:
          description: 'The end time to get the cellular metrics. If not specified,
            it is default to now. End times need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/CellularmetricsFilter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'The interval time.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        max_datapoints:
          description: 'The max data points.

            '
          format: int32
          type: integer
        metrics:
          description: 'The details of the cellular metrics. Metrics need to specified
            according to 2.1 specifications. Invalid metrics will be ignored and the
            result will not include them.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
        name:
          description: 'The name of the cellular metric. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the cellular metrics. If not specified,
            it is default to epoch. Start times need to be specified in ISO8601 UTC
            format.

            '
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: 'The individual and summary views.

            '
      required:
      - interval
      - metrics
    CellularmetricsResponse:
      properties:
        metrics:
          description: Metrics
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
    CellularmetricsSchemaResponse:
      properties:
        metrics:
          description: 'The details of the cellular metrics.

            '
          items:
            $ref: '#/components/schemas/MetricSchema'
          type: array
    ClientDetails:
      properties:
        aging_timeout:
          description: 'The aging timeout value.

            '
          type: integer
        auth_type:
          description: 'The authentication type. Only closed mode and single host
            authentication is supported.

            '
          type: string
        element_id:
          description: 'The element ID.

            '
          type: string
        interface_id:
          description: 'The interface ID.

            '
          type: string
        mac_address:
          description: 'The MAC address.

            '
          type: string
        reauth_timeout:
          description: "The re-auth timeout.  \n"
          type: integer
        reauthentication_timeout:
          description: 'The ION device authenticates or reinitializes the client after
            a session timeout based on the value of the Termination-Action. Values
            1 and 0.

            '
          type: integer
        stats_start_time_ms:
          description: 'The stats start time in milliseconds.

            '
          format: int64
          type: integer
        uptime:
          description: 'Indicates the time for which the neighbor has been up.

            '
          format: int64
          type: integer
        username:
          description: 'The client user name.

            '
          type: string
        vlan_id:
          description: 'The virtual LAN ID.

            '
          type: integer
    Data:
      properties:
        datapoints:
          description: Datapoints
          items:
            $ref: '#/components/schemas/Datapoints'
          type: array
        statistics:
          description: Statistics
          type: object
    Datapoints:
      properties:
        duration:
          description: 'The date and time of the series.

            '
          format: date-time
          type: string
        filter_property_id:
          description: 'The filter property ID.

            '
          type: string
        links:
          description: Links
          items:
            description: Links
            type: string
          type: array
        ninetieth_percentile:
          description: Ninetieth Percentile
          type: number
        sites:
          description: 'The sites.

            '
          items:
            description: Sites
            type: string
          type: array
        value:
          description: 'The values of the filter.

            '
          type: number
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          description: 'The error code.

            '
          type: string
        message:
          description: 'The error message.

            '
          type: string
    Filter:
      properties:
        elements:
          description: 'Elements of the filter.

            '
          items:
            description: Elements
            type: string
          type: array
        path:
          description: 'Path of the filter.

            '
          items:
            description: Path
            type: string
          type: array
        site:
          description: 'Site of the filter.

            '
          type: object
        type:
          description: 'Type of the filter.

            '
          type: string
    FlowSummary:
      properties:
        app_id:
          description: App Id
          type: string
        bytes_c2s:
          description: Bytes C2s
          format: int64
          type: integer
        bytes_s2c:
          description: Bytes S2c
          format: int64
          type: integer
        destination_ip:
          description: Destination Ip
          type: string
        destination_port:
          description: Destination Port
          type: integer
        fc_app_id:
          description: Fc App Id
          type: string
        flow_action:
          description: Flow Action
          type: string
        flow_end_time_ms:
          description: Flow End Time Ms
          format: int64
          type: integer
        flow_start_time_ms:
          description: Flow Start Time Ms
          format: int64
          type: integer
        is_local_traffic:
          description: Is Local Traffic
          type: boolean
        is_v6:
          description: Is V6
          type: boolean
        lan_to_wan:
          description: Lan To Wan
          type: boolean
        network_policy_id:
          description: Network Policy Id
          type: string
        network_policy_set_id:
          description: Network Policy Set Id
          type: string
        packets_c2s:
          description: Packets C2s
          format: int64
          type: integer
        packets_s2c:
          description: Packets S2c
          format: int64
          type: integer
        path_id:
          description: Path Id
          type: string
        path_type:
          description: Path Type
          type: string
        policy_id:
          description: Policy Id
          type: string
        priority_policy_id:
          description: Priority Policy Id
          type: string
        priority_policy_set_id:
          description: Priority Policy Set Id
          type: string
        protocol:
          description: Protocol
          type: integer
        sec_policy_actions:
          description: Sec Policy Actions
          items:
            description: Sec Policy Actions
            type: string
          type: array
        service_endpoint_id:
          description: Service Endpoint Id
          type: string
        source_ip:
          description: Source Ip
          type: string
        source_port:
          description: Source Port
          type: integer
        unknown_domain:
          description: Unknown Domain
          type: string
        user_name:
          description: User Name
          type: string
        vrf_id:
          description: Vrf Id
          type: string
    FlowTupple:
      properties:
        destination_ip:
          description: 'Filter by destination IP address.

            '
          items:
            description: Destination Ip
            type: string
          type: array
        destination_port:
          description: 'Filter by destination port.

            '
          items:
            description: Destination Port
            type: integer
          type: array
        protocol:
          description: 'Filter by protocol.

            '
          type: integer
        source_ip:
          description: 'Filter by source IP address.

            '
          items:
            description: Source Ip
            type: string
          type: array
        source_port:
          description: 'Filter by source port.

            '
          items:
            description: Source Port
            type: integer
          type: array
    Flows:
      properties:
        debug_level:
          description: "The values of the debug levels.        \n"
          type: string
        end_time:
          description: "The end time to get the flows information.           \n"
          type: string
        items:
          description: "The flow summary information.          \n"
          items:
            $ref: '#/components/schemas/FlowSummary'
          type: array
        start_time:
          description: 'The start time to get the flow information.

            '
          type: string
    FlowsFilter:
      properties:
        app:
          description: 'Filter by app.

            '
          items:
            description: App
            type: string
          type: array
        element:
          description: 'Filter by element.

            '
          items:
            description: Element
            type: string
          type: array
        flow:
          $ref: '#/components/schemas/FlowTupple'
          description: 'Filter by flows information.

            '
        flow_type:
          description: 'Filter by flows type.

            '
          enum:
          - local
          - wan
          - all
          type: string
        path:
          description: 'Filter by path.

            '
          items:
            description: Path
            type: string
          type: array
        path_type:
          description: 'Filter by path.

            '
          items:
            description: Path Type
            enum:
            - public_direct
            - public_vpn
            - private_direct
            - private_vpn
            - unknown
            - servicelink
            type: string
          type: array
        security_policy_destination_zone:
          description: 'Filter by security policy destination zone.

            '
          items:
            description: Security Policy Destination Zone
            type: string
          type: array
        security_policy_rule:
          description: 'Filter by security policy rule.

            '
          items:
            description: Security Policy Rule
            type: string
          type: array
        security_policy_rule_action:
          description: 'Filter by policy rule action.

            '
          enum:
          - allow
          - deny
          - reject
          type: string
        security_policy_source_zone:
          description: 'Filter by security policy source zone.

            '
          items:
            description: Security Policy Source Zone
            type: string
          type: array
        site:
          description: "Filter by site. \n"
          items:
            description: Site
            type: string
          type: array
        waninterface:
          description: 'Filter by waninterface.

            '
          items:
            description: Waninterface
            type: string
          type: array
    FlowsQuery:
      properties:
        debug_level:
          description: "The values of the debug levels.        \n"
          enum:
          - summary
          - tcp-flags
          - traffic
          - all
          type: string
        end_time:
          description: "The end time to get the flows information. \n"
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/FlowsFilter'
          description: 'Filters according to the specifications.

            '
        max_datapoints:
          description: 'The max data points.

            '
          type: integer
        name:
          description: 'The description of the flow. Maz size = 128.

            '
          type: string
        start_time:
          description: "The start time to get the flow information. \n"
          format: date
          type: string
    FlowsQueryResponse:
      properties:
        flows:
          $ref: '#/components/schemas/Flows'
          description: Flows
    Forecast:
      properties:
        actual_forecast_date:
          description: 'The forecast date and time.

            '
          format: date-time
          type: string
        bw_site_anomaly:
          description: Bw Site Anomaly
          type: number
        forecast_status:
          description: 'The forecast status. True or False.

            '
          type: boolean
        items:
          description: 'The deatils of the forecast results.

            '
          items:
            $ref: '#/components/schemas/ForecastResult'
          type: array
        name:
          description: 'The name of the forecast.

            '
          enum:
          - CAPACITY_EXCEED_THRESHOLD
          - ANOMALY
          - CIRCUIT_CAPACITY_FORECAST
          - CIRCUIT_UTILIZATION
          - ANOMALY_SITE_CIRCUIT_DETAILS
          type: string
        type:
          description: 'The type of forecast.

            '
          enum:
          - FORECAST_28_DAYS
          - FORECAST_7_DAYS
          - CIRCUIT_UTILIZATION_ANOMALY
          type: string
    ForecastResult:
      properties:
        direction:
          description: 'The direction of traffic.

            '
          type: map[string,capacityprediction]
        site:
          description: 'The site.

            '
          type: string
        wn_path:
          description: 'The WAN path.

            '
          type: string
    HealthData:
      properties:
        fair:
          description: Fair
          type: object
        good:
          description: Good
          type: object
        others:
          description: Others
          type: object
        poor:
          description: Poor
          type: object
        total:
          description: Total
          type: number
        type:
          description: Type
          type: string
    HealthFilter:
      properties:
        application_health:
          description: Application Health
          items:
            description: Application Health
            enum:
            - POOR
            - FAIR
            - GOOD
            - OTHERS
            - ALL
            type: string
          type: array
        link_health:
          description: Link Health
          items:
            description: Link Health
            enum:
            - POOR
            - FAIR
            - GOOD
            - OTHERS
            - ALL
            type: string
          type: array
        site_health:
          description: Site Health
          items:
            description: Site Health
            enum:
            - POOR
            - FAIR
            - GOOD
            - OTHERS
            - ALL
            type: string
          type: array
    HealthScoreQuery:
      properties:
        end_time:
          description: 'The end time to get the healthscore metrics.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/HealthFilter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'The interval time of the healthscore responses.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        name:
          description: 'The name of the healthscore filter.

            '
          type: string
        start_time:
          description: 'The start time to get the healthscore metrics.

            '
          format: date
          type: string
        view:
          description: 'View the healthscore metrics.

            '
          enum:
          - SUMMARY
          - TIMESERIES
          type: string
    HealthScoreResponse:
      properties:
        data:
          description: "The details of the health data. \n"
          items:
            $ref: '#/components/schemas/HealthData'
          type: array
        end_time:
          description: 'The end time to get the health data.

            '
          format: date
          type: string
        interval:
          description: 'The interval time of the health data response.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        start_time:
          description: 'The start time to get the health data.

            '
          format: date
          type: string
        view:
          description: 'View the health score data.

            '
          type: object
    LqmStatsAggregateHealthScoreRequest:
      properties:
        aggregation:
          description: 'The aggregate value of the health score query.

            '
          enum:
          - min
          - max
          - avg
          type: string
        end_time:
          description: 'The end time to get the health score.

            '
          format: date
          type: string
        healthscore_type:
          description: 'The health score type.

            '
          enum:
          - Site
          - Circuit
          - AnynetLink
          type: string
        name:
          description: "The description of the health score request. Maz size = 128.\
            \ \n"
          type: string
        start_time:
          description: "The start time to get the health score query. \n"
          format: date
          type: string
      required:
      - healthscore_type
      - aggregation
    LqmStatsAggregateHealthScoreResponse:
      properties:
        aggregation:
          description: 'The aggregate value of the health score query.

            '
          enum:
          - min
          - max
          - avg
          type: string
        end_time:
          description: 'The end time to get the health score.

            '
          type: string
        healthscore_type:
          description: 'The health score type.

            '
          enum:
          - Site
          - Circuit
          - AnynetLink
          type: string
        items:
          description: "The values of the filter. \n"
          items:
            $ref: '#/components/schemas/LqmStatsHealthScoreAggregateData'
          type: array
        start_time:
          description: "The start time to get the health score query. \n"
          type: string
    LqmStatsClientHealthScoreAggregateData:
      properties:
        value:
          description: Value
          format: int32
          type: integer
    LqmStatsHealthScoreAggregateData:
      properties:
        count:
          description: Count
          format: int32
          type: integer
        data:
          description: Data
          items:
            $ref: '#/components/schemas/LqmStatsClientHealthScoreAggregateData'
          type: array
        health:
          description: Health
          enum:
          - others
          - poor
          - fair
          - good
          type: string
    MetricSchema:
      properties:
        description:
          description: 'The description of the metric schema. Max size = 256.

            '
        name:
          description: 'The name of the metric schema. Max size = 126.

            '
          type: string
        statistics:
          description: 'The metric statistics.

            '
          items:
            description: Statistics
            type: string
          type: array
        units:
          description: 'The units of the metrics.

            '
          items:
            description: Units
            type: string
          type: array
    MetricSchemaResponse:
      properties:
        metrics:
          description: 'The details of the metrics.

            '
          items:
            $ref: '#/components/schemas/MetricSchema'
          type: array
    Metrics:
      properties:
        series:
          description: 'Information on the series schema.

            '
          items:
            $ref: '#/components/schemas/Series'
          type: array
    MonitorMetricsFilter:
      properties:
        anynet_link:
          description: 'The anynet link ID.

            '
          items:
            description: Anynet Link
            type: string
          type: array
        app:
          description: 'The app for the metrics.

            '
          items:
            description: App
            type: string
          type: array
        direction:
          description: 'The direction of the traffic.

            '
          enum:
          - Ingress
          - Egress
          type: string
        element:
          description: "The element. \n"
          items:
            description: Element
            type: string
          type: array
        path:
          description: 'Path of the filter.

            '
          items:
            description: Path
            type: string
          type: array
        path_type:
          description: "The path type. \n"
          items:
            description: Path Type
            enum:
            - public_direct
            - public_vpn
            - private_direct
            - private_vpn
            - unknown
            - servicelink
            type: string
          type: array
        remote_site:
          description: "The remote site. \n"
          items:
            description: Remote Site
            type: string
          type: array
        site:
          description: 'The site.

            '
          items:
            description: Site
            type: string
          type: array
        sprid:
          description: Sprid
          type: string
        waninterface:
          description: "The WAN interface of the network. \n"
          items:
            description: Waninterface
            type: string
          type: array
    MonitorMetricsQuery:
      properties:
        end_time:
          description: 'The end time to get the monitor metrics.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/MonitorMetricsFilter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'The time period of the monitor metrics query.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        max_datapoints:
          description: 'The max data points.

            '
          format: int32
          type: integer
        metrics:
          description: 'The details of the metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
        name:
          description: 'The description of the monitor metric. Maz size = 128.

            '
          type: string
        start_time:
          description: "The start time to get the monitor metrics. \n"
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: 'View the monitor metric details.

            '
      required:
      - interval
      - metrics
    MonitorMetricsResponse:
      properties:
        metrics:
          description: 'The details of the metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
    MulticastRouteIncomingInterface:
      properties:
        iif:
          description: 'iif

            '
          type: string
        is_site_interface:
          description: 'The site interface of the multicast route.

            '
          type: boolean
        wanpath:
          description: 'The WAN path of the incoming interface.

            '
          type: string
    MulticastRouteOutgoingInterface:
      properties:
        is_site_interface:
          description: 'The site interface of the multicast route.

            '
          type: boolean
        oif:
          description: 'oif

            '
          type: string
        wanpaths:
          description: Wanpaths
          items:
            description: Wanpaths
            type: string
          type: array
    MulticastRouteOutgoingInterfaceStatsData:
      properties:
        is_site_interface:
          description: Is Site Interface
          type: boolean
        oif:
          description: Oif
          type: string
        wanpaths:
          description: Wanpaths
          items:
            $ref: '#/components/schemas/MulticastRouteWanpathStatsData'
          type: array
    MulticastRouteOutgoingInterfaceStatsResponse:
      properties:
        end_time:
          description: End Time
          type: string
        oif_list:
          description: Oif List
          items:
            $ref: '#/components/schemas/MulticastRouteOutgoingInterfaceStatsData'
          type: array
        start_time:
          description: Start Time
          type: string
    MulticastRouteSourceGroupStatsData:
      properties:
        flags:
          description: 'Flags for the multicast route table.

            '
          type: string
        group:
          description: 'The multicast query group IP address.

            '
          type: string
        incoming_interface:
          $ref: '#/components/schemas/MulticastRouteIncomingInterface'
          description: 'The interface on which multicast traffic is received.

            '
        outgoing_interfaces:
          description: 'The interface on which multicast traffic is sent.

            '
          items:
            $ref: '#/components/schemas/MulticastRouteOutgoingInterface'
          type: array
        rx_bytes:
          description: 'Indicates the volume of multicast traffic received in bytes
            at the interface.

            '
          format: int64
          type: integer
        rx_packets:
          description: 'Indicates the number of multicast traffic packets received
            at the interface.

            '
          format: int64
          type: integer
        source:
          description: 'The multicast query source IP address.

            '
          type: string
    MulticastRouteSourceGroupStatsResponse:
      properties:
        end_time:
          description: 'The end time of the multicast statistics query.

            '
          type: string
        source_group_list:
          description: 'The details of the source group.

            '
          items:
            $ref: '#/components/schemas/MulticastRouteSourceGroupStatsData'
          type: array
        start_time:
          description: 'The end time of the multicast statistics query.

            '
          type: string
    MulticastRouteStatsFilter:
      properties:
        element:
          description: 'The multicast query element ID.

            '
          items:
            description: Element
            type: string
          type: array
        group:
          description: 'The multicast query group IP address.

            '
          items:
            description: Group
            type: string
          type: array
        site:
          description: 'The multicast query site ID.

            '
          items:
            description: Site
            type: string
          type: array
        source:
          description: 'The multicast query source IP address.

            '
          items:
            description: Source
            type: string
          type: array
      required:
      - source
      - site
      - element
    MulticastRouteStatsQuery:
      properties:
        end_time:
          description: 'The end time of the multicast statistics query.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/MulticastRouteStatsFilter'
          description: 'Details of the filter used in this query.

            '
        is_active:
          description: 'The Active RP for the multicast.

            '
          type: boolean
        name:
          description: 'The name of the multicast query. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The end time of the multicast statistics query.

            '
          format: date
          type: string
        type:
          description: 'The type of multicast for the query.

            '
          enum:
          - WAN
          - LAN
          type: string
      required:
      - is_active
      - type
      - filter
    MulticastRouteWanpathStatsData:
      properties:
        last_active:
          format: date
          type: string
        tx_bytes:
          description: Tx Bytes
          format: int64
          type: integer
        tx_packets:
          description: Tx Packets
          format: int64
          type: integer
        wanpath:
          description: Wanpath
          type: string
    MulticastWANNeighborStatsFilter:
      properties:
        element:
          description: 'The multicast query element ID.

            '
          items:
            description: Element
            type: string
          type: array
        remote_site:
          description: 'The multicast query remote site ID.

            '
          items:
            description: Remote Site
            type: string
          type: array
        site:
          description: 'The multicast query site ID.

            '
          items:
            description: Site
            type: string
          type: array
      required:
      - remote_site
      - site
      - element
    MulticastWANNeighborStatsQuery:
      properties:
        end_time:
          description: 'The end time of the multicast statistics query.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/MulticastWANNeighborStatsFilter'
          description: 'Details of the filter used in this query.

            '
        name:
          description: 'The name of the multicast query. Maz size = 128.

            '
          type: string
        object_type:
          description: 'The type of multicast for the query.

            '
          enum:
          - MulticastWANTrafficStatistics
          - MulticastWANPIMStatistics
          - MulticastWANPathStatistics
          type: string
        start_time:
          description: 'The end time of the multicast statistics query.

            '
          format: date
          type: string
      required:
      - filter
      - object_type
    MulticastWANPIMStatsData:
      properties:
        end_time:
          description: 'The end time of the multicast statistics query.

            '
          type: string
        pim_assert_rx_pkts:
          description: 'The number of packets received for Assert messages.

            '
          format: int64
          type: integer
        pim_assert_tx_pkts:
          description: 'The number of packets transmitted for Assert messages.

            '
          format: int64
          type: integer
        pim_bsm_rx_pkts:
          description: 'The number of packets received for Bootstrap messages.

            '
          format: int64
          type: integer
        pim_bsm_tx_pkts:
          description: 'The number of packets transmitted for Bootstrap messages.

            '
          format: int64
          type: integer
        pim_hello_rx_pkts:
          description: 'The packets received for a PIM Hello message.

            '
          format: int64
          type: integer
        pim_hello_tx_pkts:
          description: 'The packets sent for a PIM Hello message.

            '
          format: int64
          type: integer
        pim_join_prune_rx_pkts:
          description: 'The join and prune packets received for a PIM Join/Prune message.

            '
          format: int64
          type: integer
        pim_join_prune_tx_pkts:
          description: 'The join and prune packets sent for a PIM Join/Prune message.

            '
          format: int64
          type: integer
        pim_register_rx_pkts:
          description: "The packets received for a PIM Register message.  \n"
          format: int64
          type: integer
        pim_register_stop_rx_pkts:
          description: 'The packets received for a PIM Register Stop message.

            '
          format: int64
          type: integer
        pim_register_stop_tx_pkts:
          description: 'The packets sent for a PIM Register Stop message.

            '
          format: int64
          type: integer
        pim_register_tx_pkts:
          description: 'The packets sent for a PIM Register message.

            '
          format: int64
          type: integer
        remote_site_id:
          description: 'The multicast query remote site ID.

            '
          type: string
        start_time:
          description: 'The end time of the multicast statistics query.

            '
          type: string
    MulticastWANPIMStatsResponse:
      properties:
        data:
          $ref: '#/components/schemas/MulticastWANPIMStatsData'
          description: 'The multicast WAN PIM statistics.

            '
    MulticastWANPathStats:
      properties:
        rx_bytes:
          description: 'Indicates the volume of multicast traffic received in bytes
            at the device interface.

            '
          format: int64
          type: integer
        rx_packets:
          description: 'Indicates the number of multicast traffic packets received
            at the device interface.

            '
          format: int64
          type: integer
        tx_bytes:
          description: 'Indicates the multicast traffic in terms of bytes transmitted
            from the device interface.

            '
          format: int64
          type: integer
        tx_packets:
          description: 'Indicates the number of multicast traffic packets transmitted
            from the device interface.

            '
          format: int64
          type: integer
        wanpath:
          description: 'The WAN path of the outgoing interface.

            '
          type: string
    MulticastWANPathStatsData:
      properties:
        end_time:
          description: 'The end time of the multicast statistics query.

            '
          type: string
        remote_site_id:
          description: Remote Site Id
          type: string
        start_time:
          description: 'The end time of the multicast statistics query.

            '
          type: string
        wanpath_list:
          description: 'The information of the WAN path.

            '
          items:
            $ref: '#/components/schemas/MulticastWANPathStats'
          type: array
    MulticastWANPathStatsResponse:
      properties:
        data:
          $ref: '#/components/schemas/MulticastWANPathStatsData'
          description: 'The multicast WAN path statistics.

            '
    MulticastWANTrafficStatsData:
      properties:
        end_time:
          description: 'The end time of the multicast statistics query.

            '
          type: string
        remote_site_id:
          description: "The multicast query remote site ID. \n"
          type: string
        rx_bytes:
          description: 'Indicates the volume of multicast traffic received in bytes
            at the interface.

            '
          format: int64
          type: integer
        rx_packets:
          description: 'Indicates the number of multicast traffic packets received
            at the interface.

            '
          format: int64
          type: integer
        start_time:
          description: Start Time
          type: string
        tx_bytes:
          description: 'Indicates the multicast traffic in terms of bytes transmitted
            from the interface.

            '
          format: int64
          type: integer
        tx_packets:
          description: 'Indicates the number of multicast traffic packets transmitted
            from the interface.

            '
          format: int64
          type: integer
    MulticastWANTrafficStatsResponse:
      properties:
        data:
          $ref: '#/components/schemas/MulticastWANTrafficStatsData'
          description: 'The multicast WAN traffic statistics.

            '
    NetworkPointMetrics:
      properties:
        name:
          description: 'The name of the network point metric. Maz size = 128.

            '
          type: string
        sites:
          description: 'The sites.

            '
          items:
            $ref: '#/components/schemas/PointMetricsSites'
          type: array
        unit:
          description: Unit
          type: string
    NetworkPointMetricsFilter:
      properties:
        direction:
          description: 'The direction of the traffic.

            '
          items:
            description: Direction
            type: string
          type: array
        element:
          description: 'The element.

            '
          items:
            description: Element
            type: string
          type: array
        interface:
          description: 'The configured interfaces.

            '
          items:
            description: Interfaces
            type: string
          type: array
        site:
          description: 'The site.

            '
          type: string
        sites:
          description: 'The sites.

            '
          items:
            description: Sites
            type: string
          type: array
        waninterface:
          description: 'The WAN interface of the network.

            '
          items:
            description: Waninterface
            type: string
          type: array
    NetworkPointMetricsQuery:
      properties:
        end_time:
          description: 'The end time of the network point metrics query. End times
            need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/NetworkPointMetricsFilter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'The interval time.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        metrics:
          description: 'The details of the network point metric. Metrics need to specified
            according to 2.0 specifications. Invalid metrics will be ignored and the
            result will not include them.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
        name:
          description: 'The name of the network point metric. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the network point metrics. Start times
            need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
      required:
      - filter
      - metrics
      - interval
    NetworkPointMetricsResponse:
      properties:
        interval:
          description: 'The interval time.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        metrics:
          description: 'The details of the network point metric. Metrics need to specified
            according to 2.0 specifications. Invalid metrics will be ignored and the
            result will not include them.

            '
          items:
            $ref: '#/components/schemas/NetworkPointMetrics'
          type: array
        start_time:
          description: 'The start time to get the network point metrics. Start times
            need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: 'The individual and summary views.

            '
    ObjectStatsFilter:
      properties:
        element:
          description: 'The object stats query element.

            '
          items:
            description: Element
            type: string
          type: array
        site:
          description: "The object stats query site. \n"
          items:
            description: Site
            type: string
          type: array
      required:
      - site
    ObjectStatsQuery:
      properties:
        end_time:
          description: "The end time of the object stats query. \n"
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/ObjectStatsFilter'
          description: 'Filters according to the specifications.

            '
        name:
          description: 'The name of the object stats. Maz size = 128.

            '
          type: string
        object_id:
          description: 'The object ID.

            '
          type: string
        object_type:
          description: 'The object type.

            '
          enum:
          - PeerStatistics
          - IntfStatistics
          - CellularModuleStatistics
          - CellularAPNStatistics
          - CellularAPNV6Statistics
          - MulticastStatistics
          - SecurityPolicyRule
          - IntfPoEStatistics
          - IntfLLDPStatistics
          - IntfAAAStatistics
          - IntfSTPStatistics
          - STPStatistics
          - PoEStatistics
          - AppSummaryStats
          type: string
        start_time:
          description: 'The start time of the object stats query.

            '
          format: date
          type: string
      required:
      - filter
      - object_id
      - object_type
    ObjectStatsResponse:
      properties:
        data:
          type: object
    ObjectStatsType:
      properties:
        description:
          description: 'The description of the object statistic. Maz size = 256.

            '
        name:
          description: 'The name of the object statistic. Maz size = 128.

            '
          type: string
    ObjectStatsTypeResponse:
      properties:
        object_statistics:
          description: 'Get details of the object statistics.

            '
          items:
            $ref: '#/components/schemas/ObjectStatsType'
          type: array
    PointData:
      properties:
        avail_disk:
          description: Avail Disk
          type: number
        avail_mem:
          description: Avail Mem
          type: number
        avidle:
          description: Avidle
          type: number
        avidlemn:
          description: Avidlemn
          type: number
        avidlemx:
          description: Avidlemx
          type: number
        bad_link_health_reason_bitmap:
          description: 'The overall health associated with the path for the observation
            period.

            '
          type: number
        downlink_jitter_avg:
          description: 'The downward jitter average associated with a path in milliseconds
            for the observation period.

            '
          type: number
        downlink_mos_avg:
          description: 'The downward mos average associated with the path as a percentage
            for the observation period.

            '
          type: number
        downlink_mos_max:
          description: 'The downward max mos average associated with the path as a
            percentage for the observation period.

            '
          type: number
        downlink_mos_min:
          description: 'The downward min mos average associated with the path as a
            percentage for the observation period.

            '
          type: number
        downlink_pkt_loss_avg:
          description: 'The downward packet loss average associated with the path
            as a percentage for the observation period.

            '
          type: number
        dskmn:
          description: Dskmn
          type: number
        dskmx:
          description: Dskmx
          type: number
        egress:
          description: Egress
          type: number
        ingress:
          description: Ingress
          type: number
        link_healthy:
          description: 'The overall health associated with the path for the observation
            period.

            '
          type: number
        memmn:
          description: Memmn
          type: number
        memmx:
          description: Memmx
          type: number
        rtt_latency:
          description: 'The RTT latency associated with the path in milliseconds for
            the observation period.

            '
          type: number
        sample_completeness:
          description: Sample Completeness
          type: number
        tunnel_healthscore:
          description: Tunnel Healthscore
          type: number
        uplink_jitter_avg:
          description: 'The upward jitter associated with the path in milliseconds
            for the observation period.

            '
          type: number
        uplink_mos_avg:
          description: 'The upward MOS associated with the path for the observation
            period. Value 1 - 5.

            '
          type: number
        uplink_mos_max:
          description: 'The upward max MOS associated with the path for the observation
            period.

            '
          type: number
        uplink_mos_min:
          description: 'The upward min MOS associated with the path for the observation
            period.

            '
          type: number
        uplink_pkt_loss_avg:
          description: 'The upward packet loss average associated with the path as
            a percentage for the observation period.

            '
          type: number
    PointMetricsAnynet:
      properties:
        anynet_link_id:
          description: 'The anynet link ID.

            '
          type: string
        data:
          $ref: '#/components/schemas/PointData'
          description: 'The data of the point metric Anynet.

            '
    PointMetricsQuery:
      properties:
        end_time:
          description: 'The end time of the point metrics query. End times need to
            be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/Filter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'The interval time.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        metrics:
          description: 'The details of the point metric. Metrics need to specified
            according to 2.0 specifications. Invalid metrics will be ignored and the
            result will not include them.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
        name:
          description: 'The name of the point metric. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the point metrics. Start times need
            to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: View
    PointMetricsResponse:
      properties:
        interval:
          description: 'The time period of the query interval.

            '
          type: string
        metrics:
          description: 'The details of the point metric. Metrics need to specified
            according to 2.0 specifications. Invalid metrics will be ignored and the
            result will not include them.

            '
          type: object
        start_time:
          description: 'The start time to get the point metrics. Start times need
            to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: 'The individual and summary views.

            '
    PointMetricsSites:
      properties:
        data:
          $ref: '#/components/schemas/PointData'
          description: 'The data of the point metric sites.

            '
        site_id:
          description: 'ID of the remote site. More details on the site can be retrieved
            by querying the sites API.

            '
          type: string
        waninterfaces:
          description: 'The WAN interfaces of the network.

            '
          items:
            $ref: '#/components/schemas/PointMetricsWanPath'
          type: array
    PointMetricsWanPath:
      properties:
        anynetlinks:
          description: 'The details of the anynet links.

            '
          items:
            $ref: '#/components/schemas/PointMetricsAnynet'
          type: array
        data:
          $ref: '#/components/schemas/PointData'
          description: 'The data of the point metric WAN paths.

            '
        wn_path_id:
          description: 'The WAN path ID.

            '
          type: string
    QosMetricsFilter:
      properties:
        direction:
          description: 'The direction of the traffic.

            '
          enum:
          - Ingress
          - Egress
          type: string
        element:
          description: 'The element.

            '
          items:
            description: Element
            type: string
          type: array
        priority:
          description: 'Priority level set for the QoS metric filter.

            '
          items:
            description: Priority
            type: string
          type: array
        site:
          description: 'The sites.

            '
          items:
            description: Site
            type: string
          type: array
        traffic_type:
          description: 'The traffic type for the QoS metric.

            '
          items:
            description: Traffic Type
            type: string
          type: array
        waninterface:
          description: 'The WAN interface of the network.

            '
          items:
            description: Waninterface
            type: string
          type: array
      required:
      - traffic_type
      - priority
    QosMetricsQuery:
      properties:
        end_time:
          description: 'The end time to get the QoS metrics.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/QosMetricsFilter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'The time period of the QoS query.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        max_datapoints:
          description: 'The max data points.

            '
          format: int32
          type: integer
        metrics:
          description: 'Metrics: Valid ListObject(allowDuplicate = true, allowEmpty
            = false, allowNull = false, listMaxSize = 0, error = INVALID_FILTER: Schema
            check failed - Invalid value for param {}, required = true) '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
        name:
          description: 'The description of the QoS metric. Maz size = 128.

            '
          type: string
        start_time:
          description: "The start time to get the QoS metrics. \n"
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: 'View the QoS metric details.

            '
      required:
      - filter
      - interval
      - metrics
    QosMetricsResponse:
      properties:
        metrics:
          description: 'The details of the metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
    RadiusClientMetricsFilter:
      properties:
        element:
          description: Element
          items:
            description: Element
            type: string
          type: array
        interface:
          description: Interfaces
          items:
            description: Interfaces
            type: string
          type: array
        site:
          description: Site
          items:
            description: Site
            type: string
          type: array
    RadiusClientsRequest:
      properties:
        end_time:
          description: 'The end time to get the client metrics. If not specified,
            it is default to now. End times need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/RadiusClientMetricsFilter'
          description: 'Filters according to the specifications.

            '
        max_datapoints:
          description: 'The max data points.

            '
          type: integer
        name:
          description: 'The description of the client metrics. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the client metrics. If not specified,
            it is default to epoch. Start times need to be specified in ISO8601 UTC
            format.

            '
          format: date
          type: string
    RadiusClientsResponse:
      properties:
        end_time:
          description: "The end time to get the client metrics. If not specified,\
            \ it is default to now. End times need to be specified in ISO8601 UTC\
            \ format.      \n"
          type: string
        items:
          description: 'Filters according to the specifications.

            '
          items:
            $ref: '#/components/schemas/ClientDetails'
          type: array
        start_time:
          description: 'The start time to get the client metrics. If not specified,
            it is default to epoch. Start times need to be specified in ISO8601 UTC
            format.

            '
          type: string
    RadiusMetricsFilter:
      properties:
        client_mac_address:
          description: 'The client mac address.

            '
          items:
            description: Client Mac Address
            type: string
          type: array
        direction:
          description: 'The direction of the traffic.

            '
          enum:
          - Ingress
          - Egress
          type: string
        element:
          description: 'The element.

            '
          items:
            description: Element
            type: string
          type: array
        interface:
          description: 'The configured interfaces.

            '
          items:
            description: Interfaces
            type: string
          type: array
        site:
          description: 'The site.

            '
          items:
            description: Site
            type: string
          type: array
    RadiusMetricsQuery:
      properties:
        end_time:
          description: 'The end time to get the client metrics. If not specified,
            it is default to now. End times need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/RadiusMetricsFilter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'Interval: Required(error = REQUIRED_PROPERTY: Schema check
            failed - {} is a required property) '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        max_datapoints:
          description: 'The max data points.

            '
          format: int32
          type: integer
        metrics:
          description: 'The details of the radius metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
        name:
          description: 'The description of the client metrics. Maz size = 128.

            '
          type: string
        start_time:
          description: 'The start time to get the client metrics. If not specified,
            it is default to epoch. Start times need to be specified in ISO8601 UTC
            format.

            '
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: 'View the active RADIUS server details.

            '
      required:
      - interval
      - metrics
    RadiusMetricsResponse:
      properties:
        metrics:
          description: 'The details of the radius metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
    Series:
      properties:
        data:
          description: Data
          items:
            $ref: '#/components/schemas/Data'
          type: array
        interval:
          description: 'The interval time.

            '
          type: string
        name:
          description: 'The name.

            '
          type: string
        unit:
          description: Unit
          type: string
        view:
          description: 'View the active series details.

            '
          type: object
    SysMetricsFilter:
      properties:
        direction:
          description: 'The direction of the traffic.

            '
          enum:
          - Ingress
          - Egress
          type: string
        element:
          description: "The element. \n"
          items:
            description: Element
            type: string
          type: array
        interface:
          description: 'The configured interfaces.

            '
          items:
            description: Interfaces
            type: string
          type: array
        site:
          description: 'The site.

            '
          items:
            description: Site
            type: string
          type: array
    SysMetricsQuery:
      properties:
        end_time:
          description: 'The end time to get the system metrics.

            '
          format: date
          type: string
        filter:
          $ref: '#/components/schemas/SysMetricsFilter'
          description: 'Filters according to the specifications.

            '
        interval:
          description: 'The time period of the system metrics query.

            '
          enum:
          - 10sec
          - 1min
          - 5min
          - 1hour
          - 1day
          type: string
        max_datapoints:
          description: 'The max data points.

            '
          format: int32
          type: integer
        metrics:
          description: 'The details of the metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
        name:
          description: 'The description of the system metric. Maz size = 128.

            '
          type: string
        start_time:
          description: "The start time to get the system metrics. \n"
          format: date
          type: string
        view:
          $ref: '#/components/schemas/View'
          description: "View the system metric details.               \n"
      required:
      - interval
      - metrics
    SysMetricsResponse:
      properties:
        metrics:
          description: 'The details of the metrics.

            '
          items:
            $ref: '#/components/schemas/Metrics'
          type: array
    TopNComparator:
      properties:
        end_time:
          description: 'The end date to get the top n sites/apps. Start and end time
            need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        measurement:
          description: 'The measurement values of the Top N reports.

            '
          enum:
          - value
          - value_growth
          - value_reduction
          - percentage_growth
          - percentage_reduction
          type: string
        start_time:
          description: 'The start date to get the top n sites/apps. Start and end
            time need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
    TopNGrowth:
      properties:
        compare:
          $ref: '#/components/schemas/TopNComparator'
          description: "The topn n comparator metrics. \n"
        filter:
          $ref: '#/components/schemas/TopNGrowthFilter'
          description: 'Filters according to the specifications.

            '
        limit:
          description: "The query limit. \n"
          type: integer
        metrics:
          $ref: '#/components/schemas/Metrics'
          description: 'The topn n metrics. Metrics need to specified according to
            2.0 specifications.

            '
        type:
          description: "The type of top n metrics.  \n"
          enum:
          - app
          - site
          type: string
      required:
      - metrics
      - type
    TopNGrowthFilter:
      properties:
        app:
          description: 'Filter by apps.

            '
          items:
            description: App
            type: string
          type: array
        direction:
          description: 'Filter by the direction of the traffic.

            '
          items:
            description: Direction
            enum:
            - Ingress
            - Egress
            type: string
          type: array
        element:
          description: 'Filter by element.

            '
          items:
            description: Element
            type: string
          type: array
        path:
          description: 'Filter by path.

            '
          items:
            description: Path
            type: string
          type: array
        path_type:
          description: 'Filter by path type. Maximum number of allowed path types
            is 10.

            '
          items:
            description: Path Type
            enum:
            - public_direct
            - public_vpn
            - private_direct
            - private_vpn
            - unknown
            - servicelink
            type: string
          type: array
        site:
          description: 'Filter by site. Max size = 10.

            '
          items:
            description: Site
            type: string
          type: array
        waninterface:
          description: 'Filter by wan interfaces. Max size = 10.

            '
          items:
            description: Waninterface
            type: string
          type: array
    TopNGrowthQuery:
      properties:
        end_time:
          description: 'The end time to get the top n sites/apps. If not specified,
            it is default to now. End times need to be specified in ISO8601 UTC format.

            '
          format: date
          type: string
        name:
          description: "The name of the of the top n sites/apps. \n"
          type: string
        start_time:
          description: "The start time to get the top n sites/apps. If not specified,\
            \ it is default to epoch. Start times need to be specified in ISO8601\
            \ UTC format. \n"
          format: date
          type: string
        top_n:
          $ref: '#/components/schemas/TopNGrowth'
          description: 'The details of the limit and type of the Top N reports.

            '
      required:
      - top_n
    View:
      properties:
        individual:
          description: 'The individual view values.

            '
          enum:
          - ELEMENT
          - INTERFACE
          - CELLULAR_MODULE
          - DIRECTION
          - SITE
          - APP
          - PATH
          - PATH_TYPE
          - WANINTERFACE
          - PRIORITY
          - TRAFFIC_TYPE
          - COMMON
          - CLIENT_MAC_ADDRESS
          - USER
          - USER_EMAIL
          - RESOLUTION_QUALITY
          - None
          type: string
        summary:
          description: 'The summary of the view.

            '
          type: boolean
info:
  contact: {}
  description: List of APIs used to retrieve SDWAN metrics such as badnwidth utilization,
    TCP transaction, application health, application performance, LQM, flows, interface,
    and system metrics.
  title: Metrics
  version: Latest
openapi: 3.0.0
paths:
  /sdwan/v2.0/api/monitor/aaa_client_metrics:
    post:
      description: List the AAA client metrics. The start time, end time, and max
        datapoints attibutes are optional with at least one of them specified. All
        three attributes can not be specified, as the result will be ambiguous.
      operationId: post-sdwan-v2.0-api-monitor-aaa_client_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusClientsRequest'
        description: Query request for getting aaaclientmetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusClientsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: EMPTY_REQ_BODY
                  - code: SCHEMA_MISMATCH
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: EMPTY_FILTER
                  - code: INTERFACES_WITH_ELEMENT_MISSING
                  - code: SITE_WITH_ELEMENT_MISSING
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Radius Client Metrics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aaa_metrics:
    get:
      description: List the radius metrics schema.
      operationId: get-sdwan-v2.0-api-monitor-aaa_metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSchemaResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: UNSUPPORTED_SCHEMA_VERSION
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Radius Metrics Schema (v2.0)
      tags:
      - Metrics
    post:
      description: List the radius metrics of eapol rx and tx messages. The start
        time, end time, and max datapoints attibutes are optional with at least one
        of them specified. All three attributes can not be specified, as the result
        will be ambiguous.
      operationId: post-sdwan-v2.0-api-monitor-aaa_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusMetricsQuery'
        description: Query request for getting aaametrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: METRIC_UNIT_NOT_SUPPORTED
                  - code: UNSUPPORTED_FILTER_IN_VERSION
                  - code: UNSUPPORTED_FILTER_FOR_METRIC
                  - code: MISSING_INTERFACE_FILTER_PROPERTY
                  - code: MISSING_ELEMENT_FILTER_PROPERTY
                  - code: UNSUPPORTED_DIRECTION_FILTER
                  - code: DIRECTION_FILTER_EMPTY
                  - code: DIRECTION_VIEW_NOT_SUPPORTED
                  - code: MAX_DATAPOINTS_END_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Radius Metrics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aaa_metrics/topn:
    post:
      description: List the radius metrics interface top N data.
      operationId: post-sdwan-v2.0-api-monitor-aaa_metrics-topn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseTopNQuery'
        description: Filter for top N
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTopNResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: APP_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: SITE_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: FILTER_NOT_SUPPORTED_WITHOUT_SITE
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: PATH_NOT_SUPPORTED_WITH_PATH_TYPE
                  - code: TOPN_BASIS_NOT_SUPPORTED_WITHOUT_FILTER
                  - code: INVALID_LIMIT
                  - code: REQUIRED_PROPERTY
                  - code: LENGTH_EXCEEDED
                  - code: PATH_TYPE_LIST_LENGTH_EXCEEDED
                  - code: INVALID_FILTER
                  - code: FILTER_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Radius Metrics Top N (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aggregates/application/qos:
    post:
      description: Query all the pplication QoS aggregates.
      operationId: post-sdwan-v2.0-api-monitor-aggregates-application-qos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationQosAggregatesQuery'
        description: Filters for application qos aggregates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatesQueryResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: REQUIRED_PROPERTY
                  - code: INVALID_STATS_REQUEST_BODY
                  - code: INVALID_FILTER
                  - code: APPLICATION_NOT_SUPPORTED
                  - code: MULTIPLE_QOS_TYPE_NOT_SUPPORTED
                  - code: REQUESTED_METRIC_NOT_SUPPORTED
                  - code: REQUESTED_METRIC_UNIT_NOT_SUPPORTED
                  - code: REQUESTED_METRIC_STATISTICS_NOT_SUPPORTED
                  - code: REQUESTED_VIEW_NOT_SUPPORTED
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: OTHER_METRICS_NOT_SUPPORTED
                  - code: REQUESTED_VIEW_NOT_SUPPORTED_FOR_METRIC
                  - code: SERVICE_UNAVAILABLE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Application QoS Aggregates (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aggregates/multicast/mroute:
    post:
      description: Query all the multicast statistics.
      operationId: post-sdwan-v2.0-api-monitor-aggregates-multicast-mroute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastRouteStatsQuery'
        description: Details of object stats query
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MulticastRouteSourceGroupStatsResponse'
                - $ref: '#/components/schemas/MulticastRouteOutgoingInterfaceStatsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: MULTICAST_QUERY_MISSING_FILTER
                  - code: MULTICAST_QUERY_MISSING_ELEMENT_ID
                  - code: MULTICAST_QUERY_INVALID_ELEMENT_ID
                  - code: MULTICAST_QUERY_MISSING_SITE_ID
                  - code: MULTICAST_QUERY_INVALID_SITE_ID
                  - code: MULTICAST_MROUTE_QUERY_MISSING_IS_ACTIVE
                  - code: MULTICAST_MROUTE_QUERY_INVALID_SOURCE_IP
                  - code: MULTICAST_MROUTE_QUERY_INVALID_GROUP_IP
                  - code: MULTICAST_MROUTE_QUERY_UNSUPPORTED_TIME_FIELDS
                  - code: MULTICAST_MROUTE_QUERY_MISSING_SOURCE_OR_GROUP
                  - code: MULTICAST_MROUTE_QUERY_MISSING_TYPE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Multicast Statistics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aggregates/multicast/wan_neighbor:
    post:
      description: Query all the WAN neighbor statistics.
      operationId: post-sdwan-v2.0-api-monitor-aggregates-multicast-wan_neighbor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastWANNeighborStatsQuery'
        description: Details of object stats query
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MulticastWANPathStatsResponse'
                - $ref: '#/components/schemas/MulticastWANPIMStatsResponse'
                - $ref: '#/components/schemas/MulticastWANTrafficStatsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: MULTICAST_WAN_NEIGHBOR_QUERY_MISSING_OBJECT_TYPE
                  - code: MULTICAST_WAN_NEIGHBOR_QUERY_MISSING_REMOTE_SITE_ID
                  - code: MULTICAST_WAN_NEIGHBOR_QUERY_INVALID_REMOTE_SITE_ID
                  - code: MULTICAST_QUERY_MISSING_FILTER
                  - code: MULTICAST_QUERY_MISSING_ELEMENT_ID
                  - code: MULTICAST_QUERY_INVALID_ELEMENT_ID
                  - code: MULTICAST_QUERY_MISSING_SITE_ID
                  - code: MULTICAST_QUERY_INVALID_SITE_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query WAN Neighbor Statistics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aiops/aggregates:
    get:
      description: Get site or path level aggregated stats API v2.0
      operationId: get-sdwan-v2.0-api-monitor-aiops-aggregates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateStatsResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get site or path level aggregated statistics (v2.0)
      tags:
      - Metrics
    post:
      description: Query and get the site or path level aggregated statistics.
      operationId: post-sdwan-v2.0-api-monitor-aiops-aggregates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregateStatsQuery'
        description: Details of app object stats query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateStatsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: AGGREGATE_STATS_QUERY_AGGREGATES_REQUIRED
                  - code: AGGREGATE_STATS_APP_ID_REQUIRED
                  - code: AGGREGATE_STATS_APP_LENGTH_EXCEEDED
                  - code: AGGREGATE_STATS_QUERY_APP_INVALID_VALUE
                  - code: AGGREGATE_STATS_QUERY_FILTER_SITE_ID_REQUIRED
                  - code: AGGREGATE_STATS_QUERY_SITE_LIST_LENGTH_EXCEEDED
                  - code: AGGREGATE_STATS_QUERY_SITE_ID_INVALID_VALUE
                  - code: AGGREGATE_STATS_QUERY_PATH_ID_INVALID_VALUE
                  - code: AGGREGATE_STATS_QUERY_AGGREGATES_UNSUPPORTED
                  - code: AGGREGATE_STATS_QUERY_START_TIME_BEFORE_END_TIME
                  - code: AGGREGATE_STATS_QUERY_FILTER_UNSUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query and Get Site or Path Level Aggregated Statistics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aiops/anomaly:
    get:
      description: Get circuit bandwidth anomaly.
      operationId: get-sdwan-v2.0-api-monitor-aiops-anomaly
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPredictionResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get Circuit Bandwidth Anomaly (v2.0)
      tags:
      - Metrics
    post:
      description: Query circuit bandwidth anomaly. Start and end time need to be
        specified in ISO8601 UTC format. Forecast basis need be to specified according
        to 2.0 specifications.
      operationId: post-sdwan-v2.0-api-monitor-aiops-anomaly
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityPredictionQuery'
        description: Query request for getting circuit bandwidth anomaly based on
          anomaly basis
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPredictionQuery'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: MAX_DATAPOINTS_END_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Circuit Bandwidth Anomaly (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aiops/forecast:
    get:
      description: Get capacity prediction for site.
      operationId: get-sdwan-v2.0-api-monitor-aiops-forecast
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPredictionResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get Capacity Prediction (v2.0)
      tags:
      - Metrics
    post:
      description: 'Get capacity prediction for site v2.0

        Note

        * Start and end time need to be specified in ISO8601 UTC format.

        * Forecast basis need be to specified according to 2.0 specifications.

        * Type need to be specified according to the specifications.

        '
      operationId: post-sdwan-v2.0-api-monitor-aiops-forecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityPredictionQuery'
        description: Query request for getting capacity prediction based on type and
          forecast basis
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPredictionQuery'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: MAX_DATAPOINTS_END_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Capacity Prediction (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aiops/health:
    get:
      description: Get healthscore parameters.
      operationId: get-sdwan-v2.0-api-monitor-aiops-health
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthScoreResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get Healthscore Parameters (v2.0)
      tags:
      - Metrics
    post:
      description: Get health metrics for sites, links, and applications. Start time
        need to be specified in ISO8601 UTC format. Metrics need to specified according
        to 2.0 specifications.
      operationId: post-sdwan-v2.0-api-monitor-aiops-health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthScoreQuery'
        description: Query request for getting healthscore metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthScoreResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: FUTURE_TIME_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Healthscore Metrics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aiops/object_stats:
    get:
      description: Get the app object statistics.
      operationId: get-sdwan-v2.0-api-monitor-aiops-object_stats
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppObjectStatsResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get App Object Statistics (v2.0)
      tags:
      - Metrics
    post:
      description: Run a query to get app object stats.
      operationId: post-sdwan-v2.0-api-monitor-aiops-object_stats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectStatsQuery'
        description: Details of app object stats query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStatsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: OBJECT_STATS_QUERY_OBJECT_TYPE_REQUIRED
                  - code: OBJECT_STATS_QUERY_OBJECT_ID_REQUIRED
                  - code: OBJECT_STATS_QUERY_FILTER_REQUIRED
                  - code: OBJECT_STATS_QUERY_FILTER_SITE_ID_REQUIRED
                  - code: OBJECT_STATS_QUERY_OBJECT_TYPE_UNSUPPORTED
                  - code: OBJECT_STATS_QUERY_OBJECT_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_ELEMENT_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_SITE_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_ELEMENT_LIST_LENGTH_EXCEEDED
                  - code: OBJECT_STATS_QUERY_SITE_LIST_LENGTH_EXCEEDED
                  - code: OBJECT_STATS_QUERY_START_TIME_BEFORE_END_TIME
                  - code: INVALID_STATS_REQUEST_BODY
                  - code: FUTURE_TIME_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query App Object Statistics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/aiops/topn:
    post:
      description: Get TopN sites or circuits based on growth. Start time need to
        be specified in ISO8601 UTC format. Metrics need to specified according to
        2.0 specifications.
      operationId: post-sdwan-v2.0-api-monitor-aiops-topn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopNGrowthQuery'
        description: Query request for getting TopN Sites/Apps based on growth
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopNGrowthQuery'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: FUTURE_TIME_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get TopN Data with Metrics Output (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/application/qos_metrics:
    post:
      description: Query the time series application QoS metrics.
      operationId: post-sdwan-v2.0-api-monitor-application-qos_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationQosMetricsQuery'
        description: Filters for application qos metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationQosMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: REQUIRED_PROPERTY
                  - code: INVALID_STATS_REQUEST_BODY
                  - code: INVALID_FILTER
                  - code: APPLICATION_NOT_SUPPORTED
                  - code: MULTIPLE_QOS_TYPE_NOT_SUPPORTED
                  - code: REQUESTED_METRIC_NOT_SUPPORTED
                  - code: REQUESTED_METRIC_UNIT_NOT_SUPPORTED
                  - code: REQUESTED_METRIC_STATISTICS_NOT_SUPPORTED
                  - code: MAX_DATAPOINTS_NOT_SUPPORTED
                  - code: REQUESTED_VIEW_NOT_SUPPORTED
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: OTHER_METRICS_NOT_SUPPORTED
                  - code: REQUESTED_VIEW_NOT_SUPPORTED_FOR_METRIC
                  - code: MOS_METRICS_NOT_SUPPORTED
                  - code: SERVICE_UNAVAILABLE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Time Series Application QoS Metrics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/application/qos_metrics/{application_name}:
    get:
      description: Get details of application QoS metrics.
      operationId: get-sdwan-v2.0-api-monitor-application-qos_metrics-application_name
      parameters:
      - description: The name of the application.
        in: path
        name: application_name
        required: true
        schema:
          description: Application Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSchemaResponse'
          description: Successful Operation
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: APPLICATION_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Application QoS Metrics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/application/users:
    post:
      description: Query the application user list.
      operationId: post-sdwan-v2.0-api-monitor-application-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUsersQuery'
        description: Filters for application qos point metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUsersResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: REQUIRED_PROPERTY
                  - code: INVALID_STATS_REQUEST_BODY
                  - code: APPLICATION_NOT_SUPPORTED
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: SERVICE_UNAVAILABLE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Application Users (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/cellular_metrics:
    get:
      description: List all the cellular metrics schema.
      operationId: get-sdwan-v2.0-api-monitor-cellular_metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellularmetricsSchemaResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: UNSUPPORTED_SCHEMA_VERSION
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Cellular Metrics Schema (v2.0)
      tags:
      - Metrics
    post:
      description: "Get cellular metrics like SNR, Cellular bandwidth usage etc. External\
        \ API used for stats queries.\nBelow are the tenet for queries\n* interval\
        \ is required\n* start_time, end_time and max_datapoints are optional with\
        \ the following restrictions, at least one of them needs to be specified.\n\
        \  all the three can not be specified, as the result is ambiguous.\nNote\n\
        * Start time, if not specified, default to epoch.\n* End time, if not specified,\
        \ default to now.\n* Limit, if not specified, defaults to None..\n* Start\
        \ and end times need to be specified in ISO8601 UTC format.\n* Metrics need\
        \ to specified according to 2.1 specifications. Invalid metrics will be ignored\
        \ and the result will not include them.\n* Filters need to be specified according\
        \ to the specifications.\n"
      operationId: post-sdwan-v2.0-api-monitor-cellular_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CellularmetricsQuery'
        description: Query request for getting cellularmetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellularmetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: METRIC_UNIT_NOT_SUPPORTED
                  - code: UNSUPPORTED_FILTER_IN_VERSION
                  - code: UNSUPPORTED_FILTER_FOR_METRIC
                  - code: MISSING_INTERFACE_FILTER_PROPERTY
                  - code: MISSING_ELEMENT_FILTER_PROPERTY
                  - code: UNSUPPORTED_DIRECTION_FILTER
                  - code: DIRECTION_FILTER_EMPTY
                  - code: DIRECTION_VIEW_NOT_SUPPORTED
                  - code: MAX_DATAPOINTS_END_TIME
                  - code: VERSION_NOT_SUPPORTED
                  - code: METRIC_STATISTICS_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SERVER_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Cellular metrics for Version 2.0 (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/cellular_metrics/topn:
    post:
      description: Query all the cellular metrics Topn N.
      operationId: post-sdwan-v2.0-api-monitor-cellular_metrics-topn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseTopNQuery'
        description: Filter for top N
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTopNResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: APP_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: SITE_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: FILTER_NOT_SUPPORTED_WITHOUT_SITE
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: PATH_NOT_SUPPORTED_WITH_PATH_TYPE
                  - code: TOPN_BASIS_NOT_SUPPORTED_WITHOUT_FILTER
                  - code: INVALID_LIMIT
                  - code: TOPN_BASIS_REQUIRED
                  - code: TOP_N_REQUIRED
                  - code: TOPN_TYPE_REQUIRED
                  - code: PATH_TYPE_LIST_LENGTH_EXCEEDED
                  - code: FILTER_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Cellular Metrics Top N (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/lqm_point_metrics:
    post:
      description: Query all the link quality point metrics.
      operationId: post-sdwan-v2.0-api-monitor-lqm_point_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointMetricsQuery'
        description: Query request for getting lqm metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: FUTURE_TIME_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query LQM Point Metrics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/network_point_metrics:
    post:
      description: Query the network point metrics bandwidth usage for all sites across
        tenants.
      operationId: post-sdwan-v2.0-api-monitor-network_point_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPointMetricsQuery'
        description: Query request for getting network point metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPointMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: METRIC_NOT_SUPPORTED
                  - code: METRIC_UNIT_NOT_SUPPORTED
                  - code: VERSION_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Query Network Point Metrics Bandwidth Usage (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/network_point_metrics_bw:
    post:
      description: Query the network point metrics bandwidth usage for all sites across
        tenants.
      operationId: post-sdwan-v2.0-api-monitor-network_point_metrics_bw
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPointMetricsQuery'
        description: Query request for getting network point metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPointMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: METRIC_NOT_SUPPORTED
                  - code: METRIC_UNIT_NOT_SUPPORTED
                  - code: VERSION_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Query Network Point Metrics Bandwidth Usage (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/network_point_metrics_hs:
    post:
      description: Query the network point metrics health score for all sites across
        tenants.
      operationId: post-sdwan-v2.0-api-monitor-network_point_metrics_hs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPointMetricsQuery'
        description: Query request for getting network point metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPointMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: METRIC_NOT_SUPPORTED
                  - code: VERSION_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Query Network Point Metrics Health Score (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/qos_metrics:
    get:
      description: Get details of QoS metrics.
      operationId: get-sdwan-v2.0-api-monitor-qos_metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSchemaResponse'
          description: Successful Operation
      summary: Get QoS Metrics (v2.0)
      tags:
      - Metrics
    post:
      description: Provides time series data for QOS stats
      operationId: post-sdwan-v2.0-api-monitor-qos_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosMetricsQuery'
        description: Details of qos metrics query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: REQUIRED_PROPERTY
                  - code: INVALID_FILTER
                  - code: MAX_DATAPOINTS_NOT_SUPPORTED
                  - code: REQUESTED_VIEW_NOT_SUPPORTED
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: REQUESTED_METRIC_NOT_SUPPORTED
                  - code: REQUESTED_METRIC_UNIT_NOT_SUPPORTED
                  - code: REQUESTED_METRIC_STATISTICS_NOT_SUPPORTED
                  - code: INVALID_STATS_REQUEST_BODY
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Qos metrics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/sys_metrics/topn:
    post:
      description: Query the details of the system metrics Top N.
      operationId: post-sdwan-v2.0-api-monitor-sys_metrics-topn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseTopNQuery'
        description: Filter for top N
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTopNResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: APP_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: SITE_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: FILTER_NOT_SUPPORTED_WITHOUT_SITE
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: PATH_NOT_SUPPORTED_WITH_PATH_TYPE
                  - code: TOPN_BASIS_NOT_SUPPORTED_WITHOUT_FILTER
                  - code: INVALID_LIMIT
                  - code: REQUIRED_PROPERTY
                  - code: LENGTH_EXCEEDED
                  - code: PATH_TYPE_LIST_LENGTH_EXCEEDED
                  - code: INVALID_FILTER
                  - code: FILTER_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query System Metrics Top N (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/monitor/sys_point_metrics:
    post:
      description: Query the details of the system point metrics.
      operationId: post-sdwan-v2.0-api-monitor-sys_point_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointMetricsQuery'
        description: Query request for getting sysmetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: FUTURE_TIME_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query System Point Metrics (v2.0)
      tags:
      - Metrics
  /sdwan/v2.0/api/tenants/{esp_tenant_id}/monitor/aggregates/healthscore:
    post:
      description: Query the aggregate health score for MSP and its clients.
      operationId: post-sdwan-v2.0-api-tenants-esp_tenant_id-monitor-aggregates-healthscore
      parameters:
      - description: ID of the MSP tenant.
        in: path
        name: esp_tenant_id
        required: true
        schema:
          description: Esp Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LqmStatsAggregateHealthScoreRequest'
        description: Filters for Aggregate HealthScore
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LqmStatsAggregateHealthScoreResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: AGGREGATION_REQUIRED
                  - code: HEALTHSCORE_TYPE_REQUIRED
                  - code: START_TIME_GREATER_THAN_END_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Aggregate Health Score (v2.0)
      tags:
      - Metrics
  /sdwan/v2.1/api/monitor/aiops/aggregates:
    get:
      description: Get the site or path level aggregated statistics.
      operationId: get-sdwan-v2.1-api-monitor-aiops-aggregates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateStatsResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get Site or Path Level Aggregated Statistics (v2.1)
      tags:
      - Metrics
    post:
      description: Query and get the site or path level aggregated statistics.
      operationId: post-sdwan-v2.1-api-monitor-aiops-aggregates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregateStatsQuery'
        description: Details of app object stats query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateStatsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: AGGREGATE_STATS_QUERY_AGGREGATES_REQUIRED
                  - code: AGGREGATE_STATS_APP_ID_REQUIRED
                  - code: AGGREGATE_STATS_APP_LENGTH_EXCEEDED
                  - code: AGGREGATE_STATS_QUERY_APP_INVALID_VALUE
                  - code: AGGREGATE_STATS_QUERY_FILTER_SITE_ID_REQUIRED
                  - code: AGGREGATE_STATS_QUERY_SITE_LIST_LENGTH_EXCEEDED
                  - code: AGGREGATE_STATS_QUERY_SITE_ID_INVALID_VALUE
                  - code: AGGREGATE_STATS_QUERY_PATH_ID_INVALID_VALUE
                  - code: AGGREGATE_STATS_QUERY_AGGREGATES_UNSUPPORTED
                  - code: AGGREGATE_STATS_QUERY_START_TIME_BEFORE_END_TIME
                  - code: AGGREGATE_STATS_QUERY_FILTER_UNSUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query and Get Site or Path Level Aggregated Statistics (v2.1)
      tags:
      - Metrics
  /sdwan/v2.1/api/monitor/aiops/forecast:
    get:
      description: Get capacity forecast prediction for site.
      operationId: get-sdwan-v2.1-api-monitor-aiops-forecast
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPredictionResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get Capacity Forecast (v2.1)
      tags:
      - Metrics
    post:
      description: Get capacity prediction for site. Start and end time need to be
        specified in ISO8601 UTC format.
      operationId: post-sdwan-v2.1-api-monitor-aiops-forecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityPredictionQuery'
        description: Query request for getting capacity prediction based on type and
          forecast basis
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPredictionQuery'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: MAX_DATAPOINTS_END_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Capacity Prediction (v2.1)
      tags:
      - Metrics
  /sdwan/v2.1/api/monitor/aiops/object_stats:
    get:
      description: Get the app object statistics.
      operationId: get-sdwan-v2.1-api-monitor-aiops-object_stats
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStatsResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get App Object Statistics (v2.1)
      tags:
      - Metrics
    post:
      description: Run a query to get app object stats.
      operationId: post-sdwan-v2.1-api-monitor-aiops-object_stats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectStatsQuery'
        description: Details of app object stats query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStatsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: OBJECT_STATS_QUERY_OBJECT_TYPE_REQUIRED
                  - code: OBJECT_STATS_QUERY_OBJECT_ID_REQUIRED
                  - code: OBJECT_STATS_QUERY_FILTER_REQUIRED
                  - code: OBJECT_STATS_QUERY_FILTER_SITE_ID_REQUIRED
                  - code: OBJECT_STATS_QUERY_OBJECT_TYPE_UNSUPPORTED
                  - code: OBJECT_STATS_QUERY_OBJECT_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_ELEMENT_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_SITE_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_ELEMENT_LIST_LENGTH_EXCEEDED
                  - code: OBJECT_STATS_QUERY_SITE_LIST_LENGTH_EXCEEDED
                  - code: OBJECT_STATS_QUERY_START_TIME_BEFORE_END_TIME
                  - code: INVALID_STATS_REQUEST_BODY
                  - code: FUTURE_TIME_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query App Object Statistics (v2.1)
      tags:
      - Metrics
  /sdwan/v2.1/api/monitor/sys_metrics/topn:
    post:
      description: Query the details of the system metrics Top N.
      operationId: post-sdwan-v2.1-api-monitor-sys_metrics-topn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseTopNQuery'
        description: Filter for top N
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTopNResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: APP_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: SITE_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: FILTER_NOT_SUPPORTED_WITHOUT_SITE
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: PATH_NOT_SUPPORTED_WITH_PATH_TYPE
                  - code: TOPN_BASIS_NOT_SUPPORTED_WITHOUT_FILTER
                  - code: INVALID_LIMIT
                  - code: REQUIRED_PROPERTY
                  - code: LENGTH_EXCEEDED
                  - code: PATH_TYPE_LIST_LENGTH_EXCEEDED
                  - code: INVALID_FILTER
                  - code: FILTER_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query System Metrics Top N (v2.1)
      tags:
      - Metrics
  /sdwan/v2.2/api/monitor/sys_metrics:
    get:
      description: 'Returns sysmetrics schema for Version 2.2

        '
      operationId: get-sdwan-v2.2-api-monitor-sys_metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSchemaResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Returns sysmetrics schema for Version 2.2 (v2.2)
      tags:
      - Metrics
    post:
      description: List all the system metrics schema.
      operationId: post-sdwan-v2.2-api-monitor-sys_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SysMetricsQuery'
        description: Query request for getting sysmetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SysMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: METRIC_UNIT_NOT_SUPPORTED
                  - code: UNSUPPORTED_FILTER_IN_VERSION
                  - code: UNSUPPORTED_FILTER_FOR_METRIC
                  - code: MISSING_INTERFACE_FILTER_PROPERTY
                  - code: MISSING_ELEMENT_FILTER_PROPERTY
                  - code: UNSUPPORTED_DIRECTION_FILTER
                  - code: DIRECTION_FILTER_EMPTY
                  - code: DIRECTION_VIEW_NOT_SUPPORTED
                  - code: MAX_DATAPOINTS_END_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get System Metrics Schema (v2.2)
      tags:
      - Metrics
  /sdwan/v2.3/api/monitor/metrics:
    post:
      description: Query all the monitor metrics.
      operationId: post-sdwan-v2.3-api-monitor-metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorMetricsQuery'
        description: Details of monitor metrics query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: EMPTY_REQ_BODY
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: METRIC_UNIT_NOT_SUPPORTED
                  - code: UNSUPPORTED_FILTER_FOR_VERSION
                  - code: UNSUPPORTED_INDIVIDUAL_DIMENSION
                  - code: VIEW_DIRECTION_AND_FILTER_DIRECTION_NOT_SUPPORTED
                  - code: UNSUPPORTED_DIRECTION_FILTER
                  - code: METRIC_AND_VIEW_NOT_SUPPORTED
                  - code: MISSING_DIRECTION
                  - code: MAX_DATAPOINTS_END_TIME
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: METRIC_STATISTICS_NOT_SUPPORTED
                  - code: PATH_AND_PATH_TYPE_NOT_SUPPORTED
                  - code: SITE_WITH_PATH_MISSING
                  - code: SITE_WITH_WANINTERFACE_MISSING
                  - code: WANINTERFACE_WITH_ANYNETLINK_MISSING
                  - code: SITE_WITH_ELEMENT_MISSING
                  - code: METRIC_MISSING_SITE
                  - code: METRIC_MISSING_APP
                  - code: METRIC_SUPPORTS_SINGLE_SITE
                  - code: METRIC_SUPPORTS_SINGLE_REMOTE_SITE
                  - code: METRIC_SUPPORTS_SINGLE_APP
                  - code: METRIC_NOT_SUPPORTED_WITH_PATH_FILTER
                  - code: METRIC_NOT_SUPPORTED_WITH_WAN_INTERFACE
                  - code: METRIC_MISSING_PATH_ID
                  - code: METRIC_SUPPORTS_SINGLE_PATH_ID
                  - code: METRIC_SUPPORTS_SINGLE_FILTER_WITH_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Monitor Metrics (v2.3)
      tags:
      - Metrics
  /sdwan/v2.3/api/monitor/metrics/{mtype}:
    get:
      description: List all the details of the monitor metrics.
      operationId: get-sdwan-v2.3-api-monitor-metrics-mtype
      parameters:
      - description: The metric type.
        in: path
        name: mtype
        required: true
        schema:
          description: Mtype
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSchemaResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: METRIC_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Monitor Metrics (v2.3)
      tags:
      - Metrics
  /sdwan/v2.3/api/monitor/sys_metrics:
    get:
      description: List all the system metrics schema.
      operationId: get-sdwan-v2.3-api-monitor-sys_metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSchemaResponse'
          description: Successful Operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get System Metrics Schema (v2.3)
      tags:
      - Metrics
    post:
      description: List all the system metrics schema.
      operationId: post-sdwan-v2.3-api-monitor-sys_metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SysMetricsQuery'
        description: Query request for getting sysmetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SysMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: METRIC_UNIT_NOT_SUPPORTED
                  - code: UNSUPPORTED_FILTER_IN_VERSION
                  - code: UNSUPPORTED_FILTER_FOR_METRIC
                  - code: MISSING_INTERFACE_FILTER_PROPERTY
                  - code: MISSING_ELEMENT_FILTER_PROPERTY
                  - code: UNSUPPORTED_DIRECTION_FILTER
                  - code: DIRECTION_FILTER_EMPTY
                  - code: DIRECTION_VIEW_NOT_SUPPORTED
                  - code: MAX_DATAPOINTS_END_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get System Metrics Schema (v2.3)
      tags:
      - Metrics
  /sdwan/v2.4/api/monitor/metrics:
    post:
      description: Query all the monitor metrics.
      operationId: post-sdwan-v2.4-api-monitor-metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorMetricsQuery'
        description: Details of monitor metrics query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorMetricsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: EMPTY_REQ_BODY
                  - code: SCHEMA_MISMATCH
                  - code: METRIC_NOT_SUPPORTED
                  - code: METRIC_UNIT_NOT_SUPPORTED
                  - code: UNSUPPORTED_FILTER_FOR_VERSION
                  - code: UNSUPPORTED_INDIVIDUAL_DIMENSION
                  - code: VIEW_DIRECTION_AND_FILTER_DIRECTION_NOT_SUPPORTED
                  - code: UNSUPPORTED_DIRECTION_FILTER
                  - code: METRIC_AND_VIEW_NOT_SUPPORTED
                  - code: MISSING_DIRECTION
                  - code: MAX_DATAPOINTS_END_TIME
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: METRIC_STATISTICS_NOT_SUPPORTED
                  - code: PATH_AND_PATH_TYPE_NOT_SUPPORTED
                  - code: SITE_WITH_PATH_MISSING
                  - code: SITE_WITH_WANINTERFACE_MISSING
                  - code: WANINTERFACE_WITH_ANYNETLINK_MISSING
                  - code: SITE_WITH_ELEMENT_MISSING
                  - code: METRIC_MISSING_SITE
                  - code: METRIC_MISSING_APP
                  - code: METRIC_SUPPORTS_SINGLE_SITE
                  - code: METRIC_SUPPORTS_SINGLE_REMOTE_SITE
                  - code: METRIC_SUPPORTS_SINGLE_APP
                  - code: METRIC_NOT_SUPPORTED_WITH_PATH_FILTER
                  - code: METRIC_NOT_SUPPORTED_WITH_WAN_INTERFACE
                  - code: METRIC_MISSING_PATH_ID
                  - code: METRIC_SUPPORTS_SINGLE_PATH_ID
                  - code: METRIC_SUPPORTS_SINGLE_FILTER_WITH_LIST
                  - code: FILTER_NOT_SUPPORTED_FOR_METRIC
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Monitor Metrics (v2.4)
      tags:
      - Metrics
  /sdwan/v2.4/api/monitor/metrics/{mtype}:
    get:
      description: List all the details of the monitor metrics.
      operationId: get-sdwan-v2.4-api-monitor-metrics-mtype
      parameters:
      - description: The metric type.
        in: path
        name: mtype
        required: true
        schema:
          description: Mtype
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSchemaResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: METRIC_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Monitor Metrics (v2.4)
      tags:
      - Metrics
  /sdwan/v2.4/api/monitor/object_stats:
    get:
      description: List details of the object statistics.
      operationId: get-sdwan-v2.4-api-monitor-object_stats
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStatsTypeResponse'
          description: Successful Operation
      summary: Get Object Stats (v2.4)
      tags:
      - Metrics
    post:
      description: List details of the object statistics.
      operationId: post-sdwan-v2.4-api-monitor-object_stats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectStatsQuery'
        description: Details of object stats query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStatsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: OBJECT_STATS_QUERY_OBJECT_TYPE_REQUIRED
                  - code: OBJECT_STATS_QUERY_OBJECT_ID_REQUIRED
                  - code: OBJECT_STATS_QUERY_FILTER_REQUIRED
                  - code: OBJECT_STATS_QUERY_FILTER_SITE_ID_REQUIRED
                  - code: OBJECT_STATS_QUERY_OBJECT_TYPE_UNSUPPORTED
                  - code: OBJECT_STATS_QUERY_OBJECT_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_ELEMENT_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_SITE_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_ELEMENT_LIST_LENGTH_EXCEEDED
                  - code: OBJECT_STATS_QUERY_SITE_LIST_LENGTH_EXCEEDED
                  - code: OBJECT_STATS_QUERY_START_TIME_BEFORE_END_TIME
                  - code: INVALID_STATS_REQUEST_BODY
                  - code: FUTURE_TIME_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Object Stats (v2.4)
      tags:
      - Metrics
  /sdwan/v2.5/api/monitor/object_stats:
    get:
      description: List details of the object statistics.
      operationId: get-sdwan-v2.5-api-monitor-object_stats
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStatsTypeResponse'
          description: Successful Operation
      summary: Get Object Stats (v2.5)
      tags:
      - Metrics
    post:
      description: Query details of the object statistics.
      operationId: post-sdwan-v2.5-api-monitor-object_stats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectStatsQuery'
        description: Details of object stats query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStatsResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: OBJECT_STATS_QUERY_OBJECT_TYPE_REQUIRED
                  - code: OBJECT_STATS_QUERY_OBJECT_ID_REQUIRED
                  - code: OBJECT_STATS_QUERY_FILTER_REQUIRED
                  - code: OBJECT_STATS_QUERY_FILTER_SITE_ID_REQUIRED
                  - code: OBJECT_STATS_QUERY_OBJECT_TYPE_UNSUPPORTED
                  - code: OBJECT_STATS_QUERY_OBJECT_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_ELEMENT_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_SITE_ID_INVALID_VALUE
                  - code: OBJECT_STATS_QUERY_ELEMENT_LIST_LENGTH_EXCEEDED
                  - code: OBJECT_STATS_QUERY_SITE_LIST_LENGTH_EXCEEDED
                  - code: OBJECT_STATS_QUERY_START_TIME_BEFORE_END_TIME
                  - code: INVALID_STATS_REQUEST_BODY
                  - code: FUTURE_TIME_ERROR
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Object Stats (v2.5)
      tags:
      - Metrics
  /sdwan/v3.0/api/monitor/aggregates:
    get:
      description: List all the supported app stats aggregates.
      operationId: get-sdwan-v3.0-api-monitor-aggregates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatsSupportedAggregatesResponse'
          description: Successful Operation
      summary: Get App Stats Aggregates (v3.0)
      tags:
      - Metrics
    post:
      description: Aggregate app_stats and app_prefix stats based on different metrics
      operationId: post-sdwan-v3.0-api-monitor-aggregates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppStatsAggregatesQuery'
        description: Filters and Metrics for Aggregating App stats
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatsAggregateQueryResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: REQUIRED_PROPERTY
                  - code: LENGTH_EXCEEDED
                  - code: INVALID_FILTER
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: FUTURE_TIME_ERROR
                  - code: PATH_AND_PATH_TYPE_NOT_SUPPORTED
                  - code: AGGREGATE_FILTER_MANDATORY
                  - code: AGGREGATE_UNIT_REQUIRED
                  - code: AGGREGATE_UNIT_NOT_SUPPORTED
                  - code: AGGREGATE_FILTER_PARAMETER_NOT_ALLOWED
                  - code: AGGREGATE_FILTER_PARAMETER_REQUIRED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Aggregate App stats (v3.0)
      tags:
      - Metrics
  /sdwan/v3.0/api/monitor/topn:
    post:
      description: List all the top N data.
      operationId: post-sdwan-v3.0-api-monitor-topn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppStatsTopNQuery'
        description: Filter for top N
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatsTopNResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: APP_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: SITE_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: FILTER_NOT_SUPPORTED_WITHOUT_SITE
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: PATH_NOT_SUPPORTED_WITH_PATH_TYPE
                  - code: TOPN_BASIS_NOT_SUPPORTED_WITHOUT_FILTER
                  - code: INVALID_LIMIT
                  - code: REQUIRED_PROPERTY
                  - code: LENGTH_EXCEEDED
                  - code: PATH_TYPE_LIST_LENGTH_EXCEEDED
                  - code: INVALID_FILTER
                  - code: FILTER_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Top N Data (v3.0)
      tags:
      - Metrics
  /sdwan/v3.1/api/monitor/topn:
    post:
      description: List all the top N data.
      operationId: post-sdwan-v3.1-api-monitor-topn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppStatsTopNQuery'
        description: Filter for top N
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatsTopNResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: APP_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: SITE_FILTER_NOT_SUPPORTED_FOR_TYPE
                  - code: FILTER_NOT_SUPPORTED_WITHOUT_SITE
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: PATH_NOT_SUPPORTED_WITH_PATH_TYPE
                  - code: TOPN_BASIS_NOT_SUPPORTED_WITHOUT_FILTER
                  - code: INVALID_LIMIT
                  - code: REQUIRED_PROPERTY
                  - code: PATH_TYPE_LIST_LENGTH_EXCEEDED
                  - code: LENGTH_EXCEEDED
                  - code: INVALID_FILTER
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Top N Data (v3.1)
      tags:
      - Metrics
  /sdwan/v3.7/api/monitor/flows:
    post:
      description: List all the flows information.
      operationId: post-sdwan-v3.7-api-monitor-flows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowsQuery'
        description: Filter for flows
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowsQueryResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: EMPTY_REQ_BODY
                  - code: SCHEMA_MISMATCH
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: EMPTY_FILTER
                  - code: PATH_AND_PATH_TYPE_NOT_SUPPORTED
                  - code: SITE_WITH_PATH_MISSING
                  - code: SITE_WITH_WANINTERFACE_MISSING
                  - code: SITE_WITH_ELEMENT_MISSING
                  - code: SITE_WITH_FLOW_TUPLE_MISSING
                  - code: INVALID_IP
                  - code: INVALID_FLOW_TYPE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get Flows Information (v3.7)
      tags:
      - Metrics
  /sdwan/v3.8/api/monitor/flows:
    post:
      description: List all the flows information.
      operationId: post-sdwan-v3.8-api-monitor-flows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowsQuery'
        description: Filter for flows
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowsQueryResponse'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: EMPTY_REQ_BODY
                  - code: SCHEMA_MISMATCH
                  - code: START_TIME_GREATER_THAN_END_TIME
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: EMPTY_FILTER
                  - code: PATH_AND_PATH_TYPE_NOT_SUPPORTED
                  - code: SITE_WITH_PATH_MISSING
                  - code: SITE_WITH_WANINTERFACE_MISSING
                  - code: SITE_WITH_ELEMENT_MISSING
                  - code: SITE_WITH_FLOW_TUPLE_MISSING
                  - code: INVALID_IP
                  - code: INVALID_FLOW_TYPE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Get Flows Information (v3.8)
      tags:
      - Metrics
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- name: Metrics
