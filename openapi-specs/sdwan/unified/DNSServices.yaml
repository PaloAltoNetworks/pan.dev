components:
  schemas:
    Aggregate:
      properties:
        field:
          description: Field
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
    Alias:
      properties:
        mask:
          description: 'Alias mask - Allowed range = 0-32.

            '
          format: int32
          type: integer
        original_end_ip:
          description: 'The alias original end IP address.

            '
          type: string
        original_ip:
          description: 'The alias originap IP address.

            '
          type: string
        original_start_ip:
          description: 'The alias original start IP address.

            '
          type: string
        replace_ip:
          description: 'The alias replace IP address.

            '
          type: string
      required:
      - replace_ip
    AuthoritativeConfig:
      properties:
        caa_records:
          description: 'List of valid CAA records. CAA record is a type of DNS record
            used to provide additional confirmation for the Certification Authority
            (CA) when validating an SSL certificate.

            '
          items:
            $ref: '#/components/schemas/CaaRecord'
          type: array
        cname_records:
          description: 'List of valid cname records.

            '
          items:
            $ref: '#/components/schemas/CnameRecords'
          type: array
        dns_resource_records:
          description: 'The list of valid DNS resource records.

            '
          items:
            $ref: '#/components/schemas/DnsResourceRecords'
          type: array
        host_records:
          description: 'The list of valid DNS host records.

            '
          items:
            $ref: '#/components/schemas/HostRecord'
          type: array
        mx_host_records:
          description: "The details of the MX host records.            \n"
          items:
            $ref: '#/components/schemas/MxHostRecord'
          type: array
        naptr_records:
          description: 'The details of the naptr records.

            '
          items:
            $ref: '#/components/schemas/NaptrRecords'
          type: array
        peers:
          description: 'List of the valid IP addresses of the DNS service profiles.

            '
          items:
            description: Peers
            type: string
          type: array
        ptr_records:
          description: 'The details of the DNS PTR records. DNS PTR record is used
            for reverse DNS lookups, and it matches domain names with IP addresses.

            '
          items:
            $ref: '#/components/schemas/PtrRecords'
          type: array
        secondary_servers:
          description: "he secondary server details of the DNS profile.          \
            \ \n"
          items:
            description: Secondary Servers
            type: string
          type: array
        servers:
          description: 'The DNS profile server details.

            '
          items:
            $ref: '#/components/schemas/Server'
          type: array
        soa:
          description: "The start of authority (SOA) record which includes administrative\
            \ information on the zone, as defined by the domain name system (DNS).\
            \ \n"
          items:
            $ref: '#/components/schemas/SOA'
          type: array
        srv_hosts:
          description: 'The SRV record specifies a host and port for specific services.
            It includes a port alongwith the IP address.

            '
          items:
            $ref: '#/components/schemas/SrvHost'
          type: array
        synth_domains:
          description: "Lists the details of the DNS syth domains.             \n"
          items:
            $ref: '#/components/schemas/SynthDomain'
          type: array
        ttl:
          description: "The ttl range. \n"
          type: integer
        txt_records:
          description: "Lists the details of DNS TXT records. \n"
          items:
            $ref: '#/components/schemas/TxtRecord'
          type: array
        zones:
          description: 'List the details of the authoritative zones.

            '
          items:
            $ref: '#/components/schemas/Zone'
          type: array
    CaaRecord:
      properties:
        flags:
          description: "The CAA record flags.             \n"
          type: string
        name:
          description: 'The CAA record name. Max size = 128.

            '
          type: string
        tag:
          description: 'An information field that can be added to identify the CCA
            record.

            '
          type: string
        value:
          description: 'The value of the CAA record. Max size = 256.

            '
          type: string
      required:
      - value
      - tag
      - flags
      - name
    CacheConfig:
      properties:
        cache_size:
          description: 'The cache size.

            '
          format: int32
          type: integer
        disable_negative_caching:
          description: 'If the option disable negative caching option is disabled.

            '
          type: boolean
        max_cache_ttl:
          description: 'The max cache ttl range.

            '
          type: integer
        min_cache_ttl:
          description: 'The min cacahe ttl range.

            '
          format: int32
          type: integer
        negative_cache_ttl:
          description: 'The negative cache ttl range.

            '
          type: integer
    ClientMac:
      properties:
        mac_encoding_format:
          description: 'The MAC encoding format.

            '
          enum:
          - base64
          - hexadecimal
          type: string
      required:
      - mac_encoding_format
    CnameRecords:
      properties:
        name:
          description: 'The unique name of the CAA record.

            '
          items:
            description: Name
            type: string
          type: array
        target:
          description: "The CAA name record traget. Max size = 128.          \n"
          type: string
        ttl:
          description: 'The TTL range of the CAA record.

            '
          type: integer
      required:
      - target
      - name
    CustomerPremisesEquipment:
      properties:
        identifier_text:
          description: 'The custom string added to the DNS query.

            '
          type: string
        type:
          description: 'The customer premises equipment type.

            '
          enum:
          - text
          - element_id
          - element_name
          type: string
      required:
      - type
    DnsForwardConfig:
      properties:
        dns_servers:
          description: 'Details of the DNS severs.

            '
          items:
            $ref: '#/components/schemas/DnsServers'
          type: array
        max_source_port:
          description: 'The DNS service max source port.

            '
          type: integer
        min_source_port:
          description: 'The DNS service min source port.

            '
          format: int32
          type: integer
        send_to_all_dns_servers:
          description: 'If the option es enabled to send to all DNS servers.

            '
          type: boolean
      required:
      - dns_servers
    DnsQueriesMetadata:
      properties:
        add_client_mac:
          $ref: '#/components/schemas/ClientMac'
          description: 'The client MAC address of the requestor to DNS queries which
            are forwarded upstream.

            '
        add_customer_premises_equipment:
          $ref: '#/components/schemas/CustomerPremisesEquipment'
          description: 'The element ID, text, or element name is added based on the
            DNS query configuration.

            '
        add_subnets:
          description: 'The subnet ID is added for the DNS query.

            '
          items:
            $ref: '#/components/schemas/Subnet'
          type: array
    DnsRebindConfig:
      properties:
        enable_localhost_rebind:
          description: 'Enable localhost rebind.

            '
          type: boolean
        rebind_domains:
          description: 'The DNS rebind domain list.

            '
          items:
            description: Rebind Domains
            type: string
          type: array
        stop_dns_rebind_privateip:
          description: 'Stop the DNS rebind private IP.

            '
          type: boolean
    DnsResourceRecords:
      properties:
        hex_data:
          description: "The value of the DNS record is given by the hex data. Max\
            \ size = 128.       \n"
          type: string
        name:
          description: 'The unique name of the DNS resource record. Max size = 128.

            '
          type: string
        rr_number:
          description: 'The DNS resource record number.

            '
          type: integer
      required:
      - rr_number
      - name
    DnsResponseOverrides:
      properties:
        aliases:
          description: 'Details of the DNS alias record. This record points your domain
            name to a hostname instead of an IP address.

            '
          items:
            $ref: '#/components/schemas/Alias'
          type: array
        bogus_nx_domains:
          description: 'The IP addresses that can be identified as Bogus NX Domains.

            '
          items:
            description: Bogus Nx Domains
            type: string
          type: array
        disable_private_ip_lookups:
          description: 'Option to disable private IP lookups.

            '
          type: boolean
        ignore_ip_addresses:
          description: 'Ignore the IP addresses.

            '
          items:
            description: Ignore Ip Addresses
            type: string
          type: array
        local_ttl:
          description: 'The local TTL value.

            '
          type: integer
        max_ttl:
          description: 'The max TTL value.

            '
          type: integer
    DnsSecConfig:
      properties:
        disable_dnssec_timecheck:
          description: "If DNSSEC time check is disabled.  \n"
          type: boolean
        dns_check_unsigned:
          description: 'If the DNS check is unsigned.

            '
          type: boolean
        enabled:
          description: 'The DNSSEC is enabled.

            '
          type: boolean
        trust_anchors:
          description: 'Details on the trust anchors.

            '
          items:
            $ref: '#/components/schemas/TrustAnchor'
          type: array
    DnsServers:
      properties:
        dnsserver_ip:
          description: 'The DNS server IP address.

            '
          type: string
        dnsserver_port:
          description: 'The DNS server port.

            '
          type: integer
        domain_names:
          description: 'The DNS server domain names.

            '
          items:
            description: Domain Names
            type: string
          type: array
        forward_dnsservicerole_id:
          description: 'The DNS forward service role ID. Max size = 20.

            '
          type: string
        ip_prefix:
          description: "The DNS server IP prefix. \n"
          type: string
        source_port:
          description: 'The DNS server source port.

            '
          type: integer
      required:
      - dnsserver_ip
    DnsService:
      properties:
        cache_config:
          $ref: '#/components/schemas/ElemCacheConfig'
          description: 'Lists details of the cache configuration.

            '
        description:
          description: 'The description of the DNS service configs. Max size = 1024.

            '
        disabled:
          description: 'List the disabled DNS service configs.

            '
          type: boolean
        disabled_reason:
          description: 'List the disabled DNS service configs reason.

            '
          type: string
        dns_queries_metadata:
          $ref: '#/components/schemas/ElemDnsQueriesMetadata'
          description: 'Lists the DNS queries parameters that append the client metadata
            to the DNS query as it is sent to the upstream DNS server.

            '
        dnsservice_profile_id:
          description: 'The DNS service profile ID.

            '
          type: string
        dnsservicerole_bindings:
          description: 'The bindings of the DNS srevice role.

            '
          items:
            $ref: '#/components/schemas/DnsServiceroleBindings'
          type: array
        domains_to_addresses:
          description: 'The unique domain to address mapping and the IP address.

            '
          items:
            $ref: '#/components/schemas/DomainsToAddress'
          type: array
        domains_to_interfaces:
          description: 'The domain to interface mapping details.

            '
          items:
            $ref: '#/components/schemas/DomainsToInterface'
          type: array
        element_id:
          description: 'The element ID.

            '
          type: string
        enabled:
          description: 'The enabled DNS service configs.

            '
          type: boolean
        id:
          description: 'The ID of the DNS service configs.

            '
          type: string
        inactive:
          description: 'Lists the inactive DNS service configs.

            '
          type: boolean
        inactive_reason:
          description: "Reason the DNS service config is inactive. \n"
          type: string
        max_concurrent_dns_queries:
          description: 'The max number of concurrent DNS queries.

            '
          format: int32
          type: integer
        name:
          description: 'Name of the DNS service config.

            '
          type: string
        region:
          description: Region
          type: string
        site_id:
          description: "ID of the site. \n"
          type: string
        tags:
          description: "A information field that can be added to identify the DNS\
            \ service roles. Maximum 10 unique tags of length 1024 each are allowed.\
            \ \n"
          items:
            description: Tags
            type: string
          type: array
        upperCaseName:
          description: 'The upper case names.

            '
          type: string
      required:
      - name
      - site_id
    DnsServiceProfile:
      properties:
        authoritative_config:
          $ref: '#/components/schemas/AuthoritativeConfig'
          description: "The configuration details of the authoritative DNS server\
            \ where all the queries will try to resolve without forwarding it to external\
            \ servers.               \n"
        cache_config:
          $ref: '#/components/schemas/CacheConfig'
          description: 'Lists details of the cache configuration.

            '
        description:
          description: 'The description of the DNS profiles.

            '
        disabled:
          description: 'Lists if the DNS profile is disabled.

            '
          type: boolean
        disabled_reason:
          description: 'Reason the DNS profile is disabled. Max size = 5000.

            '
          type: string
        dns_forward_config:
          $ref: '#/components/schemas/DnsForwardConfig'
          description: "Lists details of the DNS forward requests configuration. \
            \             \n"
        dns_queries_metadata:
          $ref: '#/components/schemas/DnsQueriesMetadata'
          description: 'Lists the DNS queries parameters that append the client metadata
            to the DNS query as it is sent to the upstream DNS server.

            '
        dns_rebind_config:
          $ref: '#/components/schemas/DnsRebindConfig'
          description: 'The details of the DNS rebind configuration.

            '
        dns_response_overrides:
          $ref: '#/components/schemas/DnsResponseOverrides'
          description: 'The details of the DNS response overrides.

            '
        dnssec_config:
          $ref: '#/components/schemas/DnsSecConfig'
          description: "The DNS secondary server configuration details.          \
            \   \n"
        domains_to_addresses:
          description: 'The unique domain to address mapping and the IP address.

            '
          items:
            $ref: '#/components/schemas/DomainsToAddress'
          type: array
        edns_packet_max:
          description: 'The EDNS packets size. The default size is 4096.

            '
          format: int32
          type: integer
        enable_dns_loop_detection:
          description: 'If DNS loop detection is enabled.

            '
          type: boolean
        enable_dnssec_proxy:
          description: "If DNS second proxy is enabled.             \n"
          type: boolean
        enable_strict_domain_name:
          description: 'If DNS strict domain name is enabled.

            '
          type: boolean
        id:
          description: 'The ID.

            '
          type: string
        inactive:
          description: 'If the DNS profile is inactive.

            '
          type: boolean
        inactive_reason:
          description: 'Reason the DNS profile is inactive. Max size = 5000.

            '
          type: string
        listen_dnsservicerole_id:
          description: "The ID mapped to the interfaces which are used for listening.\
            \           \n"
          type: string
        listen_port:
          description: 'The port where the DNS is listening to the DNS queries.

            '
          format: int32
          type: integer
        name:
          description: 'The DNS profile name.

            '
          type: string
        region:
          description: Region
          type: string
        tags:
          description: 'An information field that can be added to identify the DNS
            profile.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - dns_forward_config
      - name
    DnsServiceProfileQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of DNS service profiles that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of DNS service profiles deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the DNS service profiles for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the DNS service profiles by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    DnsServiceQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of DNS service configs that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of DNS service configs deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the DNS service configs for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the DNS service configs by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    DnsServiceRole:
      properties:
        description:
          description: "The description of the DNS service role. Max size = 256. \
            \              \n"
        id:
          description: 'The ID of the DNS service role.

            '
          type: string
        name:
          description: "The name of the DNS service role. Max size = 128.    \n"
          type: string
        tags:
          description: "A information field that can be added to identify the DNS\
            \ service roles. Maximum 10 unique tags of length 1024 each are allowed.\
            \ \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    DnsServiceRoleQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of DNS service roles that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of DNS service roles deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the DNS service roles for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the DNS service roles by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    DnsServiceroleBindings:
      properties:
        dnsservicerole_id:
          description: 'The DNS service role ID.

            '
          type: string
        interfaces:
          description: 'The DNS role binding interfaces.

            '
          items:
            $ref: '#/components/schemas/Interface'
          type: array
      required:
      - interfaces
    DomainsToAddress:
      properties:
        domain_names:
          description: "The domain name. \n"
          items:
            description: Domain Names
            type: string
          type: array
        ipv4_address:
          description: 'The IPv4 address for the domain to address mapping.

            '
          type: string
        ipv6_address:
          description: 'The IPv6 address for the domain to address mapping.

            '
          type: string
    DomainsToInterface:
      properties:
        domain_names:
          description: 'The domains to interface domain name.

            '
          items:
            description: Domain Names
            type: string
          type: array
        interface_id:
          description: 'The interface ID.

            '
          type: string
      required:
      - interface_id
      - domain_names
    ElemCacheConfig:
      properties:
        cache_size:
          description: 'The cache size.

            '
          format: int32
          type: integer
    ElemCustomerPremisesEquipment:
      properties:
        identifier_text:
          description: 'The custom string added to the DNS query.

            '
          type: string
        type:
          description: 'The customer premises equipment type.

            '
          enum:
          - text
          - element_id
          - element_name
          type: string
      required:
      - type
    ElemDnsQueriesMetadata:
      properties:
        add_customer_premises_equipment:
          $ref: '#/components/schemas/ElemCustomerPremisesEquipment'
          description: 'The element ID, text, or element name is added based on the
            DNS query configuration.

            '
        add_subnets:
          description: 'The subnet ID is added for the DNS query.

            '
          items:
            $ref: '#/components/schemas/Subnet'
          type: array
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    HostRecord:
      properties:
        domain_names:
          description: "The list of configured host record domain names.       \n"
          items:
            description: Domain Names
            type: string
          type: array
        ipv4_address:
          description: 'The IPv4 address for the host.

            '
          type: string
        ipv6_address:
          description: 'The IPv6 address for the host.

            '
          type: string
        ttl:
          description: 'The ttl range of the host record.

            '
          type: integer
      required:
      - domain_names
    Interface:
      properties:
        interface_id:
          description: 'The interface ID.

            '
          type: string
        interface_ip:
          description: 'The DNS server interface IP.

            '
          type: string
    KeyDigest:
      properties:
        algorithm:
          description: "If key digest algorithm of the trust anchor. Max = 255.  \n"
          type: integer
        digest:
          description: 'The key digest config. Max = 256.

            '
          type: string
        digest_type:
          description: 'The trust anchor key digest type. Max = 255.

            '
          type: integer
        key_tag:
          description: 'The trust anchor key tag.

            '
          type: integer
    ListQueryResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number.

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs.

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size = 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query.

            '
          type: object
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        id:
          description: 'The ID.

            '
          type: string
      type: object
    MxHostRecord:
      properties:
        hostname:
          description: "The MX host name. Max size = 128.       \n"
          type: string
        mx_name:
          description: 'The MX name. Max size = 128.

            '
          type: string
        preference:
          description: 'The preference of the MX host record.

            '
          format: int32
          type: integer
      required:
      - hostname
      - mx_name
    NaptrRecords:
      properties:
        flags:
          description: "The naptr record flags.       \n"
          type: string
        name:
          description: 'The naptr record name.

            '
          type: string
        order:
          description: 'The valid order of the naptr record.

            '
          type: integer
        preference:
          description: "The valid naptr prefernce range.     \n"
          type: integer
        regexp:
          description: 'The regexp to match DNS host name or IP address. Max size
            = 256.

            '
          type: string
        replacement:
          description: 'The valid replacement value of the naptr record. Max size
            = 256.

            '
          type: string
        service:
          description: 'The service value of the naptr record. Max size = 256.

            '
          type: string
      required:
      - flags
      - preference
      - order
      - name
    PtrRecords:
      properties:
        name:
          description: "The name of the DNS ptr record. Max size = 128.      \n"
          type: string
        target:
          description: 'The ptr record target value. Max size = 256.

            '
          type: string
      required:
      - name
    SOA:
      properties:
        expiry:
          description: "The expiry range.      \n"
          type: integer
        host_master:
          description: Host Master
          type: string
        refresh:
          description: 'The refresh value.

            '
          type: integer
        retry:
          description: "The retry value.     \n"
          type: integer
        serial_number:
          description: 'The SOA auth config serial number.

            '
          type: integer
      required:
      - serial_number
    Server:
      properties:
        dnsservicerole_id:
          description: "The ID of the DNS service role.      \n"
          type: string
        domain_name:
          description: 'The domain name of the auth servers.

            '
          type: string
      required:
      - domain_name
    SrvHost:
      properties:
        domain_name:
          description: "The SRV host domain name.   \n"
          type: string
        port:
          description: 'The SRV host port.

            '
          type: integer
        priority:
          description: 'The SRV host priority.

            '
          type: integer
        protocol:
          description: "The SRV host protocol.    \n"
          type: string
        service:
          description: 'The SRV host service.

            '
          type: string
        target:
          description: 'The SRV host target.

            '
          type: integer
        weight:
          description: 'The SRV host weight.

            '
          type: integer
      required:
      - protocol
      - service
    Subnet:
      properties:
        ipv4_address:
          description: 'The IPv4 address for the add subnet.

            '
          type: string
        ipv4_prefix_length:
          description: 'The prefix lenth of the IP4 address of the add subnet.

            '
          format: int32
          type: integer
        ipv6_address:
          description: 'The IPv6 address for the add subnet.

            '
          type: string
        ipv6_prefix_length:
          description: 'The prefix lenth of the IPv6 address of the add subnet.

            '
          format: int32
          type: integer
      required:
      - ipv6_prefix_length
      - ipv4_prefix_length
    SynthDomain:
      properties:
        domain:
          description: "The synth domain name.  \n"
          type: string
        end_ipaddress:
          description: 'The synth domain end IP address.

            '
          type: string
        ipaddress_prefix:
          description: 'The synth domain IP address prefix.

            '
          type: string
        prefix:
          description: "The synth domain prefex. \n"
          type: string
        start_ipaddress:
          description: 'The synth doamin start IP address.

            '
          type: string
      required:
      - domain
    TrustAnchor:
      properties:
        class:
          description: "The class of the trust anchor.  \n"
          type: string
        domain:
          description: 'The domain of the trust anchor.

            '
          type: string
        key_digest:
          $ref: '#/components/schemas/KeyDigest'
          description: 'The key digest details of the trust anchor.

            '
    TxtRecord:
      properties:
        domain_name:
          description: "The TXT record domain name. Max size = 128. \n"
          type: string
        texts:
          description: 'The text length of the TXT record.

            '
          items:
            description: Texts
            type: string
          type: array
      required:
      - domain_name
    Zone:
      properties:
        domain_name:
          description: 'The authoritative config zone domain name.

            '
          type: string
        exclude_prefix:
          description: 'The exclude prefix of the authoritative config domain.

            '
          items:
            description: Exclude Prefix
            type: string
          type: array
        include_prefix:
          description: 'The inlcude prefix of the authoritative config domain.

            '
          items:
            description: Include Prefix
            type: string
          type: array
      required:
      - domain_name
info:
  contact: {}
  description: List of APIs used to manage the DNS services.
  title: DNS Services
  version: Latest
openapi: 3.0.0
paths:
  /sdwan/v2.0/api/dnsserviceprofiles:
    get:
      description: Read all the DNS service profiles.
      operationId: get-sdwan-v2.0-api-dnsserviceprofiles
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceProfile'
                      type: array
                  type: object
          description: Successful Operation
      summary: Read DNS Service Profiles (v2.0)
      tags:
      - DNS Services
    post:
      description: Create a new DNS service profile.
      operationId: post-sdwan-v2.0-api-dnsserviceprofiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceProfile'
        description: Details of the DNS service profile to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: DNSSERVICE_PROFILE_CREATE_FAILED
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: INVALID_PROFILE_CONFIG
                  - code: INVALID_LISTENROLE_ID
                  - code: DNSSERVER_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: DNSSERVER_INVALID_FWDROLE_ID
                  - code: DNSREBIND_DOMAIN_CONFIG_INVALID_HOST
                  - code: DUPLICATE_DOMAINTOADDRESS_MAPPING_UNSUPPORTED
                  - code: DOMAINTOADDRESS_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: TRUST_ANCHORS_MISSING
                  - code: DISABLE_DNSSEC_TIMECHECK_NOT_ALLOWED
                  - code: DNS_CHECK_UNSIGNED_NOT_ALLOWED
                  - code: DNSSEC_CONFIG_NOT_ALLOWED
                  - code: HOSTRECORD_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: INVALID_NAPTRRECORD_CONFIG
                  - code: INVALID_SYNTH_DOMAIN_CONFIG
                  - code: INVALID_ALIAS_CONFIG
                  - code: INVALID_ADD_CUSTOMER_PREMISES_EQUIPMENT_CONFIG
                  - code: NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_TAG
                  - code: INVALID_DNSSERVER_LISTEN_PORT_RANGE_CONFIG
                  - code: DNSSERVICE_CONFIG_INVALID_MINSOURCEPORT_VALUE
                  - code: DNSSERVICE_CONFIG_INVALID_MAXSOURCEPORT_VALUE
                  - code: INVALID_DNSSERVER_IP_PREFIX_CONFIG
                  - code: INVALID_DNSSERVER_DOMAIN_NAMES_LIST_CONFIG
                  - code: DNSSERVER_IP_CONFIG_MISSING
                  - code: INVALID_DNSSERVER_IP_CONFIG_IP
                  - code: INVALID_DNSSERVER_PORT_RANGE_CONFIG
                  - code: INVALID_DNSSERVER_SOURCE_PORT_RANGE_CONFIG
                  - code: INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE
                  - code: INVALID_BOGUS_NX_DOMAINS
                  - code: INVALID_IGNORE_IP_ADDRESS
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_IP
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_START_IP
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_END_IP
                  - code: ALIAS_CONFIG_REPLACE_IP_ADDRESS_MISSING
                  - code: INVALID_DNSREBIND_REBIND_DOMAINS_LIST_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_TAG_RANGE_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_DIGEST_ALGO_RANGE_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_DIGEST_TYPE_RANGE_CONFIG
                  - code: INVALID_DOMAINTOADDRESS_DOMAIN_NAMES_LIST_CONFIG
                  - code: DOMAINTOADDRESS_IP_CONFIG_MISSING
                  - code: INVALID_SECONDARY_SERVER
                  - code: INVALID_PEER_ADDRESS
                  - code: AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_MISSING
                  - code: AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_MISSING
                  - code: AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: AUTHCONFIG_ZONE_INVALID_INCLUDE_PREFIX
                  - code: AUTHCONFIG_ZONE_INVALID_EXCLUDE_PREFIX
                  - code: AUTHCONFIG_SOA_SERIAL_NUMBER_CONFIG_MISSING
                  - code: INVALID_HOSTRECORD_DOMAIN_NAMES_LIST_CONFIG
                  - code: INVALID_HOSTRECORD_IPV4_CONFIG
                  - code: INVALID_HOSTRECORD_IPV6_CONFIG
                  - code: SYNTHDOMAIN_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: INVALID_SYNTHDOMAIN_START_IP_ADDRESS_CONFIG
                  - code: INVALID_SYNTHDOMAIN_END_IP_ADDRESS_CONFIG
                  - code: INVALID_SYNTHDOMAIN_IP_ADDRESS_PREFIX_CONFIG
                  - code: SRVHOST_SERVICE_MISSING
                  - code: SRVHOST_PROTOCOL_MISSING
                  - code: SRVHOST_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: INVALID_SRVHOST_PORT_RANGE_CONFIG
                  - code: INVALID_SRVHOST_PRIORITY_RANGE_CONFIG
                  - code: NAPTRRECORD_NAME_MISSING
                  - code: INVALID_NAPTRRECORD_ORDER_RANGE_CONFIG
                  - code: NAPTRRECORD_ORDER_MISSING
                  - code: INVALID_NAPTRRECORD_PREFERENCE_RANGE_CONFIG
                  - code: NAPTRRECORD_PREFERENCE_MISSING
                  - code: NAPTRRECORD_FLAGS_MISSING
                  - code: CAARECORD_NAME_MISSING
                  - code: CAARECORD_FLAG_MISSING
                  - code: CAARECORD_TAG_MISSING
                  - code: CAARECORD_VALUE_MISSING
                  - code: DNSRESOURCERECORD_NAME_MISSING
                  - code: DNSRESOURCERECORD_RRNUMBER_MISSING
                  - code: CNAMERECORD_NAME_MISSING
                  - code: CNAMERECORD_TARGET_MISSING
                  - code: PTRRECORD_NAME_MISSING
                  - code: TXTRECORD_DOMAIN_NAME_MISSING
                  - code: TXTRECORD_TEXT_INVALID_LENGTH
                  - code: MX_NAME_MISSING
                  - code: MX_HOST_NAME_MISSING
                  - code: MX_NAME_DOMAIN_NAMES_CONFIG_INVALID_HOST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create DNS Service Profile (v2.0)
      tags:
      - DNS Services
  /sdwan/v2.0/api/dnsserviceprofiles/query:
    post:
      description: Query DNS service profiles based on parameters.
      operationId: post-sdwan-v2.0-api-dnsserviceprofiles-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceProfileQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceProfileQuery'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query DNS Service Profile (v2.0)
      tags:
      - DNS Services
  /sdwan/v2.0/api/dnsserviceprofiles/{dnsservice_role_id}:
    delete:
      description: Delete an existing DNS service profile.
      operationId: delete-sdwan-v2.0-api-dnsserviceprofiles-dnsservice_role_id
      parameters:
      - description: ID of the DNS service profile.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: DNSPROFILE_CONFIG_DELETE_NOTALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete DNS Service Profile (v2.0)
      tags:
      - DNS Services
    get:
      description: List a DNS service profile.
      operationId: get-sdwan-v2.0-api-dnsserviceprofiles-dnsservice_role_id
      parameters:
      - description: ID of the DNS service profile.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceProfile'
          description: Successful Operation
      summary: Get DNS Service Profile (v2.0)
      tags:
      - DNS Services
    put:
      description: Update a DNS service profile.
      operationId: put-sdwan-v2.0-api-dnsserviceprofiles-dnsservice_role_id
      parameters:
      - description: ID of the DNS service profile.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceProfile'
        description: Details of the DNS service profile to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: INVALID_PROFILE_CONFIG
                  - code: INVALID_LISTENROLE_ID
                  - code: DNSSERVER_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: DNSSERVER_INVALID_FWDROLE_ID
                  - code: DNSREBIND_DOMAIN_CONFIG_INVALID_HOST
                  - code: DUPLICATE_DOMAINTOADDRESS_MAPPING_UNSUPPORTED
                  - code: DOMAINTOADDRESS_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: TRUST_ANCHORS_MISSING
                  - code: DISABLE_DNSSEC_TIMECHECK_NOT_ALLOWED
                  - code: DNS_CHECK_UNSIGNED_NOT_ALLOWED
                  - code: DNSSEC_CONFIG_NOT_ALLOWED
                  - code: HOSTRECORD_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: INVALID_NAPTRRECORD_CONFIG
                  - code: INVALID_SYNTH_DOMAIN_CONFIG
                  - code: INVALID_ALIAS_CONFIG
                  - code: INVALID_ADD_CUSTOMER_PREMISES_EQUIPMENT_CONFIG
                  - code: NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_TAG
                  - code: INVALID_DNSSERVER_LISTEN_PORT_RANGE_CONFIG
                  - code: DNSSERVICE_CONFIG_INVALID_MINSOURCEPORT_VALUE
                  - code: DNSSERVICE_CONFIG_INVALID_MAXSOURCEPORT_VALUE
                  - code: INVALID_DNSSERVER_IP_PREFIX_CONFIG
                  - code: INVALID_DNSSERVER_DOMAIN_NAMES_LIST_CONFIG
                  - code: DNSSERVER_IP_CONFIG_MISSING
                  - code: INVALID_DNSSERVER_IP_CONFIG_IP
                  - code: INVALID_DNSSERVER_PORT_RANGE_CONFIG
                  - code: INVALID_DNSSERVER_SOURCE_PORT_RANGE_CONFIG
                  - code: INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE
                  - code: INVALID_BOGUS_NX_DOMAINS
                  - code: INVALID_IGNORE_IP_ADDRESS
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_IP
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_START_IP
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_END_IP
                  - code: ALIAS_CONFIG_REPLACE_IP_ADDRESS_MISSING
                  - code: INVALID_DNSREBIND_REBIND_DOMAINS_LIST_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_TAG_RANGE_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_DIGEST_ALGO_RANGE_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_DIGEST_TYPE_RANGE_CONFIG
                  - code: INVALID_DOMAINTOADDRESS_DOMAIN_NAMES_LIST_CONFIG
                  - code: DOMAINTOADDRESS_IP_CONFIG_MISSING
                  - code: INVALID_SECONDARY_SERVER
                  - code: INVALID_PEER_ADDRESS
                  - code: AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_MISSING
                  - code: AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_MISSING
                  - code: AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: AUTHCONFIG_ZONE_INVALID_INCLUDE_PREFIX
                  - code: AUTHCONFIG_ZONE_INVALID_EXCLUDE_PREFIX
                  - code: AUTHCONFIG_SOA_SERIAL_NUMBER_CONFIG_MISSING
                  - code: INVALID_HOSTRECORD_DOMAIN_NAMES_LIST_CONFIG
                  - code: INVALID_HOSTRECORD_IPV4_CONFIG
                  - code: INVALID_HOSTRECORD_IPV6_CONFIG
                  - code: SYNTHDOMAIN_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: INVALID_SYNTHDOMAIN_START_IP_ADDRESS_CONFIG
                  - code: INVALID_SYNTHDOMAIN_END_IP_ADDRESS_CONFIG
                  - code: INVALID_SYNTHDOMAIN_IP_ADDRESS_PREFIX_CONFIG
                  - code: SRVHOST_SERVICE_MISSING
                  - code: SRVHOST_PROTOCOL_MISSING
                  - code: SRVHOST_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: INVALID_SRVHOST_PORT_RANGE_CONFIG
                  - code: INVALID_SRVHOST_PRIORITY_RANGE_CONFIG
                  - code: NAPTRRECORD_NAME_MISSING
                  - code: INVALID_NAPTRRECORD_ORDER_RANGE_CONFIG
                  - code: NAPTRRECORD_ORDER_MISSING
                  - code: INVALID_NAPTRRECORD_PREFERENCE_RANGE_CONFIG
                  - code: NAPTRRECORD_PREFERENCE_MISSING
                  - code: NAPTRRECORD_FLAGS_MISSING
                  - code: CAARECORD_NAME_MISSING
                  - code: CAARECORD_FLAG_MISSING
                  - code: CAARECORD_TAG_MISSING
                  - code: CAARECORD_VALUE_MISSING
                  - code: DNSRESOURCERECORD_NAME_MISSING
                  - code: DNSRESOURCERECORD_RRNUMBER_MISSING
                  - code: CNAMERECORD_NAME_MISSING
                  - code: CNAMERECORD_TARGET_MISSING
                  - code: PTRRECORD_NAME_MISSING
                  - code: TXTRECORD_DOMAIN_NAME_MISSING
                  - code: TXTRECORD_TEXT_INVALID_LENGTH
                  - code: MX_NAME_MISSING
                  - code: MX_HOST_NAME_MISSING
                  - code: MX_NAME_DOMAIN_NAMES_CONFIG_INVALID_HOST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update DNS Service Profile (v2.0)
      tags:
      - DNS Services
  /sdwan/v2.0/api/dnsserviceroles:
    get:
      description: Read all the DNS roles.
      operationId: get-sdwan-v2.0-api-dnsserviceroles
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceRole'
                      type: array
                  type: object
          description: Successful Operation
      summary: Read DNS Service Roles (v2.0)
      tags:
      - DNS Services
    post:
      description: Create a new DNS service role.
      operationId: post-sdwan-v2.0-api-dnsserviceroles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceRole'
        description: Details of the DNS service role to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceRole'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: DNSROLE_NAME_REQD
                  - code: NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_TAG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create DNS Service Role (v2.0)
      tags:
      - DNS Services
  /sdwan/v2.0/api/dnsserviceroles/query:
    post:
      description: Query DNS service roles based on parameters.
      operationId: post-sdwan-v2.0-api-dnsserviceroles-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceRoleQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceRoleQuery'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query DNS Service Role (v2.0)
      tags:
      - DNS Services
  /sdwan/v2.0/api/dnsserviceroles/{dnsservice_role_id}:
    delete:
      description: Delete an existing DNS service profile.
      operationId: delete-sdwan-v2.0-api-dnsserviceroles-dnsservice_role_id
      parameters:
      - description: ID of the DNS service role.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceRole'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: DNSROLE_CONFIG_DELETE_NOTALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete DNS Service Role (v2.0)
      tags:
      - DNS Services
    get:
      description: List a DNS service role.
      operationId: get-sdwan-v2.0-api-dnsserviceroles-dnsservice_role_id
      parameters:
      - description: ID of the DNS service role.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceRole'
          description: Successful Operation
      summary: Get DNS Service Role (v2.0)
      tags:
      - DNS Services
    put:
      description: Update a DNS service role.
      operationId: put-sdwan-v2.0-api-dnsserviceroles-dnsservice_role_id
      parameters:
      - description: ID of the DNS service role.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceRole'
        description: Details of the DNS service role to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceRole'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: DNSROLE_NAME_REQD
                  - code: NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_TAG
                  - code: INVALID_REQUEST_DUPLICATE_KEY
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update DNS Service Role (v2.0)
      tags:
      - DNS Services
  /sdwan/v2.0/api/dnsservices/query:
    post:
      description: Query DNS service configs based on parameters.
      operationId: post-sdwan-v2.0-api-dnsservices-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceQuery'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query DNS Service Config (v2.0)
      tags:
      - DNS Services
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/dnsservices:
    get:
      description: Read all the DNS configs.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-dnsservices
      parameters:
      - description: Site ID of the target resource.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID of the target device.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsService'
                      type: array
                  type: object
          description: Successful Operation
      summary: Read DNS Service Configs (v2.0)
      tags:
      - DNS Services
    post:
      description: Create a new DNS service config.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-dnsservices
      parameters:
      - description: Site ID of the target resource.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID of the target device.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsService'
        description: Details of the DNS service config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_DNSSERVICE_UNSUPPORTED
                  - code: SITE_MISMATCH
                  - code: HUB_UNSUPPORTED
                  - code: ELEMENT_MISMATCH
                  - code: ELEMENT_UNASSIGNED
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: INVALID_PROFILE_ID
                  - code: INVALID_DNSROLE_ID
                  - code: INVALID_INTERFACE_CONFIG
                  - code: DTI_DOMAIN_CONFIG_INVALID_HOST
                  - code: DTA_DOMAIN_CONFIG_INVALID_HOST
                  - code: DNSSERVER_IP_CONFIG_INVALID_IP
                  - code: INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE
                  - code: INVALID_DOMAINTOADDRESS_DOMAIN_NAMES_LIST_CONFIG
                  - code: DOMAINTOADDRESS_IP_CONFIG_MISSING
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create DNS Service Config (v2.0)
      tags:
      - DNS Services
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/dnsservices/{dnsservice_role_id}:
    delete:
      description: Delete a DNS service config.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-dnsservices-dnsservice_role_id
      parameters:
      - description: Site ID of the target resource.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID of the target device.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: ID of the DNS service role.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_DNSSERVICE_UNSUPPORTED
                  - code: SITE_MISMATCH
                  - code: HUB_UNSUPPORTED
                  - code: ELEMENT_MISMATCH
                  - code: ELEMENT_UNASSIGNED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete DNS Service Config (v2.0)
      tags:
      - DNS Services
    get:
      description: List a DNS service config.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-dnsservices-dnsservice_role_id
      parameters:
      - description: Site ID of the target resource.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID of the target device.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: ID of the DNS service role.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsService'
          description: Successful Operation
      summary: Get DNS Service Config (v2.0)
      tags:
      - DNS Services
    put:
      description: Update a DNS service config.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-dnsservices-dnsservice_role_id
      parameters:
      - description: Site ID of the target resource.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID of the target device.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: ID of the DNS service role.
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsService'
        description: Details of the DNS service config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: HUB_UNSUPPORTED
                  - code: ELEMENT_UNASSIGNED
                  - code: INVALID_PROFILE_ID
                  - code: INVALID_DNSROLE_ID
                  - code: INVALID_INTERFACE_CONFIG
                  - code: DTI_DOMAIN_CONFIG_INVALID_HOST
                  - code: DTA_DOMAIN_CONFIG_INVALID_HOST
                  - code: DNSSERVER_IP_CONFIG_INVALID_IP
                  - code: INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE
                  - code: INVALID_DOMAINTOADDRESS_DOMAIN_NAMES_LIST_CONFIG
                  - code: DOMAINTOADDRESS_IP_CONFIG_MISSING
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update DNS Service Config (v2.0)
      tags:
      - DNS Services
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- name: DNS Services
