components:
  schemas:
    ActiveUserIPQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of active user mappings that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number active user mappings deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the active user mappings for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the active user mappings by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    ActiveUserIPQueryFilter:
      properties:
        add:
          description: 'Active user added.

            '
          type: boolean
        disabled:
          description: 'Active user disabled.

            '
          type: boolean
        disabled_reason:
          description: 'Reason to disable the active user.

            '
          type: string
        id:
          description: 'The active user ID.

            '
          type: string
        inactive:
          description: 'Active user inactive.

            '
          type: boolean
        inactive_reason:
          description: 'Reason for active user to be inactive.

            '
          type: string
        ip:
          description: 'Active user IP.

            '
          type: string
        last_login_time:
          description: 'Active user last log in time.

            '
          format: int64
          type: integer
        region:
          description: 'Region of the active user.

            '
          type: string
        site_id:
          description: 'The active user site ID.

            '
          type: string
        user_id:
          description: 'The user ID of the user.

            '
          type: string
        username:
          description: 'The username of the active user.

            '
          type: string
        valid_until:
          description: "The active user valid value. \n"
          format: int64
          type: integer
      required:
      - username
      - ip
      - site_id
    Aggregate:
      properties:
        data:
          description: 'The details of the aggregate data.

            '
          items:
            $ref: '#/components/schemas/AggregateData'
          type: array
        field:
          description: Field
          type: string
        name:
          description: 'The name of the query response.

            '
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
        statistic:
          description: 'QoS application aggregate statistics.

            '
          type: string
        unit:
          description: 'The unit.

            '
          type: string
      required:
      - statistic
      - unit
      - name
      - data
    AggregateData:
      properties:
        value:
          description: 'Value of the aggregate data.

            '
          type: number
        view:
          description: "View the aggregate date. \n"
          type: object
      required:
      - value
      - view
    DirectoryGroupAttribute:
      properties:
        email:
          description: 'The email address values.

            '
          enum:
          - SAM_ACCOUNT_NAME
          - EMAIL
          - COMMON_NAME
          - DISTINGUISHED_NAME
          - USER_PRINCIPAL_NAME
          type: string
        primary_name:
          description: 'The primary name.

            '
          enum:
          - SAM_ACCOUNT_NAME
          - EMAIL
          - COMMON_NAME
          - DISTINGUISHED_NAME
          - USER_PRINCIPAL_NAME
          type: string
    DirectoryService:
      properties:
        directory_tenant_id:
          description: 'The directory tenant ID.

            '
          type: string
        enabled:
          description: 'The directory service enabled.

            '
          type: boolean
        group_attributes:
          $ref: '#/components/schemas/DirectoryGroupAttribute'
          description: 'The directory group attributes.

            '
        id:
          description: 'The ID.

            '
          type: string
        region:
          description: 'Region of the tenant.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the directory
            service. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        user_attributes:
          $ref: '#/components/schemas/DirectoryUserAttribute'
          description: 'The directory user attributes.

            '
    DirectoryServiceDomainStatus:
      properties:
        groups_count:
          description: 'The number of groups.

            '
          format: int64
          type: integer
        id:
          description: 'The ID.

            '
          type: string
        last_updated:
          description: 'The last updated domain status.

            '
          format: int64
          type: integer
        name:
          description: 'The name of the domain.

            '
          type: string
        status:
          description: 'Domain status.

            '
          type: string
        users_count:
          description: 'The number of users.

            '
          format: int64
          type: integer
    DirectoryServiceScreen:
      properties:
        directory_tenant_id:
          description: 'The directory tenant ID.

            '
          type: string
        enabled:
          description: 'The directory service enabled.

            '
          type: boolean
        group_attributes:
          $ref: '#/components/schemas/DirectoryGroupAttribute'
          description: 'The directory group attributes.

            '
        id:
          description: 'The ID.

            '
          type: string
        region:
          description: 'Region of the tenant.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the directory
            service. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        user_attributes:
          $ref: '#/components/schemas/DirectoryUserAttribute'
          description: 'The directory user attributes.

            '
    DirectoryUser:
      properties:
        description:
          description: 'The description of the user. Max size = 256.

            '
        id:
          description: 'The user ID.

            '
          type: string
        name:
          description: 'The user''s name.

            '
          type: string
        stale:
          description: Stale
          type: boolean
        tags:
          description: 'A information field that can be added to identify the user.
            Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        user_group_ids:
          description: 'The user group IDs to which the user belongs.

            '
          items:
            description: User Group Ids
            type: string
          type: array
      required:
      - name
    DirectoryUserAttribute:
      properties:
        alternate_username_1:
          description: Alternate Username_1
          enum:
          - SAM_ACCOUNT_NAME
          - EMAIL
          - COMMON_NAME
          - DISTINGUISHED_NAME
          - USER_PRINCIPAL_NAME
          type: string
        alternate_username_2:
          description: Alternate Username_2
          enum:
          - SAM_ACCOUNT_NAME
          - EMAIL
          - COMMON_NAME
          - DISTINGUISHED_NAME
          - USER_PRINCIPAL_NAME
          type: string
        alternate_username_3:
          description: Alternate Username_3
          enum:
          - SAM_ACCOUNT_NAME
          - EMAIL
          - COMMON_NAME
          - DISTINGUISHED_NAME
          - USER_PRINCIPAL_NAME
          type: string
        email:
          description: Email
          enum:
          - SAM_ACCOUNT_NAME
          - EMAIL
          - COMMON_NAME
          - DISTINGUISHED_NAME
          - USER_PRINCIPAL_NAME
          type: string
        primary_name:
          description: Primary Name
          enum:
          - SAM_ACCOUNT_NAME
          - EMAIL
          - COMMON_NAME
          - DISTINGUISHED_NAME
          - USER_PRINCIPAL_NAME
          type: string
    DirectoryUserGroup:
      properties:
        description:
          description: 'The description of the user or group. Max size = 256.

            '
        id:
          description: 'The user or group ID.

            '
          type: string
        name:
          description: 'The user or group name.

            '
          type: string
        stale:
          description: Stale
          type: boolean
        tags:
          description: 'A information field that can be added to identify the user
            or group. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    DirectoryUserGroupQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of users or groups that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number users or groups deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the users or groups for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the users by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    DirectoryUserGroupQueryFilter:
      properties:
        description:
          description: 'Filter with description of the user or group.

            '
        id:
          description: 'Filter with the user or group ID.

            '
          type: string
        name:
          description: 'Filter with the user or group name.

            '
          type: string
        stale:
          description: Stale
          type: boolean
        tags:
          description: "Filter with the tag which is an information field that can\
            \ be added to identify the user or group. Maximum 10 unique tags of length\
            \ 1024 each are allowed.      \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    DirectoryUserQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of users that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number users deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the users for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the users by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    DirectoryUserQueryFilter:
      properties:
        description:
          description: 'The description of the user. Max size = 256.

            '
        id:
          description: 'The user ID.

            '
          type: string
        name:
          description: 'The user''s name.

            '
          type: string
        stale:
          description: Stale
          type: boolean
        tags:
          description: 'A information field that can be added to identify the user.
            Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        user_group_ids:
          description: 'The user group IDs to which the user belongs.

            '
          items:
            description: User Group Ids
            type: string
          type: array
      required:
      - name
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    ListQueryResponse:
      properties:
        count:
          description: 'The count of the query list.

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number of queries.

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted query IDs.

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size = 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query.

            '
          type: object
        total_count:
          description: 'Total number of queries.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The number of responses.

            '
          format: int32
          type: integer
        id:
          description: 'The ID of the response.

            '
          type: string
      type: object
    UserIDAgent:
      properties:
        authentication:
          $ref: '#/components/schemas/UserIDAgentAuthentication'
          description: 'The user ID agent authentication details.

            '
        description:
          description: 'The user ID agent description.

            '
        enabled:
          description: "The user ID agent enabled. \n"
          type: boolean
        id:
          description: 'The ID.

            '
          type: string
        name:
          description: 'The user ID agent name.

            '
          type: string
        port:
          description: 'The user agent port range. Must be between 1 - 65535.

            '
          format: int32
          type: integer
        server_fqdn:
          description: 'The server fqdn.

            '
          type: string
        server_ip:
          description: "The user agent server IP. \n"
          type: string
        site_id:
          description: 'The site ID.

            '
          type: string
        source_interface:
          description: "The user agent server source interface. \n"
          type: string
        tags:
          description: 'An information field that can be added to identify the user
            agent. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - port
      - name
      - site_id
    UserIDAgentAuthentication:
      properties:
        collector_name:
          description: Collector Name
          type: string
        collector_secret:
          description: Collector Secret
          type: string
        collector_secret_encrypted:
          description: 'Collector Secret Encrypted: JsonIgnore(value = true) '
          type: string
        local_certificate:
          description: Local Certificate
          type: string
        local_private_key:
          description: Local Private Key
          type: string
        passphrase:
          description: Passphrase
          type: string
        remote_ca_certificate:
          description: Remote Ca Certificate
          type: string
    UserIDAgentQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of users that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number users deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the users for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the users by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    UserIDAgentQueryFilter:
      properties:
        authentication:
          $ref: '#/components/schemas/UserIDAgentAuthentication'
          description: 'The user ID agent authentication details.

            '
        description:
          description: 'The user ID agent description.

            '
        enabled:
          description: "The user ID agent enabled. \n"
          type: boolean
        id:
          description: 'The ID.

            '
          type: string
        name:
          description: 'The user ID agent name.

            '
          type: string
        port:
          description: 'The user agent port range. Must be between 1 - 65535.

            '
          format: int32
          type: integer
        server_fqdn:
          description: 'The server fqdn.

            '
          type: string
        server_ip:
          description: "The user agent server IP. \n"
          type: string
        site_id:
          description: 'The site ID.

            '
          type: string
        source_interface:
          description: "The user agent server source interface. \n"
          type: string
        tags:
          description: 'An information field that can be added to identify the user
            agent. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - port
      - name
      - site_id
    UserIDAgentScreen:
      properties:
        authentication:
          $ref: '#/components/schemas/UserIDAgentAuthentication'
          description: 'The user ID agent authentication details.

            '
        description:
          description: 'The user ID agent description.

            '
        enabled:
          description: "The user ID agent enabled. \n"
          type: boolean
        id:
          description: 'The ID.

            '
          type: string
        name:
          description: 'The user ID agent name.

            '
          type: string
        port:
          description: 'The user agent port range. Must be between 1 - 65535.

            '
          format: int32
          type: integer
        server_fqdn:
          description: 'The server fqdn.

            '
          type: string
        server_ip:
          description: "The user agent server IP. \n"
          type: string
        site_id:
          description: 'The site ID.

            '
          type: string
        source_interface:
          description: "The user agent server source interface. \n"
          type: string
        tags:
          description: 'An information field that can be added to identify the user
            agent. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - port
      - name
      - site_id
    UserIdentity:
      properties:
        disabled:
          description: 'List the users in a disabled state.

            '
          type: boolean
        disabled_reason:
          description: 'List the reason for the disabled state.

            '
          type: string
        first_name:
          description: 'The first name of the user. Max size = 100.

            '
          type: string
        id:
          description: 'The ID.

            '
          type: string
        inactive:
          description: 'Lists if the user is inactive.

            '
          type: boolean
        inactive_reason:
          description: 'Reason the user is inactive.

            '
          type: string
        last_name:
          description: 'The last name of the user.

            '
          type: string
        middle_name:
          description: 'The middle name of the user.

            '
          type: string
        region:
          description: 'The region.

            '
          type: string
        user_dn:
          description: 'The user dn.

            '
          type: string
        user_fqn:
          description: 'The user fqn.

            '
          type: string
info:
  contact: {}
  description: List of APIs used to retrieve details about User & Group identity
  title: User Groups
  version: Latest
openapi: 3.0.0
paths:
  /sdwan/v2.0/api/activeuserips/query:
    post:
      description: Query all the active user mappings of a tenant.
      operationId: post-sdwan-v2.0-api-activeuserips-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveUserIPQuery'
        description: Query details Active user mappings
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ActiveUserIPQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query Active User Mappings (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryservices:
    get:
      description: List all the directory service details of a tenant.
      operationId: get-sdwan-v2.0-api-directoryservices
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryService'
          description: Successful Operation
      summary: Get Directory Service Details (v2.0)
      tags:
      - User Groups
    post:
      description: Create a directory service.
      operationId: post-sdwan-v2.0-api-directoryservices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryServiceScreen'
        description: Details of Directory Service
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: DIRECTORY_SERVICE_PRIMARY_USER_ATTRIBUTE_REQUIRED
                  - code: DIRECTORY_SERVICE_USER_ATTRIBUTE_NOT_ALLOWED
                  - code: DIRECTORY_SERVICE_PRIMARY_GROUP_ATTRIBUTE_NOT_ALLOWED
                  - code: DIRECTORY_SERVICE_PRIMARY_USER_GROUP_ATTRIBUTE_REQUIRED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Directory Service (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryservices/status:
    get:
      description: List the domain status.
      operationId: get-sdwan-v2.0-api-directoryservices-status
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DirectoryServiceDomainStatus'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Domain Status (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryservices/{directory_service_id}:
    delete:
      description: Delete a directory service.
      operationId: delete-sdwan-v2.0-api-directoryservices-directory_service_id
      parameters:
      - description: The ID of the directory service.
        in: path
        name: directory_service_id
        required: true
        schema:
          description: Directory Service Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Directory Service (v2.0)
      tags:
      - User Groups
    put:
      description: Update a directory service.
      operationId: put-sdwan-v2.0-api-directoryservices-directory_service_id
      parameters:
      - description: The ID of the directory service.
        in: path
        name: directory_service_id
        required: true
        schema:
          description: Directory Service Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryServiceScreen'
        description: Details of Directory Service
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: DIRECTORY_SERVICE_PRIMARY_USER_ATTRIBUTE_REQUIRED
                  - code: DIRECTORY_SERVICE_USER_ATTRIBUTE_NOT_ALLOWED
                  - code: DIRECTORY_SERVICE_PRIMARY_GROUP_ATTRIBUTE_NOT_ALLOWED
                  - code: DIRECTORY_SERVICE_PRIMARY_USER_GROUP_ATTRIBUTE_REQUIRED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Directory Service (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryservices/{directory_service_id}/domainstatus/{domain_status_id}:
    get:
      description: List all the domain status by domain and type.
      operationId: get-sdwan-v2.0-api-directoryservices-directory_service_id-domainstatus-domain_status_id
      parameters:
      - description: The ID of the directory service.
        in: path
        name: directory_service_id
        required: true
        schema:
          description: Directory Service Id
          type: string
      - description: The ID of the domain status.
        in: path
        name: domain_status_id
        required: true
        schema:
          description: Domain Status Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceDomainStatus'
          description: Successful Operation
      summary: Get Domain Status by Domain and Type (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryusergroups:
    get:
      description: List all the users or groups of a tenant.
      operationId: get-sdwan-v2.0-api-directoryusergroups
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DirectoryUserGroup'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Users or Groups (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryusergroups/query:
    post:
      description: Query all the users or groups of a tenant.
      operationId: post-sdwan-v2.0-api-directoryusergroups-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryUserGroupQuery'
        description: Details to query the users or groups.
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DirectoryUserGroupQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Users or Groups (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryusergroups/{user_group_id}:
    get:
      description: List a specific user or group of a tenant.
      operationId: get-sdwan-v2.0-api-directoryusergroups-user_group_id
      parameters:
      - description: The ID of the user group.
        in: path
        name: user_group_id
        required: true
        schema:
          description: User Group Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUserGroup'
          description: Successful Operation
      summary: Get Specific User or Group (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryusers:
    get:
      description: List all the users of a tenant.
      operationId: get-sdwan-v2.0-api-directoryusers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DirectoryUser'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Users of Tenant (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryusers/query:
    post:
      description: Query all the users.
      operationId: post-sdwan-v2.0-api-directoryusers-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryUserQuery'
        description: Details to query the users.
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DirectoryUserQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Users (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/directoryusers/{user_id}:
    get:
      description: Get a specific user of a tenant.
      operationId: get-sdwan-v2.0-api-directoryusers-user_id
      parameters:
      - description: The user ID.
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUser'
          description: Successful Operation
      summary: Get User of Tenant (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/useridagents:
    get:
      description: List all the user ID agents.
      operationId: get-sdwan-v2.0-api-useridagents
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/UserIDAgent'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get User ID Agents (v2.0)
      tags:
      - User Groups
    post:
      description: Create an user ID agent.
      operationId: post-sdwan-v2.0-api-useridagents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIDAgentScreen'
        description: Details of the User ID Agent
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIDAgent'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: USER_AGENT_NO_HUB_FOUND_FOR_AGENT
                  - code: USER_AGENT_SITE_ID_INVALID
                  - code: USER_AGENT_SITE_NOT_FOUND
                  - code: USER_AGENT_CAN_BE_CONFIGURED_ON_HUB_SITE_ONLY
                  - code: USER_AGENT_PROFILE_IP_OR_FQDN_REQUIRED
                  - code: USER_AGENT_SITE_ID_REQUIRED
                  - code: USER_AGENT_INVALID_IP
                  - code: USER_AGENT_INVALID_PORT_RANGE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create User ID Agent (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/useridagents/query:
    post:
      description: Query all the user ID agents.
      operationId: post-sdwan-v2.0-api-useridagents-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIDAgentQuery'
        description: Details to query the users.
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/UserIDAgentQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query User ID Agents (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/useridagents/{id}:
    delete:
      description: Delete an user ID agent.
      operationId: delete-sdwan-v2.0-api-useridagents-id
      parameters:
      - description: The user agent ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIDAgent'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete User ID Agent (v2.0)
      tags:
      - User Groups
    get:
      description: Get an user ID agent.
      operationId: get-sdwan-v2.0-api-useridagents-id
      parameters:
      - description: The user agent ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIDAgent'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get User ID Agent (v2.0)
      tags:
      - User Groups
    put:
      description: Update an user ID agent.
      operationId: put-sdwan-v2.0-api-useridagents-id
      parameters:
      - description: The user agent ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIDAgentScreen'
        description: Details of the User ID Agent
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIDAgent'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: USER_AGENT_NO_HUB_FOUND_FOR_AGENT
                  - code: USER_AGENT_SITE_ID_INVALID
                  - code: USER_AGENT_SITE_NOT_FOUND
                  - code: USER_AGENT_CAN_BE_CONFIGURED_ON_HUB_SITE_ONLY
                  - code: USER_AGENT_PROFILE_IP_OR_FQDN_REQUIRED
                  - code: USER_AGENT_SITE_CANNOT_BE_CHANGED
                  - code: USER_AGENT_SITE_ID_REQUIRED
                  - code: USER_AGENT_INVALID_IP
                  - code: USER_AGENT_INVALID_PORT_RANGE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update User ID Agent (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/users:
    get:
      description: List all the users.
      operationId: get-sdwan-v2.0-api-users
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/UserIdentity'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Users (v2.0)
      tags:
      - User Groups
    post:
      description: Create an user identity.
      operationId: post-sdwan-v2.0-api-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentity'
        description: Create an user identity
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create User Identity (v2.0)
      tags:
      - User Groups
  /sdwan/v2.0/api/users/{user_id}:
    delete:
      description: Delete an user identity.
      operationId: delete-sdwan-v2.0-api-users-user_id
      parameters:
      - description: The user ID.
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete User Identity (v2.0)
      tags:
      - User Groups
    get:
      description: Get an user identity.
      operationId: get-sdwan-v2.0-api-users-user_id
      parameters:
      - description: The user ID.
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get User Identity (v2.0)
      tags:
      - User Groups
    put:
      description: Update an user identity.
      operationId: put-sdwan-v2.0-api-users-user_id
      parameters:
      - description: The user ID.
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentity'
        description: Details of the site Network Policy local prefix to be associated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update User Identity (v2.0)
      tags:
      - User Groups
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- name: User Groups
