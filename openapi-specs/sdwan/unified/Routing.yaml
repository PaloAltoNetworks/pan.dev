components:
  schemas:
    APNConfig:
      properties:
        apn:
          description: 'The cellular interface APN config profile name.

            '
          type: string
        authentication:
          description: 'The APN authentication values.

            '
          enum:
          - none
          - pap
          - chap
          - pap_or_chap
          type: string
        clear_password:
          description: 'Clear password. True/False.

            '
          type: boolean
        password:
          description: 'The password.

            '
          type: string
        password_encrypted:
          description: 'The password encrypted (value = true).

            '
          type: string
        user_name:
          description: 'The cellular interface APN config user name.

            '
          type: string
      required:
      - authentication
    ASPathRegex:
      properties:
        as_path_regex:
          description: 'The AS Path Regex expression.

            '
          type: string
        order:
          description: 'The order of the AS Path Regex.

            '
          format: int32
          type: integer
        permit:
          description: 'The value true or false if AS path regex is allowed.

            '
          type: boolean
      required:
      - as_path_regex
    Action: {}
    Aggregate:
      properties:
        data:
          description: 'The details of the aggregate data.

            '
          items:
            $ref: '#/components/schemas/AggregateData'
          type: array
        field:
          description: 'The field value.

            '
          type: string
        name:
          description: 'The name of the query response.

            '
          type: string
        operator:
          description: 'The operator values.

            '
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
        statistic:
          description: 'The aggregate statistics.

            '
          type: string
        unit:
          description: 'The unit.

            '
          type: string
    AggregateData:
      properties:
        value:
          description: 'Value of the aggregate data.

            '
          type: number
        view:
          description: 'View the aggregate date.

            '
          type: object
    AggregatePrefixes:
      properties:
        ip_prefixes:
          description: Ip Prefixes
          items:
            description: Ip Prefixes
            type: string
          type: array
        type:
          description: Type
          enum:
          - ipv4
          - ipv6
          - ipv4v6
          type: string
    AuthenticationInterfaceConfig:
      properties:
        fallback_retry_count:
          description: 'The fallback retry count. The fall back to MAC Auth if the
            client is not using 802.1x authentication.

            '
          type: integer
        mode:
          description: 'The auth mode.

            '
          enum:
          - none
          - dot1x
          - macauth
          - dot1x-to-macauth-fallback
          type: string
        reauthentication_timeout:
          description: 'Reauthentication timeout value.

            '
          type: integer
    BGPConfig:
      properties:
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        keepalive_time:
          description: "The keep-alive time of the BGP config. The keep-alive time\
            \ should be between 3 - 200 seconds. \n"
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.

            '
          type: string
        md5_secret:
          description: "The MD5 Secret should be between 1 and 32 characters. The\
            \ default value is 0. \n"
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_auth_type:
          description: 'The authentication type of the BGP peer.

            '
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: "The peer retry time should be between 0 - 65535 seconds. The\
            \ default is 120 seconds. \n"
          format: int32
          type: integer
    BGPGlobalConfigScreenV2N3:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        ipv6_prefixes_to_adv_to_wan:
          description: 'Ipv6 Prefixes To Adv To Wan: ListIPv6Address(bcast = DENY,
            listMaxSize = 0, error = BGP_CONFIG_INVALID_PREFIX: IP prefix is not valid
            OR is not within the valid prefix range, required = false, type = GATEWAYCIDRV6) '
          items:
            description: Ipv6 Prefixes To Adv To Wan
            type: string
          type: array
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_auth_type:
          description: 'The authentication type of the BGP peer.

            '
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefix_adv_type_to_lan:
          description: 'The prefix advertises to LAN.

            '
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPGlobalConfigScreenV2N4:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        ipv6_prefixes_to_adv_to_wan:
          description: 'List of IPv6 prefixes advertised to WAN.

            '
          items:
            description: Ipv6 Prefixes To Adv To Wan
            type: string
          type: array
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        ospf_redistribution:
          description: 'Info on OSPF distribution.

            '
          items:
            $ref: '#/components/schemas/OspfRedistribution'
          type: array
        peer_auth_type:
          description: 'The authentication type of the BGP peer.

            '
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefix_adv_type_to_lan:
          description: 'The prefix advertises to LAN.

            '
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPGlobalConfigV2N3:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        ipv6_prefixes_to_adv_to_wan:
          description: 'List of IPv6 prefixes advertised to WAN.

            '
          items:
            description: Ipv6 Prefixes To Adv To Wan
            type: string
          type: array
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_auth_type:
          description: 'The authentication type of the BGP peer.

            '
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefix_adv_type_to_lan:
          description: 'The prefix advertises to LAN.

            '
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPGlobalConfigV2N4:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        ipv6_prefixes_to_adv_to_wan:
          description: 'List of IPv6 prefixes advertised to WAN.

            '
          items:
            description: Ipv6 Prefixes To Adv To Wan
            type: string
          type: array
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        ospf_redistribution:
          description: 'Info on OSPF distribution.

            '
          items:
            $ref: '#/components/schemas/OspfRedistribution'
          type: array
        peer_auth_type:
          description: 'The authentication type of the BGP peer.

            '
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefix_adv_type_to_lan:
          description: 'The prefix advertises to LAN.

            '
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPPeerAdvertisedPrefixes:
      properties:
        advertised_prefix_count:
          description: 'The advertised prefix count for the BGP peer.

            '
          format: int32
          type: integer
        advertised_prefixes:
          $ref: '#/components/schemas/PrefixSet'
          description: 'The advertised prefixes of the BGP peer.

            '
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
    BGPPeerAdvertisedPrefixesV2N1:
      properties:
        advertised_ipv6_prefix_count:
          description: Advertised Ipv6 Prefix Count
          format: int32
          type: integer
        advertised_prefix_count:
          description: Advertised Prefix Count
          format: int32
          type: integer
        advertised_prefixes:
          $ref: '#/components/schemas/PrefixSet'
          description: 'Advertised Prefixes: Valid '
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix filter list. \n"
          type: string
    BGPPeerConfigScreenV2N5:
      properties:
        advertise_default_route:
          description: 'Advertised default route. True or False.

            '
          type: boolean
        allow_v4_prefixes:
          description: 'Allow v4 prefixes.

            '
          type: boolean
        allow_v6_prefixes:
          description: "Allow v6 prefixes.              \n"
          type: boolean
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: 'The peer IP address.

            '
          type: string
        peer_ip_v6:
          description: "The peer IPv6 address.               \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        router_id:
          description: 'The ID of the Route.

            '
          type: string
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
        update_source_v6:
          description: 'The Update Source IPv6 address.

            '
          type: string
        vrf_context_id:
          description: "The VRF (Virtual Routing and Forwarding) ID. \n"
          type: string
      required:
      - allow_v6_prefixes
      - allow_v4_prefixes
      - remote_as_num
      - name
    BGPPeerConfigScreenV2N6:
      properties:
        advertise_default_route:
          description: 'Advertised default route. True or False.

            '
          type: boolean
        allow_v4_prefixes:
          description: 'Allow v4 prefixes.

            '
          type: boolean
        allow_v6_prefixes:
          description: "Allow v6 prefixes.              \n"
          type: boolean
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: 'The peer IP address.

            '
          type: string
        peer_ip_v6:
          description: "The peer IPv6 address.               \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_aggregation:
          $ref: '#/components/schemas/RouteAggregation'
          description: 'The route aggregate details.

            '
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        router_id:
          description: 'The ID of the Route.

            '
          type: string
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
        update_source_v6:
          description: 'The Update Source IPv6 address.

            '
          type: string
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - allow_v6_prefixes
      - allow_v4_prefixes
      - remote_as_num
      - name
    BGPPeerConfigV2N5:
      properties:
        advertise_default_route:
          description: 'Advertised default route. True or False.

            '
          type: boolean
        allow_v4_prefixes:
          description: 'Allow v4 prefixes.

            '
          type: boolean
        allow_v6_prefixes:
          description: "Allow v6 prefixes.              \n"
          type: boolean
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: 'The peer IP address.

            '
          type: string
        peer_ip_v6:
          description: "The peer IPv6 address.               \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        router_id:
          description: 'The ID of the Route.

            '
          type: string
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
        update_source_v6:
          description: 'The Update Source IPv6 address.

            '
          type: string
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - allow_v6_prefixes
      - allow_v4_prefixes
      - remote_as_num
      - name
    BGPPeerConfigV2N6:
      properties:
        advertise_default_route:
          description: 'Advertised default route. True or False.

            '
          type: boolean
        allow_v4_prefixes:
          description: 'Allow v4 prefixes.

            '
          type: boolean
        allow_v6_prefixes:
          description: "Allow v6 prefixes.              \n"
          type: boolean
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: 'The peer IP address.

            '
          type: string
        peer_ip_v6:
          description: "The peer IPv6 address.               \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_aggregation:
          $ref: '#/components/schemas/RouteAggregation'
          description: 'The route aggregate details.

            '
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        router_id:
          description: 'The ID of the Route.

            '
          type: string
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
        update_source_v6:
          description: 'The Update Source IPv6 address.

            '
          type: string
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - allow_v6_prefixes
      - allow_v4_prefixes
      - remote_as_num
      - name
    BGPPeerDiscoveredPrefixes:
      properties:
        discovered_ipv4_prefixes:
          description: 'The discovered IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        discovered_ipv4_prefixes_count:
          description: 'The discovered IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
    BGPPeerDiscoveredPrefixesV2N1:
      properties:
        discovered_ipv4_prefixes:
          description: 'The discovered IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        discovered_ipv4_prefixes_count:
          description: 'The discovered IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
    BGPPeerDiscoveredPrefixesV2N2:
      properties:
        discovered_ipv4_prefixes:
          description: 'The discovered IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        discovered_ipv4_prefixes_count:
          description: 'The discovered IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
        discovered_ipv6_prefixes:
          description: 'The discovered IPv6 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        discovered_ipv6_prefixes_count:
          description: 'The discovered IPv6 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
    BGPPeerOperations:
      properties:
        action:
          description: 'The BGP peer actions.

            '
          enum:
          - HARD_RESET
          - SOFT_RESET
          - REVERT_AUTOGENERATED
          - REFRESH_STATUS
          type: string
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
      required:
      - action
    BGPPeerQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of BGP peers that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of BGP peers deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the BGP peers for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the BGP peers by ID.    \n"
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    BGPPeerQueryFilterV2N5:
      properties:
        advertise_default_route:
          description: 'Advertised default route. True or False.

            '
          type: boolean
        allow_v4_prefixes:
          description: 'Allow v4 prefixes.

            '
          type: boolean
        allow_v6_prefixes:
          description: "Allow v6 prefixes.              \n"
          type: boolean
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: 'The peer IP address.

            '
          type: string
        peer_ip_v6:
          description: "The peer IPv6 address.               \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        router_id:
          description: 'The ID of the Route.

            '
          type: string
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
        update_source_v6:
          description: 'The Update Source IPv6 address.

            '
          type: string
        vrf_context_id:
          description: "The VRF (Virtual Routing and Forwarding) ID. \n"
          type: string
      required:
      - allow_v6_prefixes
      - allow_v4_prefixes
      - remote_as_num
      - name
    BGPPeerQueryFilterV2N6:
      properties:
        advertise_default_route:
          description: 'Advertised default route. True or False.

            '
          type: boolean
        allow_v4_prefixes:
          description: 'Allow v4 prefixes.

            '
          type: boolean
        allow_v6_prefixes:
          description: "Allow v6 prefixes.              \n"
          type: boolean
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: 'The peer IP address.

            '
          type: string
        peer_ip_v6:
          description: "The peer IPv6 address.               \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_aggregation:
          $ref: '#/components/schemas/RouteAggregation'
          description: 'The route aggregate details.

            '
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        router_id:
          description: 'The ID of the Route.

            '
          type: string
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
        update_source_v6:
          description: 'The Update Source IPv6 address.

            '
          type: string
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - allow_v6_prefixes
      - allow_v4_prefixes
      - remote_as_num
      - name
    BGPPeerReachablePrefixes:
      properties:
        filtered_ipv4_prefixes:
          description: 'The filtered IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        filtered_ipv4_prefixes_count:
          description: 'The filtered IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        reachable_ipv4_prefixes:
          description: 'The reachable IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        reachable_ipv4_prefixes_count:
          description: 'The reachable IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
    BGPPeerReachablePrefixesV2N1:
      properties:
        filtered_ipv4_prefixes:
          description: 'The filtered IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        filtered_ipv4_prefixes_count:
          description: 'The filtered IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
        filtered_ipv6_prefixes:
          description: 'The filtered IPv6 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        filtered_ipv6_prefixes_count:
          description: "The filtered IPv6 prefixes count for the BGP peer. \n"
          format: int32
          type: integer
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        reachable_ipv4_prefixes:
          description: 'The reachable IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        reachable_ipv4_prefixes_count:
          description: "The reachable IPv4 prefixes count for the BGP peer. \n"
          format: int32
          type: integer
        reachable_ipv6_prefixes:
          description: 'The reachable IPv6 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        reachable_ipv6_prefixes_count:
          description: 'The reachable IPv6 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
    BGPPeerStatusQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    BGPPeerStatusQueryFilter:
      properties:
        element_id:
          description: Element Id
          type: string
        id:
          description: Id
          type: string
        peer_id:
          description: 'Peer Id: JsonDeserialize(as = classOf[Void], builder = classOf[Void],
            contentAs = classOf[Void], contentConverter = classOf[Converter$None],
            contentUsing = classOf[JsonDeserializer$None], converter = classOf[Converter$None],
            keyAs = classOf[Void], keyUsing = classOf[KeyDeserializer$None], using
            = classOf[BGPPeerStatusTenantQueryDTO$PeerIdDeserializer]) '
          type: string
        peer_status:
          $ref: '#/components/schemas/PeerStatus'
          description: 'Peer Status: Valid '
        site_id:
          description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)
            NotNull '
          type: string
      required:
      - site_id
    BGPPeerStatusV2N1:
      properties:
        direction:
          description: "The direction for the BGP peer.  \n"
          type: string
        downtime:
          description: 'The downtime configured for the BGP peer.

            '
          type: string
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        state:
          description: 'The state of the BGP peer.

            '
          type: string
        uptime:
          description: 'The uptime configured for the BGP peer.

            '
          type: string
    BGPPeerStatusV2N2:
      properties:
        direction:
          description: 'The direction for the BGP peer.

            '
          type: string
        downtime:
          description: 'The downtime configured for the BGP peer.

            '
          type: string
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        state:
          description: 'The state of the BGP peer.

            '
          type: string
        uptime:
          description: 'The uptime configured for the BGP peer.

            '
          type: string
        v4_capability_negotiated:
          description: "The v4 negotiated capability. \n"
          type: boolean
        v6_capability_negotiated:
          description: 'The v6 negotiated capability.

            '
          type: boolean
    BypassPairV2:
      properties:
        lan:
          description: 'Bypass port is connected to a LAN network.

            '
          type: string
        lan_state_propagation:
          description: 'LAN state propagation.

            '
          type: boolean
        use_relay:
          description: 'The DHCP relay is selected to Yes.

            '
          type: boolean
        wan:
          description: 'Bypass port is connected to a WAN network.

            '
          type: string
    CellularInterfaceConfig:
      properties:
        apn_config:
          $ref: '#/components/schemas/APNConfig'
          description: 'The APN config details.

            '
        apnprofile_id:
          description: 'The APN profile ID.

            '
          type: string
        auto_apn:
          description: 'Is auto APN enabled. True / False.

            '
          type: boolean
        parent_module_id:
          description: 'The parent module ID.

            '
          type: string
        parent_sim_slot_number:
          description: 'The parent sim slot number.

            '
          format: int32
          type: integer
    DHCPRelay:
      properties:
        enabled:
          description: "Indicates if DHCP relay is enabled. \n"
          type: boolean
        option_82:
          $ref: '#/components/schemas/DHCPRelayOption82'
          description: 'Details of option_82 if enabled. The ION device DHCP Relay
            agent can include additional information by using DHCP Option 82, Circuit
            ID, and Remote ID, which the DHCP server uses to allocate the appropriate
            IP address.

            '
        server_ips:
          description: 'The DHCP server IP addresses.

            '
          items:
            description: Server Ips
            type: string
          type: array
        source_interface:
          description: 'The DHCP server source interface.

            '
          type: string
    DHCPRelayOption82:
      properties:
        circuit_id:
          description: "The DHCP relay circuit ID. \n"
          type: string
        enabled:
          description: "Option 82 if enabled. \n"
          type: boolean
        reforwarding_policy:
          description: 'The DHCP server reforwarding policy.

            '
          enum:
          - REPLACE
          - KEEP
          - APPEND
          - DROP
          type: string
        remote_id:
          description: 'The DHCP server remote ID.

            '
          type: string
      required:
      - reforwarding_policy
    DNS:
      properties:
        name_servers:
          description: 'The DNS name servers

            '
          items:
            description: Name Servers
            type: string
          type: array
        search:
          description: 'The search parameters.

            '
          items:
            description: Search
            type: string
          type: array
    Direction: {}
    ElementShell:
      properties:
        allowed_roles:
          description: Allowed Roles
          items:
            description: Allowed Roles
            enum:
            - NONE
            - HUB
            - SPOKE
            - PA_WE_BR
            - PA_WE_DC
            - PA_CONN
            type: string
          type: array
        cluster_id:
          description: Cluster Id
          type: string
        cluster_insertion_mode:
          description: Cluster Insertion Mode
          enum:
          - AUTO
          - MANUAL
          type: string
        cluster_member_id:
          description: Cluster Member Id
          type: string
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        device_mode:
          description: Device Mode
          enum:
          - none
          - l3-mode
          - l2-mode
          type: string
        device_profile_id:
          description: Device Profile Id
          type: string
        element_id:
          description: Element Id
          type: string
        hw_id:
          description: Hw Id
          type: string
        id:
          description: Id
          type: string
        l3_direct_private_wan_forwarding:
          description: L3 Direct Private Wan Forwarding
          type: boolean
        l3_lan_forwarding:
          description: L3 Lan Forwarding
          type: boolean
        led_config:
          $ref: '#/components/schemas/LedConfig'
          description: 'Led Config: Valid '
        main_power_usage_threshold:
          description: 'Main Power Usage Threshold: ValidateDecimal(allowZero = true,
            increment = 0, max = 0, error = INVALID_MAIN_POWER_USAGE_THRESHOLD: Invalid
            main power usage threshold. Allowed range is 50-100., min = 0) '
          format: int32
          type: integer
        model_name:
          description: 'Model Name: Required(ELEMENT_SHELL_MODEL_NAME_REQUIRED) '
          type: string
        name:
          description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of
            the resource exceeds limit., min = 0) '
          type: string
        nat_policysetstack_id:
          description: 'Nat Policysetstack Id: Digits(fraction = 0, integer = 20,
            error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat policy set stack id.) '
          type: string
        network_policysetstack_id:
          description: 'Network Policysetstack Id: Digits(fraction = 0, integer =
            20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid network policy
            set stack id) '
          type: string
        priority_policysetstack_id:
          description: 'Priority Policysetstack Id: Digits(fraction = 0, integer =
            20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid priority policy
            set stack id) '
          type: string
        role:
          description: Role
          enum:
          - NONE
          - HUB
          - SPOKE
          - PA_WE_BR
          - PA_WE_DC
          - PA_CONN
          type: string
        site_id:
          description: 'Site Id: Required(ELEMENT_SHELL_SITE_ID_REQUIRED) Size(max
            = 21, ELEMENT_SHELL_SITE_ID_EXCEEDS_LIMIT, min = 0) Pattern(error = ID_HAS_INVALID_CHARS:
            ID has invalid chars., regexp = [0-9]*) '
          type: string
        software_version:
          description: 'Software Version: Required(ELEMENT_SHELL_SOFTWARE_VERSION_REQUIRED) '
          type: string
        spoke_ha_config:
          $ref: '#/components/schemas/SpokeHAConfigV2'
          description: 'Spoke Ha Config: Valid '
        state:
          description: State
          enum:
          - ACTIVE_INIT
          - ACTIVE_INVENTORY_IN_PROGRESS
          - ACTIVE_INVENTORY_OPERATION_FAILED
          - ACTIVE_INVENTORY_GET_PENDING
          - ACTIVE_INVENTORY_GET_COMPLETE
          - ACTIVE_INVENTORY_POST_PENDING
          - ACTIVE_INTF_CONFIG_GET_FAILED
          - ACTIVE_INTF_STATE_GET_FAILED
          - ACTIVE_READY
          - ACTIVE_BOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_FROM_SITE_FAILED
          - ACTIVE_BOUND_TO_SITE
          - ACTIVE_BOUND_TO_SITE_FAILED
          - OOS
          - ACTIVE_DECLAIM_IN_PROGRESS
          - ACTIVE_DECLAIMED
          type: string
        switch_config:
          $ref: '#/components/schemas/SwitchConfig'
          description: 'Switch Config: Valid '
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        vpn_to_vpn_forwarding:
          description: Vpn To Vpn Forwarding
          type: boolean
      required:
      - model_name
      - software_version
      - site_id
    ElementShellQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    ElementShellQueryFilter:
      properties:
        allowed_roles:
          description: "The allowed roles.       \n"
          items:
            description: Allowed Roles
            enum:
            - NONE
            - HUB
            - SPOKE
            - PA_WE_BR
            - PA_WE_DC
            - PA_CONN
            type: string
          type: array
        cluster_id:
          description: "The cluster ID.           \n"
          type: string
        cluster_insertion_mode:
          description: "The cluster insertion mode.         \n"
          enum:
          - AUTO
          - MANUAL
          type: string
        cluster_member_id:
          description: Cluster Member Id
          type: string
        description:
          description: "The description of the element shell.          \n"
        device_mode:
          description: 'The device mode values.

            '
          enum:
          - none
          - l3-mode
          - l2-mode
          type: string
        device_profile_id:
          description: "The device profile ID.         \n"
          type: string
        element_id:
          description: "The element ID          \n"
          type: string
        hw_id:
          description: 'The hardware ID.

            '
          type: string
        id:
          description: Id
          type: string
        l3_direct_private_wan_forwarding:
          description: 'The L3 direct private WAN is enabled. True or False.

            '
          type: boolean
        l3_lan_forwarding:
          description: 'The L3 LAN forwarding is enabled. Yes indicates that traffic
            forwarding to and from LAN interface, when Enable L3 Direct Private WAN
            Forwarding is enabled.

            '
          type: boolean
        led_config:
          $ref: '#/components/schemas/LedConfig'
          description: 'Valid LED config.

            '
        main_power_usage_threshold:
          description: "The main power usage threshold. Allowed range is 50-100. \
            \              \n"
          format: int32
          type: integer
        model_name:
          description: "The model name of the device.      \n"
          type: string
        name:
          description: 'The name of the device.

            '
          type: string
        nat_policysetstack_id:
          description: 'ID for the NAT Policyset Stack. Can be retrieved using natpolicysetstack
            API.

            '
          type: string
        network_policysetstack_id:
          description: "The ID for the Path Policyset Stack. Can be retrieved using\
            \ networkpolicysetstack API.          \n"
          type: string
        priority_policysetstack_id:
          description: 'ID for the QoS Policyset Stack. Can be retrieved using prioritypolicysetstack
            API.

            '
          type: string
        role:
          description: 'The element role.

            '
          enum:
          - NONE
          - HUB
          - SPOKE
          - PA_WE_BR
          - PA_WE_DC
          - PA_CONN
          type: string
        site_id:
          description: 'The site ID.

            '
          type: string
        software_version:
          description: 'The element shell software version.

            '
          type: string
        spoke_ha_config:
          $ref: '#/components/schemas/SpokeHAConfigV2'
          description: 'The details of the spoke HA configuration.

            '
        state:
          description: 'The element state.

            '
          enum:
          - ACTIVE_INIT
          - ACTIVE_INVENTORY_IN_PROGRESS
          - ACTIVE_INVENTORY_OPERATION_FAILED
          - ACTIVE_INVENTORY_GET_PENDING
          - ACTIVE_INVENTORY_GET_COMPLETE
          - ACTIVE_INVENTORY_POST_PENDING
          - ACTIVE_INTF_CONFIG_GET_FAILED
          - ACTIVE_INTF_STATE_GET_FAILED
          - ACTIVE_READY
          - ACTIVE_BOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_FROM_SITE_FAILED
          - ACTIVE_BOUND_TO_SITE
          - ACTIVE_BOUND_TO_SITE_FAILED
          - OOS
          - ACTIVE_DECLAIM_IN_PROGRESS
          - ACTIVE_DECLAIMED
          type: string
        switch_config:
          $ref: '#/components/schemas/SwitchConfig'
          description: 'The details of the switch configuration.

            '
        tags:
          description: 'A information field that can be added to identify the element.

            '
          items:
            description: Tags
            type: string
          type: array
        vpn_to_vpn_forwarding:
          description: 'VPN to VPN forwarding. True or False.

            '
          type: boolean
      required:
      - model_name
      - software_version
      - site_id
    ElementShellQueryFilterV2N1:
      properties:
        allowed_roles:
          description: Allowed Roles
          items:
            description: Allowed Roles
            enum:
            - NONE
            - HUB
            - SPOKE
            - PA_WE_BR
            - PA_WE_DC
            - PA_CONN
            type: string
          type: array
        cluster_id:
          description: Cluster Id
          type: string
        cluster_insertion_mode:
          description: Cluster Insertion Mode
          enum:
          - AUTO
          - MANUAL
          type: string
        cluster_member_id:
          description: Cluster Member Id
          type: string
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        device_mode:
          description: Device Mode
          enum:
          - none
          - l3-mode
          - l2-mode
          type: string
        device_profile_id:
          description: Device Profile Id
          type: string
        element_id:
          description: Element Id
          type: string
        hub_cluster_config:
          $ref: '#/components/schemas/HubClusterConfig'
          description: 'Hub Cluster Config: Valid '
        hw_id:
          description: Hw Id
          type: string
        id:
          description: Id
          type: string
        l3_direct_private_wan_forwarding:
          description: L3 Direct Private Wan Forwarding
          type: boolean
        l3_lan_forwarding:
          description: L3 Lan Forwarding
          type: boolean
        led_config:
          $ref: '#/components/schemas/LedConfig'
          description: 'Led Config: Valid '
        main_power_usage_threshold:
          description: 'Main Power Usage Threshold: ValidateDecimal(allowZero = true,
            increment = 0, max = 0, error = INVALID_MAIN_POWER_USAGE_THRESHOLD: Invalid
            main power usage threshold. Allowed range is 50-100., min = 0) '
          format: int32
          type: integer
        model_name:
          description: 'Model Name: Required(ELEMENT_SHELL_MODEL_NAME_REQUIRED) '
          type: string
        name:
          description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of
            the resource exceeds limit., min = 0) '
          type: string
        nat_policysetstack_id:
          description: 'Nat Policysetstack Id: Digits(fraction = 0, integer = 20,
            error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat policy set stack id.) '
          type: string
        network_policysetstack_id:
          description: 'Network Policysetstack Id: Digits(fraction = 0, integer =
            20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid network policy
            set stack id) '
          type: string
        priority_policysetstack_id:
          description: 'Priority Policysetstack Id: Digits(fraction = 0, integer =
            20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid priority policy
            set stack id) '
          type: string
        role:
          description: Role
          enum:
          - NONE
          - HUB
          - SPOKE
          - PA_WE_BR
          - PA_WE_DC
          - PA_CONN
          type: string
        site_id:
          description: 'Site Id: Required(ELEMENT_SHELL_SITE_ID_REQUIRED) Size(max
            = 21, ELEMENT_SHELL_SITE_ID_EXCEEDS_LIMIT, min = 0) Pattern(error = ID_HAS_INVALID_CHARS:
            ID has invalid chars., regexp = [0-9]*) '
          type: string
        software_version:
          description: 'Software Version: Required(ELEMENT_SHELL_SOFTWARE_VERSION_REQUIRED) '
          type: string
        spoke_ha_config:
          $ref: '#/components/schemas/SpokeHAConfigV2'
          description: 'Spoke Ha Config: Valid '
        state:
          description: State
          enum:
          - ACTIVE_INIT
          - ACTIVE_INVENTORY_IN_PROGRESS
          - ACTIVE_INVENTORY_OPERATION_FAILED
          - ACTIVE_INVENTORY_GET_PENDING
          - ACTIVE_INVENTORY_GET_COMPLETE
          - ACTIVE_INVENTORY_POST_PENDING
          - ACTIVE_INTF_CONFIG_GET_FAILED
          - ACTIVE_INTF_STATE_GET_FAILED
          - ACTIVE_READY
          - ACTIVE_BOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_FROM_SITE_FAILED
          - ACTIVE_BOUND_TO_SITE
          - ACTIVE_BOUND_TO_SITE_FAILED
          - OOS
          - ACTIVE_DECLAIM_IN_PROGRESS
          - ACTIVE_DECLAIMED
          type: string
        switch_config:
          $ref: '#/components/schemas/SwitchConfig'
          description: 'Switch Config: Valid '
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        vpn_to_vpn_forwarding:
          description: Vpn To Vpn Forwarding
          type: boolean
      required:
      - model_name
      - software_version
      - site_id
    ElementShellScreen:
      properties:
        allowed_roles:
          description: Allowed Roles
          items:
            description: Allowed Roles
            enum:
            - NONE
            - HUB
            - SPOKE
            - PA_WE_BR
            - PA_WE_DC
            - PA_CONN
            type: string
          type: array
        cluster_id:
          description: Cluster Id
          type: string
        cluster_insertion_mode:
          description: Cluster Insertion Mode
          enum:
          - AUTO
          - MANUAL
          type: string
        cluster_member_id:
          description: Cluster Member Id
          type: string
        description:
          description: Description
          type: string
        device_mode:
          description: Device Mode
          enum:
          - none
          - l3-mode
          - l2-mode
          type: string
        device_profile_id:
          description: Device Profile Id
          type: string
        element_id:
          description: Element Id
          type: string
        hw_id:
          description: Hw Id
          type: string
        id:
          description: Id
          type: string
        l3_direct_private_wan_forwarding:
          description: L3 Direct Private Wan Forwarding
          type: boolean
        l3_lan_forwarding:
          description: L3 Lan Forwarding
          type: boolean
        led_config:
          $ref: '#/components/schemas/LedConfig'
          description: Led Config
        main_power_usage_threshold:
          description: Main Power Usage Threshold
          format: int32
          type: integer
        model_name:
          description: Model Name
          type: string
        name:
          description: Name
          type: string
        nat_policysetstack_id:
          description: Nat Policysetstack Id
          type: string
        network_policysetstack_id:
          description: Network Policysetstack Id
          type: string
        priority_policysetstack_id:
          description: Priority Policysetstack Id
          type: string
        role:
          description: Role
          enum:
          - NONE
          - HUB
          - SPOKE
          - PA_WE_BR
          - PA_WE_DC
          - PA_CONN
          type: string
        site_id:
          description: Site Id
          type: string
        software_version:
          description: Software Version
          type: string
        spoke_ha_config:
          $ref: '#/components/schemas/SpokeHAConfigV2'
          description: Spoke Ha Config
        state:
          description: State
          enum:
          - ACTIVE_INIT
          - ACTIVE_INVENTORY_IN_PROGRESS
          - ACTIVE_INVENTORY_OPERATION_FAILED
          - ACTIVE_INVENTORY_GET_PENDING
          - ACTIVE_INVENTORY_GET_COMPLETE
          - ACTIVE_INVENTORY_POST_PENDING
          - ACTIVE_INTF_CONFIG_GET_FAILED
          - ACTIVE_INTF_STATE_GET_FAILED
          - ACTIVE_READY
          - ACTIVE_BOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_FROM_SITE_FAILED
          - ACTIVE_BOUND_TO_SITE
          - ACTIVE_BOUND_TO_SITE_FAILED
          - OOS
          - ACTIVE_DECLAIM_IN_PROGRESS
          - ACTIVE_DECLAIMED
          type: string
        switch_config:
          $ref: '#/components/schemas/SwitchConfig'
          description: Switch Config
        tags:
          description: Tags
          items:
            description: Tags
            type: string
          type: array
        vpn_to_vpn_forwarding:
          description: Vpn To Vpn Forwarding
          type: boolean
    ElementShellV2N1:
      properties:
        allowed_roles:
          description: "The allowed roles.       \n"
          items:
            description: Allowed Roles
            enum:
            - NONE
            - HUB
            - SPOKE
            - PA_WE_BR
            - PA_WE_DC
            - PA_CONN
            type: string
          type: array
        cluster_id:
          description: "The cluster ID.           \n"
          type: string
        cluster_insertion_mode:
          description: "The cluster insertion mode.         \n"
          enum:
          - AUTO
          - MANUAL
          type: string
        cluster_member_id:
          description: Cluster Member Id
          type: string
        description:
          description: "The description of the element shell.          \n"
        device_mode:
          description: 'The device mode values.

            '
          enum:
          - none
          - l3-mode
          - l2-mode
          type: string
        device_profile_id:
          description: "The device profile ID.         \n"
          type: string
        element_id:
          description: "The element ID          \n"
          type: string
        hub_cluster_config:
          $ref: '#/components/schemas/HubClusterConfig'
          description: 'Hub Cluster Config: Valid '
        hw_id:
          description: 'The hardware ID.

            '
          type: string
        id:
          description: Id
          type: string
        l3_direct_private_wan_forwarding:
          description: 'The L3 direct private WAN is enabled. True or False.

            '
          type: boolean
        l3_lan_forwarding:
          description: 'The L3 LAN forwarding is enabled. Yes indicates that traffic
            forwarding to and from LAN interface, when Enable L3 Direct Private WAN
            Forwarding is enabled.

            '
          type: boolean
        led_config:
          $ref: '#/components/schemas/LedConfig'
          description: 'Valid LED config.

            '
        main_power_usage_threshold:
          description: "The main power usage threshold. Allowed range is 50-100. \
            \              \n"
          format: int32
          type: integer
        model_name:
          description: "The model name of the device.      \n"
          type: string
        name:
          description: 'The name of the device.

            '
          type: string
        nat_policysetstack_id:
          description: 'ID for the NAT Policyset Stack. Can be retrieved using natpolicysetstack
            API.

            '
          type: string
        network_policysetstack_id:
          description: "The ID for the Path Policyset Stack. Can be retrieved using\
            \ networkpolicysetstack API.          \n"
          type: string
        priority_policysetstack_id:
          description: 'ID for the QoS Policyset Stack. Can be retrieved using prioritypolicysetstack
            API.

            '
          type: string
        role:
          description: 'The element role.

            '
          enum:
          - NONE
          - HUB
          - SPOKE
          - PA_WE_BR
          - PA_WE_DC
          - PA_CONN
          type: string
        site_id:
          description: 'The site ID.

            '
          type: string
        software_version:
          description: 'The element shell software version.

            '
          type: string
        spoke_ha_config:
          $ref: '#/components/schemas/SpokeHAConfigV2'
          description: 'The details of the spoke HA configuration.

            '
        state:
          description: 'The element state.

            '
          enum:
          - ACTIVE_INIT
          - ACTIVE_INVENTORY_IN_PROGRESS
          - ACTIVE_INVENTORY_OPERATION_FAILED
          - ACTIVE_INVENTORY_GET_PENDING
          - ACTIVE_INVENTORY_GET_COMPLETE
          - ACTIVE_INVENTORY_POST_PENDING
          - ACTIVE_INTF_CONFIG_GET_FAILED
          - ACTIVE_INTF_STATE_GET_FAILED
          - ACTIVE_READY
          - ACTIVE_BOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_IN_PROGRESS
          - ACTIVE_UNBOUND_FROM_SITE_FAILED
          - ACTIVE_BOUND_TO_SITE
          - ACTIVE_BOUND_TO_SITE_FAILED
          - OOS
          - ACTIVE_DECLAIM_IN_PROGRESS
          - ACTIVE_DECLAIMED
          type: string
        switch_config:
          $ref: '#/components/schemas/SwitchConfig'
          description: 'The details of the switch configuration.

            '
        tags:
          description: 'A information field that can be added to identify the element.

            '
          items:
            description: Tags
            type: string
          type: array
        vpn_to_vpn_forwarding:
          description: 'VPN to VPN forwarding. True or False.

            '
          type: boolean
      required:
      - model_name
      - software_version
      - site_id
    EnterprisePrefixSetN:
      properties:
        id:
          description: 'The ID of the tenant enterprise prefix set.

            '
          type: string
        ipv4_enterprise_prefixes:
          description: 'The IPv4 configuration of the tenant enterprise prefix.

            '
          items:
            description: Ipv4 Enterprise Prefixes
            type: string
          type: array
    EnterprisePrefixSetNV2N1:
      properties:
        id:
          description: 'The ID of the tenant enterprise prefix set.

            '
          type: string
        ipv4_enterprise_prefixes:
          description: 'The IPv4 configuration of the tenant enterprise prefix.

            '
          items:
            description: Ipv4 Enterprise Prefixes
            type: string
          type: array
        ipv6_enterprise_prefixes:
          description: 'The IPv6 configuration of the tenant enterprise prefix.

            '
          items:
            description: Ipv6 Enterprise Prefixes
            type: string
          type: array
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          description: 'The error code.

            '
          type: string
        message:
          description: 'The error message.

            '
          type: string
    Ethernet:
      properties:
        connector:
          description: "The ethernet connector type.        \n"
          type: string
        device:
          description: "The device name.  \n"
          type: string
        disabled:
          description: 'Disable the port.

            '
          type: boolean
        disabled_reason:
          description: 'Reason to disable the port.

            '
          type: string
        element_id:
          description: 'Element ID.

            '
          type: string
        id:
          description: 'The connector ID.

            '
          type: string
        inactive:
          description: 'Port status (active or inactive).

            '
          type: boolean
        inactive_reason:
          description: 'Reason for port being inactive.

            '
          type: string
        max_mtu:
          description: 'The MTU max value.

            '
          type: integer
        max_speed:
          description: 'The max speed value.

            '
          type: integer
        name:
          description: 'The name.

            '
          type: string
        original_mac_address:
          description: 'The MAC address.

            '
          type: string
        region:
          description: 'The region.

            '
          type: string
        site_id:
          description: 'The site ID.

            '
          type: string
      required:
      - site_id
    EthernetPort:
      properties:
        full_duplex:
          description: 'Interface running in full duplex mode.

            '
          type: boolean
        port_id:
          $ref: '#/components/schemas/Ethernet'
          description: 'The ethernet port ID.

            '
        port_name:
          description: 'The ethernet port name.

            '
          type: string
        speed:
          description: "The ethernet port speed. \n"
          format: int32
          type: integer
    GREConfig:
      properties:
        csum:
          description: 'The CSUM.

            '
          type: boolean
        keepalive_enable:
          description: 'Is keepalive enabled. True or False.

            '
          type: boolean
        keepalive_fail_count:
          description: 'Value between 3 and 10. Indicates the number of consecutive
            missed keep-alive packets before a link is declared as down. The default
            value is 3.

            '
          format: int32
          type: integer
        keepalive_interval:
          description: 'Value between 100 ms and 600000 ms. Indicates the time interval
            in milliseconds between two VPN keepalive packets. The default value is
            1000 ms.

            '
          format: int32
          type: integer
    Host:
      properties:
        address_v4:
          description: Address V4
          type: string
        address_v6:
          description: Address V6
          type: string
        vrf_context_id:
          description: Vrf Context Id
          type: string
    HubClusterConfig:
      properties:
        intra_cluster_tunnel:
          $ref: '#/components/schemas/IntraClusterTunnel'
          description: 'Intra Cluster Tunnel: Valid '
        track:
          $ref: '#/components/schemas/Tracker'
          description: 'Track: Valid '
    IKEV1Params:
      properties:
        xauth_id:
          description: 'The xauth ID.

            '
          type: string
        xauth_secret:
          description: 'The authentication secret. Length must be between 4-128.

            '
          type: string
        xauth_secret_encrypted:
          description: "The xauth secret. Value = True.            \n"
          type: string
        xauth_secret_hash:
          description: 'The xauth hash. Value = True.

            '
          type: string
        xauth_type:
          description: 'The xauth type.

            '
          enum:
          - NONE
          - SECRET
          type: string
      required:
      - xauth_type
    IPSECAuthenticationV1:
      properties:
        certificate:
          description: 'The certificate authentication for the IPsec Profile.

            '
          type: string
        certificate_profile_id:
          description: Certificate Profile Id
          type: string
        comment:
          description: Comment
          type: string
        ikev1_params:
          $ref: '#/components/schemas/IKEV1Params'
          description: 'Ikev1 Params: Valid '
        local_ca_certificate:
          description: "The local CA certificate uploaded for certificate authentication.\
            \              \n"
          type: string
        local_id:
          description: 'The local ID type.

            '
          enum:
          - LOCAL_IP
          - DN
          - HOSTNAME
          - CUSTOM
          - NONE
          type: string
        local_id_custom:
          description: 'The custom local ID.

            '
          type: string
        local_pa_certificate_id:
          description: Local Pa Certificate Id
          type: string
        pa_master_key_id:
          description: Pa Master Key Id
          type: string
        passphrase:
          description: Passphrase
          type: string
        passphrase_encrypted:
          description: 'Passphrase Encrypted: JsonIgnore(value = true) '
          type: string
        peer_id_check:
          description: Peer Id Check
          enum:
          - EXACT
          - WILDCARD
          type: string
        permit_peer_id_mismatch:
          description: Permit Peer Id Mismatch
          type: boolean
        private_key:
          description: 'The private key file uploaded for certificate authentication.

            '
          type: string
        private_key_encrypted:
          description: 'Private Key Encrypted: JsonIgnore(value = true) '
          type: string
        remote_ca_certificate:
          description: "The standard VPN endpoint CA certificate uploaded.       \
            \     \n"
          type: string
        remote_id:
          description: "The ID for the standard VPN endpoint in the Remote ID field.\
            \ \n"
          type: string
        secret:
          description: "The password for PSK authentication.           \n"
          type: string
        secret_encrypted:
          description: 'Secret Encrypted: JsonIgnore(value = true) '
          type: string
        secret_hash:
          description: 'Secret Hash: JsonIgnore(value = true) '
          type: string
        strict_validation_peer_extended_key_use:
          description: Strict Validation Peer Extended Key Use
          type: boolean
        type:
          description: 'The authentication type = PSK or Certificates.

            '
          enum:
          - NONE
          - PSK
          - X509
          type: string
        x509Objects:
          $ref: '#/components/schemas/X509Objects'
          description: 'X509Objects: JsonIgnore(value = true) '
      required:
      - local_id
      - type
    IPSECConfigV1:
      properties:
        authentication:
          $ref: '#/components/schemas/IPSECAuthenticationV1'
          description: 'The IPSec authentication details.

            '
        ipsec_profile_id:
          description: 'The IPSec profile ID.

            '
          type: string
      required:
      - ipsec_profile_id
    IPv4Range:
      properties:
        end:
          description: 'The end IPv4 address.

            '
          type: string
        start:
          description: "The start IPv4 address. \n"
          type: string
      required:
      - end
      - start
    InterfaceScreenV4N19:
      properties:
        admin_up:
          description: 'The interface admin state.

            '
          type: boolean
        attached_lan_networks:
          description: 'The attached lan network ID and vlan ID.

            '
          items:
            $ref: '#/components/schemas/LanNetworkVlanMapping'
          type: array
        authentication_config:
          $ref: '#/components/schemas/AuthenticationInterfaceConfig'
          description: 'The authentication config details.

            '
        bound_interfaces:
          description: 'The bound interfaces.

            '
          items:
            description: Bound Interfaces
            type: string
          type: array
        bypass_pair:
          $ref: '#/components/schemas/BypassPairV2'
          description: 'The details of the bypass pair.

            '
        cellular_config:
          $ref: '#/components/schemas/CellularInterfaceConfig'
          description: 'The cellular config details.

            '
        description:
          description: 'The interface description. Max size = 256.

            '
        devicemgmt_policysetstack_id:
          description: 'The device management policy set stack ID.

            '
          type: string
        dhcp_relay:
          $ref: '#/components/schemas/DHCPRelay'
          description: 'The DHCP relay information.

            '
        directed_broadcast:
          description: 'The directed broadcast.

            '
          type: boolean
        ethernet_port:
          $ref: '#/components/schemas/EthernetPort'
          description: 'The ethernet port information.

            '
        id:
          description: 'The interface ID.

            '
          type: string
        interface_profile_id:
          description: 'The interface profile ID.

            '
          type: string
        ipfixcollectorcontext_id:
          description: 'The IPFIX collector context ID.

            '
          type: string
        ipfixfiltercontext_id:
          description: 'The IPFIX filter context ID.

            '
          type: string
        ipv4_config:
          $ref: '#/components/schemas/Ipv4Config'
          description: 'The ipv4 config information.

            '
        ipv6_config:
          $ref: '#/components/schemas/Ipv6ConfigV1'
          description: 'The ipv6 config information.

            '
        lldp_enabled:
          description: 'If LLDP enabled. True/False.

            '
          type: boolean
        mac_address:
          description: 'The interface configuration MAC address.

            '
          type: string
        mtu:
          description: 'The MTU value of the interface.

            '
          type: integer
        multicast_config:
          $ref: '#/components/schemas/MulticastInterfaceConfig'
          description: 'The multicast config details.

            '
        name:
          description: 'The name of the interface state. Max size = 128.

            '
          type: string
        nat_address:
          description: 'The NAT IP address.

            '
          type: string
        nat_address_v6:
          description: 'The NAT IPV6 address.

            '
          type: string
        nat_pools:
          description: 'The NAT pools information.

            '
          items:
            $ref: '#/components/schemas/NatPool'
          type: array
        nat_port:
          description: 'The NAT port. LAN,WAN,Internet bypass ports cannot be part
            of logical interface groups.

            '
          format: int32
          type: integer
        nat_port_v6:
          description: "The NAT IPv6 port.Internet bypass ports cannot be part of\
            \ logical interface groups. \n"
          format: int32
          type: integer
        nat_zone_id:
          description: 'The NAT zone ID.

            '
          type: string
        network_context_id:
          description: 'The network context ID.

            '
          type: string
        parent:
          description: 'The parent value = true.

            '
          type: string
        peer_bypasspair_wan_port_type:
          description: 'The peer bypass pair WAN port type.

            '
          enum:
          - none
          - cellular
          type: string
        poe_enabled:
          description: 'PoE enabled = true/false.

            '
          type: boolean
        port_channel_config:
          $ref: '#/components/schemas/PortChannelConfig'
          description: 'Port Channel Config: Valid '
        power_usage_threshold:
          description: 'The interface config PoE power usage threshold. Valid values
            are in the range 50-100.

            '
          format: int32
          type: integer
        pppoe_config:
          $ref: '#/components/schemas/PppoEInterfaceConfig'
          description: 'The PPPoE config information.

            '
        scope:
          description: 'The network scope.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        secondary_ip_configs:
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
          items:
            $ref: '#/components/schemas/SecondaryIPConfig'
          type: array
        service_link_config:
          $ref: '#/components/schemas/ServiceLinkV4'
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
        site_wan_interface_ids:
          description: 'The site WAN interface IDs.

            '
          items:
            description: Site Wan Interface Ids
            type: string
          type: array
        static_arp_configs:
          description: 'The static ARP config details.

            '
          items:
            $ref: '#/components/schemas/StaticARPConfig'
          type: array
        sub_interface:
          $ref: '#/components/schemas/SubInterface'
          description: 'The sub interface vlan ID.

            '
        switch_port_config:
          $ref: '#/components/schemas/SwitchPortConfig'
          description: 'The switch port config details.

            '
        tags:
          description: 'A information field that can be added to identify the interface.
            Maximum 10 Unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The interface type.

            '
          type: string
        used_for:
          description: 'The interface used for value. The allowed values are public,private_wan,lan,none.

            '
          type: string
        vlan_config:
          $ref: '#/components/schemas/VlanConfig'
          description: 'The VLAN config details.

            '
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - peer_bypasspair_wan_port_type
      - scope
      - used_for
      - type
    InterfaceScreenV4N20:
      properties:
        admin_up:
          description: 'The interface admin state.

            '
          type: boolean
        attached_lan_networks:
          description: 'The attached lan network ID and vlan ID.

            '
          items:
            $ref: '#/components/schemas/LanNetworkVlanMapping'
          type: array
        authentication_config:
          $ref: '#/components/schemas/AuthenticationInterfaceConfig'
          description: 'The authentication config details.

            '
        bound_interfaces:
          description: 'The bound interfaces.

            '
          items:
            description: Bound Interfaces
            type: string
          type: array
        bypass_pair:
          $ref: '#/components/schemas/BypassPairV2'
          description: 'The details of the bypass pair.

            '
        cellular_config:
          $ref: '#/components/schemas/CellularInterfaceConfig'
          description: 'The cellular config details.

            '
        description:
          description: 'The interface description. Max size = 256.

            '
        devicemgmt_policysetstack_id:
          description: 'The device management policy set stack ID.

            '
          type: string
        dhcp_relay:
          $ref: '#/components/schemas/DHCPRelay'
          description: 'The DHCP relay information.

            '
        directed_broadcast:
          description: 'The directed broadcast.

            '
          type: boolean
        ethernet_port:
          $ref: '#/components/schemas/EthernetPort'
          description: 'The ethernet port information.

            '
        id:
          description: 'The interface ID.

            '
          type: string
        interface_profile_id:
          description: 'The interface profile ID.

            '
          type: string
        ipfixcollectorcontext_id:
          description: 'The IPFIX collector context ID.

            '
          type: string
        ipfixfiltercontext_id:
          description: 'The IPFIX filter context ID.

            '
          type: string
        ipv4_config:
          $ref: '#/components/schemas/Ipv4Config'
          description: 'The ipv4 config information.

            '
        ipv6_config:
          $ref: '#/components/schemas/Ipv6ConfigV1'
          description: 'The ipv6 config information.

            '
        lldp_enabled:
          description: 'If LLDP enabled. True/False.

            '
          type: boolean
        mac_address:
          description: 'The interface configuration MAC address.

            '
          type: string
        mtu:
          description: 'The MTU value of the interface.

            '
          type: integer
        multicast_config:
          $ref: '#/components/schemas/MulticastInterfaceConfig'
          description: 'The multicast config details.

            '
        name:
          description: 'The name of the interface state. Max size = 128.

            '
          type: string
        nat_address:
          description: 'The NAT IP address.

            '
          type: string
        nat_address_v6:
          description: 'The NAT IPV6 address.

            '
          type: string
        nat_pools:
          description: 'The NAT pools information.

            '
          items:
            $ref: '#/components/schemas/NatPool'
          type: array
        nat_port:
          description: 'The NAT port. LAN,WAN,Internet bypass ports cannot be part
            of logical interface groups.

            '
          format: int32
          type: integer
        nat_port_v6:
          description: "The NAT IPv6 port.Internet bypass ports cannot be part of\
            \ logical interface groups. \n"
          format: int32
          type: integer
        nat_zone_id:
          description: 'The NAT zone ID.

            '
          type: string
        network_context_id:
          description: 'The network context ID.

            '
          type: string
        parent:
          description: 'The parent value = true.

            '
          type: string
        peer_bypasspair_wan_port_type:
          description: 'The peer bypass pair WAN port type.

            '
          enum:
          - none
          - cellular
          type: string
        poe_enabled:
          description: 'PoE enabled = true/false.

            '
          type: boolean
        port_channel_config:
          $ref: '#/components/schemas/PortChannelConfig'
          description: 'Port Channel Config: Valid '
        power_usage_threshold:
          description: 'The interface config PoE power usage threshold. Valid values
            are in the range 50-100.

            '
          format: int32
          type: integer
        pppoe_config:
          $ref: '#/components/schemas/PppoEInterfaceConfig'
          description: 'The PPPoE config information.

            '
        scope:
          description: 'The network scope.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        secondary_ip_configs:
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
          items:
            $ref: '#/components/schemas/SecondaryIPConfig'
          type: array
        service_link_config:
          $ref: '#/components/schemas/ServiceLinkV4'
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
        sgi_apply_static_tag:
          description: Sgi Apply Static Tag
          type: boolean
        site_wan_interface_ids:
          description: 'The site WAN interface IDs.

            '
          items:
            description: Site Wan Interface Ids
            type: string
          type: array
        static_arp_configs:
          description: 'The static ARP config details.

            '
          items:
            $ref: '#/components/schemas/StaticARPConfig'
          type: array
        sub_interface:
          $ref: '#/components/schemas/SubInterface'
          description: 'The sub interface vlan ID.

            '
        switch_port_config:
          $ref: '#/components/schemas/SwitchPortConfig'
          description: 'The switch port config details.

            '
        tags:
          description: 'A information field that can be added to identify the interface.
            Maximum 10 Unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The interface type.

            '
          type: string
        used_for:
          description: 'The interface used for value. The allowed values are public,private_wan,lan,none.

            '
          type: string
        vlan_config:
          $ref: '#/components/schemas/VlanConfig'
          description: 'The VLAN config details.

            '
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - peer_bypasspair_wan_port_type
      - scope
      - used_for
      - type
    InterfaceScreenV4N21:
      properties:
        admin_up:
          description: 'The interface admin state.

            '
          type: boolean
        attached_lan_networks:
          description: 'The attached lan network ID and vlan ID.

            '
          items:
            $ref: '#/components/schemas/LanNetworkVlanMapping'
          type: array
        authentication_config:
          $ref: '#/components/schemas/AuthenticationInterfaceConfig'
          description: 'The authentication config details.

            '
        bound_interfaces:
          description: 'The bound interfaces.

            '
          items:
            description: Bound Interfaces
            type: string
          type: array
        bypass_pair:
          $ref: '#/components/schemas/BypassPairV2'
          description: 'The details of the bypass pair.

            '
        cellular_config:
          $ref: '#/components/schemas/CellularInterfaceConfig'
          description: 'The cellular config details.

            '
        description:
          description: 'The interface description. Max size = 256.

            '
        devicemgmt_policysetstack_id:
          description: 'The device management policy set stack ID.

            '
          type: string
        dhcp_relay:
          $ref: '#/components/schemas/DHCPRelay'
          description: 'The DHCP relay information.

            '
        directed_broadcast:
          description: 'The directed broadcast.

            '
          type: boolean
        ethernet_port:
          $ref: '#/components/schemas/EthernetPort'
          description: 'The ethernet port information.

            '
        fec_mode:
          description: 'The forward error correction mode.

            '
          enum:
          - auto
          - rs_fec
          - fc_fec
          - none
          type: string
        id:
          description: 'The interface ID.

            '
          type: string
        interface_profile_id:
          description: 'The interface profile ID.

            '
          type: string
        ipfixcollectorcontext_id:
          description: 'The IPFIX collector context ID.

            '
          type: string
        ipfixfiltercontext_id:
          description: 'The IPFIX filter context ID.

            '
          type: string
        ipv4_config:
          $ref: '#/components/schemas/Ipv4Config'
          description: 'The ipv4 config information.

            '
        ipv6_config:
          $ref: '#/components/schemas/Ipv6ConfigV1'
          description: 'The ipv6 config information.

            '
        lldp_enabled:
          description: 'If LLDP enabled. True/False.

            '
          type: boolean
        loopback_config:
          $ref: '#/components/schemas/LoopbackConfig'
          description: Loopback Config
        mac_address:
          description: 'The interface configuration MAC address.

            '
          type: string
        mtu:
          description: 'The MTU value of the interface.

            '
          type: integer
        multicast_config:
          $ref: '#/components/schemas/MulticastInterfaceConfig'
          description: 'The multicast config details.

            '
        name:
          description: 'The name of the interface state. Max size = 128.

            '
          type: string
        nat_address:
          description: 'The NAT IP address.

            '
          type: string
        nat_address_v6:
          description: 'The NAT IPV6 address.

            '
          type: string
        nat_pools:
          description: 'The NAT pools information.

            '
          items:
            $ref: '#/components/schemas/NatPool'
          type: array
        nat_port:
          description: 'The NAT port. LAN,WAN,Internet bypass ports cannot be part
            of logical interface groups.

            '
          format: int32
          type: integer
        nat_port_v6:
          description: "The NAT IPv6 port.Internet bypass ports cannot be part of\
            \ logical interface groups. \n"
          format: int32
          type: integer
        nat_zone_id:
          description: 'The NAT zone ID.

            '
          type: string
        network_context_id:
          description: 'The network context ID.

            '
          type: string
        parent:
          description: 'The parent value = true.

            '
          type: string
        peer_bypasspair_wan_port_type:
          description: 'The peer bypass pair WAN port type.

            '
          enum:
          - none
          - cellular
          type: string
        poe_enabled:
          description: 'PoE enabled = true/false.

            '
          type: boolean
        port_channel_config:
          $ref: '#/components/schemas/PortChannelConfig'
          description: 'Port Channel Config: Valid '
        power_usage_threshold:
          description: 'The interface config PoE power usage threshold. Valid values
            are in the range 50-100.

            '
          format: int32
          type: integer
        pppoe_config:
          $ref: '#/components/schemas/PppoEInterfaceConfig'
          description: 'The PPPoE config information.

            '
        scope:
          description: 'The network scope.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        secondary_ip_configs:
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
          items:
            $ref: '#/components/schemas/SecondaryIPConfig'
          type: array
        service_link_config:
          $ref: '#/components/schemas/ServiceLinkV4'
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
        sgi_apply_static_tag:
          description: Sgi Apply Static Tag
          type: boolean
        site_wan_interface_ids:
          description: 'The site WAN interface IDs.

            '
          items:
            description: Site Wan Interface Ids
            type: string
          type: array
        static_arp_configs:
          description: 'The static ARP config details.

            '
          items:
            $ref: '#/components/schemas/StaticARPConfig'
          type: array
        sub_interface:
          $ref: '#/components/schemas/SubInterface'
          description: 'The sub interface vlan ID.

            '
        switch_port_config:
          $ref: '#/components/schemas/SwitchPortConfig'
          description: 'The switch port config details.

            '
        tags:
          description: 'A information field that can be added to identify the interface.
            Maximum 10 Unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The interface type.

            '
          type: string
        used_for:
          description: 'The interface used for value. The allowed values are public,private_wan,lan,none.

            '
          type: string
        vlan_config:
          $ref: '#/components/schemas/VlanConfig'
          description: 'The VLAN config details.

            '
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - peer_bypasspair_wan_port_type
      - scope
      - used_for
      - type
    InterfaceV4N19:
      properties:
        admin_up:
          description: 'The interface admin state.

            '
          type: boolean
        attached_lan_networks:
          description: 'The attached lan network ID and vlan ID.

            '
          items:
            $ref: '#/components/schemas/LanNetworkVlanMapping'
          type: array
        authentication_config:
          $ref: '#/components/schemas/AuthenticationInterfaceConfig'
          description: 'The authentication config details.

            '
        bound_interfaces:
          description: 'The bound interfaces.

            '
          items:
            description: Bound Interfaces
            type: string
          type: array
        bypass_pair:
          $ref: '#/components/schemas/BypassPairV2'
          description: 'The details of the bypass pair.

            '
        cellular_config:
          $ref: '#/components/schemas/CellularInterfaceConfig'
          description: 'The cellular config details.

            '
        description:
          description: 'The interface description. Max size = 256.

            '
        devicemgmt_policysetstack_id:
          description: 'The device management policy set stack ID.

            '
          type: string
        dhcp_relay:
          $ref: '#/components/schemas/DHCPRelay'
          description: 'The DHCP relay information.

            '
        directed_broadcast:
          description: 'The directed broadcast.

            '
          type: boolean
        ethernet_port:
          $ref: '#/components/schemas/EthernetPort'
          description: 'The ethernet port information.

            '
        id:
          description: 'The interface ID.

            '
          type: string
        interface_profile_id:
          description: 'The interface profile ID.

            '
          type: string
        ipfixcollectorcontext_id:
          description: 'The IPFIX collector context ID.

            '
          type: string
        ipfixfiltercontext_id:
          description: 'The IPFIX filter context ID.

            '
          type: string
        ipv4_config:
          $ref: '#/components/schemas/Ipv4Config'
          description: 'The ipv4 config information.

            '
        ipv6_config:
          $ref: '#/components/schemas/Ipv6ConfigV1'
          description: 'The ipv6 config information.

            '
        lldp_enabled:
          description: 'If LLDP enabled. True/False.

            '
          type: boolean
        mac_address:
          description: 'The interface configuration MAC address.

            '
          type: string
        mtu:
          description: 'The MTU value of the interface.

            '
          type: integer
        multicast_config:
          $ref: '#/components/schemas/MulticastInterfaceConfig'
          description: 'The multicast config details.

            '
        name:
          description: 'The name of the interface state. Max size = 128.

            '
          type: string
        nat_address:
          description: 'The NAT IP address.

            '
          type: string
        nat_address_v6:
          description: 'The NAT IPV6 address.

            '
          type: string
        nat_pools:
          description: 'The NAT pools information.

            '
          items:
            $ref: '#/components/schemas/NatPool'
          type: array
        nat_port:
          description: 'The NAT port. LAN,WAN,Internet bypass ports cannot be part
            of logical interface groups.

            '
          format: int32
          type: integer
        nat_port_v6:
          description: "The NAT IPv6 port.Internet bypass ports cannot be part of\
            \ logical interface groups. \n"
          format: int32
          type: integer
        nat_zone_id:
          description: 'The NAT zone ID.

            '
          type: string
        network_context_id:
          description: 'The network context ID.

            '
          type: string
        parent:
          description: 'The parent value = true.

            '
          type: string
        peer_bypasspair_wan_port_type:
          description: 'The peer bypass pair WAN port type.

            '
          enum:
          - none
          - cellular
          type: string
        poe_enabled:
          description: 'PoE enabled = true/false.

            '
          type: boolean
        port_channel_config:
          $ref: '#/components/schemas/PortChannelConfig'
          description: 'Port Channel Config: Valid '
        power_usage_threshold:
          description: 'The interface config PoE power usage threshold. Valid values
            are in the range 50-100.

            '
          format: int32
          type: integer
        pppoe_config:
          $ref: '#/components/schemas/PppoEInterfaceConfig'
          description: 'The PPPoE config information.

            '
        scope:
          description: 'The network scope.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        secondary_ip_configs:
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
          items:
            $ref: '#/components/schemas/SecondaryIPConfig'
          type: array
        service_link_config:
          $ref: '#/components/schemas/ServiceLinkV4'
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
        site_wan_interface_ids:
          description: 'The site WAN interface IDs.

            '
          items:
            description: Site Wan Interface Ids
            type: string
          type: array
        static_arp_configs:
          description: 'The static ARP config details.

            '
          items:
            $ref: '#/components/schemas/StaticARPConfig'
          type: array
        sub_interface:
          $ref: '#/components/schemas/SubInterface'
          description: 'The sub interface vlan ID.

            '
        switch_port_config:
          $ref: '#/components/schemas/SwitchPortConfig'
          description: 'The switch port config details.

            '
        tags:
          description: 'A information field that can be added to identify the interface.
            Maximum 10 Unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The interface type.

            '
          type: string
        used_for:
          description: 'The interface used for value. The allowed values are public,private_wan,lan,none.

            '
          type: string
        vlan_config:
          $ref: '#/components/schemas/VlanConfig'
          description: 'The VLAN config details.

            '
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - peer_bypasspair_wan_port_type
      - scope
      - used_for
      - type
    InterfaceV4N20:
      properties:
        admin_up:
          description: 'The interface admin state.

            '
          type: boolean
        attached_lan_networks:
          description: 'The attached lan network ID and vlan ID.

            '
          items:
            $ref: '#/components/schemas/LanNetworkVlanMapping'
          type: array
        authentication_config:
          $ref: '#/components/schemas/AuthenticationInterfaceConfig'
          description: 'The authentication config details.

            '
        bound_interfaces:
          description: 'The bound interfaces.

            '
          items:
            description: Bound Interfaces
            type: string
          type: array
        bypass_pair:
          $ref: '#/components/schemas/BypassPairV2'
          description: 'The details of the bypass pair.

            '
        cellular_config:
          $ref: '#/components/schemas/CellularInterfaceConfig'
          description: 'The cellular config details.

            '
        description:
          description: 'The interface description. Max size = 256.

            '
        devicemgmt_policysetstack_id:
          description: 'The device management policy set stack ID.

            '
          type: string
        dhcp_relay:
          $ref: '#/components/schemas/DHCPRelay'
          description: 'The DHCP relay information.

            '
        directed_broadcast:
          description: 'The directed broadcast.

            '
          type: boolean
        ethernet_port:
          $ref: '#/components/schemas/EthernetPort'
          description: 'The ethernet port information.

            '
        id:
          description: 'The interface ID.

            '
          type: string
        interface_profile_id:
          description: 'The interface profile ID.

            '
          type: string
        ipfixcollectorcontext_id:
          description: 'The IPFIX collector context ID.

            '
          type: string
        ipfixfiltercontext_id:
          description: 'The IPFIX filter context ID.

            '
          type: string
        ipv4_config:
          $ref: '#/components/schemas/Ipv4Config'
          description: 'The ipv4 config information.

            '
        ipv6_config:
          $ref: '#/components/schemas/Ipv6ConfigV1'
          description: 'The ipv6 config information.

            '
        lldp_enabled:
          description: 'If LLDP enabled. True/False.

            '
          type: boolean
        mac_address:
          description: 'The interface configuration MAC address.

            '
          type: string
        mtu:
          description: 'The MTU value of the interface.

            '
          type: integer
        multicast_config:
          $ref: '#/components/schemas/MulticastInterfaceConfig'
          description: 'The multicast config details.

            '
        name:
          description: 'The name of the interface state. Max size = 128.

            '
          type: string
        nat_address:
          description: 'The NAT IP address.

            '
          type: string
        nat_address_v6:
          description: 'The NAT IPV6 address.

            '
          type: string
        nat_pools:
          description: 'The NAT pools information.

            '
          items:
            $ref: '#/components/schemas/NatPool'
          type: array
        nat_port:
          description: 'The NAT port. LAN,WAN,Internet bypass ports cannot be part
            of logical interface groups.

            '
          format: int32
          type: integer
        nat_port_v6:
          description: "The NAT IPv6 port.Internet bypass ports cannot be part of\
            \ logical interface groups. \n"
          format: int32
          type: integer
        nat_zone_id:
          description: 'The NAT zone ID.

            '
          type: string
        network_context_id:
          description: 'The network context ID.

            '
          type: string
        parent:
          description: 'The parent value = true.

            '
          type: string
        peer_bypasspair_wan_port_type:
          description: 'The peer bypass pair WAN port type.

            '
          enum:
          - none
          - cellular
          type: string
        poe_enabled:
          description: 'PoE enabled = true/false.

            '
          type: boolean
        port_channel_config:
          $ref: '#/components/schemas/PortChannelConfig'
          description: 'Port Channel Config: Valid '
        power_usage_threshold:
          description: 'The interface config PoE power usage threshold. Valid values
            are in the range 50-100.

            '
          format: int32
          type: integer
        pppoe_config:
          $ref: '#/components/schemas/PppoEInterfaceConfig'
          description: 'The PPPoE config information.

            '
        scope:
          description: 'The network scope.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        secondary_ip_configs:
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
          items:
            $ref: '#/components/schemas/SecondaryIPConfig'
          type: array
        service_link_config:
          $ref: '#/components/schemas/ServiceLinkV4'
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
        sgi_apply_static_tag:
          description: Sgi Apply Static Tag
          type: boolean
        site_wan_interface_ids:
          description: 'The site WAN interface IDs.

            '
          items:
            description: Site Wan Interface Ids
            type: string
          type: array
        static_arp_configs:
          description: 'The static ARP config details.

            '
          items:
            $ref: '#/components/schemas/StaticARPConfig'
          type: array
        sub_interface:
          $ref: '#/components/schemas/SubInterface'
          description: 'The sub interface vlan ID.

            '
        switch_port_config:
          $ref: '#/components/schemas/SwitchPortConfig'
          description: 'The switch port config details.

            '
        tags:
          description: 'A information field that can be added to identify the interface.
            Maximum 10 Unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The interface type.

            '
          type: string
        used_for:
          description: 'The interface used for value. The allowed values are public,private_wan,lan,none.

            '
          type: string
        vlan_config:
          $ref: '#/components/schemas/VlanConfig'
          description: 'The VLAN config details.

            '
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - peer_bypasspair_wan_port_type
      - scope
      - used_for
      - type
    InterfaceV4N21:
      properties:
        admin_up:
          description: 'The interface admin state.

            '
          type: boolean
        attached_lan_networks:
          description: 'The attached lan network ID and vlan ID.

            '
          items:
            $ref: '#/components/schemas/LanNetworkVlanMapping'
          type: array
        authentication_config:
          $ref: '#/components/schemas/AuthenticationInterfaceConfig'
          description: 'The authentication config details.

            '
        bound_interfaces:
          description: 'The bound interfaces.

            '
          items:
            description: Bound Interfaces
            type: string
          type: array
        bypass_pair:
          $ref: '#/components/schemas/BypassPairV2'
          description: 'The details of the bypass pair.

            '
        cellular_config:
          $ref: '#/components/schemas/CellularInterfaceConfig'
          description: 'The cellular config details.

            '
        description:
          description: 'The interface description. Max size = 256.

            '
        devicemgmt_policysetstack_id:
          description: 'The device management policy set stack ID.

            '
          type: string
        dhcp_relay:
          $ref: '#/components/schemas/DHCPRelay'
          description: 'The DHCP relay information.

            '
        directed_broadcast:
          description: 'The directed broadcast.

            '
          type: boolean
        ethernet_port:
          $ref: '#/components/schemas/EthernetPort'
          description: 'The ethernet port information.

            '
        fec_mode:
          description: 'The forward error correction mode.

            '
          enum:
          - auto
          - rs_fec
          - fc_fec
          - none
          type: string
        id:
          description: 'The interface ID.

            '
          type: string
        interface_profile_id:
          description: 'The interface profile ID.

            '
          type: string
        ipfixcollectorcontext_id:
          description: 'The IPFIX collector context ID.

            '
          type: string
        ipfixfiltercontext_id:
          description: 'The IPFIX filter context ID.

            '
          type: string
        ipv4_config:
          $ref: '#/components/schemas/Ipv4Config'
          description: 'The ipv4 config information.

            '
        ipv6_config:
          $ref: '#/components/schemas/Ipv6ConfigV1'
          description: 'The ipv6 config information.

            '
        lldp_enabled:
          description: 'If LLDP enabled. True/False.

            '
          type: boolean
        loopback_config:
          $ref: '#/components/schemas/LoopbackConfig'
          description: Loopback Config
        mac_address:
          description: 'The interface configuration MAC address.

            '
          type: string
        mtu:
          description: 'The MTU value of the interface.

            '
          type: integer
        multicast_config:
          $ref: '#/components/schemas/MulticastInterfaceConfig'
          description: 'The multicast config details.

            '
        name:
          description: 'The name of the interface state. Max size = 128.

            '
          type: string
        nat_address:
          description: 'The NAT IP address.

            '
          type: string
        nat_address_v6:
          description: 'The NAT IPV6 address.

            '
          type: string
        nat_pools:
          description: 'The NAT pools information.

            '
          items:
            $ref: '#/components/schemas/NatPool'
          type: array
        nat_port:
          description: 'The NAT port. LAN,WAN,Internet bypass ports cannot be part
            of logical interface groups.

            '
          format: int32
          type: integer
        nat_port_v6:
          description: "The NAT IPv6 port.Internet bypass ports cannot be part of\
            \ logical interface groups. \n"
          format: int32
          type: integer
        nat_zone_id:
          description: 'The NAT zone ID.

            '
          type: string
        network_context_id:
          description: 'The network context ID.

            '
          type: string
        parent:
          description: 'The parent value = true.

            '
          type: string
        peer_bypasspair_wan_port_type:
          description: 'The peer bypass pair WAN port type.

            '
          enum:
          - none
          - cellular
          type: string
        poe_enabled:
          description: 'PoE enabled = true/false.

            '
          type: boolean
        port_channel_config:
          $ref: '#/components/schemas/PortChannelConfig'
          description: 'Port Channel Config: Valid '
        power_usage_threshold:
          description: 'The interface config PoE power usage threshold. Valid values
            are in the range 50-100.

            '
          format: int32
          type: integer
        pppoe_config:
          $ref: '#/components/schemas/PppoEInterfaceConfig'
          description: 'The PPPoE config information.

            '
        scope:
          description: 'The network scope.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        secondary_ip_configs:
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
          items:
            $ref: '#/components/schemas/SecondaryIPConfig'
          type: array
        service_link_config:
          $ref: '#/components/schemas/ServiceLinkV4'
          description: 'The interface secondary IP config. Secondary IPs exceed the
            supported limit of 8.

            '
        sgi_apply_static_tag:
          description: Sgi Apply Static Tag
          type: boolean
        site_wan_interface_ids:
          description: 'The site WAN interface IDs.

            '
          items:
            description: Site Wan Interface Ids
            type: string
          type: array
        static_arp_configs:
          description: 'The static ARP config details.

            '
          items:
            $ref: '#/components/schemas/StaticARPConfig'
          type: array
        sub_interface:
          $ref: '#/components/schemas/SubInterface'
          description: 'The sub interface vlan ID.

            '
        switch_port_config:
          $ref: '#/components/schemas/SwitchPortConfig'
          description: 'The switch port config details.

            '
        tags:
          description: 'A information field that can be added to identify the interface.
            Maximum 10 Unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The interface type.

            '
          type: string
        used_for:
          description: 'The interface used for value. The allowed values are public,private_wan,lan,none.

            '
          type: string
        vlan_config:
          $ref: '#/components/schemas/VlanConfig'
          description: 'The VLAN config details.

            '
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - peer_bypasspair_wan_port_type
      - scope
      - used_for
      - type
    IntraClusterTunnel:
      properties:
        destination_ip:
          description: Destination Ip
          type: string
        source_ip:
          description: Source Ip
          type: string
        status:
          description: Status
          type: string
    Ipv4Config:
      properties:
        dhcp_config:
          $ref: '#/components/schemas/Ipv4Dhcp'
          description: 'The DHCP config information.

            '
        dns_v4_config:
          $ref: '#/components/schemas/DNS'
          description: 'The DNS v4 config details.

            '
        pppoe_config:
          $ref: '#/components/schemas/Ipv4Pppoe'
          description: 'The PPoE config information.

            '
        routes:
          description: 'The ethernet port routes.

            '
          items:
            $ref: '#/components/schemas/Route'
          type: array
        static_config:
          $ref: '#/components/schemas/Ipv4Static'
          description: 'The IPv4 static address.

            '
        type:
          description: 'The interface config type. Max = 12.

            '
          type: string
    Ipv4Dhcp:
      properties:
        client_id:
          description: 'The client ID.

            '
          type: string
        hostname:
          description: 'The IPv4 DHCP host name.

            '
          type: string
    Ipv4Pppoe:
      properties:
        chap_passwd:
          description: 'The PPPoE IPv4 CHAP password.

            '
          type: string
        chap_user:
          description: 'The PPPoE IPv4 CHAP user.

            '
          type: string
        set_route:
          description: "The set route for PPPoE IPv4. \n"
          type: boolean
    Ipv4Static:
      properties:
        address:
          description: Address
          type: string
    Ipv6ConfigV1:
      properties:
        dhcp_config:
          $ref: '#/components/schemas/Ipv6Dhcp'
          description: "The DHCP config information.        \n"
        dns_v6_config:
          $ref: '#/components/schemas/DNS'
          description: 'The DNS V6 configurations.

            '
        routes:
          description: 'The route details.

            '
          items:
            $ref: '#/components/schemas/Route'
          type: array
        static_config:
          $ref: '#/components/schemas/Ipv6StaticV1'
          description: 'The IPv6 static address.

            '
        type:
          description: 'The interface config type. Max = 12.

            '
          type: string
    Ipv6Dhcp:
      properties:
        client_id:
          description: 'The client ID.

            '
          type: string
        hostname:
          description: 'The IPv6 DHCP host name.

            '
          type: string
    Ipv6StaticV1:
      properties:
        address:
          description: 'The IPv6 static address.

            '
          type: string
        enable_prefix_distribution:
          description: 'Is prefix distribution enabled. True or False.

            '
          type: boolean
    LanNetworkVlanMapping:
      properties:
        lan_network_id:
          description: 'The LAN network ID.

            '
          type: string
        vlan_id:
          description: 'The VLAN ID. VLAN ID should be between 0 and 4095.

            '
          format: int32
          type: integer
    LedConfig:
      properties:
        service_led_on:
          description: Service Led On
          type: boolean
    ListQueryResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number.

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs.

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size = 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query.

            '
          type: object
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        id:
          description: 'The ID.

            '
          type: string
      type: object
    LocalNetwork:
      properties:
        prefix_set:
          description: 'The valid local prefix set for the site.

            '
          items:
            $ref: '#/components/schemas/Network'
          type: array
        prefix_set_v6:
          description: 'The v6 prefix set for the site.

            '
          items:
            $ref: '#/components/schemas/NetworkV6'
          type: array
        security_policies:
          description: 'The details of the security policy.

            '
          items:
            $ref: '#/components/schemas/SecurityPolicy'
          type: array
        vlan_id:
          description: "The vlan ID. \n"
          format: int32
          type: integer
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
    LocalPrefixSet:
      properties:
        local_networks:
          description: 'The details of the local networks prefix sets.

            '
          items:
            $ref: '#/components/schemas/LocalNetwork'
          type: array
    LoopbackConfig:
      properties:
        binding_interface_id:
          description: Binding Interface Id
          type: string
    MatchClauses:
      properties:
        as_path_id:
          description: 'The AS path ID.

            '
          type: string
        community_list_id:
          description: "The community list ID.          \n"
          type: string
        ip_next_hop_id:
          description: 'The IP next-hop ID.

            '
          type: string
        ip_prefix_list_id:
          description: 'The IP prefix list ID.

            '
          type: string
        tag:
          description: 'A information field that can be added to identify the match
            clause.

            '
          format: int32
          type: integer
    MulticastInterfaceConfig:
      properties:
        igmp_version:
          description: 'The IGMP version.

            '
          enum:
          - IGMPV2
          - IGMPV3
          type: string
        multicast_enabled:
          description: 'Is multicast enabled. True or False.

            '
          type: boolean
    NatPool:
      properties:
        ipv4_ranges:
          description: 'The NAT Ipv4 address ranges. Minimum 1 and maximum 4 nat pool
            IP ranges can be specified.

            '
          items:
            $ref: '#/components/schemas/IPv4Range'
          type: array
        nat_pool_id:
          description: 'The NAT pool ID.

            '
          type: string
    Network:
      properties:
        gateway:
          description: 'The network gateway.

            '
          type: string
        ipv4_prefix:
          description: 'The IPv4 address prefix.

            '
          type: string
    NetworkV6:
      properties:
        gateway:
          description: 'The network gateway.

            '
          type: string
        ipv6_prefix:
          description: 'The IPv6 address prefix.

            '
          type: string
    NextHop:
      properties:
        admin_distance:
          description: 'The admin distance for a specific route. The default value
            for admin distance is 1.

            '
          type: integer
        nexthop_interface_id:
          description: 'The next hop interface ID.

            '
          type: string
        nexthop_ip:
          description: "The next hop IPv4 address. \n"
          type: string
        self:
          description: "Set to True to indicate that traffic is destined for the ION\
            \ device. By default, Self is set to False. \n"
          type: boolean
    OspfRedistribution:
      properties:
        route_map_id:
          description: 'The route map ID.

            '
          type: string
        vrf_context_id:
          description: 'The VRF context ID.

            '
          type: string
    PassiveMode:
      properties:
        enable:
          description: "Passive mode enabled for the device. True or False. \n"
          type: boolean
        peer_ip_dynamic:
          description: 'Peer IP dynamic enabled. True or False.

            '
          type: boolean
    PathPrefixDistributionAssociationFilter:
      properties:
        description:
          description: "The description of the path prefix distribution filter association.\
            \       \n"
        id:
          description: "The ID.         \n"
          type: string
        name:
          description: "The name of the path prefix distribution filter association.\
            \           \n"
          type: string
        path_prefix_distribution_filter_id:
          description: "The description of the path prefix distribution filter association.\
            \          \n"
          type: string
        peer_site_ids:
          description: 'The peer site IDs.

            '
          items:
            description: Peer Site Ids
            type: string
          type: array
        site_id:
          description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)
            NotNull '
          type: string
        tags:
          description: 'A information field that can be added to identify the path
            prefix distribution filter association.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - site_id
    PathPrefixDistributionAssociationQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of path prefix distribution associations
            that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of path prefix distribution associations deleted
            for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the path prefix distribution associations for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the path prefix distribution associations by ID.   \
            \ \n"
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: "The total number of query parameters. \n"
          format: int64
          type: integer
    PathPrefixDistributionFilters:
      properties:
        description:
          description: "The description of the path prefix distribution filter list.\
            \       \n"
        id:
          description: "The ID.         \n"
          type: string
        name:
          description: "The name of the path prefix distribution filter list.    \
            \       \n"
          type: string
        path_prefix_filter_list:
          description: Path Prefix Filter List
          items:
            $ref: '#/components/schemas/PathPrefixFilterList'
          type: array
        tags:
          description: 'A information field that can be added to identify the path
            prefix distribution filter list.

            '
          items:
            description: Tags
            type: string
          type: array
    PathPrefixDistributionFiltersAssociation:
      properties:
        description:
          description: "The description of the path prefix distribution filter association.\
            \       \n"
        id:
          description: "The ID.         \n"
          type: string
        name:
          description: "The name of the path prefix distribution filter association.\
            \           \n"
          type: string
        path_prefix_distribution_filter_id:
          description: "The description of the path prefix distribution filter association.\
            \          \n"
          type: string
        peer_site_ids:
          description: 'The peer site IDs.

            '
          items:
            description: Peer Site Ids
            type: string
          type: array
        tags:
          description: 'A information field that can be added to identify the path
            prefix distribution filter association.

            '
          items:
            description: Tags
            type: string
          type: array
    PathPrefixDistributionFiltersQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of path prefix distribution filters that
            match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of path prefix distribution filters deleted for
            a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the path prefix distribution filters for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the path prefix distribution filters by ID.    \n"
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    PathPrefixDistributionQueryFilter:
      properties:
        description:
          description: "The description of the path prefix distribution filter.  \
            \     \n"
        id:
          description: "The ID.         \n"
          type: string
        name:
          description: "The name of the path prefix distribution filter.         \
            \  \n"
          type: string
        path_prefix_filter_list:
          description: "The description of the path prefix distribution filter list.\
            \          \n"
          items:
            $ref: '#/components/schemas/PathPrefixFilterList'
          type: array
        site_id:
          description: "The site ID. \n"
          type: string
        tags:
          description: 'A information field that can be added to identify the path
            prefix distribution filter.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - site_id
      - name
    PathPrefixFilterList:
      properties:
        path_prefix_filters:
          description: "The path prefix filters information.       \n"
          items:
            $ref: '#/components/schemas/PathPrefixFilters'
          type: array
        vrf_context_id:
          description: 'The VRF context ID.

            '
          type: string
    PathPrefixFilters:
      properties:
        ipv4_prefix:
          description: "The IPv4 address prefix.       \n"
          type: string
        ipv6_prefix:
          description: "The IPv6 address prefix.         \n"
          type: string
        order:
          description: 'The order of the prefix filter.

            '
          format: int32
          type: integer
        permit:
          description: 'The permit of the IP community string = Permit or Deny.

            '
          type: boolean
    PathPrefixes:
      properties:
        advertised_path_prefixes:
          description: "The advertised path prefixes.        \n"
          items:
            $ref: '#/components/schemas/PathPrefixes'
          type: array
        description:
          description: 'The description of the path prefixes.

            '
        filtered_path_prefixes:
          description: "The filtered path prefixes.              \n"
          items:
            $ref: '#/components/schemas/PathPrefixes'
          type: array
        id:
          description: "The ID.         \n"
          type: string
        name:
          description: "The name of the path prefixes.       \n"
          type: string
        peer_site_id:
          description: Peer Site Id
          type: string
        tags:
          description: 'A information field that can be added to identify the path
            prefix.

            '
          items:
            description: Tags
            type: string
          type: array
    PeerInfo:
      properties:
        hostname:
          description: 'The peer hostname.

            '
          type: string
        ip_addresses:
          description: 'The peer IP addresses. Max size = 4.

            '
          items:
            description: Ip Addresses
            type: string
          type: array
    PeerStatus:
      properties:
        direction:
          description: Direction
          type: string
        downtime:
          description: Downtime
          type: string
        state:
          description: State
          type: string
        uptime:
          description: Uptime
          type: string
        v4_capability_negotiated:
          description: V4 Capability Negotiated
          type: boolean
        v6_capability_negotiated:
          description: V6 Capability Negotiated
          type: boolean
    PortChannelConfig:
      properties:
        lacp_enabled:
          description: Lacp Enabled
          type: boolean
        transmission_mode:
          description: Transmission Mode
          enum:
          - Slow
          - Fast
          type: string
    PppoEInterfaceConfig:
      properties:
        host_uniq:
          description: 'The host.

            '
          type: string
        ip_address_type:
          description: 'IPv4 and IPv6 addresses.

            '
          type: string
        password:
          description: 'The password for the PPOE interface configuration.

            '
          type: string
        reconnection_delay:
          description: 'The recoonection delay value.

            '
          format: int32
          type: integer
        service_name:
          description: 'The name of the service used for the PPPoE configuration.

            '
          type: string
        username:
          description: 'The username for the PPPoE interface configuration.

            '
          type: string
    PrefixDistributionSpokeList:
      properties:
        description:
          description: 'The description of the prefix distribution spoke list.

            '
        id:
          description: "The ID.         \n"
          type: string
        name:
          description: "The name of the prefix distribution spoke list.       \n"
          type: string
        spoke_site_ids:
          description: "The spoke site IDs.              \n"
          items:
            description: Spoke Site Ids
            type: string
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            distribution spoke list.

            '
          items:
            description: Tags
            type: string
          type: array
    PrefixInfo:
      properties:
        as_path:
          description: 'The AS path of the IPv4/IPv6 prefix.

            '
          items:
            description: As Path
            format: int64
            type: integer
          type: array
        network:
          description: 'The network of the IPv4/IPv6 prefix.

            '
          type: string
        nexthop:
          description: 'The next-hop of the IPv4/IPv6 prefix.

            '
          type: string
    PrefixQueryFilterV3:
      properties:
        element_id:
          description: 'The element ID.

            '
          type: string
        ipv4_prefix:
          description: 'The IPv4 address prefix.

            '
          type: string
        resource_id:
          description: 'The resource ID.

            '
          type: string
        resource_type:
          description: 'The resource type.

            '
          enum:
          - static_route
          - interface
          - lan_network
          - BGP
          type: string
        scope:
          description: "The prefix scope.    \n"
          enum:
          - GLOBAL
          - LOCAL
          type: string
        site_id:
          description: 'The site ID.

            '
          type: string
      required:
      - site_id
    PrefixQueryFilterV3N1:
      properties:
        element_id:
          description: 'The element ID.

            '
          type: string
        ipv4_prefix:
          description: 'The IPv4 address prefix.

            '
          type: string
        ipv6_prefix:
          description: 'The IPv6 address prefix.

            '
          type: string
        resource_id:
          description: 'The resource ID.

            '
          type: string
        resource_type:
          description: 'The resource type.

            '
          enum:
          - static_route
          - interface
          - lan_network
          - BGP
          type: string
        scope:
          description: "The prefix scope.    \n"
          enum:
          - GLOBAL
          - LOCAL
          type: string
        site_id:
          description: 'The site ID.

            '
          type: string
      required:
      - site_id
    PrefixQueryV3:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of prefix sets that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        ge:
          type: integer
        getDeleted:
          description: 'The number prefix sets deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the prefix sets for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the prefix sets by ID.    \n"
          type: string
        ipv4_prefix:
          description: Ipv4 Prefix
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        le:
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    PrefixQueryV3N1:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of prefix sets that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        ge:
          type: integer
        getDeleted:
          description: 'The number prefix sets deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the prefix sets for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the prefix sets by ID.    \n"
          type: string
        ipv4_prefix:
          description: Ipv4 Prefix
          type: string
        ipv6_prefix:
          description: Ipv6 Prefix
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        le:
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: "The total number of query parameters. \n"
          format: int64
          type: integer
    PrefixSet:
      properties:
        ipv4_set:
          description: 'The set of The IPv4 addresses.

            '
          items:
            description: Ipv4 Set
            type: string
          type: array
        ipv6_set:
          description: 'The set of The IPv6 addresses.

            '
          items:
            description: Ipv6 Set
            type: string
          type: array
    Route:
      properties:
        destination:
          description: 'The route destination.

            '
          type: string
        via:
          description: 'The via IP address.

            '
          type: string
    RouteAggregation:
      properties:
        aggregate_prefixes:
          description: Aggregate Prefixes
          items:
            $ref: '#/components/schemas/AggregatePrefixes'
          type: array
        aggregate_type:
          description: Aggregate Type
          enum:
          - unaggregated
          - aggregate-auto
          - aggregate-manual
          - aggregate-manual-summary-only
          - default
          type: string
        ipv4_prefix_list_id:
          description: Ipv4 Prefix List Id
          type: string
        ipv6_prefix_list_id:
          description: Ipv6 Prefix List Id
          type: string
    RoutingAccessList:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The ID of the access list. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of access/prefix lists that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of access/prefix lists deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the access/prefix lists for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the access/prefix lists by ID.    \n"
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: "The total number of query parameters. \n"
          format: int64
          type: integer
    RoutingAccessListQueryFilter:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The peer IP address. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListQueryFilterV2N1:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The ID of the access list. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListScreen:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access/community\
            \ lists. \n"
          type: boolean
        description:
          description: 'The description of the access/community list. Max size = 1024.

            '
        id:
          description: "The ID of the access/community list. \n"
          type: string
        name:
          description: 'The name of the access/community list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access/community
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListScreenV2N1:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The ID of the access list. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: "A information field that can be added to identify the access\
            \ list. Maximum 10 unique tags of length 1024 each are allowed.      \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListV2N1:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The ID of the access list. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityList:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated IP community lists.

            '
          type: boolean
        community_list:
          description: "The details of the IP community lists.          \n"
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'The description of the IP community list. Max size = 1024.

            '
        id:
          description: "The ID of the IP community list. \n"
          type: string
        name:
          description: 'The name of the IP community list. Max size = 128.

            '
          type: string
        tags:
          description: "A information field that can be added to identify the IP community\
            \ list. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityListQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of community lists that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of community lists deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the community lists for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the community lists by ID.    \n"
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    RoutingCommunityListQueryFilter:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated IP community lists.

            '
          type: boolean
        community_list:
          description: "The details of the IP community lists.          \n"
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'The description of the IP community list. Max size = 1024.

            '
        id:
          description: "The ID of the IP community list. \n"
          type: string
        name:
          description: 'The name of the IP community list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the IP community
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityListScreen:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated IP community lists.

            '
          type: boolean
        community_list:
          description: "The details of the IP community lists.          \n"
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'The description of the IP community list. Max size = 1024.

            '
        id:
          description: "The ID of the IP community list. \n"
          type: string
        name:
          description: 'The name of the IP community list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the IP community
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingIPCommunity:
      properties:
        community_str:
          description: 'The community string. Max size = 256.

            '
          type: string
        permit:
          description: "The permit of the IP community sctring = Permit or Deny. \n"
          type: boolean
      required:
      - community_str
    RoutingPrefixFilter:
      properties:
        ge:
          description: 'The prefix filter value for ge operator should be within the
            range 1-32.

            '
          format: int32
          type: integer
        ipv6_prefix:
          description: 'The IPv6 address prefix.

            '
          type: string
        le:
          description: "The prefix filter value for le operator should be within the\
            \ range 1-32.         \n"
          format: int32
          type: integer
        order:
          description: 'The order of the prefix filter.

            '
          format: int32
          type: integer
        permit:
          description: 'The permit of the IP community string = Permit or Deny.

            '
          type: boolean
        prefix:
          description: 'The valid prefix filters.

            '
          type: string
    RoutingPrefixFilterV2N1:
      properties:
        ge:
          description: 'The prefix filter value for ge operator should be within the
            range 1-32.

            '
          format: int32
          type: integer
        ipv6_prefix:
          description: 'Lists the IPv6 address.

            '
          type: string
        le:
          description: "The prefix filter value for le operator should be within the\
            \ range 1-32.         \n"
          format: int32
          type: integer
        order:
          description: 'The order of the prefix filter.

            '
          format: int32
          type: integer
        permit:
          description: 'The permit of the IP community sctring = Permit or Deny.

            '
          type: boolean
        prefix:
          description: 'The valid prefix filters.

            '
          type: string
    RoutingPrefixList:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix filter list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListQueryFilter:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListQueryFilterV2N1:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilterV2N1'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListScreen:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix filter list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListScreenV2N1:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix filter list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilterV2N1'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListV2N1:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix filter list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilterV2N1'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapEntryMatchClause:
      properties:
        as_path_id:
          description: As Path Id
          type: string
        community_list_id:
          description: Community List Id
          type: string
        ip_next_hop_id:
          description: Ip Next Hop Id
          type: string
        ip_prefix_list_id:
          description: Ip Prefix List Id
          type: string
        metric:
          description: Metric
          format: int64
          type: integer
        tag:
          description: Tag
          format: int32
          type: integer
    RoutingRouteMapEntrySetClause:
      properties:
        additive_community:
          description: Additive Community
          type: boolean
        as_path_prepend:
          description: As Path Prepend
          type: string
        community:
          description: Community
          type: string
        ip_next_hop:
          description: Ip Next Hop
          type: string
        ip_v6_next_hop:
          description: Ip V6 Next Hop
          type: string
        local_preference:
          description: Local Preference
          format: int64
          type: integer
        metric:
          description: Metric
          format: int64
          type: integer
        tag:
          description: Tag
          format: int32
          type: integer
        type:
          description: Type
          enum:
          - type-1
          - type-2
          type: string
        weight:
          description: Weight
          format: int64
          type: integer
    RoutingRouteMapEntryV2N2:
      properties:
        continue_entry:
          description: 'To continue to use the rule that the route matches.

            '
          type: string
        match:
          $ref: '#/components/schemas/MatchClauses'
          description: "The details of route match.          \n"
        order:
          description: 'Enter an order number from 1 to 65535 to define the order
            in which this route map will be used.

            '
          format: int32
          type: integer
        permit:
          description: 'It allow routes to be advertised or Deny to block the routes
            from being advertised.

            '
          type: boolean
        set:
          $ref: '#/components/schemas/SetClauses'
          description: 'The details of the route map set.

            '
    RoutingRouteMapEntryV2N3:
      properties:
        continue_entry:
          description: 'To continue to use the rule that the route matches.

            '
          type: string
        match:
          $ref: '#/components/schemas/RoutingRouteMapEntryMatchClause'
          description: "The details of route match.          \n"
        order:
          description: 'Enter an order number from 1 to 65535 to define the order
            in which this route map will be used.

            '
          format: int32
          type: integer
        permit:
          description: 'It allow routes to be advertised or Deny to block the routes
            from being advertised.

            '
          type: boolean
        set:
          $ref: '#/components/schemas/RoutingRouteMapEntrySetClause'
          description: "The details of the route map set. \n"
    RoutingRouteMapQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of route maps that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of route maps deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the route maps for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the route maps by ID.    \n"
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    RoutingRouteMapQueryFilterV2N2:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N2'
          type: array
        tags:
          description: 'A information field that can be added to identify the route
            map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapQueryFilterV2N3:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N3'
          type: array
        tags:
          description: "A information field that can be added to identify the route\
            \ map. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
        used_for:
          description: "Routing used for BGP or OSPF. \n"
          enum:
          - bgp
          - ospf
          type: string
      required:
      - name
    RoutingRouteMapScreenV2N2:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N2'
          type: array
        tags:
          description: "A information field that can be added to identify the route\
            \ map. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapScreenV2N3:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N3'
          type: array
        tags:
          description: "A information field that can be added to identify the route\
            \ map. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
        used_for:
          description: 'Routing used for BGP or OSPF.

            '
          enum:
          - bgp
          - ospf
          type: string
      required:
      - name
    RoutingRouteMapV2N2:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N2'
          type: array
        tags:
          description: "A information field that can be added to identify the route\
            \ map. Maximum 10 unique tags of length 1024 each are allowed.     \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapV2N3:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N3'
          type: array
        tags:
          description: "A information field that can be added to identify the route\
            \ map. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
        used_for:
          description: 'Routing used for BGP or OSPF.

            '
          enum:
          - bgp
          - ospf
          type: string
      required:
      - name
    SecondaryIPConfig:
      properties:
        ipv4_address:
          description: Ipv4 Address
          type: string
        scope:
          description: "The scope of the secondary IP config. \n"
          type: string
    SecurityPolicy:
      properties:
        action:
          $ref: '#/components/schemas/Action'
          description: 'The action to allow, deny, or reject traffic based on the
            security intent of the enterprise.

            '
        app_ids:
          description: 'The App IDs.

            '
          items:
            description: App Ids
            type: string
          type: array
        direction:
          $ref: '#/components/schemas/Direction'
          description: 'The direction of the traffic.

            '
    ServiceLinkV4:
      properties:
        gre_config:
          $ref: '#/components/schemas/GREConfig'
          description: 'The GRE config details.

            '
        ipsec_config:
          $ref: '#/components/schemas/IPSECConfigV1'
          description: 'The IPSec config details.

            '
        last_parent:
          description: 'The last parent value = true.

            '
          type: string
        parent:
          description: 'The parent value = true.

            '
          type: string
        passive_mode:
          $ref: '#/components/schemas/PassiveMode'
          description: 'Passive mode details.

            '
        peer:
          $ref: '#/components/schemas/PeerInfo'
          description: 'The peer information.

            '
        service_endpoint_id:
          description: "The service endpoint ID. \n"
          type: string
        type:
          description: 'The service link type.

            '
          enum:
          - IPSEC
          - GRE
          - GENEVE
          type: string
      required:
      - type
    SetClauses:
      properties:
        as_path_prepend:
          description: 'The AS path prepend.

            '
          type: string
        community:
          description: "The community.          \n"
          type: string
        ip_next_hop:
          description: Ip Next Hop
          type: string
        local_preference:
          description: 'The local preference.

            '
          format: int64
          type: integer
        tag:
          description: 'A information field that can be added to identify the set
            clause.

            '
          format: int32
          type: integer
        weight:
          description: 'The weight of the set clause.

            '
          format: int64
          type: integer
    SpokeHAConfigV2:
      properties:
        cluster_id:
          description: "The spoke HA config cluster ID. \n"
          type: string
        enable:
          description: "The spoke HA config enabled. True or False.       \n"
          type: boolean
        priority:
          description: "The priority of the spoke HA config. \n"
          format: int32
          type: integer
        source_interface:
          description: 'The spoke HA config source interface ID.

            '
          type: string
        track:
          $ref: '#/components/schemas/TrackV2'
          description: 'Track: Valid '
      required:
      - source_interface
      - priority
      - enable
      - cluster_id
    StateNextHop:
      properties:
        nexthop_ip:
          description: 'The IP address of the next hop.

            '
          type: string
        reachability_status:
          description: 'The reachability status.

            '
          type: boolean
    StaticARPConfig:
      properties:
        ipv4_address:
          description: 'The static APR IPv4 address.

            '
          type: string
        mac_address:
          description: 'The MAC address.

            '
          type: string
    StaticRouteStatus:
      properties:
        id:
          description: 'The ID of the static route.

            '
          type: string
        nexthops:
          description: 'The details of the next hop.

            '
          items:
            $ref: '#/components/schemas/StateNextHop'
          type: array
      required:
      - nexthops
    StaticRouteStatusV2N2:
      properties:
        id:
          description: 'The ID of the static route.

            '
          type: string
        nexthops:
          description: 'The details of the next hop.

            '
          items:
            $ref: '#/components/schemas/StateNextHop'
          type: array
    StaticRouteV2N2:
      properties:
        address_family:
          description: "The static route address family. \n"
          type: string
        description:
          description: 'The description of the static route. Max size = 256.

            '
        destination_prefix:
          description: 'The IPv4 or IPv6 address mask for next hop Destination Prefix
            (IPv4 or IPv6).

            '
          type: string
        id:
          description: 'The ID of the static route.

            '
          type: string
        name:
          description: 'The name of the static route.

            '
          type: string
        network_context_id:
          description: 'The ID of the network context.

            '
          type: string
        nexthop_reachability_probe:
          description: 'The Next Hop Reachability Probe is enabled.

            '
          type: boolean
        nexthops:
          description: 'The details of the next hops configured on the static route.

            '
          items:
            $ref: '#/components/schemas/NextHop'
          type: array
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'A information field that can be added to identify the static
            route. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - address_family
      - scope
      - nexthops
      - destination_prefix
    StaticRouteV2N3:
      properties:
        address_family:
          description: "The static route address family. \n"
          type: string
        description:
          description: 'The description of the static route. Max size = 256.

            '
        destination_prefix:
          description: 'The IPv4 or IPv6 address mask for next hop Destination Prefix
            (IPv4 or IPv6).

            '
          type: string
        id:
          description: 'The ID of the static route.

            '
          type: string
        name:
          description: 'The name of the static route.

            '
          type: string
        network_context_id:
          description: 'The ID of the network context.

            '
          type: string
        nexthop_reachability_probe:
          description: 'The Next Hop Reachability Probe is enabled.

            '
          type: boolean
        nexthops:
          description: 'The details of the next hops configured on the static route.

            '
          items:
            $ref: '#/components/schemas/NextHop'
          type: array
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'A information field that can be added to identify the static
            route. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        vrf_context_id:
          description: 'The VRF (Virtual Routing and Forwarding) ID.

            '
          type: string
      required:
      - address_family
      - scope
      - nexthops
      - destination_prefix
    StormControlConfig:
      properties:
        broadcast_threshold:
          description: 'By default, the broadcast threshold is set to 1000kbps. Enter
            a value between 64 -1000000 kbps.

            '
          type: integer
        multicast_threshold:
          description: 'Multicast threshold value is set between 64-1000000kbps.

            '
          type: integer
        unicast_threshold:
          description: 'Unknown Unicast threshold value is set between 64-1000000
            kbps.

            '
          type: integer
    SubInterface:
      properties:
        vlan_id:
          description: 'The VLAN ID.

            '
          format: int32
          type: integer
    SwitchConfig:
      properties:
        default_vlan_id:
          description: 'Default VLAN ID is 1.

            '
          format: int32
          type: integer
        mstp_enabled:
          description: 'The MSTP enabled. True or False.

            '
          type: boolean
        stp_aging_timer:
          description: "The STP aging Timer between 10 - 1000000 seconds.        \
            \     \n"
          format: int32
          type: integer
        stp_forward_delay:
          description: "Forward Delay is the length of time spent in listening state,\
            \ set the value between 4 - 30 seconds.      \n"
          format: int32
          type: integer
        stp_hello_time:
          description: "Hello Time is the time Interval between BPDU transmission,\
            \ set the value between 1-10 seconds. \n"
          format: int32
          type: integer
        stp_max_age:
          description: 'The length of Max Age time that the switch retains information
            learned from BPDUs, set the value between 6 - 40 seconds.

            '
          format: int32
          type: integer
        stp_mode:
          description: 'The STP Mode is RSTP, default STP mode is RSTP

            '
          enum:
          - RSTP
          type: string
        stp_priority:
          description: 'The Priority value is between 0 - 61440, in multiples of 4096.

            '
          format: int32
          type: integer
      required:
      - stp_mode
    SwitchPortConfig:
      properties:
        access_vlan_id:
          description: 'The VLAN access ID.

            '
          type: integer
        bpdu_guard_enabled:
          description: 'BPDU Guard enabled on ports do not receive a BPDU from its
            connected devices. When a BPDU Guard enabled port receives BPDU from a
            connected device, BPDU Guard disables the port.

            '
          type: boolean
        forward_fast_enabled:
          description: 'The speed.

            The attached lan network ID and vlan ID.

            '
          type: boolean
        native_vlan_id:
          description: 'The VLAN ID.

            '
          type: integer
        root_guard_enabled:
          description: 'Root Guard is enabled on a port-by-port basis, it prevents
            a configured port from becoming a root port. Root Guard prevents a downstream
            switch from becoming a root bridge in a topology.

            '
          type: boolean
        storm_control_config:
          $ref: '#/components/schemas/StormControlConfig'
          description: 'Storm control config information. Threshold for traffic rate
            limit, the traffic is rate limited for the set threshold value.

            '
        stp_port_cost:
          description: 'STP port cost between 1-65535. The STP port cost depends on
            the speed of the port.

            '
          format: int32
          type: integer
        stp_port_enabled:
          description: 'Spanning Tree Protocol (STP) port enabled.

            '
          type: boolean
        stp_port_priority:
          description: 'STP Port priority is between 0-240. The default value is 128,
            STP port priority is in multiples of 16.

            '
          format: int32
          type: integer
        trunk_vlans:
          description: 'The interface config switch port trunk VLANs. Max trunk VLANs
            allowed is 32 and no duplicates are allowed.

            '
          items:
            description: Trunk Vlans
            type: string
          type: array
        vlan_mode:
          description: 'The VLAN mode.

            '
          enum:
          - access
          - trunk
          type: string
        voice_vlan_id:
          description: 'The voice VLAN ID.

            '
          type: integer
      required:
      - vlan_mode
    TrackInterface:
      properties:
        interface_id:
          description: 'The interface ID

            '
          type: string
        reduce_priority:
          description: 'Reduce priority of the spoke HA config.

            '
          format: int32
          type: integer
    TrackV2:
      properties:
        interfaces:
          description: 'The details of the interfaces.

            '
          items:
            $ref: '#/components/schemas/TrackInterface'
          type: array
        waninterfaces:
          description: 'Waninterfaces: Valid '
          items:
            $ref: '#/components/schemas/TrackWANInterface'
          type: array
    TrackWANInterface:
      properties:
        reduce_priority:
          description: 'Reduce priority of the spoke HA config.

            '
          format: int32
          type: integer
        wan_interface_id:
          description: 'The WAN interface ID

            '
          type: string
    Tracker:
      properties:
        hosts:
          description: 'Hosts: Size(max = 1, message = HUB_CLUSTER_CONFIG_TRACK_HOST_SIZE_EXCEEDS_LIMIT,
            min = 0) '
          items:
            $ref: '#/components/schemas/Host'
          type: array
    VRFContext:
      properties:
        default_vrf_context:
          description: "VRF context is enabled by default. True / False.     \n"
          type: boolean
        description:
          description: 'Description of the VRF context config. Max size = 256.

            '
        id:
          description: 'The VRF context ID.

            '
          type: string
        name:
          description: 'The name of the VRF context. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the VRF
            context. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    VRFContextProfile:
      properties:
        default_vrf_context_profile:
          description: "VRF profile is enabled by default. True / False.     \n"
          type: boolean
        description:
          description: 'Description of the VRF profile. Max size = 256.

            '
        id:
          description: 'The VRF profile ID.

            '
          type: string
        name:
          description: 'The name of the VRF profile. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the VRF
            profile. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        vrf_context_ids:
          description: 'The VRF context IDs.

            '
          items:
            description: Vrf Context Ids
            type: string
          type: array
        vrf_context_route_leak_rules:
          description: 'The valid VRF context leak rules.

            '
          items:
            $ref: '#/components/schemas/VRFContextRouteLeakRule'
          type: array
      required:
      - name
    VRFContextProfileQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of VRF profiles that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number VRF profiles deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the VRF profiles for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the VRF profiles by ID.    \n"
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    VRFContextProfileQueryFilter:
      properties:
        default_vrf_context_profile:
          description: "VRF profile is enabled by default. True / False.     \n"
          type: boolean
        description:
          description: 'Description of the VRF profile. Max size = 256.

            '
        id:
          description: 'The VRF profile ID.

            '
          type: string
        name:
          description: 'The name of the VRF profile. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the VRF
            profile. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        vrf_context_ids:
          description: 'The VRF context IDs.

            '
          items:
            description: Vrf Context Ids
            type: string
          type: array
        vrf_context_route_leak_rules:
          description: 'The valid VRF context leak rules.

            '
          items:
            $ref: '#/components/schemas/VRFContextRouteLeakRule'
          type: array
      required:
      - name
    VRFContextProfileScreen:
      properties:
        default_vrf_context_profile:
          description: 'Default Vrf Context Profile: JsonIgnore(value = true) '
          type: boolean
        description:
          description: 'Description of the VRF profile. Max size = 256.

            '
        id:
          description: 'The VRF profile ID.

            '
          type: string
        name:
          description: 'The name of the VRF profile. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the VRF
            profile. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        vrf_context_ids:
          description: 'The VRF context IDs.

            '
          items:
            description: Vrf Context Ids
            type: string
          type: array
        vrf_context_route_leak_rules:
          description: 'The valid VRF context leak rules.

            '
          items:
            $ref: '#/components/schemas/VRFContextRouteLeakRule'
          type: array
      required:
      - name
    VRFContextQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of VRF contexts that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number VRF contexts deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the VRF contexts for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the VRF contexts by ID.    \n"
          type: string
        isReadPreferenceSecondary:
          description: 'IsReadPreferenceSecondary: JsonIgnore(value = true) '
          type: boolean
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          description: 'Query using query parameters.

            '
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          description: 'Specify the order in which you want the search criteria to
            display.

            '
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    VRFContextQueryFilter:
      properties:
        default_vrf_context:
          description: "VRF context is enabled by default. True / False.     \n"
          type: boolean
        description:
          description: 'Description of the VRF context config. Max size = 256.

            '
        id:
          description: 'The VRF context ID.

            '
          type: string
        name:
          description: 'The name of the VRF context. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the VRF
            context. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    VRFContextRouteLeakRule:
      properties:
        description:
          description: 'Description of the Route Leak Rule. Max size = 256.

            '
        dest_vrf_context_id:
          description: "The destination VRF ID for the Route Leak Rule.    \n"
          type: string
        ipv4_prefixes:
          description: 'The leaked IPv4 prefixes of the Route Leak Rule. The leaked
            IPv4 prefix in the route leak rule must match the prefix configured on
            the interface.

            '
          items:
            description: Ipv4 Prefixes
            type: string
          type: array
        name:
          description: 'The name of the Route Leak Rule. Max size = 128.

            '
          type: string
        src_vrf_context_id:
          description: 'The SRC VRF ID.

            '
          type: string
    VRFContextScreen:
      properties:
        description:
          description: 'Description of the VRF context config. Max size = 256.

            '
        id:
          description: 'The VRF context ID.

            '
          type: string
        name:
          description: 'The name of the VRF context. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the VRF
            context. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    VlanConfig:
      properties:
        mstp_instance:
          description: 'The VLAN config MSTP instance.

            '
          format: int32
          type: integer
        vlan_id:
          description: 'The VLAN ID.

            '
          format: int32
          type: integer
        voice_enabled:
          description: "The voice enabled VLAN.      \n"
          type: boolean
    X509Objects:
      properties:
        certHolder:
          type: object
        certificate:
          description: Certificate
          type: string
        is_local_ca_cert_set:
          description: Is Local Ca Cert Set
          type: boolean
        is_remote_ca_cert_set:
          description: Is Remote Ca Cert Set
          type: boolean
        keyPair:
          type: object
        local_ca_certificate:
          description: Local Ca Certificate
          type: string
        local_ca_certs_set:
          description: Local Ca Certs Set
          items:
            type: object
          type: array
        passphrase:
          description: Passphrase
          type: string
        pkcs12_certificate:
          description: Pkcs12 Certificate
          type: string
        privateKey:
          description: PrivateKey
          type: java.security.privatekey
        private_key:
          description: Private Key
          type: string
        remote_ca_certificate:
          description: Remote Ca Certificate
          type: string
        remote_ca_certs_set:
          description: Remote Ca Certs Set
          items:
            type: object
          type: array
info:
  contact: {}
  description: List of APIs used to configure all routing contructs like, BGP configs,
    static routes, AS paths, VRFs, and community lists.
  title: Routing
  version: Latest
openapi: 3.0.0
paths:
  /sdwan/v2.0/api/bgppeers/status/query:
    post:
      description: Queries the BGP Peers Status that match query params.
      operationId: post-sdwan-v2.0-api-bgppeers-status-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerStatusQuery'
        description: Query Details for BGP Peers Status
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerStatusQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OSPF_CONFIG_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries the BGP Peers Status (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/elementshells/query:
    post:
      description: Queries db for limit number of element shells that match query
        params.
      operationId: post-sdwan-v2.0-api-elementshells-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementShellQuery'
        description: Queries to the element
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ElementShellQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
      summary: Queries db for limit number of element shells that match query params.
        (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/enterpriseprefixset:
    get:
      description: List the prefix set of a tenant enterprise.
      operationId: get-sdwan-v2.0-api-enterpriseprefixset
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePrefixSetN'
          description: Successful Operation
      summary: Get Tenant Enterprise Prefix Set (v2.0)
      tags:
      - Routing
    put:
      description: Update the prefix set of a tenant enterprise.
      operationId: put-sdwan-v2.0-api-enterpriseprefixset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterprisePrefixSetN'
        description: Enterprise prefix Set
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePrefixSetN'
          description: Successful Operation
      summary: Update Tenant Enterprise Prefix Set (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/pathprefixdistributionfilterassociation/query:
    post:
      description: Query the path prefix distribution filter association.
      operationId: post-sdwan-v2.0-api-pathprefixdistributionfilterassociation-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathPrefixDistributionAssociationQuery'
        description: Queries the Path Prefix Distribution Association
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PathPrefixDistributionAssociationFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Path Prefix Distribution Filter Association (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/pathprefixdistributionfilters/query:
    post:
      description: Queries the Path Prefix Distribution Filter List that match query
        params.
      operationId: post-sdwan-v2.0-api-pathprefixdistributionfilters-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathPrefixDistributionFiltersQuery'
        description: Queries the Path Prefix Distribution Filters
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PathPrefixDistributionQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries the Path Prefix Distribution Filter List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}/operations:
    post:
      description: Reset the BGP peer configuration.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id-operations
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerOperations'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerOperations'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_PEER_CONFIG_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Reset BGP Peer Config (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/advertisedprefixes:
    get:
      description: List all the BGP peer advertised prefixes.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-config_id-advertisedprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerAdvertisedPrefixes'
          description: Successful Operation
      summary: Get BGP Peer Advertised Prefixes (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/discoveredprefixes:
    get:
      description: List all the BGP discovered prefix information.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-config_id-discoveredprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerDiscoveredPrefixes'
          description: Successful Operation
      summary: Get BGP Discovered Prefixes (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/reachableprefixes:
    get:
      description: List all the BGP reachable prefix information.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-config_id-reachableprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerReachablePrefixes'
          description: Successful Operation
      summary: Get BGP Reachable Prefix (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists:
    get:
      description: List all the access lists for the element.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Access List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create a AS-Path access list.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the as-path access list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create AS-Path Access List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/query:
    post:
      description: Queries the DB for limit number of access lists that match query
        parameters.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Access Lists (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/{config_id}:
    delete:
      description: Delete the access list.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the access list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ACCESS_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ACCESS_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Access List (v2.0)
      tags:
      - Routing
    get:
      description: Get a specific access list.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
      summary: Get Access List (v2.0)
      tags:
      - Routing
    put:
      description: Updates the access list.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the access list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the as-path access list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ACCESS_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Access List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists:
    get:
      description: Get all the community lists for an element.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingCommunityList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Community List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create an IP community list.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the community list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_COMMUNITY_LIST_NAME
                  - code: MAX_LIMIT_FOR_COMMUNITY_LIST_EXCEEDS
                  - code: COMMUNITY_LIST_ALREADY_DEFINED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create IP Community List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists/query:
    post:
      description: Queries the DB for limit number of community lists that match the
        query parameters.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingCommunityListQuery'
        description: Query details for Routing Community
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingCommunityListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Community Lists (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists/{config_id}:
    delete:
      description: Deletes the community list.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the IP community list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: COMMUNITY_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_COMMUNITY_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Community List (v2.0)
      tags:
      - Routing
    get:
      description: Lists a specific community list.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
      summary: Get Community List (v2.0)
      tags:
      - Routing
    put:
      description: Updates the community list.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the IP community list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingCommunityListScreen'
        description: Details of the community list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_COMMUNITY_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_COMMUNITY_LIST_NAME
                  - code: MAX_LIMIT_FOR_COMMUNITY_LIST_EXCEEDS
                  - code: COMMUNITY_LIST_ALREADY_DEFINED
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Community List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_prefixlists:
    get:
      description: Get all the prefix lists for an element.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingPrefixList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Prefix List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create an IP Prefix List.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPrefixListScreen'
        description: Details of the prefix list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create IP Prefix List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_prefixlists/query:
    post:
      description: Queries the DB for limit number of prefix lists that match the
        query parameters.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingPrefixListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Prefix Lists (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_prefixlists/{config_id}:
    delete:
      description: Delete a prefix list.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the prefix list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PREFIX_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_PREFIX_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Prefix List (v2.0)
      tags:
      - Routing
    get:
      description: Get a specific prefix list.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
      summary: Get Prefix List (v2.0)
      tags:
      - Routing
    put:
      description: Update a prefix list.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the prefix list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPrefixListScreen'
        description: Details of the prefix list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_PREFIX_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Prefix List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elementshells:
    get:
      description: List all the element shells.
      operationId: get-sdwan-v2.0-api-sites-site_id-elementshells
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShellQueryFilter'
          description: Successful Operation
      summary: Get Element Shells (v2.0)
      tags:
      - Routing
    post:
      description: Create an element shell.
      operationId: post-sdwan-v2.0-api-sites-site_id-elementshells
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementShellScreen'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShell'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_HOST_IP_RANGE
                  - code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET
                  - code: INTERFACE_CONFIG_IP_OVERLAP
                  - code: INTERFACE_CONFIG_PEER_IP_OVERLAP
                  - code: SHADIGEST_ELEMENT_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Element Shell (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elementshells/{element_shell_id}:
    delete:
      description: Delete an element shell.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elementshells-element_shell_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShell'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SHADIGEST_ELEMENT_SHELL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Element Shell (v2.0)
      tags:
      - Routing
    get:
      description: List an element shell.
      operationId: get-sdwan-v2.0-api-sites-site_id-elementshells-element_shell_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShell'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENTSHELL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Element Shell (v2.0)
      tags:
      - Routing
    put:
      description: Update an association or element shell.
      operationId: put-sdwan-v2.0-api-sites-site_id-elementshells-element_shell_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementShellScreen'
        description: Details of the element shell to be updated.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShell'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_SHELL_NOT_FOUND
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_SHELL_CONFIG_INVALID_VALUES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Element Shell (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/localprefixset:
    get:
      description: List the site local prefix set.
      operationId: get-sdwan-v2.0-api-sites-site_id-localprefixset
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalPrefixSet'
          description: Successful Operation
      summary: Get Site Local Prefix Set (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/pathprefixdistributionfilterassociation:
    get:
      description: List the path prefix distribution filter association.
      operationId: get-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilterassociation
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PathPrefixDistributionFiltersAssociation'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Path Prefix Distribution Filter Association (v2.0)
      tags:
      - Routing
    post:
      description: Create path prefix distribution filter association list.
      operationId: post-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilterassociation
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathPrefixDistributionFiltersAssociation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixDistributionFiltersAssociation'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_INVALID_PREFIX_DISTRIBUTION_FILTER
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_ONLY_SUPPORTED_FOR_HUB
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_INVALID_PEER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Path Prefix Distribution Filter Association (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/pathprefixdistributionfilterassociation/{id}:
    delete:
      description: Delete the path prefix distribution filter association.
      operationId: delete-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilterassociation-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Path prefix distribution filter association ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixDistributionFiltersAssociation'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete Path Prefix Distribution Filter Association (v2.0)
      tags:
      - Routing
    get:
      description: List the path prefix distribution filter association.
      operationId: get-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilterassociation-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Path prefix distribution filter association ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixDistributionFiltersAssociation'
          description: Successful Operation
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Get Path Prefix Distribution Filter Association (v2.0)
      tags:
      - Routing
    put:
      description: Update the path prefix distribution filter association.
      operationId: put-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilterassociation-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Path prefix distribution filter association ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathPrefixDistributionFiltersAssociation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixDistributionFiltersAssociation'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_NOT_FOUND
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_INVALID_PREFIX_DISTRIBUTION_FILTER
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_ONLY_SUPPORTED_FOR_HUB
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_INVALID_PEER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_ASSOCIATION_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Update Path Prefix Distribution Filter Association (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/pathprefixdistributionfilters:
    get:
      description: GET Path Prefix Distribution Filter List
      operationId: get-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilters
      parameters:
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PathPrefixDistributionFilters'
                      type: array
                  type: object
          description: Successful Operation
      summary: GET Path Prefix Distribution Filter List (v2.0)
      tags:
      - Routing
    post:
      description: Create Path Prefix Distribution Filters List
      operationId: post-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilters
      parameters:
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathPrefixDistributionFilters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixDistributionFilters'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_INVALID_IPV4_PREFIX
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_INVALID_IPV6_PREFIX
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_DUPLICATE_IPV4_PREFIX
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_DUPLICATE_IPV6_PREFIX
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_IPV4_AND_IPV6_NOT_SUPPORTED_TOGETHER
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_INVALID_VRF_CONTEXT_ID
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_INVALID_ORDER
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_ONLY_SUPPORTED_FOR_HUB
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Path Prefix Distribution Filters List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/pathprefixdistributionfilters/{id}:
    delete:
      description: Delete the path prefix distribution filter list.
      operationId: delete-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilters-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Path prefix distribution filter ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixDistributionFilters'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_IS_ASSOCIATED_WITH_SITE
                  - code: PATH_PREFIX_DISTRIBUTION_FILTER_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete Path Prefix Distribution Filter List (v2.0)
      tags:
      - Routing
    get:
      description: List the path prefix distribution filter list.
      operationId: get-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilters-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Path prefix distribution filter ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixDistributionFilters'
          description: Successful Operation
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Get Path Prefix Distribution Filter List (v2.0)
      tags:
      - Routing
    put:
      description: Update the path prefix distribution filter list.
      operationId: put-sdwan-v2.0-api-sites-site_id-pathprefixdistributionfilters-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Path prefix distribution filter list ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathPrefixDistributionFilters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixDistributionFilters'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_INVALID_IPV4_PREFIX
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_INVALID_IPV6_PREFIX
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_DUPLICATE_IPV4_PREFIX
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_DUPLICATE_IPV6_PREFIX
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_IPV4_AND_IPV6_NOT_SUPPORTED_TOGETHER
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_INVALID_VRF_CONTEXT_ID
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_INVALID_ORDER
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_ONLY_SUPPORTED_FOR_HUB
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATH_PREFIX_DISTRIBUTION_FILTERS_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Update Path Prefix Distribution Filter List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/peersites/{peer_site_id}/pathprefixes:
    get:
      description: List all the path prefixes
      operationId: get-sdwan-v2.0-api-sites-site_id-peersites-peer_site_id-pathprefixes
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Peer site ID.
        in: path
        name: peer_site_id
        required: true
        schema:
          description: Peer Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathPrefixes'
          description: Successful Operation
        '404':
          description: not found
      summary: Get Path Prefix (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/prefixdistributionspokelists:
    get:
      description: List the prefix distribution spoke list.
      operationId: get-sdwan-v2.0-api-sites-site_id-prefixdistributionspokelists
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PrefixDistributionSpokeList'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Prefix Distribution Spoke List (v2.0)
      tags:
      - Routing
    post:
      description: Create a prefix distribution spoke list.
      operationId: post-sdwan-v2.0-api-sites-site_id-prefixdistributionspokelists
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrefixDistributionSpokeList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrefixDistributionSpokeList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: PREFIX_DISTRIBUTION_CAN_BE_ENABLED_ONLY_ON_HUB_SITES
                  - code: PREFIX_DISTRIBUTION_SHOULD_BE_ENABLED_ONLY_TO_SPOKE_SITES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Prefix Distribution Spoke List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/prefixdistributionspokelists/{id}:
    delete:
      description: Delete the prefix distribution spoke list.
      operationId: delete-sdwan-v2.0-api-sites-site_id-prefixdistributionspokelists-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Prefix distribution spoke ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrefixDistributionSpokeList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Prefix Distribution Spoke List (v2.0)
      tags:
      - Routing
    get:
      description: List the prefix distribution spoke list.
      operationId: get-sdwan-v2.0-api-sites-site_id-prefixdistributionspokelists-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Prefix distribution spoke ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrefixDistributionSpokeList'
          description: Successful Operation
        '404':
          description: not found
      summary: Get Prefix Distribution Spoke List (v2.0)
      tags:
      - Routing
    put:
      description: Update the prefix distribution spoke list.
      operationId: put-sdwan-v2.0-api-sites-site_id-prefixdistributionspokelists-id
      parameters:
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Prefix distribution spoke ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrefixDistributionSpokeList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrefixDistributionSpokeList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_REQUEST_ERROR_0001
                  - code: PREFIX_DISTRIBUTION_CAN_BE_ENABLED_ONLY_ON_HUB_SITES
                  - code: PREFIX_DISTRIBUTION_SHOULD_BE_ENABLED_ONLY_TO_SPOKE_SITES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Prefix Distribution Spoke List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/vrfcontextprofiles:
    get:
      description: List all the VRF context profiles.
      operationId: get-sdwan-v2.0-api-vrfcontextprofiles
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/VRFContextProfile'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get VRF Context Profiles (v2.0)
      tags:
      - Routing
    post:
      description: Create a new VRF context profile.
      operationId: post-sdwan-v2.0-api-vrfcontextprofiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VRFContextProfileScreen'
        description: VRF Context Profile Request
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VRFContextProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: VRF_CONTEXT_PROFILE_NAME_INVALID
                  - code: VRF_CONTEXT_PROFILE_NAME_EXCEEDS_LIMIT
                  - code: VRF_CONTEXT_PROFILE_DESCRIPTION_INVALID
                  - code: VRF_CONTEXT_ROUTE_LEAK_RULE_NAME_INVALID
                  - code: VRF_CONTEXT_ROUTE_LEAK_RULE_NAME_EXCEEDS_LIMIT
                  - code: VRF_CONTEXT_ROUTE_LEAK_RULE_DESCRIPTION_INVALID
                  - code: SOURCE_VRF_CONTEXT_INVALID
                  - code: DESTINATION_VRF_CONTEXT_INVALID
                  - code: INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create VRF Context Profile (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/vrfcontextprofiles/query:
    post:
      description: Query VRF context profiles.
      operationId: post-sdwan-v2.0-api-vrfcontextprofiles-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VRFContextProfileQuery'
        description: Query Details for the Vrf Context Profile
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/VRFContextProfileQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query VRF Context Profiles (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/vrfcontextprofiles/{vrf_context_profile_id}:
    delete:
      description: Delete a VRF context profile.
      operationId: delete-sdwan-v2.0-api-vrfcontextprofiles-vrf_context_profile_id
      parameters:
      - description: The ID of the VRF context profile.
        in: path
        name: vrf_context_profile_id
        required: true
        schema:
          description: Vrf Context Profile Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VRFContextProfile'
          description: Successful Operation
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: VRF_CONTEXT_PROFILE_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: NOT FOUND
      summary: Delete VRF Context Profile (v2.0)
      tags:
      - Routing
    get:
      description: Get a VRF context profile.
      operationId: get-sdwan-v2.0-api-vrfcontextprofiles-vrf_context_profile_id
      parameters:
      - description: The ID of the VRF context profile.
        in: path
        name: vrf_context_profile_id
        required: true
        schema:
          description: Vrf Context Profile Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VRFContextProfile'
          description: Successful Operation
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: VRF_CONTEXT_PROFILE_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: NOT FOUND
      summary: Get VRF Context Profile (v2.0)
      tags:
      - Routing
    put:
      description: Update a VRF context profile.
      operationId: put-sdwan-v2.0-api-vrfcontextprofiles-vrf_context_profile_id
      parameters:
      - description: The ID of the VRF context profile.
        in: path
        name: vrf_context_profile_id
        required: true
        schema:
          description: Vrf Context Profile Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VRFContextProfileScreen'
        description: Details of vrf context profile to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VRFContextProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: VRF_CONTEXT_PROFILE_NAME_INVALID
                  - code: VRF_CONTEXT_PROFILE_NAME_EXCEEDS_LIMIT
                  - code: VRF_CONTEXT_PROFILE_DESCRIPTION_INVALID
                  - code: VRF_CONTEXT_ROUTE_LEAK_RULE_NAME_INVALID
                  - code: VRF_CONTEXT_ROUTE_LEAK_RULE_NAME_EXCEEDS_LIMIT
                  - code: VRF_CONTEXT_ROUTE_LEAK_RULE_DESCRIPTION_INVALID
                  - code: SOURCE_VRF_CONTEXT_INVALID
                  - code: DESTINATION_VRF_CONTEXT_INVALID
                  - code: INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update VRF Context Profile (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/vrfcontexts:
    get:
      description: Get a VRF segments.
      operationId: get-sdwan-v2.0-api-vrfcontexts
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/VRFContext'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get VRF Segments (v2.0)
      tags:
      - Routing
    post:
      description: Create a VRF segment.
      operationId: post-sdwan-v2.0-api-vrfcontexts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VRFContextScreen'
        description: VRF Context Request
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VRFContext'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: VRF_CONTEXT_CONFIG_DESCRIPTION_INVALID
                  - code: VRF_CONTEXT_NAME_EXCEEDS_LIMIT
                  - code: VRF_CONTEXT_NAME_INVALID
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create VRF Segment (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/vrfcontexts/query:
    post:
      description: Query VRF contexts.
      operationId: post-sdwan-v2.0-api-vrfcontexts-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VRFContextQuery'
        description: Query Details for the Vrf Context
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/VRFContextQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query VRF Contexts (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/vrfcontexts/{vrf_context_id}:
    delete:
      description: Delete a VRF segment.
      operationId: delete-sdwan-v2.0-api-vrfcontexts-vrf_context_id
      parameters:
      - description: The ID of the VRF context.
        in: path
        name: vrf_context_id
        required: true
        schema:
          description: Vrf Context Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VRFContext'
          description: Successful Operation
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: VRF_CONTEXT_NAME_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: NOT FOUND
      summary: Delete VRF Segment (v2.0)
      tags:
      - Routing
    get:
      description: Get a VRF segment.
      operationId: get-sdwan-v2.0-api-vrfcontexts-vrf_context_id
      parameters:
      - description: The ID of the VRF context.
        in: path
        name: vrf_context_id
        required: true
        schema:
          description: Vrf Context Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VRFContext'
          description: Successful Operation
        '404':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_VRF_CONTEXT_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get VRF Segment (v2.0)
      tags:
      - Routing
    put:
      description: Update a VRF context.
      operationId: put-sdwan-v2.0-api-vrfcontexts-vrf_context_id
      parameters:
      - description: The ID of the VRF context.
        in: path
        name: vrf_context_id
        required: true
        schema:
          description: Vrf Context Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VRFContextScreen'
        description: Details of vrf segment to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VRFContext'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: VRF_CONTEXT_CONFIG_DESCRIPTION_INVALID
                  - code: VRF_CONTEXT_NAME_EXCEEDS_LIMIT
                  - code: VRF_CONTEXT_NAME_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update VRF Context (v2.0)
      tags:
      - Routing
  /sdwan/v2.1/api/elementshells/query:
    post:
      description: Queries db for limit number of element shells that match query
        params.
      operationId: post-sdwan-v2.1-api-elementshells-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementShellQuery'
        description: Queries to the element
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ElementShellQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Queries db for limit number of element shells that match query params.
        (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/enterpriseprefixset:
    get:
      description: List the prefix set of a tenant enterprise.
      operationId: get-sdwan-v2.1-api-enterpriseprefixset
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePrefixSetNV2N1'
          description: Successful Operation
      summary: Get Tenant Enterprise Prefix Set (v2.1)
      tags:
      - Routing
    put:
      description: Update the prefix set of a tenant enterprise.
      operationId: put-sdwan-v2.1-api-enterpriseprefixset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterprisePrefixSetNV2N1'
        description: Enterprise prefix Set
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePrefixSetNV2N1'
          description: Successful Operation
      summary: Update Tenant Enterprise Prefix Set (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/status:
    get:
      description: List all the BGP peer statuses from NB.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerStatusV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Status from NB (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_config_id}/advertisedprefixes:
    get:
      description: List all the BGP peer advertised prefixes.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_config_id-advertisedprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_config_id
        required: true
        schema:
          description: Bgp Peer Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerAdvertisedPrefixesV2N1'
          description: Successful Operation
      summary: Get BGP Peer Advertised Prefixes (v2.0)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_config_id}/reachableprefixes:
    get:
      description: List all the BGP reachable prefix information.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_config_id-reachableprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_config_id
        required: true
        schema:
          description: Bgp Peer Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerReachablePrefixesV2N1'
          description: Successful Operation
      summary: Get BGP Reachable Prefix (v2.0)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/discoveredprefixes:
    get:
      description: List all the BGP discovered prefix information.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-config_id-discoveredprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerDiscoveredPrefixesV2N1'
          description: Successful Operation
      summary: Get BGP Discovered Prefixes (v2.0)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/status:
    get:
      description: List the BGP peer status information from NB.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-config_id-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerStatusV2N1'
          description: Successful Operation
      summary: Get BGP Peer Status from NB (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists:
    get:
      description: List all the access lists for the element.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListV2N1'
                      type: array
                  type: object
                items:
                  $ref: '#/components/schemas/RoutingAccessListV2N1'
                type: array
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Access List for Element (v2.1)
      tags:
      - Routing
    post:
      description: Create a AS-Path access list.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreenV2N1'
        description: Details of the as-path access list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create AS-Path Access List (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/query:
    post:
      description: Queries the DB for limit number of access lists that match query
        parameters.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Access Lists (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/{config_id}:
    delete:
      description: Delete the access list.
      operationId: delete-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the access list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ACCESS_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ACCESS_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Access List (v2.1)
      tags:
      - Routing
    get:
      description: Get a specific access list.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
      summary: Get Access List (v2.1)
      tags:
      - Routing
    put:
      description: Updates the access list.
      operationId: put-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the access list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListV2N1'
        description: Details of the access list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ACCESS_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Access List (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_prefixlists:
    get:
      description: Get all the prefix lists for an element.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_prefixlists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingPrefixListV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Prefix List for Element (v2.1)
      tags:
      - Routing
    post:
      description: Create an IP Prefix List.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_prefixlists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPrefixListScreenV2N1'
        description: Details of the prefix list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: PREFIX_LIST_PREFIX_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create IP Prefix List (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_prefixlists/query:
    post:
      description: Queries the DB for limit number of prefix lists that match the
        query parameters.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_prefixlists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingPrefixListQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Prefix Lists (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_prefixlists/{routing_prefixlist_id}:
    delete:
      description: Delete a prefix list.
      operationId: delete-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_prefixlists-routing_prefixlist_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the prefix list.
        in: path
        name: routing_prefixlist_id
        required: true
        schema:
          description: Routing Prefixlist Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PREFIX_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_PREFIX_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Prefix List (v2.1)
      tags:
      - Routing
    get:
      description: Get a specific prefix list.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_prefixlists-routing_prefixlist_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: routing_prefixlist_id
        required: true
        schema:
          description: Routing Prefixlist Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixListV2N1'
          description: Successful Operation
      summary: Get Prefix List (v2.1)
      tags:
      - Routing
    put:
      description: Update a prefix list.
      operationId: put-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_prefixlists-routing_prefixlist_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the prefix list.
        in: path
        name: routing_prefixlist_id
        required: true
        schema:
          description: Routing Prefixlist Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPrefixListScreenV2N1'
        description: Details of the prefix list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_PREFIX_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: PREFIX_LIST_PREFIX_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Prefix List (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}/status:
    get:
      description: Get the status of the static route.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-staticroutes-static_route_id-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteStatus'
          description: Successful Operation
      summary: Get Static Route Status (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elementshells:
    get:
      description: List all the element shells.
      operationId: get-sdwan-v2.1-api-sites-site_id-elementshells
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShellQueryFilterV2N1'
          description: Successful Operation
      summary: Get Element Shells (v2.1)
      tags:
      - Routing
    post:
      description: Create an element shell.
      operationId: post-sdwan-v2.1-api-sites-site_id-elementshells
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementShellV2N1'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShellV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_HOST_IP_RANGE
                  - code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET
                  - code: INTERFACE_CONFIG_IP_OVERLAP
                  - code: INTERFACE_CONFIG_PEER_IP_OVERLAP
                  - code: SHADIGEST_ELEMENT_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Element Shell (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elementshells/{element_shell_id}:
    delete:
      description: Delete an element shell.
      operationId: delete-sdwan-v2.1-api-sites-site_id-elementshells-element_shell_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShellV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SHADIGEST_ELEMENT_SHELL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          description: not found
      summary: Delete Element Shell (v2.1)
      tags:
      - Routing
    get:
      description: List an element shell.
      operationId: get-sdwan-v2.1-api-sites-site_id-elementshells-element_shell_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShellV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENTSHELL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          description: not found
      summary: Get Element Shell (v2.1)
      tags:
      - Routing
    put:
      description: Update an association or element shell.
      operationId: put-sdwan-v2.1-api-sites-site_id-elementshells-element_shell_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementShellV2N1'
        description: Details of the element shell to be updated.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementShellV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_SHELL_NOT_FOUND
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_SHELL_CONFIG_INVALID_VALUES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          description: not found
      summary: Update Element Shell (v2.1)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/bgppeers/status:
    get:
      description: List all the BGP peer statuses from NB.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerStatusV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Status from NB (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_config_id}/discoveredprefixes:
    get:
      description: Get BGP discovered prefix information.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_config_id-discoveredprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: bgp_peer_config_id
        required: true
        schema:
          description: Bgp Peer Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerDiscoveredPrefixesV2N2'
          description: Successful Operation
      summary: Get BGP Discovered Prefix Information (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/status:
    get:
      description: List the BGP peer status information from NB.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers-config_id-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerStatusV2N2'
          description: Successful Operation
      summary: Get BGP Peer Status from NB (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/routing_routemaps:
    get:
      description: List all the route maps for an element.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapScreenV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Route Map for Element (v2.2)
      tags:
      - Routing
    post:
      description: Create a route map.
      operationId: post-sdwan-v2.2-api-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapV2N2'
        description: Details of the route map to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_SUPPORTED
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_ALLOWED_FOR_EMPTY_COMMUNITY
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
                  - code: ROUTE_MAP_ENTRY_WITH_RESERVED_ORDER
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Route Map (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/routing_routemaps/query:
    post:
      description: Queries the DB for limit number of route maps that match the query
        parameters.
      operationId: post-sdwan-v2.2-api-sites-site_id-elements-element_id-routing_routemaps-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapQuery'
        description: Query details for route maps
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapQueryFilterV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Route Maps (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/routing_routemaps/{config_id}:
    delete:
      description: Delete a route map.
      operationId: delete-sdwan-v2.2-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the route map.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ROUTE_MAP_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ROUTE_MAP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Route Map (v2.2)
      tags:
      - Routing
    get:
      description: Get a specific route map.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N2'
          description: Successful Operation
      summary: Get Route Map (v2.2)
      tags:
      - Routing
    put:
      description: Update a route map.
      operationId: put-sdwan-v2.2-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the route map.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapV2N2'
        description: Details of the route map to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ROUTE_MAP
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_SUPPORTED
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_ALLOWED_FOR_EMPTY_COMMUNITY
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
                  - code: ROUTE_MAP_ENTRY_WITH_RESERVED_ORDER
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Route Map (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/staticroutes:
    get:
      description: List all the static routes.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StaticRouteV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Static Routes (v2.2)
      tags:
      - Routing
    post:
      description: Create a static route.
      operationId: post-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N2'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX
                  - code: STATICROUTE_CONFIG_ADDRESS_FAMILY_IPV6_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX_IPV6
                  - code: STATICROUTE_CONFIG_NEXTHOPIP_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_DESTINATIONPREFIX_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIP
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_SELF
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_APPLICABLE
                  - code: STATICROUTE_CONFIG_REQUIRED_INTERFACE_FOR_LINK_LOCAL_IPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Static Route (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}:
    delete:
      description: Delete a static route.
      operationId: delete-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Static Route (v2.2)
      tags:
      - Routing
    get:
      description: Get a specific static route.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
      summary: Get Static Route (v2.2)
      tags:
      - Routing
    put:
      description: Update a static route.
      operationId: put-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N2'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX
                  - code: STATICROUTE_CONFIG_ADDRESS_FAMILY_IPV6_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX_IPV6
                  - code: STATICROUTE_CONFIG_NEXTHOPIP_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_DESTINATIONPREFIX_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIP
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_SELF
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_APPLICABLE
                  - code: STATICROUTE_CONFIG_REQUIRED_INTERFACE_FOR_LINK_LOCAL_IPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Static Route (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}/status:
    get:
      description: Get the status of the static route.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes-static_route_id-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteStatusV2N2'
          description: Successful Operation
      summary: Get Static Route Status (v2.2)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elements/{element_id}/bgpconfigs:
    get:
      description: List all the BGP configurations from NB.
      operationId: get-sdwan-v2.3-api-sites-site_id-elements-element_id-bgpconfigs
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPGlobalConfigV2N3'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Configs from NB (v2.3)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elements/{element_id}/bgpconfigs/{bgp_config_id}:
    get:
      description: List a specific BGP configuration from NB.
      operationId: get-sdwan-v2.3-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N3'
          description: Successful Operation
      summary: Get BGP Config from NB (v2.3)
      tags:
      - Routing
    put:
      description: Update the BGP configuration.
      operationId: put-sdwan-v2.3-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N3'
        description: Details of the bgp config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_CONFIG_INVALID_MD5_UNSET_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Config (v2.3)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elements/{element_id}/routing_routemaps:
    get:
      description: List all the route maps for an element.
      operationId: get-sdwan-v2.3-api-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapScreenV2N3'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Route Map for Element (v2.3)
      tags:
      - Routing
    post:
      description: Create a route map.
      operationId: post-sdwan-v2.3-api-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapV2N3'
        description: Details of the route map to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_SUPPORTED
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_ALLOWED_FOR_EMPTY_COMMUNITY
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
                  - code: ROUTE_MAP_ENTRY_WITH_RESERVED_ORDER
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Route Map (v2.3)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elements/{element_id}/routing_routemaps/query:
    post:
      description: Queries the DB for limit number of route maps that match the query
        parameters.
      operationId: post-sdwan-v2.3-api-sites-site_id-elements-element_id-routing_routemaps-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapQuery'
        description: Query details for route maps
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapQueryFilterV2N3'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Route Maps (v2.3)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elements/{element_id}/routing_routemaps/{config_id}:
    delete:
      description: Delete a route map.
      operationId: delete-sdwan-v2.3-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the route map.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ROUTE_MAP_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ROUTE_MAP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Route Map (v2.3)
      tags:
      - Routing
    get:
      description: Get a specific route map.
      operationId: get-sdwan-v2.3-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N3'
          description: Successful Operation
      summary: Get Route Map (v2.3)
      tags:
      - Routing
    put:
      description: Update a route map.
      operationId: put-sdwan-v2.3-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the route map.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapV2N3'
        description: Details of the route map to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ROUTE_MAP
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_SUPPORTED
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_ALLOWED_FOR_EMPTY_COMMUNITY
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
                  - code: ROUTE_MAP_ENTRY_WITH_RESERVED_ORDER
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Route Map (v2.3)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elements/{element_id}/staticroutes:
    get:
      description: List all the static routes.
      operationId: get-sdwan-v2.3-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StaticRouteV2N3'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Static Routes (v2.3)
      tags:
      - Routing
    post:
      description: Create a static route.
      operationId: post-sdwan-v2.3-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N3'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX
                  - code: STATICROUTE_CONFIG_ADDRESS_FAMILY_IPV6_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX_IPV6
                  - code: STATICROUTE_CONFIG_NEXTHOPIP_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_DESTINATIONPREFIX_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIP
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_SELF
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_APPLICABLE
                  - code: STATICROUTE_CONFIG_REQUIRED_INTERFACE_FOR_LINK_LOCAL_IPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Static Route (v2.3)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}:
    delete:
      description: Delete a static route.
      operationId: delete-sdwan-v2.3-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Static Route (v2.3)
      tags:
      - Routing
    get:
      description: Get a specific static route.
      operationId: get-sdwan-v2.3-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N3'
          description: Successful Operation
      summary: Get Static Route (v2.3)
      tags:
      - Routing
    put:
      description: Update a static route.
      operationId: put-sdwan-v2.3-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N3'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX
                  - code: STATICROUTE_CONFIG_ADDRESS_FAMILY_IPV6_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX_IPV6
                  - code: STATICROUTE_CONFIG_NEXTHOPIP_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_DESTINATIONPREFIX_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIP
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_SELF
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_APPLICABLE
                  - code: STATICROUTE_CONFIG_REQUIRED_INTERFACE_FOR_LINK_LOCAL_IPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Static Route (v2.3)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elementshells/{element_shell_id}/interfaces:
    get:
      description: List all the element shell interfaces.
      operationId: get-sdwan-v2.3-api-sites-site_id-elementshells-element_shell_id-interfaces
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/InterfaceV4N20'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENTSHELL_NOT_FOUND
                  - code: ELEMENT_NOT_FOUND
                  - code: SHADIGEST_ELEMENT_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all Element Shell Interface (v2.3)
      tags:
      - Routing
    post:
      description: Create an element shell interface.
      operationId: post-sdwan-v2.3-api-sites-site_id-elementshells-element_shell_id-interfaces
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceScreenV4N20'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceV4N19'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: NAME_REQD
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE
                  - code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT
                  - code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL
                  - code: INTERFACE_CONFIG_SERVICE_LINK_TYPE_UPDATE_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST
                  - code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG
                  - code: INTERFACE_CONFIG_IP_OVERLAP
                  - code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT
                  - code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE
                  - code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED
                  - code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED
                  - code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID
                  - code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_CONFIG_CREATE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_CREATE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_POE_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_VLAN_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_POE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_LLDP_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_API_UNSUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NOT_SUPPORTED_ON_ELEMENT
                  - code: INTERFACE_CONFIG_VLAN_INVALID_USED_FOR_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_TYPE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_VLAN_ID
                  - code: INTERFACE_CONFIG_VLAN_INVALID_DUPLICATE_VLAN_ID
                  - code: INTERFACE_CONFIG_VLAN_CONFIG_CANNOT_BE_NULL
                  - code: INTERFACE_CONFIG_VLAN_INVALID_MSTP_INSTANCE
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NAME_MAX_LENGTH
                  - code: INTERFACE_CONFIG_VLAN_INVALID_MAX_VLAN_COUNT_EXCEEDED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NAME_UNSUPPORTED_CHARACTERS
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_NOT_ACCESS_WHEN_AUTHMODE_PRESENT
                  - code: INTERFACE_CONFIG_IPV6_AUTOCONF_NOT_SUPPORTED_ON_DEVICE
                  - code: INTERFACE_CONFIG_IPV6_DHCP_NOT_SUPPORTED_ON_DEVICE
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_USED_FOR_NOTSUPPORTED_SPOKE
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_USED_FOR_NOTSUPPORTED_HUB
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_TYPE_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create an Element Shell Interface (v2.3)
      tags:
      - Routing
  /sdwan/v2.3/api/sites/{site_id}/elementshells/{element_shell_id}/interfaces/{interface_id}:
    delete:
      description: Delete an element shell interface.
      operationId: delete-sdwan-v2.3-api-sites-site_id-elementshells-element_shell_id-interfaces-interface_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      - description: The element shell ID.
        in: path
        name: interface_id
        required: true
        schema:
          description: Interface Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceV4N20'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SHADIGEST_ELEMENT_SHELL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an Element Shell Interface(v2.3)
      tags:
      - Routing
    get:
      description: List an element shell interface.
      operationId: get-sdwan-v2.3-api-sites-site_id-elementshells-element_shell_id-interfaces-interface_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      - description: The element shell ID.
        in: path
        name: interface_id
        required: true
        schema:
          description: Interface Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceV4N20'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENTSHELL_NOT_FOUND
                  - code: ELEMENT_NOT_FOUND
                  - code: SHADIGEST_ELEMENT_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get an Element Shell Interface (v2.3)
      tags:
      - Routing
    put:
      description: Update an element shell interface.
      operationId: put-sdwan-v2.3-api-sites-site_id-elementshells-element_shell_id-interfaces-interface_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      - description: The element shell ID.
        in: path
        name: interface_id
        required: true
        schema:
          description: Interface Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceScreenV4N19'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceV4N20'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: NAME_REQD
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE
                  - code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT
                  - code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL
                  - code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED
                  - code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST
                  - code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG
                  - code: INTERFACE_CONFIG_IP_OVERLAP
                  - code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT
                  - code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE
                  - code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED
                  - code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED
                  - code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID
                  - code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_TYPE_UPDATE_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_CONFIG_CANNOT_BE_NULL
                  - code: CELLULAR_INTERFACE_PARENT_MODULE_ID_UPDATE_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_PARENT_SIM_SLOT_NUMBER_UPDATE_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_CONFIG_SITEWAN_NUMBER
                  - code: CELLULAR_INTERFACE_CONFIG_HARDWARE_RELAY_NOTSUPPORTED
                  - code: CELLULAR_INTERFACE_CONFIG_USED_FOR_NOTSUPPORTED
                  - code: CELLULAR_INTERFACE_CONFIG_INVALID_USED_FOR_INTERNET
                  - code: CELLULAR_INTERFACE_CONFIG_INVALID_USED_FOR_WAN
                  - code: CELLULAR_INTERFACE_CONFIG_MTU_INVALID
                  - code: CELLULAR_INTERFACE_CONFIG_DHCP_RELAY_NOTSUPPORTED
                  - code: CELLULAR_INTERFACE_CONFIG_LANSTATE_PROPOGATION_NOTSUPPORTED
                  - code: CELLULAR_INTERFACE_CONFIG_APN_PROFILEID_INVALID_WHEN_AUTOAPN
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_APNPROFILEID_PRESENT
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN_FALSE_NO_USERNAME_BUT_PWD_EXISTS
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_MISSING_WHEN_AUTOAPN_FALSE_APNPROFILEID_NULL
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN_FALSE_INVALID_AUTH
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_MISSING_APN_NAME
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PROFILE_NAME_INVALID
                  - code: CELLULAR_INTERFACE_CONFIG_APN_PROFILE_ID_INVALID
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PASSWORD_INVALID
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_USERNAME_INVALID
                  - code: INTERFACE_CONFIG_POE_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_VLAN_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_POE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_LLDP_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_API_UNSUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NOT_SUPPORTED_ON_ELEMENT
                  - code: INTERFACE_CONFIG_VLAN_INVALID_USED_FOR_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_TYPE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_VLAN_ID
                  - code: INTERFACE_CONFIG_VLAN_INVALID_DUPLICATE_VLAN_ID
                  - code: INTERFACE_CONFIG_VLAN_CONFIG_CANNOT_BE_NULL
                  - code: INTERFACE_CONFIG_SWITCH_PORT_API_UNSUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_NOT_SUPPORTED_ON_ELEMENT
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_USED_FOR_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_NETWORK_CONTEXT_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_SCOPE_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_ACCESS_MISSING_VLANID_ACCESS_OR_VOICE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_ACCESS_TRUNK_OR_NATIVE_VLANID_NOT_APPLICABLE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_ACCESS_VLANID_NOT_FOUND
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VOICE_VLANID_NOT_FOUND
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_TRUNK_MISSING_VLAN_ID_TRUNK_OR_NATIVE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_TRUNK_ACCESS_OR_VOICE_VLANID_NOT_APPLICABLE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_TRUNK_NATIVE_VLANID_NOT_FOUND
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_TRUNK_TRUNK_VLANID_NOT_FOUND
                  - code: INTERFACE_CONFIG_SWITCH_PORT_TRUNK_VLANID_INVALID
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_DOT1X_MAC_AUTH_TYPE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_MISSING_WHEN_VLANID_PRESENT
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_DOT1X_REAUTH_TIMEOUT
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_STP_PRIORITY
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_STP_COST
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_IPCONFIG_NOTSUPPORTED
                  - code: SWITCH_PORT_INTERFACE_CONFIG_CANNOT_BE_NULL
                  - code: SVI_INTERFACE_TYPE_UPDATE_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_VLAN_CONFIG_CANNOT_BE_UPDATED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_MSTP_INSTANCE
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NAME_MAX_LENGTH
                  - code: INTERFACE_CONFIG_VLAN_INVALID_MAX_VLAN_COUNT_EXCEEDED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NAME_UNSUPPORTED_CHARACTERS
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_NOT_ACCESS_WHEN_AUTHMODE_PRESENT
                  - code: INTERFACE_CONFIG_IPV6_AUTOCONF_NOT_SUPPORTED_ON_DEVICE
                  - code: INTERFACE_CONFIG_IPV6_DHCP_NOT_SUPPORTED_ON_DEVICE
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_USED_FOR_NOTSUPPORTED_SPOKE
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_USED_FOR_NOTSUPPORTED_HUB
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_TYPE_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an Element Shell Interface (v2.3)
      tags:
      - Routing
  /sdwan/v2.4/api/sites/{site_id}/elements/{element_id}/bgpconfigs:
    get:
      description: List all the BGP configurations from NB.
      operationId: get-sdwan-v2.4-api-sites-site_id-elements-element_id-bgpconfigs
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPGlobalConfigV2N4'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Configs from NB (v2.4)
      tags:
      - Routing
  /sdwan/v2.4/api/sites/{site_id}/elements/{element_id}/bgpconfigs/{bgp_config_id}:
    get:
      description: List a specific BGP configuration from NB.
      operationId: get-sdwan-v2.4-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N4'
          description: Successful Operation
      summary: Get BGP Config from NB (v2.4)
      tags:
      - Routing
    put:
      description: Update the BGP configuration.
      operationId: put-sdwan-v2.4-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N4'
        description: Details of the bgp config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N4'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_CONFIG_INVALID_MD5_UNSET_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Config (v2.4)
      tags:
      - Routing
  /sdwan/v2.4/api/sites/{site_id}/elementshells/{element_shell_id}/interfaces:
    get:
      description: List all the element shell interfaces.
      operationId: get-sdwan-v2.4-api-sites-site_id-elementshells-element_shell_id-interfaces
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/InterfaceV4N21'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENTSHELL_NOT_FOUND
                  - code: ELEMENT_NOT_FOUND
                  - code: SHADIGEST_ELEMENT_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all Element Shell Interface (v2.4)
      tags:
      - Routing
    post:
      description: Create an element shell interface.
      operationId: post-sdwan-v2.4-api-sites-site_id-elementshells-element_shell_id-interfaces
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceScreenV4N21'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceV4N21'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: NAME_REQD
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE
                  - code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT
                  - code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL
                  - code: INTERFACE_CONFIG_SERVICE_LINK_TYPE_UPDATE_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST
                  - code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG
                  - code: INTERFACE_CONFIG_IP_OVERLAP
                  - code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT
                  - code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE
                  - code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED
                  - code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED
                  - code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID
                  - code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_CONFIG_CREATE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_CREATE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_POE_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_VLAN_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_POE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_LLDP_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_API_UNSUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NOT_SUPPORTED_ON_ELEMENT
                  - code: INTERFACE_CONFIG_VLAN_INVALID_USED_FOR_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_TYPE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_VLAN_ID
                  - code: INTERFACE_CONFIG_VLAN_INVALID_DUPLICATE_VLAN_ID
                  - code: INTERFACE_CONFIG_VLAN_CONFIG_CANNOT_BE_NULL
                  - code: INTERFACE_CONFIG_VLAN_INVALID_MSTP_INSTANCE
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NAME_MAX_LENGTH
                  - code: INTERFACE_CONFIG_VLAN_INVALID_MAX_VLAN_COUNT_EXCEEDED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NAME_UNSUPPORTED_CHARACTERS
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_NOT_ACCESS_WHEN_AUTHMODE_PRESENT
                  - code: INTERFACE_CONFIG_IPV6_AUTOCONF_NOT_SUPPORTED_ON_DEVICE
                  - code: INTERFACE_CONFIG_IPV6_DHCP_NOT_SUPPORTED_ON_DEVICE
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_USED_FOR_NOTSUPPORTED_HUB
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_USED_FOR_NOTSUPPORTED_SPOKE
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_TYPE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_FEC_MODE_UNSUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create an Element Shell Interface (v2.4)
      tags:
      - Routing
  /sdwan/v2.4/api/sites/{site_id}/elementshells/{element_shell_id}/interfaces/{interface_id}:
    delete:
      description: Delete an element shell interface.
      operationId: delete-sdwan-v2.4-api-sites-site_id-elementshells-element_shell_id-interfaces-interface_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      - description: The element shell ID.
        in: path
        name: interface_id
        required: true
        schema:
          description: Interface Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceV4N21'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SHADIGEST_ELEMENT_SHELL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an Element Shell Interface(v2.4)
      tags:
      - Routing
    get:
      description: List an element shell interface.
      operationId: get-sdwan-v2.4-api-sites-site_id-elementshells-element_shell_id-interfaces-interface_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      - description: The element shell ID.
        in: path
        name: interface_id
        required: true
        schema:
          description: Interface Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceV4N21'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENTSHELL_NOT_FOUND
                  - code: ELEMENT_NOT_FOUND
                  - code: SHADIGEST_ELEMENT_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get an Element Shell Interface (v2.4)
      tags:
      - Routing
    put:
      description: Update an element shell interface.
      operationId: put-sdwan-v2.4-api-sites-site_id-elementshells-element_shell_id-interfaces-interface_id
      parameters:
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element shell ID.
        in: path
        name: element_shell_id
        required: true
        schema:
          description: Element Shell Id
          type: string
      - description: The element shell ID.
        in: path
        name: interface_id
        required: true
        schema:
          description: Interface Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceScreenV4N21'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceV4N21'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: NAME_REQD
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE
                  - code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT
                  - code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL
                  - code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED
                  - code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST
                  - code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG
                  - code: INTERFACE_CONFIG_IP_OVERLAP
                  - code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT
                  - code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE
                  - code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED
                  - code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED
                  - code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID
                  - code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2
                  - code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_TYPE_UPDATE_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_CONFIG_CANNOT_BE_NULL
                  - code: CELLULAR_INTERFACE_PARENT_MODULE_ID_UPDATE_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_PARENT_SIM_SLOT_NUMBER_UPDATE_NOT_ALLOWED
                  - code: CELLULAR_INTERFACE_CONFIG_SITEWAN_NUMBER
                  - code: CELLULAR_INTERFACE_CONFIG_HARDWARE_RELAY_NOTSUPPORTED
                  - code: CELLULAR_INTERFACE_CONFIG_USED_FOR_NOTSUPPORTED
                  - code: CELLULAR_INTERFACE_CONFIG_INVALID_USED_FOR_INTERNET
                  - code: CELLULAR_INTERFACE_CONFIG_INVALID_USED_FOR_WAN
                  - code: CELLULAR_INTERFACE_CONFIG_MTU_INVALID
                  - code: CELLULAR_INTERFACE_CONFIG_DHCP_RELAY_NOTSUPPORTED
                  - code: CELLULAR_INTERFACE_CONFIG_LANSTATE_PROPOGATION_NOTSUPPORTED
                  - code: CELLULAR_INTERFACE_CONFIG_APN_PROFILEID_INVALID_WHEN_AUTOAPN
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_APNPROFILEID_PRESENT
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN_FALSE_NO_USERNAME_BUT_PWD_EXISTS
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_MISSING_WHEN_AUTOAPN_FALSE_APNPROFILEID_NULL
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN_FALSE_INVALID_AUTH
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_MISSING_APN_NAME
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PROFILE_NAME_INVALID
                  - code: CELLULAR_INTERFACE_CONFIG_APN_PROFILE_ID_INVALID
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PASSWORD_INVALID
                  - code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_USERNAME_INVALID
                  - code: INTERFACE_CONFIG_POE_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_VLAN_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_POE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_LLDP_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_API_UNSUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NOT_SUPPORTED_ON_ELEMENT
                  - code: INTERFACE_CONFIG_VLAN_INVALID_USED_FOR_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_TYPE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_VLAN_ID
                  - code: INTERFACE_CONFIG_VLAN_INVALID_DUPLICATE_VLAN_ID
                  - code: INTERFACE_CONFIG_VLAN_CONFIG_CANNOT_BE_NULL
                  - code: INTERFACE_CONFIG_SWITCH_PORT_API_UNSUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_ELEMENT_ROLE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_NOT_SUPPORTED_ON_ELEMENT
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_USED_FOR_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_NETWORK_CONTEXT_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_SCOPE_NOTSUPPORTED
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_ACCESS_MISSING_VLANID_ACCESS_OR_VOICE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_ACCESS_TRUNK_OR_NATIVE_VLANID_NOT_APPLICABLE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_ACCESS_VLANID_NOT_FOUND
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VOICE_VLANID_NOT_FOUND
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_TRUNK_MISSING_VLAN_ID_TRUNK_OR_NATIVE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_TRUNK_ACCESS_OR_VOICE_VLANID_NOT_APPLICABLE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_TRUNK_NATIVE_VLANID_NOT_FOUND
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_TRUNK_TRUNK_VLANID_NOT_FOUND
                  - code: INTERFACE_CONFIG_SWITCH_PORT_TRUNK_VLANID_INVALID
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_DOT1X_MAC_AUTH_TYPE
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_MISSING_WHEN_VLANID_PRESENT
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_DOT1X_REAUTH_TIMEOUT
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_STP_PRIORITY
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_STP_COST
                  - code: INTERFACE_CONFIG_SWITCH_PORT_INVALID_IPCONFIG_NOTSUPPORTED
                  - code: SWITCH_PORT_INTERFACE_CONFIG_CANNOT_BE_NULL
                  - code: SVI_INTERFACE_TYPE_UPDATE_NOT_ALLOWED
                  - code: INTERFACE_CONFIG_VLAN_CONFIG_CANNOT_BE_UPDATED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_MSTP_INSTANCE
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NAME_MAX_LENGTH
                  - code: INTERFACE_CONFIG_VLAN_INVALID_MAX_VLAN_COUNT_EXCEEDED
                  - code: INTERFACE_CONFIG_VLAN_INVALID_NAME_UNSUPPORTED_CHARACTERS
                  - code: INTERFACE_CONFIG_SWITCH_PORT_VLAN_MODE_NOT_ACCESS_WHEN_AUTHMODE_PRESENT
                  - code: INTERFACE_CONFIG_IPV6_AUTOCONF_NOT_SUPPORTED_ON_DEVICE
                  - code: INTERFACE_CONFIG_IPV6_DHCP_NOT_SUPPORTED_ON_DEVICE
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_USED_FOR_NOTSUPPORTED_SPOKE
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_USED_FOR_NOTSUPPORTED_HUB
                  - code: INTERFACE_CONFIG_PORT_CHANNEL_TYPE_NOT_SUPPORTED
                  - code: INTERFACE_CONFIG_FEC_MODE_UNSUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an Element Shell Interface (v2.4)
      tags:
      - Routing
  /sdwan/v2.5/api/bgppeers/query:
    post:
      description: Queries the DB for limit number of BGP peers that match the query
        parameters.
      operationId: post-sdwan-v2.5-api-bgppeers-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N5'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for BGP Peers (v2.5)
      tags:
      - Routing
  /sdwan/v2.5/api/sites/{site_id}/elements/{element_id}/bgppeers:
    get:
      description: List all the BGP peer configurations.
      operationId: get-sdwan-v2.5-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerConfigV2N5'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Configs (v2.5)
      tags:
      - Routing
    post:
      description: Create a BGP peer configuration.
      operationId: post-sdwan-v2.5-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerConfigScreenV2N5'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N5'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: PEER_TYPE_NOT_SUPPORTED
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_PEER_IP_CONFIG_NOT_SUPPORTED
                  - code: ADVERTISE_DEFAULT_ROUTE_TO_PEER_CANNOT_BE_ENABLED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create BGP Peer Config (v2.5)
      tags:
      - Routing
  /sdwan/v2.5/api/sites/{site_id}/elements/{element_id}/bgppeers/query:
    post:
      description: Queries the DB for limit number of BGP peers that match query parameters.
      operationId: post-sdwan-v2.5-api-sites-site_id-elements-element_id-bgppeers-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N5'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for BGP Peers (v2.5)
      tags:
      - Routing
  /sdwan/v2.5/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}:
    delete:
      description: Delete the BGP peer configuration.
      operationId: delete-sdwan-v2.5-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N5'
          description: Successful Operation
      summary: Delete BGP Peer Config (v2.5)
      tags:
      - Routing
    get:
      description: Get the BGP peer configuration.
      operationId: get-sdwan-v2.5-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N5'
          description: Successful Operation
      summary: Get BGP Peer Config (v2.5)
      tags:
      - Routing
    put:
      description: Update the BGP peer configuration.
      operationId: put-sdwan-v2.5-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerConfigScreenV2N5'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N5'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_CONFIG_INVALID_MD5_UNSET_REQUEST
                  - code: BGP_PEER_IP_CONFIG_NOT_SUPPORTED
                  - code: ADVERTISE_DEFAULT_ROUTE_TO_PEER_CANNOT_BE_ENABLED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Peer Config (v2.5)
      tags:
      - Routing
  /sdwan/v2.6/api/bgppeers/query:
    post:
      description: Queries the DB for limit number of BGP peers that match the query
        parameters.
      operationId: post-sdwan-v2.6-api-bgppeers-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N6'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for BGP Peers (v2.6)
      tags:
      - Routing
  /sdwan/v2.6/api/sites/{site_id}/elements/{element_id}/bgppeers:
    get:
      description: List all the BGP peer configurations.
      operationId: get-sdwan-v2.6-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerConfigV2N6'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Configs (v2.6)
      tags:
      - Routing
    post:
      description: Create a BGP peer configuration.
      operationId: post-sdwan-v2.6-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerConfigScreenV2N6'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N6'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: PEER_TYPE_NOT_SUPPORTED
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_PEER_IP_CONFIG_NOT_SUPPORTED
                  - code: ADVERTISE_DEFAULT_ROUTE_TO_PEER_CANNOT_BE_ENABLED
                  - code: BGP_PEER_CONFIG_AGGREGATE_PREFIXES_ALLOWED_ONLY_FOR_HUB
                  - code: BGP_PEER_CONFIG_AGGREGATE_PREFIXES_NOT_SUPPORTED_ON_ELEMENT
                  - code: BGP_PEER_CONFIG_INVALID_AGGREGATE_TYPE
                  - code: BGP_PEER_CONFIG_AGGREGATEPREFIXES_IS_ALLOWED_ONLY_FOR_MANUAL_AGGREGATE_TYPE
                  - code: BGP_PEER_CONFIG_AGGREGATEPREFIXES_REQUIRED_FOR_MANUAL_AGGREGATE_TYPE
                  - code: BGP_PEER_CONFIG_AGGREGATE_PREFIX_LIST_IS_ALLOWED_ONLY_FOR_MANUAL_AGGREGATE_TYPE
                  - code: BGP_PEER_CONFIG_AGGREGATE_PREFIX_LIST_NOT_FOUND
                  - code: BGP_PEER_CONFIG_AUTO_GENERATED_PREFIX_LIST_NOT_ALLOWED_FOR_AGGREGATION
                  - code: BGP_PEER_CONFIG_DUPLICATE_IPV4_PREFIX
                  - code: BGP_PEER_CONFIG_INVALID_IPV4_PREFIX
                  - code: BGP_PEER_CONFIG_DUPLICATE_IPV6_PREFIX
                  - code: BGP_PEER_CONFIG_INVALID_IPV6_PREFIX
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create BGP Peer Config (v2.6)
      tags:
      - Routing
  /sdwan/v2.6/api/sites/{site_id}/elements/{element_id}/bgppeers/query:
    post:
      description: Queries the DB for limit number of BGP peers that match query parameters.
      operationId: post-sdwan-v2.6-api-sites-site_id-elements-element_id-bgppeers-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N6'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for BGP Peers (v2.6)
      tags:
      - Routing
  /sdwan/v2.6/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}:
    delete:
      description: Delete the BGP peer configuration.
      operationId: delete-sdwan-v2.6-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N6'
          description: Successful Operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Delete BGP Peer Config (v2.6)
      tags:
      - Routing
    get:
      description: Get the BGP peer configuration.
      operationId: get-sdwan-v2.6-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N6'
          description: Successful Operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get BGP Peer Config (v2.6)
      tags:
      - Routing
    put:
      description: Update the BGP peer configuration.
      operationId: put-sdwan-v2.6-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerConfigScreenV2N6'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N6'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_CONFIG_INVALID_MD5_UNSET_REQUEST
                  - code: BGP_PEER_IP_CONFIG_NOT_SUPPORTED
                  - code: ADVERTISE_DEFAULT_ROUTE_TO_PEER_CANNOT_BE_ENABLED
                  - code: BGP_PEER_CONFIG_AGGREGATE_PREFIXES_ALLOWED_ONLY_FOR_HUB
                  - code: BGP_PEER_CONFIG_AGGREGATE_PREFIXES_NOT_SUPPORTED_ON_ELEMENT
                  - code: BGP_PEER_CONFIG_INVALID_AGGREGATE_TYPE
                  - code: BGP_PEER_CONFIG_AGGREGATEPREFIXES_IS_ALLOWED_ONLY_FOR_MANUAL_AGGREGATE_TYPE
                  - code: BGP_PEER_CONFIG_AGGREGATEPREFIXES_REQUIRED_FOR_MANUAL_AGGREGATE_TYPE
                  - code: BGP_PEER_CONFIG_AGGREGATE_PREFIX_LIST_IS_ALLOWED_ONLY_FOR_MANUAL_AGGREGATE_TYPE
                  - code: BGP_PEER_CONFIG_AGGREGATE_PREFIX_LIST_NOT_FOUND
                  - code: BGP_PEER_CONFIG_AUTO_GENERATED_PREFIX_LIST_NOT_ALLOWED_FOR_AGGREGATION
                  - code: BGP_PEER_CONFIG_DUPLICATE_IPV4_PREFIX
                  - code: BGP_PEER_CONFIG_INVALID_IPV4_PREFIX
                  - code: BGP_PEER_CONFIG_DUPLICATE_IPV6_PREFIX
                  - code: BGP_PEER_CONFIG_INVALID_IPV6_PREFIX
                  - code: CANNOT_UPDATE_AUTOGENERATED_BGP_PEER
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Update BGP Peer Config (v2.6)
      tags:
      - Routing
  /sdwan/v3.0/api/prefixes/query:
    post:
      description: Query the prefix set.
      operationId: post-sdwan-v3.0-api-prefixes-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrefixQueryV3'
        description: Query Details for prefixes
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PrefixQueryFilterV3'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Prefix Set (v3.0)
      tags:
      - Routing
  /sdwan/v3.1/api/prefixes/query:
    post:
      description: Query the prefix set.
      operationId: post-sdwan-v3.1-api-prefixes-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrefixQueryV3N1'
        description: Query Details for prefixes
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PrefixQueryFilterV3N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Prefix Set (v3.1)
      tags:
      - Routing
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- name: Routing
