components:
  schemas:
    ASPathRegex:
      properties:
        as_path_regex:
          description: 'The AS Path Regex expression.

            '
          type: string
        order:
          description: 'The order of the AS Path Regex.

            '
          format: int32
          type: integer
        permit:
          description: 'The value true or false if AS path regex is allowed.

            '
          type: boolean
      required:
      - as_path_regex
    Action: {}
    Aggregate:
      properties:
        field:
          description: Field
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
    BGPConfig:
      properties:
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        keepalive_time:
          description: "The keep-alive time of the BGP config. The keep-alive time\
            \ should be between 3 - 200 seconds. \n"
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.

            '
          type: string
        md5_secret:
          description: "The MD5 Secret should be between 1 and 32 characters. The\
            \ default value is 0. \n"
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_auth_type:
          description: 'The authentication type of the BGP peer.

            '
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: "The peer retry time should be between 0 - 65535 seconds. The\
            \ default is 120 seconds. \n"
          format: int32
          type: integer
    BGPGlobalConfig:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPGlobalConfigScreen:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPGlobalConfigScreenV2N1:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefix_adv_type_to_lan:
          description: Prefix Adv Type To Lan
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPGlobalConfigScreenV2N2:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_auth_type:
          description: "The authentication type of the BGP peer. \n"
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefix_adv_type_to_lan:
          description: 'The prefix advertises to LAN.

            '
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPGlobalConfigV2N1:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefix_adv_type_to_lan:
          description: Prefix Adv Type To Lan
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPGlobalConfigV2N2:
      properties:
        admin_distance:
          description: "The BGP config admin distance. The device sets the default\
            \ Admin Distance of all learned prefixes to 20. The admin value should\
            \ be in the range 1-255. \n"
          format: int32
          type: integer
        adv_interval:
          description: 'The advertisement interval of the BGP config. The advertisement
            interval should be between 0 - 300 seconds and the default is 1 second.

            '
          format: int32
          type: integer
        graceful_restart:
          description: 'By default, graceful restart is Off. Change the default setting
            to On.

            '
          type: boolean
        hold_time:
          description: 'The BGP config hold time. The hold time should be between
            3 - 600 seconds.

            '
          format: int32
          type: integer
        id:
          description: "The BGP configuration ID.  \n"
          type: string
        keepalive_time:
          description: 'The keep-alive time of the BGP config. The keep-alive time
            should be between 3 - 200 seconds.

            '
          format: int32
          type: integer
        local_as_num:
          description: 'The Local AS Number should be between 1 and 4294967295 or
            as A.B, where A and B are both numbers between 1 and 4294967295.  If the
            number entered is an A.B format, the web interface displays the corresponding
            32-bit conversion below the entered value. If the number entered is a
            32-bit format, the web interface displays the corresponding A.B value
            below the entered value. The Local AS Number is mandatory.

            '
          type: string
        maximum_paths:
          description: 'The BGP config maximum paths. The max path value should be
            between 1 - 255. The default is 1.

            '
          format: int32
          type: integer
        md5_secret:
          description: 'The MD5 Secret should be between 1 and 32 characters. The
            default value is 0.

            '
          type: string
        multi_hop_limit:
          description: 'The BGP config multi hop limit. The multi-hop limit should
            be between 1 - 255 hops. The default is 1 hop.

            '
          format: int32
          type: integer
        peer_auth_type:
          description: 'The authentication type of the BGP peer.

            '
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: 'The peer retry time should be between 0 - 65535 seconds. The
            default is 120 seconds.

            '
          format: int32
          type: integer
        prefix_adv_type:
          description: 'The type of prefix advertisement; Default, Unaggregated or
            Auto-aggregated.

            '
          type: string
        prefix_adv_type_to_lan:
          description: 'The prefix advertises to LAN.

            '
          type: string
        prefixes_to_adv_to_wan:
          description: 'The prefix advertises to WAN.

            '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'The IP address of the ION device. Max size = 256.

            '
          type: string
        stalepath_time:
          description: 'The stale path time for the BGP config. The stalepath time
            should be between 1 - 3600 seconds. The default is 120 seconds.

            '
          format: int32
          type: integer
    BGPPeerAdvertisedPrefixes:
      properties:
        advertised_prefix_count:
          description: 'The advertised prefix count for the BGP peer.

            '
          format: int32
          type: integer
        advertised_prefixes:
          $ref: '#/components/schemas/PrefixSet'
          description: 'The advertised prefixes of the BGP peer.

            '
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
    BGPPeerConfig:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: "The name of the BGP peer config. Max size = 128. \n"
          type: string
        peer_ip:
          description: "The peer IP address. \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        tags:
          description: "A information field that can be added to identify the BGP\
            \ peer. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: "The Update Source IP address. \n"
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerConfigEtag:
      properties:
        id:
          description: 'The BGP peer config etag ID.

            '
          type: string
    BGPPeerConfigV2N1:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: "The peer IP address. \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        scope:
          description: "The scope of the static route = Local or Global. If scope\
            \ is local, the device does not advertise the route to other sites and\
            \ if scope is global, the device advertises the route to other sites.\
            \              \n"
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerConfigV2N2:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: "The peer IP address. \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        scope:
          description: "The scope of the static route = Local or Global. If scope\
            \ is local, the device does not advertise the route to other sites and\
            \ if scope is global, the device advertises the route to other sites.\
            \                    \n"
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerDiscoveredPrefixes:
      properties:
        discovered_ipv4_prefixes:
          description: 'The discovered IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        discovered_ipv4_prefixes_count:
          description: 'The discovered IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
    BGPPeerOperations:
      properties:
        value:
          description: 'The reset value for the BGP peer.

            '
          type: string
    BGPPeerQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of BGP peers that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of BGP peers deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the BGP peers for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the BGP peers by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    BGPPeerQueryFilter:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: "The peer IP address. \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerQueryFilterV2N1:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: "The peer IP address. \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        scope:
          description: "The scope of the static route = Local or Global. If scope\
            \ is local, the device does not advertise the route to other sites and\
            \ if scope is global, the device advertises the route to other sites.\
            \                 \n"
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerQueryFilterV2N2:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'The details of the BGP config.

            '
        description:
          description: "The description of the BGP peer config. Max size = 1024. \n"
        id:
          description: 'The ID of the BGP peer config.

            '
          type: string
        name:
          description: 'The name of the BGP peer config. Max size = 128.

            '
          type: string
        peer_ip:
          description: "The peer IP address. \n"
          type: string
        peer_type:
          description: 'The peer type = Classic. The Peer Type option is available
            only for data center ION devices.

            '
          type: string
        remote_as_num:
          description: 'The remote AS number.

            '
          type: string
        route_map_in_id:
          description: 'The ID of the Route Map In to filter incoming routes.

            '
          type: string
        route_map_out_id:
          description: 'The ID of the Route Map Out to filter outgoing routes.

            '
          type: string
        scope:
          description: "The scope of the static route = Local or Global. If scope\
            \ is local, the device does not advertise the route to other sites and\
            \ if scope is global, the device advertises the route to other sites.\
            \      \n"
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'A information field that can be added to identify the BGP
            peer. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'The Update Source IP address.

            '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerReachablePrefixes:
      properties:
        filtered_ipv4_prefixes:
          description: 'The filtered IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        filtered_ipv4_prefixes_count:
          description: 'The filtered IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        reachable_ipv4_prefixes:
          description: 'The reachable IPv4 prefixes for the BGP peer.

            '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        reachable_ipv4_prefixes_count:
          description: 'The reachable IPv4 prefixes count for the BGP peer.

            '
          format: int32
          type: integer
    BGPPeerStatus:
      properties:
        downtime:
          description: 'The downtime configured for the BGP peer.

            '
          type: string
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        state:
          description: 'The state of the BGP peer.

            '
          type: string
        uptime:
          description: 'The uptime configured for the BGP peer.

            '
          type: string
    BGPPeerStatusV2N1:
      properties:
        direction:
          description: "The direction for the BGP peer.  \n"
          type: string
        downtime:
          description: 'The downtime configured for the BGP peer.

            '
          type: string
        id:
          description: 'The ID of the BGP peer.

            '
          type: string
        state:
          description: 'The state of the BGP peer.

            '
          type: string
        uptime:
          description: 'The uptime configured for the BGP peer.

            '
          type: string
    Direction: {}
    EnterprisePrefixSetN:
      properties:
        id:
          description: 'The ID of the tenant enterprise prefix set.

            '
          type: string
        ipv4_enterprise_prefixes:
          description: 'The IPv4 configuration of the tenant enterprise prefix.

            '
          items:
            description: Ipv4 Enterprise Prefixes
            type: string
          type: array
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    ListQueryResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number.

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs.

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size = 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query.

            '
          type: object
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        id:
          description: 'The ID.

            '
          type: string
      type: object
    LocalNetwork:
      properties:
        prefix_set:
          description: 'Prefix Set: Valid '
          items:
            $ref: '#/components/schemas/Network'
          type: array
        prefix_set_v6:
          description: 'Prefix Set V6: Valid '
          items:
            $ref: '#/components/schemas/NetworkV6'
          type: array
        security_policies:
          description: 'Security Policies: Valid '
          items:
            $ref: '#/components/schemas/SecurityPolicy'
          type: array
        vlan_id:
          description: 'Vlan Id: Min(message = min, value = 0L) Max(message = max,
            value = 4095L) '
          format: int32
          type: integer
    LocalPrefixSet:
      properties:
        local_networks:
          description: 'Local Networks: Valid '
          items:
            $ref: '#/components/schemas/LocalNetwork'
          type: array
    MatchClauses:
      properties:
        as_path_id:
          description: 'The AS path ID.

            '
          type: string
        community_list_id:
          description: "The community list ID.          \n"
          type: string
        ip_next_hop_id:
          description: 'The IP next-hop ID.

            '
          type: string
        ip_prefix_list_id:
          description: 'The IP prefix list ID.

            '
          type: string
        tag:
          description: 'A information field that can be added to identify the match
            clause.

            '
          format: int32
          type: integer
    Network:
      properties:
        gateway:
          description: 'The network gateway.

            '
          type: string
        ipv4_prefix:
          description: 'The IPv4 address prefix.

            '
          type: string
    NetworkV6:
      properties:
        gateway:
          description: 'The network gateway.

            '
          type: string
        ipv6_prefix:
          description: 'The IPv6 address prefix.

            '
          type: string
    NextHop:
      properties:
        admin_distance:
          description: 'The admin distance for a specific route. The default value
            for admin distance is 1.

            '
          type: integer
        nexthop_interface_id:
          description: 'The next hop interface ID.

            '
          type: string
        nexthop_ip:
          description: "The next hop IPv4 address. \n"
          type: string
        self:
          description: "Set to True to indicate that traffic is destined for the ION\
            \ device. By default, Self is set to False. \n"
          type: boolean
    PrefixInfo:
      properties:
        as_path:
          description: 'The AS path of the IPv4 prefix.

            '
          items:
            description: As Path
            format: int64
            type: integer
          type: array
        network:
          description: 'The network of the IPv4 prefix.

            '
          type: string
        nexthop:
          description: 'The next-hop of the IPv4 prefix.

            '
          type: string
    PrefixSet:
      properties:
        ipv4_set:
          description: 'The set of The IPv4 addresses.

            '
          items:
            description: Ipv4 Set
            type: string
          type: array
        ipv6_set:
          description: 'The set of The IPv4 addresses.

            '
          items:
            description: Ipv6 Set
            type: string
          type: array
    RoutingAccessList:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The ID of the access list. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of access/prefix lists that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of access/prefix lists deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the access/prefix lists for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the access/prefix lists by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: "The total number of query parameters. \n"
          format: int64
          type: integer
    RoutingAccessListQueryFilter:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The peer IP address. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListQueryFilterV2N1:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The ID of the access list. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListScreen:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access/community\
            \ lists. \n"
          type: boolean
        description:
          description: 'The description of the access/community list. Max size = 1024.

            '
        id:
          description: "The ID of the access/community list. \n"
          type: string
        name:
          description: 'The name of the access/community list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access/community
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListScreenV2N1:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The ID of the access list. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: "A information field that can be added to identify the access\
            \ list. Maximum 10 unique tags of length 1024 each are allowed.      \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListV2N1:
      properties:
        as_path_regex_list:
          description: 'The AS Path Regex expression list.

            '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: "The value true or false for auto-generated access lists. \n"
          type: boolean
        description:
          description: 'The description of the access list. Max size = 1024.

            '
        id:
          description: "The ID of the access list. \n"
          type: string
        name:
          description: 'The name of the access list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the access
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityList:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated IP community lists.

            '
          type: boolean
        community_list:
          description: "The details of the IP community lists.          \n"
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'The description of the IP community list. Max size = 1024.

            '
        id:
          description: "The ID of the IP community list. \n"
          type: string
        name:
          description: 'The name of the IP community list. Max size = 128.

            '
          type: string
        tags:
          description: "A information field that can be added to identify the IP community\
            \ list. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityListQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of community lists that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of community lists deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the community lists for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the community lists by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    RoutingCommunityListQueryFilter:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated IP community lists.

            '
          type: boolean
        community_list:
          description: "The details of the IP community lists.          \n"
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'The description of the IP community list. Max size = 1024.

            '
        id:
          description: "The ID of the IP community list. \n"
          type: string
        name:
          description: 'The name of the IP community list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the IP community
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityListScreen:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated IP community lists.

            '
          type: boolean
        community_list:
          description: "The details of the IP community lists.          \n"
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'The description of the IP community list. Max size = 1024.

            '
        id:
          description: "The ID of the IP community list. \n"
          type: string
        name:
          description: 'The name of the IP community list. Max size = 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the IP community
            list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingIPCommunity:
      properties:
        community_str:
          description: 'The community string. Max size = 256.

            '
          type: string
        permit:
          description: "The permit of the IP community sctring = Permit or Deny. \n"
          type: boolean
      required:
      - community_str
    RoutingPrefixFilter:
      properties:
        ge:
          description: 'The prefix filter value for ge operator should be within the
            range 1-32.

            '
          format: int32
          type: integer
        le:
          description: "The prefix filter value for le operator should be within the\
            \ range 1-32.         \n"
          format: int32
          type: integer
        order:
          description: 'The order of the prefix filter.

            '
          format: int32
          type: integer
        permit:
          description: 'The permit of the IP community sctring = Permit or Deny.

            '
          type: boolean
        prefix:
          description: 'The valid prefix filters.

            '
          type: string
      required:
      - prefix
    RoutingPrefixList:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix filter list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListQueryFilter:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListScreen:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated prefix list for
            an element.

            '
          type: boolean
        description:
          description: 'The description of the prefix filter list. Max size = 1024.

            '
        id:
          description: "The ID of the prefix filter list. \n"
          type: string
        name:
          description: 'The name of the prefix filter list. Max size = 128.

            '
          type: string
        prefix_filter_list:
          description: "The details of the prefix filter list used to filter routes.\
            \          \n"
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'A information field that can be added to identify the prefix
            filter list. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMap:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntry'
          type: array
        tags:
          description: 'A information field that can be added to identify the route
            map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapEntry:
      properties:
        continue_entry:
          description: 'To continue to use the rule that the route matches.

            '
          type: string
        match:
          $ref: '#/components/schemas/MatchClauses'
          description: "The details of route match.          \n"
        order:
          description: 'Enter an order number from 1 to 65535 to define the order
            in which this route map will be used.

            '
          format: int32
          type: integer
        permit:
          description: 'It allow routes to be advertised or Deny to block the routes
            from being advertised.

            '
          type: boolean
        set:
          $ref: '#/components/schemas/SetClauses'
          description: 'The details of the route map set.

            '
    RoutingRouteMapEntryV2N1:
      properties:
        continue_entry:
          description: 'Continue Entry: Pattern(ROUTE_MAP_INVALID_CONTINUE_ORDER,
            regexp = ^(0|[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$) '
          type: string
        match:
          $ref: '#/components/schemas/MatchClauses'
          description: 'Match: Valid '
        order:
          description: 'Order: Range(max = 65535L, ROUTE_MAP_INVALID_ORDER, min =
            1L) '
          format: int32
          type: integer
        permit:
          description: Permit
          type: boolean
        set:
          $ref: '#/components/schemas/SetClauses'
          description: 'Set: Valid '
    RoutingRouteMapQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of route maps that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of route maps deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the route maps for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the route maps by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    RoutingRouteMapQueryFilter:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntry'
          type: array
        tags:
          description: 'A information field that can be added to identify the route
            map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapQueryFilterV2N1:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N1'
          type: array
        tags:
          description: 'A information field that can be added to identify the route
            map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapScreen:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntry'
          type: array
        tags:
          description: 'A information field that can be added to identify the route
            map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapScreenV2N1:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N1'
          type: array
        tags:
          description: "A information field that can be added to identify the route\
            \ map. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapV2N1:
      properties:
        auto_generated:
          description: 'The value true or false for auto-generated route map for an
            element.

            '
          type: boolean
        description:
          description: 'The description of the route map. Max size = 1024.

            '
        id:
          description: "The ID of the route map. \n"
          type: string
        name:
          description: 'The name of the route map. Max size = 128.

            '
          type: string
        route_map_entries:
          description: "The details of the route map entries.          \n"
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N1'
          type: array
        tags:
          description: "A information field that can be added to identify the route\
            \ map. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    SecurityPolicy:
      properties:
        action:
          $ref: '#/components/schemas/Action'
          description: 'The action to allow, deny, or reject traffic based on the
            security intent of the enterprise.

            '
        app_ids:
          description: 'The App IDs.

            '
          items:
            description: App Ids
            type: string
          type: array
        direction:
          $ref: '#/components/schemas/Direction'
          description: 'The direction of the traffic.

            '
    SetClauses:
      properties:
        as_path_prepend:
          description: 'The AS path prepend.

            '
          type: string
        community:
          description: "The community.          \n"
          type: string
        ip_next_hop:
          description: Ip Next Hop
          type: string
        local_preference:
          description: 'The local preference.

            '
          format: int64
          type: integer
        tag:
          description: 'A information field that can be added to identify the set
            clause.

            '
          format: int32
          type: integer
        weight:
          description: 'The weight of the set clause.

            '
          format: int64
          type: integer
    StateNextHop:
      properties:
        nexthop_ip:
          description: 'The IP address of the next hop.

            '
          type: string
        reachability_status:
          description: 'The reachability status.

            '
          type: boolean
    StaticRoute:
      properties:
        description:
          description: 'The description of the static route. Max size = 256.

            '
        destination_prefix:
          description: 'The IPv4 or IPv6 address mask for next hop Destination Prefix
            (IPv4 or IPv6).

            '
          type: string
        id:
          description: 'The ID of the static route.

            '
          type: string
        network_context_id:
          description: 'The ID of the network context.

            '
          type: string
        nexthops:
          description: 'The details of the next hops configured on the static route.

            '
          items:
            $ref: '#/components/schemas/NextHop'
          type: array
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'A information field that can be added to identify the static
            route. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - scope
      - nexthops
      - destination_prefix
    StaticRouteStatus:
      properties:
        id:
          description: 'The ID of the static route.

            '
          type: string
        nexthops:
          description: 'The details of the next hop.

            '
          items:
            $ref: '#/components/schemas/StateNextHop'
          type: array
      required:
      - nexthops
    StaticRouteStatusV2N2:
      properties:
        id:
          description: 'The ID of the static route.

            '
          type: string
        nexthops:
          description: 'The details of the next hop.

            '
          items:
            $ref: '#/components/schemas/StateNextHop'
          type: array
    StaticRouteV2N1:
      properties:
        description:
          description: 'The description of the static route. Max size = 256.

            '
        destination_prefix:
          description: 'The IPv4 or IPv6 address mask for next hop Destination Prefix
            (IPv4 or IPv6).

            '
          type: string
        id:
          description: 'The ID of the static route.

            '
          type: string
        name:
          description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of
            the resource exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'The ID of the network context.

            '
          type: string
        nexthop_reachability_probe:
          description: Nexthop Reachability Probe
          type: boolean
        nexthops:
          description: 'The details of the next hops configured on the static route.

            '
          items:
            $ref: '#/components/schemas/NextHop'
          type: array
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: "A information field that can be added to identify the static\
            \ route. Maximum 10 unique tags of length 1024 each are allowed. \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - scope
      - nexthops
      - destination_prefix
    StaticRouteV2N2:
      properties:
        address_family:
          description: "The static route address family. \n"
          type: string
        description:
          description: 'The description of the static route. Max size = 256.

            '
        destination_prefix:
          description: 'The IPv4 or IPv6 address mask for next hop Destination Prefix
            (IPv4 or IPv6).

            '
          type: string
        id:
          description: 'The ID of the static route.

            '
          type: string
        name:
          description: 'The name of the static route.

            '
          type: string
        network_context_id:
          description: 'The ID of the network context.

            '
          type: string
        nexthop_reachability_probe:
          description: 'The Next Hop Reachability Probe is enabled.

            '
          type: boolean
        nexthops:
          description: 'The details of the next hops configured on the static route.

            '
          items:
            $ref: '#/components/schemas/NextHop'
          type: array
        scope:
          description: 'The scope of the static route = Local or Global. If scope
            is local, the device does not advertise the route to other sites and if
            scope is global, the device advertises the route to other sites.

            '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'A information field that can be added to identify the static
            route. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - address_family
      - scope
      - nexthops
      - destination_prefix
info:
  contact: {}
  description: List of APIs used to configure all routing contructs like, BGP configs,
    static routes, AS paths, and community lists.
  title: Routing
  version: Latest
openapi: 3.0.0
paths:
  /sdwan/v2.0/api/enterpriseprefixset:
    get:
      description: List the prefix set of a tenant enterprise.
      operationId: get-sdwan-v2.0-api-enterpriseprefixset
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePrefixSetN'
          description: Successful Operation
      summary: Get Tenant Enterprise Prefix Set (v2.0)
      tags:
      - Routing
    put:
      description: Update the prefix set of a tenant enterprise.
      operationId: put-sdwan-v2.0-api-enterpriseprefixset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterprisePrefixSetN'
        description: Enterprise prefix Set
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePrefixSetN'
          description: Successful Operation
      summary: Update Tenant Enterprise Prefix Set (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgpconfigs:
    get:
      description: List all the BGP configurations from NB.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgpconfigs
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPGlobalConfig'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Configs from NB (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgpconfigs/{bgp_config_id}:
    get:
      description: List a specific BGP configuration from NB.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfig'
          description: Successful Operation
      summary: Get BGP Config from NB (v2.0)
      tags:
      - Routing
    put:
      description: Updates the BGP configuration from NB.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreen'
        description: Details of the bgp config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: BGP_CONFIG_INVALID_MAXIMUM_PATHS
                  - code: BGP_CONFIG_INVALID_ADMIN_DISTANCE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: BGP_CONFIG_INVALID_STALEPATH_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Config from NB (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers:
    get:
      description: List all the BGP peer configurations from NB.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerConfig'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Configs from NB (v2.0)
      tags:
      - Routing
    post:
      description: Create a BGP peer configuration.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreen'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUM
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: PEER_TYPE_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create BGP Peer Config (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/query:
    post:
      description: Queries the DB for limit number of BGP peers that match query parameters.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for BGP Peers (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/status:
    get:
      description: List all the BGP peer statuses from NB.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerStatus'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Status from NB (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}:
    delete:
      description: Delete the BGP peer configuration.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete BGP Peer Config (v2.0)
      tags:
      - Routing
    get:
      description: Get the BGP peer configuration.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfig'
          description: Successful Operation
      summary: Get BGP Peer Config (v2.0)
      tags:
      - Routing
    put:
      description: Update the BGP peer configuration.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreen'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUM
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Peer Config (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}/operations:
    post:
      description: Reset the BGP peer configuration.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id-operations
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerOperations'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerOperations'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_PEER_CONFIG_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Reset BGP Peer Config (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/advertisedprefixes:
    get:
      description: List all the BGP peer advertised prefixes.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-config_id-advertisedprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerAdvertisedPrefixes'
          description: Successful Operation
      summary: Get BGP Peer Advertised Prefixes (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/discoveredprefixes:
    get:
      description: List all the BGP discovered prefix information.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-config_id-discoveredprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerDiscoveredPrefixes'
          description: Successful Operation
      summary: Get BGP Discovered Prefixes (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/reachableprefixes:
    get:
      description: List all the BGP reachable prefix information.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-config_id-reachableprefixes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerReachablePrefixes'
          description: Successful Operation
      summary: Get BGP Reachable Prefix (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/status:
    get:
      description: List the BGP peer status information from NB.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-bgppeers-config_id-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerStatus'
          description: Successful Operation
      summary: Get BGP Peer Status from NB (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists:
    get:
      description: List all the access lists for the element.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Access List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create a AS-Path access list.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the as-path access list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create AS-Path Access List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/query:
    post:
      description: Queries the DB for limit number of access lists that match query
        parameters.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Access Lists (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/{config_id}:
    delete:
      description: Delete the access list.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the access list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ACCESS_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ACCESS_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Access List (v2.0)
      tags:
      - Routing
    get:
      description: Get a specific access list.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
      summary: Get Access List (v2.0)
      tags:
      - Routing
    put:
      description: Updates the access list.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the access list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the as-path access list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ACCESS_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Access List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists:
    get:
      description: Get all the community lists for an element.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingCommunityList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Community List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create an IP community list.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the community list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_COMMUNITY_LIST_NAME
                  - code: MAX_LIMIT_FOR_COMMUNITY_LIST_EXCEEDS
                  - code: COMMUNITY_LIST_ALREADY_DEFINED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create IP Community List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists/query:
    post:
      description: Queries the DB for limit number of community lists that match the
        query parameters.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingCommunityListQuery'
        description: Query details for Routing Community
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingCommunityListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Community Lists (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists/{config_id}:
    delete:
      description: Deletes the community list.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the IP community list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: COMMUNITY_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_COMMUNITY_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Community List (v2.0)
      tags:
      - Routing
    get:
      description: Lists a specific community list.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
      summary: Get Community List (v2.0)
      tags:
      - Routing
    put:
      description: Updates the community list.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the IP community list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingCommunityListScreen'
        description: Details of the community list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_COMMUNITY_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_COMMUNITY_LIST_NAME
                  - code: MAX_LIMIT_FOR_COMMUNITY_LIST_EXCEEDS
                  - code: COMMUNITY_LIST_ALREADY_DEFINED
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Community List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_prefixlists:
    get:
      description: Get all the prefix lists for an element.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingPrefixList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Prefix List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create an IP Prefix List.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPrefixListScreen'
        description: Details of the prefix list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create IP Prefix List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_prefixlists/query:
    post:
      description: Queries the DB for limit number of prefix lists that match the
        query parameters.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingPrefixListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Prefix Lists (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_prefixlists/{config_id}:
    delete:
      description: Delete a prefix list.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the prefix list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PREFIX_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_PREFIX_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Prefix List (v2.0)
      tags:
      - Routing
    get:
      description: Get a specific prefix list.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
      summary: Get Prefix List (v2.0)
      tags:
      - Routing
    put:
      description: Update a prefix list.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the prefix list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPrefixListScreen'
        description: Details of the prefix list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_PREFIX_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Prefix List (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_routemaps:
    get:
      description: List all the route maps for an element.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMap'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Route Map for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create a route map.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapScreen'
        description: Details of route map to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Route Map (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_routemaps/query:
    post:
      description: Queries the DB for limit number of route maps that match the query
        parameters.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_routemaps-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapQuery'
        description: Query details for route maps
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Route Maps (v2.1)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/routing_routemaps/{config_id}:
    delete:
      description: Delete a route map.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the route map.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ROUTE_MAP_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ROUTE_MAP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Route Map (v2.0)
      tags:
      - Routing
    get:
      description: Get a specific route map.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMap'
          description: Successful Operation
      summary: Get Route Map (v2.0)
      tags:
      - Routing
    put:
      description: Update a route map.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the route map.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapScreen'
        description: Details of route map to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ROUTE_MAP
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Route Map (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/staticroutes:
    get:
      description: List all the static routes.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StaticRoute'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Static Routes (v2.0)
      tags:
      - Routing
    post:
      description: Create a static route.
      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRoute'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Static Route (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}:
    delete:
      description: Delete a static route.
      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful Operation
      summary: Delete Static Route (v2.0)
      tags:
      - Routing
    get:
      description: Get a specific static route.
      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful Operation
      summary: Get Static Route (v2.0)
      tags:
      - Routing
    put:
      description: Update a static route.
      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRoute'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Static Route (v2.0)
      tags:
      - Routing
  /sdwan/v2.0/api/sites/{site_id}/localprefixset:
    get:
      description: List the site local prefix set.
      operationId: get-sdwan-v2.0-api-sites-site_id-localprefixset
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalPrefixSet'
          description: Successful Operation
      summary: Get Site Local Prefix Set (v2.0)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgpconfigs:
    get:
      description: List all the BGP configurations from NB.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgpconfigs
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPGlobalConfigV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Configs from NB (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgpconfigs/{bgp_config_id}:
    get:
      description: List a specific BGP configuration from NB.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N1'
          description: Successful Operation
      summary: Get BGP Config from NB (v2.1)
      tags:
      - Routing
    put:
      description: Updates the BGP configuration from NB.
      operationId: put-sdwan-v2.1-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N1'
        description: Details of the bgp config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Config from NB (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers:
    get:
      description: List all the BGP peer configurations from NB.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerConfigEtag'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Configs from NB (v2.1)
      tags:
      - Routing
    post:
      description: Create a BGP peer configuration.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N1'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUM
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: PEER_TYPE_NOT_SUPPORTED
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create BGP Peer Config (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/query:
    post:
      description: Queries the DB for limit number of BGP peers that match query parameters.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for BGP Peers (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/status:
    get:
      description: List all the BGP peer statuses from NB.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerStatusV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Status from NB (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}:
    delete:
      description: Delete the BGP peer configuration.
      operationId: delete-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N1'
          description: Successful Operation
      summary: Delete BGP Peer Config (v2.1)
      tags:
      - Routing
    get:
      description: Get the BGP peer configuration.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N1'
          description: Successful Operation
      summary: Get BGP Peer Config (v2.1)
      tags:
      - Routing
    put:
      description: Update the BGP peer configuration.
      operationId: put-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N1'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUM
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Peer Config (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/status:
    get:
      description: List the BGP peer status information from NB.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-bgppeers-config_id-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer config.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerStatusV2N1'
          description: Successful Operation
      summary: Get BGP Peer Status from NB (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists:
    get:
      description: List all the access lists for the element.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListV2N1'
                      type: array
                  type: object
                items:
                  $ref: '#/components/schemas/RoutingAccessListV2N1'
                type: array
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Access List for Element (v2.1)
      tags:
      - Routing
    post:
      description: Create a AS-Path access list.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreenV2N1'
        description: Details of the as-path access list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create AS-Path Access List (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/query:
    post:
      description: Queries the DB for limit number of access lists that match query
        parameters.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Access Lists (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/{config_id}:
    delete:
      description: Delete the access list.
      operationId: delete-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the access list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ACCESS_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ACCESS_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Access List (v2.1)
      tags:
      - Routing
    get:
      description: Get a specific access list.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
      summary: Get Access List (v2.1)
      tags:
      - Routing
    put:
      description: Updates the access list.
      operationId: put-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the access list.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListV2N1'
        description: Details of the access list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ACCESS_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Access List (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_routemaps:
    get:
      description: List all the route maps for an element.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Route Map for Element (v2.1)
      tags:
      - Routing
    post:
      description: Create a route map.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapV2N1'
        description: Details of the route map to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_SUPPORTED
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_ALLOWED_FOR_EMPTY_COMMUNITY
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Route Map (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_routemaps/query:
    post:
      description: Queries db for limit number of route maps that match query params.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_routemaps-query
      parameters:
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapQuery'
        description: Query details for route maps
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of route maps that match query params.
        (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/routing_routemaps/{config_id}:
    delete:
      description: Delete a route map.
      operationId: delete-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the route map.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ROUTE_MAP_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ROUTE_MAP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Route Map (v2.1)
      tags:
      - Routing
    get:
      description: Get a specific route map.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The BGP peer config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
          description: Successful Operation
      summary: Get Route Map (v2.1)
      tags:
      - Routing
    put:
      description: Update a route map.
      operationId: put-sdwan-v2.1-api-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the route map.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapV2N1'
        description: Details of the route map to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ROUTE_MAP
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_SUPPORTED
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_ALLOWED_FOR_EMPTY_COMMUNITY
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Route Map (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/staticroutes:
    get:
      description: List all the static routes.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StaticRouteV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Static Routes (v2.1)
      tags:
      - Routing
    post:
      description: Create a static route.
      operationId: post-sdwan-v2.1-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N1'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Static Route (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}:
    delete:
      description: Delete a static route.
      operationId: delete-sdwan-v2.1-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N1'
          description: Successful Operation
      summary: Delete Static Route (v2.1)
      tags:
      - Routing
    get:
      description: Get a specific static route.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N1'
          description: Successful Operation
      summary: Get Static Route (v2.1)
      tags:
      - Routing
    put:
      description: Update a static route.
      operationId: put-sdwan-v2.1-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N1'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Static Route (v2.1)
      tags:
      - Routing
  /sdwan/v2.1/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}/status:
    get:
      description: Get the status of the static route.
      operationId: get-sdwan-v2.1-api-sites-site_id-elements-element_id-staticroutes-static_route_id-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteStatus'
          description: Successful Operation
      summary: Get Static Route Status (v2.1)
      tags:
      - Routing
  /sdwan/v2.2/api/bgppeers/query:
    post:
      description: Queries the DB for limit number of BGP peers that match the query
        parameters.
      operationId: post-sdwan-v2.2-api-bgppeers-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for BGP Peers (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/bgpconfigs:
    get:
      description: List all the BGP configurations from NB.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-bgpconfigs
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPGlobalConfigV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Configs from NB (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/bgpconfigs/{bgp_config_id}:
    get:
      description: List a specific BGP configuration from NB.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N2'
          description: Successful Operation
      summary: Get BGP Config from NB (v2.2)
      tags:
      - Routing
    put:
      description: Update the BGP configuration.
      operationId: put-sdwan-v2.2-api-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP config.
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N2'
        description: Details of the bgp config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_CONFIG_INVALID_MD5_UNSET_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Config (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/bgppeers:
    get:
      description: List all the BGP peer configurations from NB.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerConfigV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get BGP Peer Configs from NB (v2.2)
      tags:
      - Routing
    post:
      description: Create a BGP peer configuration.
      operationId: post-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N2'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: PEER_TYPE_NOT_SUPPORTED
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create BGP Peer Config (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/bgppeers/query:
    post:
      description: Queries the DB for limit number of BGP peers that match query parameters.
      operationId: post-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers-query
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for BGP Peers (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}:
    delete:
      description: Delete the BGP peer configuration.
      operationId: delete-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N2'
          description: Successful Operation
      summary: Delete BGP Peer Config (v2.2)
      tags:
      - Routing
    get:
      description: Get the BGP peer configuration.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N2'
          description: Successful Operation
      summary: Get BGP Peer Config (v2.2)
      tags:
      - Routing
    put:
      description: Update the BGP peer configuration.
      operationId: put-sdwan-v2.2-api-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the BGP peer.
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N2'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_CONFIG_INVALID_MD5_UNSET_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update BGP Peer Config (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/staticroutes:
    get:
      description: List all the static routes.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StaticRouteV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Static Routes (v2.2)
      tags:
      - Routing
    post:
      description: Create a static route.
      operationId: post-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N2'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX
                  - code: STATICROUTE_CONFIG_ADDRESS_FAMILY_IPV6_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX_IPV6
                  - code: STATICROUTE_CONFIG_NEXTHOPIP_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_DESTINATIONPREFIX_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIP
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_SELF
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_APPLICABLE
                  - code: STATICROUTE_CONFIG_REQUIRED_INTERFACE_FOR_LINK_LOCAL_IPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Static Route (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}:
    delete:
      description: Delete a static route.
      operationId: delete-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Static Route (v2.2)
      tags:
      - Routing
    get:
      description: Get a specific static route.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
      summary: Get Static Route (v2.2)
      tags:
      - Routing
    put:
      description: Update a static route.
      operationId: put-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N2'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX
                  - code: STATICROUTE_CONFIG_ADDRESS_FAMILY_IPV6_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX_IPV6
                  - code: STATICROUTE_CONFIG_NEXTHOPIP_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_DESTINATIONPREFIX_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIP
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_SELF
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_APPLICABLE
                  - code: STATICROUTE_CONFIG_REQUIRED_INTERFACE_FOR_LINK_LOCAL_IPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Static Route (v2.2)
      tags:
      - Routing
  /sdwan/v2.2/api/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}/status:
    get:
      description: Get the status of the static route.
      operationId: get-sdwan-v2.2-api-sites-site_id-elements-element_id-staticroutes-static_route_id-status
      parameters:
      - description: The ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The ID of the static route.
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteStatusV2N2'
          description: Successful Operation
      summary: Get Static Route Status (v2.2)
      tags:
      - Routing
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- name: Routing
