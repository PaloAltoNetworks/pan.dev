components:
  schemas:
    Address:
      properties:
        city:
          description: 'The name of the city. Max size = 100.

            '
          type: string
        country:
          description: 'The name of the country. Max size = 100.

            '
          type: string
        post_code:
          description: 'The postal code. Max size = 100.

            '
          type: string
        state:
          description: 'The name of the state. Max size = 100.

            '
          type: string
        street:
          description: 'The name of the street. Max size = 100.

            '
          type: string
        street2:
          description: 'The name of the street. Max size = 100.

            '
          type: string
    Aggregate:
      properties:
        field:
          description: Field
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    HttpProbe:
      properties:
        failure_count:
          description: 'The HTTP failure count interval. Must be between 3 to 300
            seconds.

            '
          type: integer
        http_status_codes:
          description: 'The HTTP status codes. Maximum 8 status codes can be specified.

            '
          items:
            description: Http Status Codes
            type: integer
          type: array
        interval:
          description: 'The HTTP probe interval. Must be between 3 to 3600 seconds.

            '
          type: integer
        url:
          description: 'The HTTP probe URL. Max size = 1024.

            '
          type: string
      required:
      - failure_count
      - interval
      - url
    IcmpPingProbe:
      properties:
        failure_count:
          description: 'The ICMP failure count interval. Must be between 3 to 300
            seconds.

            '
          type: integer
        interval:
          description: 'The ICMP probe interval. Must be between 1 to 30 seconds.

            '
          type: integer
        ip_addresses:
          description: 'The ICMP probe addresses. Maximum 8 addresses can be specified.

            '
          items:
            description: Ip Addresses
            type: string
          type: array
      required:
      - failure_count
      - interval
      - ip_addresses
    ListQueryResponse:
      properties:
        count:
          description: 'The count of the query list.

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number.

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs.

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size = 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query.

            '
          type: object
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        id:
          description: 'The ID.

            '
          type: string
      type: object
    Location:
      properties:
        description:
          description: 'The decsription of the location.

            '
        latitude:
          description: 'The latitude of the location. Max range = 90.

            '
          format: float
          type: number
        longitude:
          description: 'The longitude of the location. Max range = 180.

            '
          format: float
          type: number
    SEPLivelinessProbe:
      properties:
        http:
          description: 'The values for probing interval, failure count, HTTP status
            codes, and URL.

            '
          items:
            $ref: '#/components/schemas/HttpProbe'
          type: array
        icmp_ping:
          description: 'The values for probing interval, failure count, and IP address.

            '
          items:
            $ref: '#/components/schemas/IcmpPingProbe'
          type: array
    SEPLivelinessProbeV2N2:
      properties:
        http:
          description: 'Http: Valid '
          items:
            $ref: '#/components/schemas/HttpProbe'
          type: array
        icmp_ping:
          description: 'Icmp Ping: Valid '
          items:
            $ref: '#/components/schemas/IcmpPingProbe'
          type: array
    SaseServiceEndpointProperties:
      properties:
        allocated_bandwidth_mbps:
          description: 'The allocated bandwidth for the sase service endpoint.

            '
          type: integer
        allocated_sc_count:
          description: 'The allocated sc count for the sase service endpoint.

            '
          format: int32
          type: integer
        pa_compute_region_oid:
          description: 'The PA compute region.

            '
          type: string
        total_sc_bandwidth_mbps:
          description: 'The total sc bandwidth for the sase service endpoint.

            '
          type: integer
    SaseServiceLabelProperties:
      properties:
        active_sase_label:
          description: 'The active sase service label.

            '
          type: boolean
    ServiceBinding:
      properties:
        service_endpoint_ids:
          description: 'The service endpoint IDs.

            '
          items:
            description: Service Endpoint Ids
            type: string
          type: array
        service_label_id:
          description: 'The service label ID.

            '
          type: string
    ServiceBindingMap:
      properties:
        description:
          description: 'The description of the service binding map. Max size = 256.

            '
        id:
          description: "The ID of the service binding map.\t\n"
          type: string
        name:
          description: 'The name of the service binding map. Max size = 128.

            '
          type: string
        service_bindings:
          description: 'The service binding endpoint IDs and labels.

            '
          items:
            $ref: '#/components/schemas/ServiceBinding'
          type: array
        tags:
          description: 'A information field that can be added to identify the service
            binding map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - service_bindings
      - name
    ServiceBindingMapQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of service binding maps that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of service binding maps deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the service binding maps for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the service binding maps by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    ServiceBindingMapScreen:
      properties:
        description:
          description: 'The description of the service binding map. Max size = 256.

            '
        id:
          description: "The ID of the service binding map.\t\n"
          type: string
        name:
          description: 'The name of the service binding map. Max size = 128.

            '
          type: string
        service_bindings:
          description: 'The The service binding endpoint IDs and labels.

            '
          items:
            $ref: '#/components/schemas/ServiceBinding'
          type: array
        tags:
          description: 'A information field that can be added to identify the service
            binding map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - service_bindings
      - name
    ServiceBindingMapScreenV2N1:
      properties:
        description:
          description: 'The description of the service binding map. Max size = 256.

            '
        id:
          description: "The ID of the service binding map.\t\n"
          type: string
        is_default:
          description: 'The default map.

            '
          type: boolean
        name:
          description: 'The name of the service binding map. Max size = 128.

            '
          type: string
        service_bindings:
          description: 'The service binding endpoint IDs and labels.

            '
          items:
            $ref: '#/components/schemas/ServiceBinding'
          type: array
        tags:
          description: 'A information field that can be added to identify the service
            binding map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - service_bindings
      - name
    ServiceBindingMapV2N1:
      properties:
        description:
          description: 'The description of the service binding map. Max size = 256.

            '
        id:
          description: "The ID of the service binding map.\t\n"
          type: string
        is_default:
          description: 'The default map.

            '
          type: boolean
        name:
          description: 'The name of the service binding map. Max size = 128.

            '
          type: string
        service_bindings:
          description: 'The service binding endpoint IDs and labels.

            '
          items:
            $ref: '#/components/schemas/ServiceBinding'
          type: array
        tags:
          description: 'A information field that can be added to identify the service
            binding map. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - service_bindings
      - name
    ServiceEndpoint:
      properties:
        admin_up:
          description: 'All data center sites are automatically added when Admin Up
            is selected, which means that it can accept traffic per network policy.

            '
          type: boolean
        description:
          description: 'The description of the service endpoint. Max size = 256.

            '
        id:
          description: 'The ID of the service endpoint.

            '
          type: string
        name:
          description: 'The name of the service endpoint. Max size = 128.

            '
          type: string
        site_id:
          description: "The site ID.    \n"
          type: string
        tags:
          description: 'A information field that can be added to identify the service
            endpoint. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The network service type.

            '
          enum:
          - CG_TRANSIT
          - NON_CG_TRANSIT
          - SASE
          type: string
      required:
      - admin_up
      - type
      - name
    ServiceEndpointQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of service endpoint that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of service endpoint deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the service endpoint for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the service endpoint by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    ServiceEndpointQueryFilter:
      properties:
        admin_up:
          description: 'All data center sites are automatically added when Admin Up
            is selected, which means that it can accept traffic per network policy.

            '
          type: boolean
        description:
          description: 'The description of the service endpoint. Max size = 256.

            '
        id:
          description: "The ID of the service endpoint.\t\n"
          type: string
        name:
          description: 'The name of the service endpoint. Max size = 128.

            '
          type: string
        site_id:
          description: Site Id
          type: string
        tags:
          description: 'A information field that can be added to identify the service
            endpoint. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The network service type.

            '
          enum:
          - CG_TRANSIT
          - NON_CG_TRANSIT
          - SASE
          type: string
      required:
      - admin_up
      - type
      - name
    ServiceEndpointScreen:
      properties:
        admin_up:
          description: 'All data center sites are automatically added when Admin Up
            is selected, which means that it can accept traffic per network policy.

            '
          type: boolean
        description:
          description: 'The description of the service endpoint. Max size = 256.

            '
        id:
          description: 'The ID of the service endpoint.

            '
          type: string
        name:
          description: 'The name of the service endpoint. Max size = 128.

            '
          type: string
        site_id:
          description: "The site ID.    \n"
          type: string
        tags:
          description: 'A information field that can be added to identify the service
            endpoint. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The network service type.

            '
          enum:
          - CG_TRANSIT
          - NON_CG_TRANSIT
          - SASE
          type: string
      required:
      - admin_up
      - type
      - name
    ServiceEndpointV2N1:
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: 'The address of the endpoint location.

            '
        admin_up:
          description: 'All data center sites are automatically added when Admin Up
            is selected, which means that it can accept traffic per network policy.
            If not selected, the endpoint is not used in path selection for forwarding
            traffic.

            '
          type: boolean
        allow_enterprise_traffic:
          description: 'Explicitly allow enterprise traffic to transit through the
            cloud security service.

            '
          type: boolean
        description:
          description: 'The description of the service endpoint. Max size = 256.

            '
        id:
          description: 'The ID of the service endpoint.

            '
          type: string
        liveliness_probe:
          $ref: '#/components/schemas/SEPLivelinessProbe'
          description: 'The information on liveliness probing.

            '
        location:
          $ref: '#/components/schemas/Location'
          description: 'The service endpoint label representing a specific location.

            '
        name:
          description: 'The name of the service endpoint. Max size = 128.

            '
          type: string
        service_link_peers:
          $ref: '#/components/schemas/ServiceLinkPeers'
          description: 'The value of the hostname and IP addresses.

            '
        site_id:
          description: "The site ID.    \n"
          type: string
        tags:
          description: 'A information field that can be added to identify the service
            endpoint. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The network service type.

            '
          enum:
          - CG_TRANSIT
          - NON_CG_TRANSIT
          - SASE
          type: string
      required:
      - admin_up
      - type
      - name
    ServiceEndpointV2N2:
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: 'The address of the endpoint location.

            '
        admin_up:
          description: 'All data center sites are automatically added when Admin Up
            is selected, which means that it can accept traffic per network policy.
            If not selected, the endpoint is not used in path selection for forwarding
            traffic.

            '
          type: boolean
        allow_enterprise_traffic:
          description: 'Explicitly allow enterprise traffic to transit through the
            cloud security service.

            '
          type: boolean
        description:
          description: 'The description of the service endpoint. Max size = 256.

            '
        id:
          description: 'The ID of the service endpoint.

            '
          type: string
        liveliness_probe:
          $ref: '#/components/schemas/SEPLivelinessProbeV2N2'
          description: 'The information on liveliness probing.

            '
        location:
          $ref: '#/components/schemas/Location'
          description: 'The service endpoint label representing a specific location.

            '
        name:
          description: 'The name of the service endpoint. Max size = 128.

            '
          type: string
        service_link_peers:
          $ref: '#/components/schemas/ServiceLinkPeers'
          description: 'The value of the hostname and IP addresses.

            '
        site_id:
          description: "The site ID.    \n"
          type: string
        tags:
          description: 'A information field that can be added to identify the service
            endpoint. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The network service type.

            '
          enum:
          - CG_TRANSIT
          - NON_CG_TRANSIT
          - SASE
          type: string
      required:
      - admin_up
      - type
      - name
    ServiceEndpointV2N3:
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: 'The address of the endpoint location.

            '
        admin_up:
          description: 'All data center sites are automatically added when Admin Up
            is selected, which means that it can accept traffic per network policy.
            If not selected, the endpoint is not used in path selection for forwarding
            traffic.

            '
          type: boolean
        allow_enterprise_traffic:
          description: 'Explicitly allow enterprise traffic to transit through the
            cloud security service.

            '
          type: boolean
        description:
          description: 'The description of the service endpoint. Max size = 256.

            '
        id:
          description: 'The ID of the service endpoint.

            '
          type: string
        liveliness_probe:
          $ref: '#/components/schemas/SEPLivelinessProbeV2N2'
          description: 'The information on liveliness probing.

            '
        location:
          $ref: '#/components/schemas/Location'
          description: 'The service endpoint label representing a specific location.

            '
        name:
          description: 'The name of the service endpoint. Max size = 128.

            '
          type: string
        sase_properties:
          $ref: '#/components/schemas/SaseServiceEndpointProperties'
          description: 'The sase service endpoint properties.

            '
        service_link_peers:
          $ref: '#/components/schemas/ServiceLinkPeers'
          description: 'The value of the hostname and IP addresses.

            '
        site_id:
          description: "The site ID.    \n"
          type: string
        tags:
          description: 'A information field that can be added to identify the service
            endpoint. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The network service type.

            '
          enum:
          - CG_TRANSIT
          - NON_CG_TRANSIT
          - SASE
          type: string
      required:
      - admin_up
      - type
      - name
    ServiceLabel:
      description:
        description: 'The description of the service label. Max size = 256.

          '
      properties:
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_SIZE_EXCEEDED:
            Description size exceeded., min = 0) Valid '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = SERVICELABEL_NAME_REQD: Service label
            name required.) Size(max = 128, error = SERVICELABEL_NAME_EXCEEDS_LIMIT:
            Service label name exceeds limit., min = 0) Valid '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'Type: ValidateEnum(enumClass = classOf[NetworkServiceType],
            message = Invalid enum string., nullAllowed = false) '
          enum:
          - CG_TRANSIT
          - NON_CG_TRANSIT
          - SASE
          type: string
      required:
      - type
      - name
    ServiceLabelQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of service labels that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of service labels deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the service labels for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the service label by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    ServiceLabelQueryFilter:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of service labels that match the query
            parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of service labels deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the service labels for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the service label by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    ServiceLabelV2N1:
      properties:
        description:
          description: 'The description of the service label. Max size = 256.

            '
        id:
          description: 'The ID of the service label.

            '
          type: string
        name:
          description: 'The name of the service label. Max size = 128.

            '
          type: string
        sase_properties:
          $ref: '#/components/schemas/SaseServiceLabelProperties'
          description: 'The sase service label properties.

            '
        tags:
          description: 'A information field that can be added to identify the service
            label. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'The network service type.

            '
          enum:
          - CG_TRANSIT
          - NON_CG_TRANSIT
          - SASE
          type: string
      required:
      - type
      - name
    ServiceLinkPeers:
      properties:
        hostnames:
          description: 'The hostnames of the service link peers. Max size = 128.

            '
          items:
            description: Hostnames
            type: string
          type: array
        ip_addresses:
          description: 'The addresses of the service link peers. Max size = 128.

            '
          items:
            description: Ip Addresses
            type: string
          type: array
info:
  contact: {}
  description: List of APIs used to manage the DC groups, service endpoints and service
    mappings. It is used to classify sites (Data Centers) into DC groups and external
    service groups.
  title: Service & DC Groups
  version: Latest
openapi: 3.0.0
paths:
  /sdwan/v2.0/api/servicebindingmaps:
    get:
      description: List all the service binding map lists.
      operationId: get-sdwan-v2.0-api-servicebindingmaps
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceBindingMap'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Binding Map List (v2.0)
      tags:
      - Service & DC Groups
    post:
      description: Create a new service binding map.
      operationId: post-sdwan-v2.0-api-servicebindingmaps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBindingMapScreen'
        description: Details of the service binding maps to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEBINDINGMAP_CONFIG_INVALID_SERVICEENDPOINT
                  - code: SERVICEBINDINGMAP_NAME_REQD
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: SERVICEBINDING_NAME_EXCEEDS_LIMIT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: SERVICEBINDINGMAP_CONFIG_INVALID_SERVICELABEL
                  - code: SERVICEBINDINGMAP_CONFIG_SASELABEL_TOO_MANY_SERVICEENDPOINTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Service Binding Map (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.0/api/servicebindingmaps/query:
    post:
      description: Query the  DB for limit number of service binding maps that match
        query parameters.
      operationId: post-sdwan-v2.0-api-servicebindingmaps-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBindingMapQuery'
        description: Query details for service bindings
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceBindingMap'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Service Binding Maps (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.0/api/servicebindingmaps/{map_id}:
    delete:
      description: Delete a service binding map.
      operationId: delete-sdwan-v2.0-api-servicebindingmaps-map_id
      parameters:
      - description: The ID of the service binding map.
        in: path
        name: map_id
        required: true
        schema:
          description: Map Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Service Binding Map (v2.0)
      tags:
      - Service & DC Groups
    get:
      description: Get a service binding map.
      operationId: get-sdwan-v2.0-api-servicebindingmaps-map_id
      parameters:
      - description: The ID of the service binding map.
        in: path
        name: map_id
        required: true
        schema:
          description: Map Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEBINDINGMAP_DELETE_NOTALLOWED_SITE_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Binding Map (v2.0)
      tags:
      - Service & DC Groups
    put:
      description: Update a service binding map.
      operationId: put-sdwan-v2.0-api-servicebindingmaps-map_id
      parameters:
      - description: The ID of the service binding map.
        in: path
        name: map_id
        required: true
        schema:
          description: Map Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBindingMapScreen'
        description: Details of the service binding maps to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEBINDINGMAP_NAME_REQD
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: SERVICEBINDING_NAME_EXCEEDS_LIMIT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: SERVICEBINDINGMAP_CONFIG_INVALID_SERVICELABEL
                  - code: SERVICEBINDINGMAP_CONFIG_INVALID_SERVICEENDPOINT
                  - code: SERVICEBINDINGMAP_CONFIG_SASELABEL_TOO_MANY_SERVICEENDPOINTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Service Binding Map (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.0/api/serviceendpoints:
    get:
      description: List all the servie endpoints.
      operationId: get-sdwan-v2.0-api-serviceendpoints
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceEndpoint'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Endpoint List (v2.0)
      tags:
      - Service & DC Groups
    post:
      description: Create a new service endpoint.
      operationId: post-sdwan-v2.0-api-serviceendpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointScreen'
        description: Details of the service endpoint to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpoint'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEENDPOINT_NAME_REQD
                  - code: SERVICEENDPOINT_NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: ADMIN_UP_REQD
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: UNKNOWN_SITE
                  - code: SERVICEENDPOINT_EXIST_WITH_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Service Endpoint List (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.0/api/serviceendpoints/query:
    post:
      description: Query the DB for limit number of service bindings that match the
        query parameters.
      operationId: post-sdwan-v2.0-api-serviceendpoints-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointQuery'
        description: Query details for service endpoints
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceEndpointQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Service Bindings (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.0/api/serviceendpoints/{service_endpoint_id}:
    delete:
      description: Delete a service endpoint.
      operationId: delete-sdwan-v2.0-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpoint'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEENDPOINT_DELETE_NOTALLOWED_SERVICEBINDING_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Service Endpoint (v2.0)
      tags:
      - Service & DC Groups
    get:
      description: List a service endpoint.
      operationId: get-sdwan-v2.0-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpoint'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Endpoint (v2.0)
      tags:
      - Service & DC Groups
    put:
      description: Update a service endpoint.
      operationId: put-sdwan-v2.0-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointScreen'
        description: Details of the service endpoint to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpoint'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEENDPOINT_NAME_REQD
                  - code: SERVICEENDPOINT_NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: ADMIN_UP_REQD
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: UNKNOWN_SITE
                  - code: SERVICEENDPOINT_CONFIG_UPDATE_NOTALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Service Endpoint (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.0/api/servicelabels:
    get:
      description: List all the service labels.
      operationId: get-sdwan-v2.0-api-servicelabels
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceLabel'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Label List (v2.0)
      tags:
      - Service & DC Groups
    post:
      description: Create a new service label.
      operationId: post-sdwan-v2.0-api-servicelabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLabel'
        description: Details of the Service Label to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLabel'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SERVICELABEL_NAME_EXCEEDS_LIMIT
                  - code: SERVICELABEL_NAME_REQD
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: SERVICELABEL_CREATE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Service Label (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.0/api/servicelabels/query:
    post:
      description: Query the DB for limit number of service label that match the query
        parameters.
      operationId: post-sdwan-v2.0-api-servicelabels-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLabelQuery'
        description: Query details for service labels
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceLabelQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Service Label (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.0/api/servicelabels/{service_label_id}:
    delete:
      description: Delete a service label.
      operationId: delete-sdwan-v2.0-api-servicelabels-service_label_id
      parameters:
      - description: The ID of the service label.
        in: path
        name: service_label_id
        required: true
        schema:
          description: Service Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLabel'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SERVICELABEL_DELETE_NOTALLOWED_SERVICEBINDING_EXISTS
                  - code: SERVICELABEL_DELETE_NOTALLOWED_POLICYRULE_EXISTS
                  - code: SERVICELABEL_USED_IN_NETWORK_POLICYRULE
                  - code: SERVICELABEL_DELETE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Service Label (v2.0)
      tags:
      - Service & DC Groups
    get:
      description: List a service label.
      operationId: get-sdwan-v2.0-api-servicelabels-service_label_id
      parameters:
      - description: The ID of the service label.
        in: path
        name: service_label_id
        required: true
        schema:
          description: Service Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLabel'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Label (v2.0)
      tags:
      - Service & DC Groups
    put:
      description: Update a service label.
      operationId: put-sdwan-v2.0-api-servicelabels-service_label_id
      parameters:
      - description: The ID of the service label.
        in: path
        name: service_label_id
        required: true
        schema:
          description: Service Label Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLabel'
        description: Details of the Service Label to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLabel'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICELABEL_NAME_EXCEEDS_LIMIT
                  - code: SERVICELABEL_NAME_REQD
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: SERVICELABEL_CONFIG_UPDATE_NOTALLOWED
                  - code: SERVICELABEL_UPDATE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Service Label (v2.0)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/servicebindingmaps:
    get:
      description: List all the service binding map lists.
      operationId: get-sdwan-v2.1-api-servicebindingmaps
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceBindingMapV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Binding Map List (v2.1)
      tags:
      - Service & DC Groups
    post:
      description: Create a new service binding map.
      operationId: post-sdwan-v2.1-api-servicebindingmaps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBindingMapScreenV2N1'
        description: Details of the service binding maps to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingMapV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEBINDINGMAP_CONFIG_INVALID_SERVICEENDPOINT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: SERVICEBINDINGMAP_CONFIG_INVALID_SERVICELABEL
                  - code: SERVICEBINDINGMAP_CONFIG_SASELABEL_TOO_MANY_SERVICEENDPOINTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Service Binding Map (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/servicebindingmaps/query:
    post:
      description: Query the  DB for limit number of service binding maps that match
        query parameters.
      operationId: post-sdwan-v2.1-api-servicebindingmaps-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBindingMapQuery'
        description: Query details for Service Binding Map
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceBindingMapV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Service Binding Maps (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/servicebindingmaps/{map_id}:
    delete:
      description: Delete a service binding map.
      operationId: delete-sdwan-v2.1-api-servicebindingmaps-map_id
      parameters:
      - description: The ID of the service binding map.
        in: path
        name: map_id
        required: true
        schema:
          description: Map Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingMapV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEBINDINGMAP_DELETE_NOTALLOWED_SITE_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Service Binding Map (v2.1)
      tags:
      - Service & DC Groups
    get:
      description: Get a service binding map.
      operationId: get-sdwan-v2.1-api-servicebindingmaps-map_id
      parameters:
      - description: The ID of the service binding map.
        in: path
        name: map_id
        required: true
        schema:
          description: Map Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingMapV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Binding Map (v2.1)
      tags:
      - Service & DC Groups
    put:
      description: Update a service binding map.
      operationId: put-sdwan-v2.1-api-servicebindingmaps-map_id
      parameters:
      - description: The ID of the service binding map.
        in: path
        name: map_id
        required: true
        schema:
          description: Map Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBindingMapScreenV2N1'
        description: Details of the service binding maps to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingMapV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEBINDINGMAP_NAME_REQD
                  - code: SERVICEBINDING_NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: SERVICEBINDINGMAP_CONFIG_SASELABEL_TOO_MANY_SERVICEENDPOINTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Service Binding Map (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/serviceendpoints:
    get:
      description: List all the servie endpoints.
      operationId: get-sdwan-v2.1-api-serviceendpoints
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceEndpointV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Endpoint List (v2.1)
      tags:
      - Service & DC Groups
    post:
      description: Create a new service endpoint.
      operationId: post-sdwan-v2.1-api-serviceendpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointV2N1'
        description: Service Endpoint
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: UNKNOWN_SITE
                  - code: SERVICEENDPOINT_EXIST_WITH_SITE
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Service Endpoint List (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/serviceendpoints/query:
    post:
      description: Query the DB for limit number of service bindings that match the
        query parameters.
      operationId: post-sdwan-v2.1-api-serviceendpoints-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointQuery'
        description: Query details for Priority Policy set stacks
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceEndpointQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Service Bindings (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/serviceendpoints/{service_endpoint_id}:
    delete:
      description: Delete a service endpoint.
      operationId: delete-sdwan-v2.1-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEENDPOINT_IS_IN_USE
                  - code: SERVICEENDPOINT_DELETE_NOTALLOWED_SERVICEBINDING_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Service Endpoint (v2.1)
      tags:
      - Service & DC Groups
    get:
      description: List a service endpoint.
      operationId: get-sdwan-v2.1-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Endpoint (v2.1)
      tags:
      - Service & DC Groups
    put:
      description: Update a service endpoint.
      operationId: put-sdwan-v2.1-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointV2N1'
        description: Service Endpoint
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: UNKNOWN_SITE
                  - code: SERVICEENDPOINT_CONFIG_UPDATE_NOTALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Service Endpoint (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/servicelabels:
    get:
      description: List all the service labels.
      operationId: get-sdwan-v2.1-api-servicelabels
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceLabelV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Label List (v2.1)
      tags:
      - Service & DC Groups
    post:
      description: Create a new service label.
      operationId: post-sdwan-v2.1-api-servicelabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLabelV2N1'
        description: Details of the Service Label to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLabelV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SERVICELABEL_NAME_EXCEEDS_LIMIT
                  - code: SERVICELABEL_NAME_REQD
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: SERVICELABEL_CREATE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Service Label (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/servicelabels/query:
    post:
      description: Query the DB for limit number of service label that match the query
        parameters.
      operationId: post-sdwan-v2.1-api-servicelabels-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLabelQuery'
        description: Query details for service labels
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceLabelQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Service Label (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.1/api/servicelabels/{service_label_id}:
    delete:
      description: Delete a service label.
      operationId: delete-sdwan-v2.1-api-servicelabels-service_label_id
      parameters:
      - description: The ID of the service label.
        in: path
        name: service_label_id
        required: true
        schema:
          description: Service Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLabelV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SERVICELABEL_DELETE_NOTALLOWED_SERVICEBINDING_EXISTS
                  - code: SERVICELABEL_DELETE_NOTALLOWED_POLICYRULE_EXISTS
                  - code: SERVICELABEL_USED_IN_NETWORK_POLICYRULE
                  - code: SERVICELABEL_DELETE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Service Label (v2.1)
      tags:
      - Service & DC Groups
    get:
      description: List a service label.
      operationId: get-sdwan-v2.1-api-servicelabels-service_label_id
      parameters:
      - description: The ID of the service label.
        in: path
        name: service_label_id
        required: true
        schema:
          description: Service Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLabelV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Label (v2.1)
      tags:
      - Service & DC Groups
    put:
      description: Update a service label.
      operationId: put-sdwan-v2.1-api-servicelabels-service_label_id
      parameters:
      - description: The ID of the service label.
        in: path
        name: service_label_id
        required: true
        schema:
          description: Service Label Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLabelV2N1'
        description: Details of the Service Label to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLabelV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICELABEL_NAME_EXCEEDS_LIMIT
                  - code: SERVICELABEL_NAME_REQD
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: SERVICELABEL_CONFIG_UPDATE_NOTALLOWED
                  - code: SERVICELABEL_UPDATE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Service Label (v2.1)
      tags:
      - Service & DC Groups
  /sdwan/v2.2/api/serviceendpoints:
    get:
      description: List all the servie endpoints.
      operationId: get-sdwan-v2.2-api-serviceendpoints
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceEndpointV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Endpoint List (v2.2)
      tags:
      - Service & DC Groups
    post:
      description: Create a new service endpoint.
      operationId: post-sdwan-v2.2-api-serviceendpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointV2N2'
        description: Service Endpoint
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: UNKNOWN_SITE
                  - code: SERVICEENDPOINT_EXIST_WITH_SITE
                  - code: SERVICEENDPOINT_NAME_REQD
                  - code: SERVICEENDPOINT_NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: ADMIN_UP_REQD
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Service Endpoint List (v2.2)
      tags:
      - Service & DC Groups
  /sdwan/v2.2/api/serviceendpoints/query:
    post:
      description: Query the DB for limit number of service bindings that match the
        query parameters.
      operationId: post-sdwan-v2.2-api-serviceendpoints-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointV2N2'
        description: Service Endpoint
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceEndpointV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Service Bindings (v2.2)
      tags:
      - Service & DC Groups
  /sdwan/v2.2/api/serviceendpoints/{service_endpoint_id}:
    delete:
      description: Delete a service endpoint.
      operationId: delete-sdwan-v2.2-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEENDPOINT_IS_IN_USE
                  - code: SERVICEENDPOINT_DELETE_NOTALLOWED_SERVICEBINDING_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Service Endpoint (v2.2)
      tags:
      - Service & DC Groups
    get:
      description: List a service endpoint.
      operationId: get-sdwan-v2.2-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Endpoint (v2.2)
      tags:
      - Service & DC Groups
    put:
      description: Update a service endpoint.
      operationId: put-sdwan-v2.2-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointV2N2'
        description: Service Endpoint
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: UNKNOWN_SITE
                  - code: SERVICEENDPOINT_CONFIG_UPDATE_NOTALLOWED
                  - code: SERVICEENDPOINT_NAME_REQD
                  - code: SERVICEENDPOINT_NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: ADMIN_UP_REQD
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Service Endpoint (v2.2)
      tags:
      - Service & DC Groups
  /sdwan/v2.3/api/serviceendpoints:
    get:
      description: List all the servie endpoints.
      operationId: get-sdwan-v2.3-api-serviceendpoints
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceEndpointV2N3'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Endpoint List (v2.3)
      tags:
      - Service & DC Groups
    post:
      description: Create a new service endpoint.
      operationId: post-sdwan-v2.3-api-serviceendpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointV2N3'
        description: Service Endpoint
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: UNKNOWN_SITE
                  - code: SERVICEENDPOINT_EXIST_WITH_SITE
                  - code: SERVICEENDPOINT_NAME_REQD
                  - code: SERVICEENDPOINT_NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: ADMIN_UP_REQD
                  - code: SERVICEENDPOINT_CREATE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Service Endpoint List (v2.3)
      tags:
      - Service & DC Groups
  /sdwan/v2.3/api/serviceendpoints/query:
    post:
      description: Query the DB for limit number of service bindings that match the
        query parameters.
      operationId: post-sdwan-v2.3-api-serviceendpoints-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointV2N3'
        description: Service Endpoint
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ServiceEndpointV2N3'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Service Bindings (v2.3)
      tags:
      - Service & DC Groups
  /sdwan/v2.3/api/serviceendpoints/{service_endpoint_id}:
    delete:
      description: Delete a service endpoint.
      operationId: delete-sdwan-v2.3-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
                  - code: SERVICEENDPOINT_IS_IN_USE
                  - code: SERVICEENDPOINT_DELETE_NOTALLOWED_SERVICEBINDING_EXISTS
                  - code: SERVICEENDPOINT_DELETE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Service Endpoint (v2.3)
      tags:
      - Service & DC Groups
    get:
      description: List a service endpoint.
      operationId: get-sdwan-v2.3-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Service Endpoint (v2.3)
      tags:
      - Service & DC Groups
    put:
      description: Update a service endpoint.
      operationId: put-sdwan-v2.3-api-serviceendpoints-service_endpoint_id
      parameters:
      - description: The ID of the service endpoint.
        in: path
        name: service_endpoint_id
        required: true
        schema:
          description: Service Endpoint Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointV2N3'
        description: Service Endpoint
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: UNKNOWN_SITE
                  - code: SERVICEENDPOINT_CONFIG_UPDATE_NOTALLOWED
                  - code: SERVICEENDPOINT_NAME_REQD
                  - code: SERVICEENDPOINT_NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_SIZE_EXCEEDED
                  - code: ADMIN_UP_REQD
                  - code: SERVICEENDPOINT_UPDATE_NOTALLOWED_SASE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Service Endpoint (v2.3)
      tags:
      - Service & DC Groups
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- name: Service & DC Groups
