components:
  schemas:
    Aggregate:
      properties:
        field:
          description: Field
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
    Alias:
      properties:
        mask:
          description: 'Mask: Range(max = 32L, error = ALIAS_CONFIG_INVALID_MASK:
            Invalid alias mask, allowed range is (0-32), min = 0L) '
          format: int32
          type: integer
        original_end_ip:
          description: 'Original End Ip: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = ALIAS_CONFIG_INVALID_ORIGINAL_END_IP: Invalid alias original
            end ip, type = IP) '
          type: string
        original_ip:
          description: 'Original Ip: IPAddress(allowEmpty = true, allowLinkLocal =
            false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = ALIAS_CONFIG_INVALID_ORIGINAL_IP: Invalid alias original
            ip, type = IP) '
          type: string
        original_start_ip:
          description: 'Original Start Ip: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = ALIAS_CONFIG_INVALID_ORIGINAL_START_IP: Invalid alias
            original start ip, type = IP) '
          type: string
        replace_ip:
          description: 'Replace Ip: NotEmpty(error = ALIAS_CONFIG_REPLACE_IP_ADDRESS_MISSING:
            Alias replace ip address missing) IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = ALIAS_CONFIG_INVALID_REPLACE_IP: Invalid alias replace
            ip address, type = IP) '
          type: string
      required:
      - replace_ip
    AuthoritativeConfig:
      properties:
        caa_records:
          description: 'Caa Records: Valid '
          items:
            $ref: '#/components/schemas/CaaRecord'
          type: array
        cname_records:
          description: 'Cname Records: Valid '
          items:
            $ref: '#/components/schemas/CnameRecords'
          type: array
        dns_resource_records:
          description: 'Dns Resource Records: Valid '
          items:
            $ref: '#/components/schemas/DnsResourceRecords'
          type: array
        host_records:
          description: 'Host Records: Valid '
          items:
            $ref: '#/components/schemas/HostRecord'
          type: array
        mx_host_records:
          description: 'Mx Host Records: Valid '
          items:
            $ref: '#/components/schemas/MxHostRecord'
          type: array
        naptr_records:
          description: 'Naptr Records: Valid '
          items:
            $ref: '#/components/schemas/NaptrRecords'
          type: array
        peers:
          description: 'Peers: ListIPAddress(bcast = DENY, listMaxSize = 0, message
            = INVALID_PEER_ADDRESS, required = false, type = IP) '
          items:
            description: Peers
            type: string
          type: array
        ptr_records:
          description: 'Ptr Records: Valid '
          items:
            $ref: '#/components/schemas/PtrRecords'
          type: array
        secondary_servers:
          description: 'Secondary Servers: UniqueHostNames(allowNull = true, max =
            2147483647, error = INVALID_SECONDARY_SERVER: Invalid secondary servers
            config, min = 0) '
          items:
            description: Secondary Servers
            type: string
          type: array
        servers:
          description: 'Servers: Valid '
          items:
            $ref: '#/components/schemas/Server'
          type: array
        soa:
          description: 'Soa: Valid '
          items:
            $ref: '#/components/schemas/SOA'
          type: array
        srv_hosts:
          description: 'Srv Hosts: Valid '
          items:
            $ref: '#/components/schemas/SrvHost'
          type: array
        synth_domains:
          description: 'Synth Domains: Valid '
          items:
            $ref: '#/components/schemas/SynthDomain'
          type: array
        ttl:
          description: 'Ttl: Range(max = 9223372036854775807L, error = INVALID_TTL_RANGE:
            Invalid ttl, must be positive value, min = 0L) '
          type: integer
        txt_records:
          description: 'Txt Records: Valid '
          items:
            $ref: '#/components/schemas/TxtRecord'
          type: array
        zones:
          description: 'Zones: Valid '
          items:
            $ref: '#/components/schemas/Zone'
          type: array
    CaaRecord:
      properties:
        flags:
          description: 'Flags: NotEmpty(error = CAARECORD_FLAG_MISSING: CAARecords
            flag is missing) Pattern(message = INVALID_CAARECORD_FLAGS, regexp = [A-Z0-9]{1}) '
          type: string
        name:
          description: 'Name: NotEmpty(error = CAARECORD_NAME_MISSING: CAARecords
            name is missing) Size(max = 128, error = VALUE_EXCEEDS_LIMIT: value length
            exceeds maximum limit, min = 0) '
          type: string
        tag:
          description: 'Tag: NotEmpty(error = CAARECORD_TAG_MISSING: CAARecords tag
            is missing) Pattern(message = INVALID_CAARECORD_TAG, regexp = ^[a-zA-Z0-9]+$)
            Size(max = 128, error = VALUE_EXCEEDS_LIMIT: value length exceeds maximum
            limit, min = 0) '
          type: string
        value:
          description: 'Value: NotEmpty(error = CAARECORD_VALUE_MISSING: CAARecords
            value is missing) Size(max = 256, error = VALUE_EXCEEDS_LIMIT: value length
            exceeds maximum limit, min = 0) '
          type: string
      required:
      - value
      - tag
      - flags
      - name
    CacheConfig:
      properties:
        cache_size:
          description: 'Cache Size: Range(max = 9223372036854775807L, error = INVALID_CACHE_SIZE_RANGE:
            Invalid cache size, must be positive value, min = 0L) '
          format: int32
          type: integer
        disable_negative_caching:
          description: Disable Negative Caching
          type: boolean
        max_cache_ttl:
          description: 'Max Cache Ttl: Range(max = 9223372036854775807L, error = INVALID_MAX_CACHE_TTL_RANGE:
            Invalid max cache ttl, must be positive value, min = 0L) '
          type: integer
        min_cache_ttl:
          description: 'Min Cache Ttl: Range(max = 9223372036854775807L, error = INVALID_MIN_CACHE_TTL_RANGE:
            Invalid min cache ttl, must be positive value, min = 0L) '
          format: int32
          type: integer
        negative_cache_ttl:
          description: 'Negative Cache Ttl: Range(max = 9223372036854775807L, error
            = INVALID_NEG_CACHE_TTL_RANGE: Invalid negative cache ttl, must be positive
            value, min = 0L) '
          type: integer
    ClientMac:
      properties:
        mac_encoding_format:
          description: 'Mac Encoding Format: ValidateEnum(enumClass = classOf[MacEncodingFormat],
            INVALID_MAC_ENCODING_FORMAT, nullAllowed = false) '
          enum:
          - base64
          - hexadecimal
          type: string
      required:
      - mac_encoding_format
    CnameRecords:
      properties:
        name:
          description: 'Name: NotEmpty(error = CNAMERECORD_NAME_MISSING: CnameRecords
            name list is missing) ListString(allowDuplicate = true, allowEmpty = false,
            allowNull = false, length = 0, listMaxSize = 0, error = CNAMERECORD_INVALID_NAME:
            Invalid CnameRecords name, noTrim = false, regex = , required = false) '
          items:
            description: Name
            type: string
          type: array
        target:
          description: 'Target: NotEmpty(error = CNAMERECORD_TARGET_MISSING: Invalid
            CnameRecords target) Size(max = 128, error = VALUE_EXCEEDS_LIMIT: value
            length exceeds maximum limit, min = 0) '
          type: string
        ttl:
          description: 'Ttl: Range(max = 9223372036854775807L, error = INVALID_TTL_RANGE:
            Invalid ttl, must be positive value, min = 0L) '
          type: integer
      required:
      - target
      - name
    CustomerPremisesEquipment:
      properties:
        identifier_text:
          description: 'Identifier Text: Pattern(error = INVALID_IDENTIFIER_VALUE:
            Invalid identifier, must be only alphabets value, regexp = ^[ a-zA-Z]*$)
            Size(max = 128, error = VALUE_EXCEEDS_LIMIT: value length exceeds maximum
            limit, min = 0) '
          type: string
        type:
          description: 'Type: ValidateEnum(enumClass = classOf[CustomerPremisesEquipmentType],
            error = INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE: Invalid customer premises
            equipment type. Allowed values text|element_id|element_name, nullAllowed
            = false) '
          enum:
          - text
          - element_id
          - element_name
          type: string
      required:
      - type
    DnsForwardConfig:
      properties:
        dns_servers:
          description: 'Dns Servers: Valid NotEmpty(error = DNS_SERVER_REQRD: dns_servers
            can not be empty) '
          items:
            $ref: '#/components/schemas/DnsServers'
          type: array
        max_source_port:
          description: 'Max Source Port: Range(max = 65535L, error = DNSSERVICE_CONFIG_INVALID_MAXSOURCEPORT_VALUE:
            Invalid max source port, min = 1L) '
          type: integer
        min_source_port:
          description: 'Min Source Port: Range(max = 65535L, error = DNSSERVICE_CONFIG_INVALID_MINSOURCEPORT_VALUE:
            Invalid min source port, min = 1L) '
          format: int32
          type: integer
        send_to_all_dns_servers:
          description: Send To All Dns Servers
          type: boolean
      required:
      - dns_servers
    DnsQueriesMetadata:
      properties:
        add_client_mac:
          $ref: '#/components/schemas/ClientMac'
          description: 'Add Client Mac: Valid '
        add_customer_premises_equipment:
          $ref: '#/components/schemas/CustomerPremisesEquipment'
          description: 'Add Customer Premises Equipment: Valid '
        add_subnets:
          description: 'Add Subnets: Valid '
          items:
            $ref: '#/components/schemas/Subnet'
          type: array
    DnsRebindConfig:
      properties:
        enable_localhost_rebind:
          description: Enable Localhost Rebind
          type: boolean
        rebind_domains:
          description: 'Rebind Domains: UniqueHostNames(allowNull = true, max = 2147483647,
            error = INVALID_DNSREBIND_REBIND_DOMAINS_LIST_CONFIG: Invalid dnsrebind
            rebind domains list, min = 0) '
          items:
            description: Rebind Domains
            type: string
          type: array
        stop_dns_rebind_privateip:
          description: Stop Dns Rebind Privateip
          type: boolean
    DnsResourceRecords:
      properties:
        hex_data:
          description: 'Hex Data: Pattern(message = INVALID_DNSRESOURCERECORD_HEX_DATA,
            regexp = [0-9a-fA-F :]+) Size(max = 128, error = VALUE_EXCEEDS_LIMIT:
            value length exceeds maximum limit, min = 0) '
          type: string
        name:
          description: 'Name: NotEmpty(error = DNSRESOURCERECORD_NAME_MISSING: DnsResourceRecords
            name is missing) Size(max = 128, error = VALUE_EXCEEDS_LIMIT: value length
            exceeds maximum limit, min = 0) '
          type: string
        rr_number:
          description: 'Rr Number: NotNull(error = DNSRESOURCERECORD_RRNUMBER_MISSING:
            DnsResourceRecords rr_number is missing) '
          type: integer
      required:
      - rr_number
      - name
    DnsResponseOverrides:
      properties:
        aliases:
          description: 'Aliases: Valid '
          items:
            $ref: '#/components/schemas/Alias'
          type: array
        bogus_nx_domains:
          description: 'Bogus Nx Domains: ListIPAddress(bcast = DENY, listMaxSize
            = 0, error = INVALID_BOGUS_NX_DOMAINS: Invalid bogus nx domains, required
            = false, type = IP) '
          items:
            description: Bogus Nx Domains
            type: string
          type: array
        disable_private_ip_lookups:
          description: Disable Private Ip Lookups
          type: boolean
        ignore_ip_addresses:
          description: 'Ignore Ip Addresses: ListIPAddress(bcast = DENY, listMaxSize
            = 0, error = INVALID_IGNORE_IP_ADDRESS: Invalid ignore ip addresses, required
            = false, type = IP) '
          items:
            description: Ignore Ip Addresses
            type: string
          type: array
        local_ttl:
          description: 'Local Ttl: Range(max = 9223372036854775807L, error = INVALID_LOCAL_TTL_RANGE:
            Invalid local ttl, must be positive value, min = 0L) '
          type: integer
        max_ttl:
          description: 'Max Ttl: Range(max = 9223372036854775807L, error = INVALID_MAX_TTL_RANGE:
            Invalid max ttl, must be positive value, min = 0L) '
          type: integer
    DnsSecConfig:
      properties:
        disable_dnssec_timecheck:
          description: Disable Dnssec Timecheck
          type: boolean
        dns_check_unsigned:
          description: Dns Check Unsigned
          type: boolean
        enabled:
          description: Enabled
          type: boolean
        trust_anchors:
          description: 'Trust Anchors: Valid '
          items:
            $ref: '#/components/schemas/TrustAnchor'
          type: array
    DnsServers:
      properties:
        dnsserver_ip:
          description: 'Dnsserver Ip: NotEmpty(error = DNSSERVER_IP_CONFIG_MISSING:
            Dns Server ip is missing) IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = true, error = INVALID_DNSSERVER_IP_CONFIG_IP: Inavlid dnsserver ip,
            type = IP_DNS) '
          type: string
        dnsserver_port:
          description: 'Dnsserver Port: Range(max = 65535L, error = INVALID_DNSSERVER_PORT_RANGE_CONFIG:
            Dns Server port is not in the valid range ''1 - 65535'', min = 1L) '
          type: integer
        domain_names:
          description: 'Domain Names: UniqueHostNames(allowNull = true, max = 2147483647,
            message = DNSSERVER_DOMAIN_NAMES_CONFIG_INVALID_HOST, min = 0) '
          items:
            description: Domain Names
            type: string
          type: array
        forward_dnsservicerole_id:
          description: 'Forward Dnsservicerole Id: Size(max = 20, error = VALUE_EXCEEDS_LIMIT:
            value length exceeds maximum limit, min = 0) '
          type: string
        ip_prefix:
          description: 'Ip Prefix: IPAddress(allowEmpty = true, allowLinkLocal = false,
            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,
            error = INVALID_DNSSERVER_IP_PREFIX_CONFIG: Invalid DnsServer ip prefix.
            should be in format (x.x.x.x/[1-31]), type = PREFIXCIDR) '
          type: string
        source_port:
          description: 'Source Port: Range(max = 65535L, error = INVALID_DNSSERVER_SOURCE_PORT_RANGE_CONFIG:
            Dns Server source port is not in the valid range ''1 - 65535'', min =
            1L) '
          type: integer
      required:
      - dnsserver_ip
    DnsService:
      properties:
        cache_config:
          $ref: '#/components/schemas/ElemCacheConfig'
          description: 'Cache Config: Valid '
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        dns_queries_metadata:
          $ref: '#/components/schemas/ElemDnsQueriesMetadata'
          description: 'Dns Queries Metadata: Valid '
        dnsservice_profile_id:
          description: Dnsservice Profile Id
          type: string
        dnsservicerole_bindings:
          description: 'Dnsservicerole Bindings: Valid '
          items:
            $ref: '#/components/schemas/DnsServiceroleBindings'
          type: array
        domains_to_addresses:
          description: 'Domains To Addresses: Valid '
          items:
            $ref: '#/components/schemas/DomainsToAddress'
          type: array
        domains_to_interfaces:
          description: 'Domains To Interfaces: Valid '
          items:
            $ref: '#/components/schemas/DomainsToInterface'
          type: array
        element_id:
          description: Element Id
          type: string
        enabled:
          description: Enabled
          type: boolean
        id:
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        max_concurrent_dns_queries:
          description: 'Max Concurrent Dns Queries: Range(max = 9223372036854775807L,
            error = INVALID_MAX_CONCURRENT_DNS_QUERIES_RANGE: Max concurrent dns queries
            is not in valid range ''1 - 65535'', min = 1L) '
          format: int32
          type: integer
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        region:
          description: Region
          type: string
        site_id:
          description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)
            NotNull '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
        upperCaseName:
          description: 'UpperCaseName: JsonIgnore(value = true) '
          type: string
      required:
      - name
      - site_id
      - tenant_id
    DnsServiceProfile:
      properties:
        authoritative_config:
          $ref: '#/components/schemas/AuthoritativeConfig'
          description: 'Authoritative Config: Valid '
        cache_config:
          $ref: '#/components/schemas/CacheConfig'
          description: 'Cache Config: Valid '
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        dns_forward_config:
          $ref: '#/components/schemas/DnsForwardConfig'
          description: 'Dns Forward Config: Valid NotNull(error = DNS_FWD_CONFIG_REQRD:
            DNS forward config required) '
        dns_queries_metadata:
          $ref: '#/components/schemas/DnsQueriesMetadata'
          description: 'Dns Queries Metadata: Valid '
        dns_rebind_config:
          $ref: '#/components/schemas/DnsRebindConfig'
          description: 'Dns Rebind Config: Valid '
        dns_response_overrides:
          $ref: '#/components/schemas/DnsResponseOverrides'
          description: 'Dns Response Overrides: Valid '
        dnssec_config:
          $ref: '#/components/schemas/DnsSecConfig'
          description: 'Dnssec Config: Valid '
        domains_to_addresses:
          description: 'Domains To Addresses: Valid '
          items:
            $ref: '#/components/schemas/DomainsToAddress'
          type: array
        edns_packet_max:
          description: 'Edns Packet Max: Range(max = 9223372036854775807L, error =
            INVALID_EDNS_PACKET_MAX_RANGE: Invalid edns packet max, must be positive
            value, min = 0L) '
          format: int32
          type: integer
        enable_dns_loop_detection:
          description: Enable Dns Loop Detection
          type: boolean
        enable_dnssec_proxy:
          description: Enable Dnssec Proxy
          type: boolean
        enable_strict_domain_name:
          description: Enable Strict Domain Name
          type: boolean
        id:
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        listen_dnsservicerole_id:
          description: 'Listen Dnsservicerole Id: Size(max = 20, error = VALUE_EXCEEDS_LIMIT:
            value length exceeds maximum limit, min = 0) '
          type: string
        listen_port:
          description: 'Listen Port: Range(max = 65535L, error = INVALID_DNSSERVER_LISTEN_PORT_RANGE_CONFIG:
            Dns Server listen port is not in the valid range ''1 - 65535'', min =
            1L) '
          format: int32
          type: integer
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        region:
          description: Region
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - dns_forward_config
      - name
      - tenant_id
    DnsServiceProfileQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    DnsServiceQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    DnsServiceRole:
      properties:
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    DnsServiceRoleQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    DnsServiceroleBindings:
      properties:
        dnsservicerole_id:
          description: Dnsservicerole Id
          type: string
        interfaces:
          description: 'Interfaces: Valid NotEmpty(message = DNSSERVICE_ROLE_BINDING_INTERFACES_MISSING) '
          items:
            $ref: '#/components/schemas/Interface'
          type: array
      required:
      - interfaces
    DomainsToAddress:
      properties:
        domain_names:
          description: 'Domain Names: UniqueHostNames(allowNull = true, max = 2147483647,
            error = DTA_DOMAIN_CONFIG_INVALID_HOST: Invalid domains to address domain
            names, min = 0) '
          items:
            description: Domain Names
            type: string
          type: array
        ipv4_address:
          description: 'Ipv4 Address: IPv4(error = DOMAINTOADDRESS_IPV4_CONFIG_INVALID_IP:
            Invalid Domains to address ipv4_address, regexp = [/0-9.]*) '
          type: string
        ipv6_address:
          description: 'Ipv6 Address: IPv6(error = DOMAINTOADDRESS_IPV6_CONFIG_INVALID_IP:
            Invalid Domains to address ipv6_address, regexp = [/0-9a-zA-Z:.]*) '
          type: string
    DomainsToInterface:
      properties:
        domain_names:
          description: 'Domain Names: NotEmpty(error = DTI_DOMAIN_NAME_MANDATORY:
            Domains to interfaces domain name missing) UniqueHostNames(allowNull =
            true, max = 2147483647, error = INVALID_DTI_DOMAIN_NAMES_LIST_CONFIG:
            Invalid domains to interfaces domain name list, min = 0) '
          items:
            description: Domain Names
            type: string
          type: array
        interface_id:
          description: 'Interface Id: NotEmpty(error = DTI_INTERFACE_ID_MANDATORY:
            Domains to interfaces interface id missing) '
          type: string
      required:
      - interface_id
      - domain_names
    ElemCacheConfig:
      properties:
        cache_size:
          description: 'Cache Size: Range(max = 9223372036854775807L, error = INVALID_CACHE_SIZE_RANGE:
            Invalid cache size, must be positive value, min = 0L) '
          format: int32
          type: integer
    ElemCustomerPremisesEquipment:
      properties:
        identifier_text:
          description: Identifier Text
          type: string
        type:
          description: 'Type: ValidateEnum(enumClass = classOf[CustomerPremisesEquipmentType],
            error = INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE: Invalid customer premises
            equipment type. Allowed values text|element_id|element_name, nullAllowed
            = false) '
          enum:
          - text
          - element_id
          - element_name
          type: string
      required:
      - type
    ElemDnsQueriesMetadata:
      properties:
        add_customer_premises_equipment:
          $ref: '#/components/schemas/ElemCustomerPremisesEquipment'
          description: 'Add Customer Premises Equipment: Valid '
        add_subnets:
          description: 'Add Subnets: Valid '
          items:
            $ref: '#/components/schemas/Subnet'
          type: array
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    HostRecord:
      properties:
        domain_names:
          description: 'Domain Names: UniqueHostNames(allowNull = false, max = 2147483647,
            error = INVALID_HOSTRECORD_DOMAIN_NAMES_LIST_CONFIG: Invalid host record
            domain names list config, min = 0) '
          items:
            description: Domain Names
            type: string
          type: array
        ipv4_address:
          description: 'Ipv4 Address: IPv4(error = INVALID_HOSTRECORD_IPV4_CONFIG:
            Invalid host record ipv4 address, regexp = [/0-9.]*) '
          type: string
        ipv6_address:
          description: 'Ipv6 Address: IPv6(error = INVALID_HOSTRECORD_IPV6_CONFIG:
            Invalid host record ipv6 address, regexp = [/0-9a-zA-Z:.]*) '
          type: string
        ttl:
          description: 'Ttl: Range(max = 9223372036854775807L, error = INVALID_TTL_RANGE:
            Invalid ttl, must be positive value, min = 0L) '
          type: integer
      required:
      - domain_names
    Interface:
      properties:
        interface_id:
          description: Interface Id
          type: string
        interface_ip:
          description: 'Interface Ip: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = DNSSERVER_IP_CONFIG_INVALID_IP: Invalid interfaces interface
            ip, type = IP) '
          type: string
    KeyDigest:
      properties:
        algorithm:
          description: 'Algorithm: Range(max = 255L, error = INVALID_TRUSTANCHOR_KEY_DIGEST_ALGO_RANGE_CONFIG:
            Key digest algorithm is not in valid range ''0 - 255'', min = 0L) '
          type: integer
        digest:
          description: 'Digest: Pattern(error = INVALID_TRUSTANCHOR_KEY_DIGEST_CONFIG:
            Invalid key digest, expected hexadecimal string, regexp = [0-9a-fA-F]+)
            Size(max = 256, error = VALUE_EXCEEDS_LIMIT: value length exceeds maximum
            limit, min = 0) '
          type: string
        digest_type:
          description: 'Digest Type: Range(max = 255L, error = INVALID_TRUSTANCHOR_KEY_DIGEST_TYPE_RANGE_CONFIG:
            Key digest digest type is not in valid range ''0 - 255'', min = 0L) '
          type: integer
        key_tag:
          description: 'Key Tag: Range(max = 65535L, error = INVALID_TRUSTANCHOR_KEY_TAG_RANGE_CONFIG:
            key digest key tag is not in valid range ''0 - 65535'', min = 0L) '
          type: integer
    ListQueryResponse:
      properties:
        count:
          description: 'The actual count

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size is 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query

            '
          type: object
        tenant_id:
          type: string
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count

            '
          format: int32
          type: integer
        description:
          description: 'Description

            '
        id:
          description: 'The ID

            '
          type: string
        tenant_id:
          description: 'The ID of the tenant

            '
          type: string
      type: object
    MxHostRecord:
      properties:
        hostname:
          description: 'Hostname: NotEmpty(error = MX_HOST_NAME_MISSING: MxHostRecord
            hostname missing) '
          type: string
        mx_name:
          description: 'Mx Name: NotEmpty(error = MX_NAME_MISSING: MxHostRecord mx_name
            missing) Size(max = 128, error = VALUE_EXCEEDS_LIMIT: value length exceeds
            maximum limit, min = 0) '
          type: string
        preference:
          description: 'Preference: Range(max = 65535L, error = INVALID_PREF_RANGE:
            Mx host record preference is not in valid range ''0 - 65535'', min = 0L) '
          format: int32
          type: integer
      required:
      - hostname
      - mx_name
    NaptrRecords:
      properties:
        flags:
          description: 'Flags: NotEmpty(error = NAPTRRECORD_FLAGS_MISSING: NaptrRecords
            flags is missing) Pattern(message = INVALID_NAPTRRECORD_FLAGS, regexp
            = [A-Z0-9]{1}) '
          type: string
        name:
          description: 'Name: NotEmpty(error = NAPTRRECORD_NAME_MISSING: NaptrRecords
            name is missing) Size(max = 128, error = VALUE_EXCEEDS_LIMIT: value length
            exceeds maximum limit, min = 0) '
          type: string
        order:
          description: 'Order: Range(max = 65535L, error = INVALID_NAPTRRECORD_ORDER_RANGE_CONFIG:
            NaptrRecords order is not in valid range ''0 - 65535'', min = 0L) NotNull(error
            = NAPTRRECORD_ORDER_MISSING: NaptrRecords order is missing) '
          type: integer
        preference:
          description: 'Preference: Range(max = 65535L, error = INVALID_NAPTRRECORD_PREFERENCE_RANGE_CONFIG:
            NaptrRecords preference is not in valid range ''0 - 65535'', min = 0L)
            NotNull(error = NAPTRRECORD_PREFERENCE_MISSING: NaptrRecords preference
            is missing) '
          type: integer
        regexp:
          description: 'Regexp: Size(max = 256, error = VALUE_EXCEEDS_LIMIT: value
            length exceeds maximum limit, min = 0) '
          type: string
        replacement:
          description: 'Replacement: Pattern(error = INVALID_REPLACEMENT_VALUE: Invalid
            replacement value, must be only alphabets value, regexp = ^[ a-zA-Z]*$)
            Size(max = 256, error = VALUE_EXCEEDS_LIMIT: value length exceeds maximum
            limit, min = 0) '
          type: string
        service:
          description: 'Service: Size(max = 256, error = VALUE_EXCEEDS_LIMIT: value
            length exceeds maximum limit, min = 0) Pattern(error = INVALID_SERVICE_VALUE:
            Invalid service, must be only alphabets value, regexp = ^[ a-zA-Z]*$) '
          type: string
      required:
      - flags
      - preference
      - order
      - name
    PtrRecords:
      properties:
        name:
          description: 'Name: NotEmpty(error = PTRRECORD_NAME_MISSING: PtrRecords
            name missing) Size(max = 128, error = VALUE_EXCEEDS_LIMIT: value length
            exceeds maximum limit, min = 0) '
          type: string
        target:
          description: 'Target: Size(max = 256, error = VALUE_EXCEEDS_LIMIT: value
            length exceeds maximum limit, min = 0) '
          type: string
      required:
      - name
    SOA:
      properties:
        expiry:
          description: 'Expiry: Range(max = 9223372036854775807L, error = INVALID_EXPIRY_RANGE:
            Invalid expiry, must be positive value, min = 0L) '
          type: integer
        host_master:
          description: Host Master
          type: string
        refresh:
          description: 'Refresh: Range(max = 9223372036854775807L, error = INVALID_REFRESH_RANGE:
            Invalid refresh, must be positive value, min = 0L) '
          type: integer
        retry:
          description: 'Retry: Range(max = 9223372036854775807L, error = INVALID_RETRY_RANGE:
            Invalid retry, must be positive value, min = 0L) '
          type: integer
        serial_number:
          description: 'Serial Number: NotNull(error = AUTHCONFIG_SOA_SERIAL_NUMBER_CONFIG_MISSING:
            Authconfig SOA serial number missing) Range(max = 9223372036854775807L,
            error = INVALID_SERIAL_NUM_RANGE: Invalid serial number, must be positive
            value, min = 0L) '
          type: integer
      required:
      - serial_number
    Server:
      properties:
        dnsservicerole_id:
          description: 'Dnsservicerole Id: Size(max = 20, error = VALUE_EXCEEDS_LIMIT:
            value length exceeds maximum limit, min = 0) '
          type: string
        domain_name:
          description: 'Domain Name: NotEmpty(error = AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_MISSING:
            Authconfig server domain names missing) '
          type: string
      required:
      - domain_name
    SrvHost:
      properties:
        domain_name:
          description: Domain Name
          type: string
        port:
          description: 'Port: Range(max = 65535L, error = INVALID_SRVHOST_PORT_RANGE_CONFIG:
            SRV host port is not in valid range ''0 - 65535'', min = 0L) '
          type: integer
        priority:
          description: 'Priority: Range(max = 65535L, error = INVALID_SRVHOST_PRIORITY_RANGE_CONFIG:
            SRV host priority is not in valid range ''0 - 65535'', min = 0L) '
          type: integer
        protocol:
          description: 'Protocol: Pattern(error = INVALID_PROTOCOL_VALUE: Invalid
            protocol, must be only alphabets value, regexp = ^[ a-zA-Z]*$) NotEmpty(error
            = SRVHOST_PROTOCOL_MISSING: SRV host protocol missing) Size(max = 256,
            error = VALUE_EXCEEDS_LIMIT: value length exceeds maximum limit, min =
            0) '
          type: string
        service:
          description: 'Service: Pattern(error = INVALID_SERVICE_VALUE: Invalid service,
            must be only alphabets value, regexp = ^[ a-zA-Z]*$) NotEmpty(error =
            SRVHOST_SERVICE_MISSING: SRV host service missing) Size(max = 256, error
            = VALUE_EXCEEDS_LIMIT: value length exceeds maximum limit, min = 0) '
          type: string
        target:
          description: 'Target: Range(max = 65535L, error = INVALID_TARGET_RANGE:
            SRV host target is not in valid range ''0 - 65535'', min = 0L) '
          type: integer
        weight:
          description: 'Weight: Range(max = 65535L, error = INVALID_WEIGHT_RANGE:
            SRV host weight is not in valid range ''0 - 65535'', min = 0L) '
          type: integer
      required:
      - protocol
      - service
    Subnet:
      properties:
        ipv4_address:
          description: 'Ipv4 Address: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS: Invalid subnet
            ipv4 address, type = IP) '
          type: string
        ipv4_prefix_length:
          description: 'Ipv4 Prefix Length: Required(message = DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_MISSING)
            Range(max = 32L, error = DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE:
            ipv4 prefix length is not in valid range ''0-32'', min = 0L) '
          format: int32
          type: integer
        ipv6_address:
          description: 'Ipv6 Address: IPv6(error = DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS:
            Invalid subnet ipv6 address, regexp = [/0-9a-zA-Z:.]*) '
          type: string
        ipv6_prefix_length:
          description: 'Ipv6 Prefix Length: Required(message = DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_MISSING)
            Range(max = 128L, error = DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE:
            ipv6 prefix length is not in valid range ''0-128'', min = 0L) '
          format: int32
          type: integer
      required:
      - ipv6_prefix_length
      - ipv4_prefix_length
    SynthDomain:
      properties:
        domain:
          description: 'Domain: NotEmpty(error = SYNTHDOMAIN_DOMAIN_NAMES_CONFIG_MISSING_HOST:
            Missing synth-domain domain config) '
          type: string
        end_ipaddress:
          description: 'End Ipaddress: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = INVALID_SYNTHDOMAIN_END_IP_ADDRESS_CONFIG: Invalid synth-domain
            end ip, type = IP) '
          type: string
        ipaddress_prefix:
          description: 'Ipaddress Prefix: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = INVALID_SYNTHDOMAIN_IP_ADDRESS_PREFIX_CONFIG: Invalid
            synth-domain ipaddress prefix, type = IPCIDR_32) '
          type: string
        prefix:
          description: 'Prefix: Pattern(error = INVALID_PREFIX_VALUE: Invalid prefix,
            must be only alphabets value, regexp = ^[a-zA-Z]*$) '
          type: string
        start_ipaddress:
          description: 'Start Ipaddress: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, error = INVALID_SYNTHDOMAIN_START_IP_ADDRESS_CONFIG: Invalid
            synth-domain start ip, type = IP) '
          type: string
      required:
      - domain
    TrustAnchor:
      properties:
        class:
          description: 'Anchor Class: Pattern(error = INVALID_CLASS_VALUE: Invalid
            class, must be only alphabets value, regexp = ^[ a-zA-Z]*$) Size(max =
            128, error = VALUE_EXCEEDS_LIMIT: value length exceeds maximum limit,
            min = 0) '
          type: string
        domain:
          description: Domain
          type: string
        key_digest:
          $ref: '#/components/schemas/KeyDigest'
          description: 'Key Digest: Valid '
    TxtRecord:
      properties:
        domain_name:
          description: 'Domain Name: NotEmpty(error = TXTRECORD_DOMAIN_NAME_MISSING:
            TxtRecords domain name missing) Size(max = 128, error = VALUE_EXCEEDS_LIMIT:
            value length exceeds maximum limit, min = 0) '
          type: string
        texts:
          description: 'Texts: ListString(allowDuplicate = true, allowEmpty = true,
            allowNull = true, length = 0, listMaxSize = 0, message = TXTRECORD_TEXT_INVALID_LENGTH,
            noTrim = false, regex = [A-Za-z]+[a-zA-Z0-9_$ ]{1,255}, required = false) '
          items:
            description: Texts
            type: string
          type: array
      required:
      - domain_name
    Zone:
      properties:
        domain_name:
          description: 'Domain Name: NotEmpty(error = AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_MISSING:
            Authconfig zone domain name missing) '
          type: string
        exclude_prefix:
          description: 'Exclude Prefix: ListIPAddress(bcast = DENY, listMaxSize =
            0, error = AUTHCONFIG_ZONE_INVALID_EXCLUDE_PREFIX: Invalid authconfig
            zone exclude prefix, required = false, type = IPCIDR_32) '
          items:
            description: Exclude Prefix
            type: string
          type: array
        include_prefix:
          description: 'Include Prefix: ListIPAddress(bcast = DENY, listMaxSize =
            0, error = AUTHCONFIG_ZONE_INVALID_INCLUDE_PREFIX: Invalid authconfig
            zone include prefix, required = false, type = IPCIDR_32) '
          items:
            description: Include Prefix
            type: string
          type: array
      required:
      - domain_name
info:
  contact: {}
  description: List of APIs used to manage the DNS services.
  title: DNS Services
  version: Latest
openapi: 3.0.0
paths:
  /v2.0/api/tenants/{tenant_id}/dnsserviceprofiles:
    get:
      description: Read all DNS service profiles
      operationId: get-v2.0-api-tenants-tenant_id-dnsserviceprofiles
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceProfile'
                      type: array
                  type: object
          description: Successful Operation
      summary: Read all DNS service profiles (v2.0)
      tags:
      - DNS Services
    post:
      description: Create a new DNS service profile
      operationId: post-v2.0-api-tenants-tenant_id-dnsserviceprofiles
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceProfile'
        description: Details of the DNS service profile to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: DNSSERVICE_PROFILE_CREATE_FAILED
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: INVALID_PROFILE_CONFIG
                  - code: INVALID_LISTENROLE_ID
                  - code: DNSSERVER_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: DNSSERVER_INVALID_FWDROLE_ID
                  - code: DNSREBIND_DOMAIN_CONFIG_INVALID_HOST
                  - code: DUPLICATE_DOMAINTOADDRESS_MAPPING_UNSUPPORTED
                  - code: DOMAINTOADDRESS_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: TRUST_ANCHORS_MISSING
                  - code: DISABLE_DNSSEC_TIMECHECK_NOT_ALLOWED
                  - code: DNS_CHECK_UNSIGNED_NOT_ALLOWED
                  - code: DNSSEC_CONFIG_NOT_ALLOWED
                  - code: HOSTRECORD_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: INVALID_NAPTRRECORD_CONFIG
                  - code: INVALID_SYNTH_DOMAIN_CONFIG
                  - code: INVALID_ALIAS_CONFIG
                  - code: INVALID_ADD_CUSTOMER_PREMISES_EQUIPMENT_CONFIG
                  - code: NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_TAG
                  - code: INVALID_DNSSERVER_LISTEN_PORT_RANGE_CONFIG
                  - code: DNSSERVICE_CONFIG_INVALID_MINSOURCEPORT_VALUE
                  - code: DNSSERVICE_CONFIG_INVALID_MAXSOURCEPORT_VALUE
                  - code: INVALID_DNSSERVER_IP_PREFIX_CONFIG
                  - code: INVALID_DNSSERVER_DOMAIN_NAMES_LIST_CONFIG
                  - code: DNSSERVER_IP_CONFIG_MISSING
                  - code: INVALID_DNSSERVER_IP_CONFIG_IP
                  - code: INVALID_DNSSERVER_PORT_RANGE_CONFIG
                  - code: INVALID_DNSSERVER_SOURCE_PORT_RANGE_CONFIG
                  - code: INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE
                  - code: INVALID_BOGUS_NX_DOMAINS
                  - code: INVALID_IGNORE_IP_ADDRESS
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_IP
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_START_IP
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_END_IP
                  - code: ALIAS_CONFIG_REPLACE_IP_ADDRESS_MISSING
                  - code: INVALID_DNSREBIND_REBIND_DOMAINS_LIST_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_TAG_RANGE_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_DIGEST_ALGO_RANGE_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_DIGEST_TYPE_RANGE_CONFIG
                  - code: INVALID_DOMAINTOADDRESS_DOMAIN_NAMES_LIST_CONFIG
                  - code: DOMAINTOADDRESS_IP_CONFIG_MISSING
                  - code: INVALID_SECONDARY_SERVER
                  - code: INVALID_PEER_ADDRESS
                  - code: AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_MISSING
                  - code: AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_MISSING
                  - code: AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: AUTHCONFIG_ZONE_INVALID_INCLUDE_PREFIX
                  - code: AUTHCONFIG_ZONE_INVALID_EXCLUDE_PREFIX
                  - code: AUTHCONFIG_SOA_SERIAL_NUMBER_CONFIG_MISSING
                  - code: INVALID_HOSTRECORD_DOMAIN_NAMES_LIST_CONFIG
                  - code: INVALID_HOSTRECORD_IPV4_CONFIG
                  - code: INVALID_HOSTRECORD_IPV6_CONFIG
                  - code: SYNTHDOMAIN_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: INVALID_SYNTHDOMAIN_START_IP_ADDRESS_CONFIG
                  - code: INVALID_SYNTHDOMAIN_END_IP_ADDRESS_CONFIG
                  - code: INVALID_SYNTHDOMAIN_IP_ADDRESS_PREFIX_CONFIG
                  - code: SRVHOST_SERVICE_MISSING
                  - code: SRVHOST_PROTOCOL_MISSING
                  - code: SRVHOST_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: INVALID_SRVHOST_PORT_RANGE_CONFIG
                  - code: INVALID_SRVHOST_PRIORITY_RANGE_CONFIG
                  - code: NAPTRRECORD_NAME_MISSING
                  - code: INVALID_NAPTRRECORD_ORDER_RANGE_CONFIG
                  - code: NAPTRRECORD_ORDER_MISSING
                  - code: INVALID_NAPTRRECORD_PREFERENCE_RANGE_CONFIG
                  - code: NAPTRRECORD_PREFERENCE_MISSING
                  - code: NAPTRRECORD_FLAGS_MISSING
                  - code: CAARECORD_NAME_MISSING
                  - code: CAARECORD_FLAG_MISSING
                  - code: CAARECORD_TAG_MISSING
                  - code: CAARECORD_VALUE_MISSING
                  - code: DNSRESOURCERECORD_NAME_MISSING
                  - code: DNSRESOURCERECORD_RRNUMBER_MISSING
                  - code: CNAMERECORD_NAME_MISSING
                  - code: CNAMERECORD_TARGET_MISSING
                  - code: PTRRECORD_NAME_MISSING
                  - code: TXTRECORD_DOMAIN_NAME_MISSING
                  - code: TXTRECORD_TEXT_INVALID_LENGTH
                  - code: MX_NAME_MISSING
                  - code: MX_HOST_NAME_MISSING
                  - code: MX_NAME_DOMAIN_NAMES_CONFIG_INVALID_HOST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new DNS service profile (v2.0)
      tags:
      - DNS Services
  /v2.0/api/tenants/{tenant_id}/dnsserviceprofiles/query:
    post:
      description: Query DNS service profile based on parameters
      operationId: post-v2.0-api-tenants-tenant_id-dnsserviceprofiles-query
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceProfileQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceProfileQuery'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query DNS service profile based on parameters (v2.0)
      tags:
      - DNS Services
  /v2.0/api/tenants/{tenant_id}/dnsserviceprofiles/{dnsservice_role_id}:
    delete:
      description: Delete a DNS service profile
      operationId: delete-v2.0-api-tenants-tenant_id-dnsserviceprofiles-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: DNS service profile ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: DNSPROFILE_CONFIG_DELETE_NOTALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete a DNS service profile (v2.0)
      tags:
      - DNS Services
    get:
      description: Get a DNS service profile
      operationId: get-v2.0-api-tenants-tenant_id-dnsserviceprofiles-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: DNS service profile ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceProfile'
          description: Successful Operation
      summary: Get a DNS service profile (v2.0)
      tags:
      - DNS Services
    put:
      description: Update a DNS service profile
      operationId: put-v2.0-api-tenants-tenant_id-dnsserviceprofiles-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: DNS service profile ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceProfile'
        description: Details of the DNS service profile to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: INVALID_PROFILE_CONFIG
                  - code: INVALID_LISTENROLE_ID
                  - code: DNSSERVER_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: DNSSERVER_INVALID_FWDROLE_ID
                  - code: DNSREBIND_DOMAIN_CONFIG_INVALID_HOST
                  - code: DUPLICATE_DOMAINTOADDRESS_MAPPING_UNSUPPORTED
                  - code: DOMAINTOADDRESS_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: TRUST_ANCHORS_MISSING
                  - code: DISABLE_DNSSEC_TIMECHECK_NOT_ALLOWED
                  - code: DNS_CHECK_UNSIGNED_NOT_ALLOWED
                  - code: DNSSEC_CONFIG_NOT_ALLOWED
                  - code: HOSTRECORD_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: INVALID_NAPTRRECORD_CONFIG
                  - code: INVALID_SYNTH_DOMAIN_CONFIG
                  - code: INVALID_ALIAS_CONFIG
                  - code: INVALID_ADD_CUSTOMER_PREMISES_EQUIPMENT_CONFIG
                  - code: NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_TAG
                  - code: INVALID_DNSSERVER_LISTEN_PORT_RANGE_CONFIG
                  - code: DNSSERVICE_CONFIG_INVALID_MINSOURCEPORT_VALUE
                  - code: DNSSERVICE_CONFIG_INVALID_MAXSOURCEPORT_VALUE
                  - code: INVALID_DNSSERVER_IP_PREFIX_CONFIG
                  - code: INVALID_DNSSERVER_DOMAIN_NAMES_LIST_CONFIG
                  - code: DNSSERVER_IP_CONFIG_MISSING
                  - code: INVALID_DNSSERVER_IP_CONFIG_IP
                  - code: INVALID_DNSSERVER_PORT_RANGE_CONFIG
                  - code: INVALID_DNSSERVER_SOURCE_PORT_RANGE_CONFIG
                  - code: INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE
                  - code: INVALID_BOGUS_NX_DOMAINS
                  - code: INVALID_IGNORE_IP_ADDRESS
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_IP
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_START_IP
                  - code: ALIAS_CONFIG_INVALID_ORIGINAL_END_IP
                  - code: ALIAS_CONFIG_REPLACE_IP_ADDRESS_MISSING
                  - code: INVALID_DNSREBIND_REBIND_DOMAINS_LIST_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_TAG_RANGE_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_DIGEST_ALGO_RANGE_CONFIG
                  - code: INVALID_TRUSTANCHOR_KEY_DIGEST_TYPE_RANGE_CONFIG
                  - code: INVALID_DOMAINTOADDRESS_DOMAIN_NAMES_LIST_CONFIG
                  - code: DOMAINTOADDRESS_IP_CONFIG_MISSING
                  - code: INVALID_SECONDARY_SERVER
                  - code: INVALID_PEER_ADDRESS
                  - code: AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_MISSING
                  - code: AUTHCONFIG_SERVER_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_MISSING
                  - code: AUTHCONFIG_ZONE_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: AUTHCONFIG_ZONE_INVALID_INCLUDE_PREFIX
                  - code: AUTHCONFIG_ZONE_INVALID_EXCLUDE_PREFIX
                  - code: AUTHCONFIG_SOA_SERIAL_NUMBER_CONFIG_MISSING
                  - code: INVALID_HOSTRECORD_DOMAIN_NAMES_LIST_CONFIG
                  - code: INVALID_HOSTRECORD_IPV4_CONFIG
                  - code: INVALID_HOSTRECORD_IPV6_CONFIG
                  - code: SYNTHDOMAIN_DOMAIN_NAMES_CONFIG_INVALID_HOST
                  - code: INVALID_SYNTHDOMAIN_START_IP_ADDRESS_CONFIG
                  - code: INVALID_SYNTHDOMAIN_END_IP_ADDRESS_CONFIG
                  - code: INVALID_SYNTHDOMAIN_IP_ADDRESS_PREFIX_CONFIG
                  - code: SRVHOST_SERVICE_MISSING
                  - code: SRVHOST_PROTOCOL_MISSING
                  - code: SRVHOST_DOMAIN_NAME_CONFIG_INVALID_HOST
                  - code: INVALID_SRVHOST_PORT_RANGE_CONFIG
                  - code: INVALID_SRVHOST_PRIORITY_RANGE_CONFIG
                  - code: NAPTRRECORD_NAME_MISSING
                  - code: INVALID_NAPTRRECORD_ORDER_RANGE_CONFIG
                  - code: NAPTRRECORD_ORDER_MISSING
                  - code: INVALID_NAPTRRECORD_PREFERENCE_RANGE_CONFIG
                  - code: NAPTRRECORD_PREFERENCE_MISSING
                  - code: NAPTRRECORD_FLAGS_MISSING
                  - code: CAARECORD_NAME_MISSING
                  - code: CAARECORD_FLAG_MISSING
                  - code: CAARECORD_TAG_MISSING
                  - code: CAARECORD_VALUE_MISSING
                  - code: DNSRESOURCERECORD_NAME_MISSING
                  - code: DNSRESOURCERECORD_RRNUMBER_MISSING
                  - code: CNAMERECORD_NAME_MISSING
                  - code: CNAMERECORD_TARGET_MISSING
                  - code: PTRRECORD_NAME_MISSING
                  - code: TXTRECORD_DOMAIN_NAME_MISSING
                  - code: TXTRECORD_TEXT_INVALID_LENGTH
                  - code: MX_NAME_MISSING
                  - code: MX_HOST_NAME_MISSING
                  - code: MX_NAME_DOMAIN_NAMES_CONFIG_INVALID_HOST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a DNS service profile (v2.0)
      tags:
      - DNS Services
  /v2.0/api/tenants/{tenant_id}/dnsserviceroles:
    get:
      description: Read all DNS service roles
      operationId: get-v2.0-api-tenants-tenant_id-dnsserviceroles
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceRole'
                      type: array
                  type: object
          description: Successful Operation
      summary: Read all DNS service roles (v2.0)
      tags:
      - DNS Services
    post:
      description: Create a new DNS service role
      operationId: post-v2.0-api-tenants-tenant_id-dnsserviceroles
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceRole'
        description: Details of the DNS service role to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceRole'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: DNSROLE_NAME_REQD
                  - code: NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_TAG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new DNS service role (v2.0)
      tags:
      - DNS Services
  /v2.0/api/tenants/{tenant_id}/dnsserviceroles/query:
    post:
      description: Query DNS service role based on parameters
      operationId: post-v2.0-api-tenants-tenant_id-dnsserviceroles-query
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceRoleQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceRoleQuery'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query DNS service role based on parameters (v2.0)
      tags:
      - DNS Services
  /v2.0/api/tenants/{tenant_id}/dnsserviceroles/{dnsservice_role_id}:
    delete:
      description: Delete a DNS service role
      operationId: delete-v2.0-api-tenants-tenant_id-dnsserviceroles-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: DNS service role ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceRole'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: DNSROLE_CONFIG_DELETE_NOTALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete a DNS service role (v2.0)
      tags:
      - DNS Services
    get:
      description: Get a DNS service role
      operationId: get-v2.0-api-tenants-tenant_id-dnsserviceroles-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: DNS service role ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceRole'
          description: Successful Operation
      summary: Get a DNS service role (v2.0)
      tags:
      - DNS Services
    put:
      description: Update a DNS service role
      operationId: put-v2.0-api-tenants-tenant_id-dnsserviceroles-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: DNS service role ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceRole'
        description: Details of the DNS service role to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsServiceRole'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: DNSROLE_NAME_REQD
                  - code: NAME_EXCEEDS_LIMIT
                  - code: DESCRIPTION_EXCEEDS_LIMIT
                  - code: INVALID_TAG
                  - code: INVALID_REQUEST_DUPLICATE_KEY
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a DNS service role (v2.0)
      tags:
      - DNS Services
  /v2.0/api/tenants/{tenant_id}/dnsservices/query:
    post:
      description: Query DNS service config based on parameters
      operationId: post-v2.0-api-tenants-tenant_id-dnsservices-query
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServiceQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsServiceQuery'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query DNS service config based on parameters (v2.0)
      tags:
      - DNS Services
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/dnsservices:
    get:
      description: Read all DNS service configs
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-dnsservices
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID of the target resource
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: element ID of the target device
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/DnsService'
                      type: array
                  type: object
          description: Successful Operation
      summary: Read all DNS service configs (v2.0)
      tags:
      - DNS Services
    post:
      description: Create a new DNS service config
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-dnsservices
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID of the target resource
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: element ID of the target device
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsService'
        description: Details of the DNS service config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_DNSSERVICE_UNSUPPORTED
                  - code: SITE_MISMATCH
                  - code: HUB_UNSUPPORTED
                  - code: ELEMENT_MISMATCH
                  - code: ELEMENT_UNASSIGNED
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: INVALID_PROFILE_ID
                  - code: INVALID_DNSROLE_ID
                  - code: INVALID_INTERFACE_CONFIG
                  - code: DTI_DOMAIN_CONFIG_INVALID_HOST
                  - code: DTA_DOMAIN_CONFIG_INVALID_HOST
                  - code: DNSSERVER_IP_CONFIG_INVALID_IP
                  - code: INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE
                  - code: INVALID_DOMAINTOADDRESS_DOMAIN_NAMES_LIST_CONFIG
                  - code: DOMAINTOADDRESS_IP_CONFIG_MISSING
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new DNS service config (v2.0)
      tags:
      - DNS Services
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/dnsservices/{dnsservice_role_id}:
    delete:
      description: Delete a DNS service config
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-dnsservices-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID of the target resource
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: element ID of the target device
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: DNS service config ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_DNSSERVICE_UNSUPPORTED
                  - code: SITE_MISMATCH
                  - code: HUB_UNSUPPORTED
                  - code: ELEMENT_MISMATCH
                  - code: ELEMENT_UNASSIGNED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete a DNS service config (v2.0)
      tags:
      - DNS Services
    get:
      description: Get a DNS service config
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-dnsservices-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID of the target resource
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: element ID of the target device
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: DNS service config ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsService'
          description: Successful Operation
      summary: Get a DNS service config (v2.0)
      tags:
      - DNS Services
    put:
      description: Update a DNS service config
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-dnsservices-dnsservice_role_id
      parameters:
      - description: tenant ID of the target tenant
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID of the target resource
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: element ID of the target device
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: DNS service config ID
        in: path
        name: dnsservice_role_id
        required: true
        schema:
          description: Dnsservice Role Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsService'
        description: Details of the DNS service config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsService'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: HUB_UNSUPPORTED
                  - code: ELEMENT_UNASSIGNED
                  - code: INVALID_PROFILE_ID
                  - code: INVALID_DNSROLE_ID
                  - code: INVALID_INTERFACE_CONFIG
                  - code: DTI_DOMAIN_CONFIG_INVALID_HOST
                  - code: DTA_DOMAIN_CONFIG_INVALID_HOST
                  - code: DNSSERVER_IP_CONFIG_INVALID_IP
                  - code: INVALID_CUSTOMER_PREMISES_EQUIPMENT_TYPE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IP_PREFIX_LENGTH_RANGE
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_ADDRESS
                  - code: DNSQUERYMETADATA_CONFIG_INVALID_IPV6_PREFIX_LENGTH_RANGE
                  - code: INVALID_DOMAINTOADDRESS_DOMAIN_NAMES_LIST_CONFIG
                  - code: DOMAINTOADDRESS_IP_CONFIG_MISSING
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a DNS service config (v2.0)
      tags:
      - DNS Services
servers:
- url: https://api.us.cloudgenix.com
tags:
- name: DNS Services
