components:
  schemas:
    Address:
      properties:
        city:
          description: 'City: Length(max = 100, , min = 0) '
          type: string
        country:
          description: 'Country: Length(max = 100, , min = 0) '
          type: string
        post_code:
          description: 'Post Code: Length(max = 100, , min = 0) '
          type: string
        state:
          description: 'State: Length(max = 100, , min = 0) '
          type: string
        street:
          description: 'Street: Length(max = 100, , min = 0) '
          type: string
        street2:
          description: 'Street2: Length(max = 100, , min = 0) '
          type: string
    ApiVersions:
      properties:
        api_versions:
          type: object
        id:
          description: Id
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - api_versions
      - tenant_id
    AuthPermission:
      properties:
        value:
          description: 'Value: Size(max = 500, PERMISSION_INVALID_0001, min = 0) '
          type: string
    AuthResource:
      properties:
        custom_roles:
          description: Custom Roles
          items:
            $ref: '#/components/schemas/CustomRole'
          type: array
        disallowed_permissions:
          type: object
        id:
          description: Id
          type: string
        operator_id:
          description: Operator Id
          type: string
        permissions:
          type: object
        redirect_region:
          description: Redirect Region
          type: string
        redirect_urlpath:
          description: Redirect Urlpath
          type: string
        redirect_x_auth_token:
          description: Redirect X Auth Token
          type: string
        resource_role_map:
          description: Resource Role Map
          items:
            type: object
          type: array
        resource_uri_map:
          type: object
        resource_version_map:
          type: object
        tenant_id:
          description: Tenant Id
          type: string
        version_exceptions_map:
          description: Version Exceptions Map
          items:
            type: object
          type: array
        x_auth_token:
          description: X Auth Token
          type: string
    AuthRole:
      properties:
        name:
          description: 'Name: Pattern(AUTH_ROLE_INVALID, regexp = (guest|system|element|support_iam_admin|support_admin|support_viewonly|support_mfg|support_super|support_root|devops|secops|tenant_iam_admin|tenant_network_admin|tenant_security_admin|tenant_viewonly|tenant_super|tenant_root|esp_iam_admin|esp_machine_admin|esp_admin|esp_user|esp_super|esp_root))
            NotBlank '
          type: string
      required:
      - name
    AuthToken:
      properties:
        custom_roles:
          description: 'Custom Roles: Size(max = 100, error = SESSION_INVALID_CUSTOM_ROLES_LIST_SIZE:
            Custom permissions set is limited to {} length, min = 0) '
          items:
            $ref: '#/components/schemas/CustomRole'
          type: array
        expires_utc_ms:
          description: Expires Utc Ms
          format: int64
          type: integer
        id:
          description: Id
          type: string
        roles:
          description: 'Roles: Valid Size(max = 7, error = SESSION_INVALID_ROLE_LIST_SIZE:
            Roles set size is limited to {} length, min = 0) '
          items:
            $ref: '#/components/schemas/AuthRole'
          type: array
        session_key_c:
          description: 'Session Key C: Length(max = 128, , min = 0) '
          type: string
        x_auth_token:
          description: X Auth Token
          type: string
    AuthTokenV2N1:
      properties:
        custom_roles:
          description: 'Custom Roles: Size(max = 100, error = SESSION_INVALID_CUSTOM_ROLES_LIST_SIZE:
            Custom permissions set is limited to {} length, min = 0) '
          items:
            $ref: '#/components/schemas/CustomRole'
          type: array
        expires_utc_ms:
          description: Expires Utc Ms
          format: int64
          type: integer
        id:
          description: Id
          type: string
        is_system_owned:
          description: Is System Owned
          type: boolean
        roles:
          description: 'Roles: Valid Size(max = 7, error = SESSION_INVALID_ROLE_LIST_SIZE:
            Roles set size is limited to {} length, min = 0) '
          items:
            $ref: '#/components/schemas/AuthRole'
          type: array
        session_key_c:
          description: 'Session Key C: Length(max = 128, , min = 0) '
          type: string
        x_auth_token:
          description: X Auth Token
          type: string
    CertificateCa:
      properties:
        certificate:
          description: Certificate
          type: string
        certificate_expiry_utc:
          description: Certificate Expiry Utc
          format: int64
          type: integer
        certificate_type:
          description: Certificate Type
          type: string
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        id:
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        issued_by:
          $ref: '#/components/schemas/CertificateIssuer'
          description: Issued By
        issued_to:
          $ref: '#/components/schemas/CertificateIssuer'
          description: Issued To
        parent_id:
          $ref: '#/components/schemas/CertificateCa'
          description: Parent Id
        region:
          description: Region
          type: string
        serial_number:
          description: Serial Number
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
        version:
          description: Version
          type: string
      required:
      - tenant_id
    CertificateIssuer:
      properties:
        common_name:
          description: 'Common Name: Length(max = 100, , min = 0) '
          type: string
        country:
          description: 'Country: Length(max = 100, , min = 0) '
          type: string
        location:
          description: 'Location: Length(max = 100, , min = 0) '
          type: string
        organization:
          description: 'Organization: Length(max = 100, , min = 0) '
          type: string
        organization_unit:
          description: 'Organization Unit: Length(max = 100, , min = 0) '
          type: string
        state:
          description: 'State: Length(max = 100, , min = 0) '
          type: string
    ClientPermissions:
      properties:
        client_id:
          description: 'Client Id: NotNull Digits(fraction = 0, integer = 20, error
            = ESP_CLIENT_ID_INVALID: Invalid client id) '
          type: string
        custom_roles:
          description: 'Custom Roles: Size(max = 100, error = ESP_OPERATOR_INVALID_CUSTOM_ROLES_LIST_SIZE:
            Custom roles set is limited to {} length, min = 0) '
          items:
            $ref: '#/components/schemas/CustomRole'
          type: array
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        email:
          description: 'Email: Email(error = ESP_OPERATOR_EMAIL_INVALID: Invalid operator
            email, regexp = .*) Size(max = 1000, error = ESP_OPERATOR_EMAIL_INVALID:
            Invalid operator email, min = 0) '
          type: string
        enable_session_ip_lock:
          description: Enable Session Ip Lock
          type: boolean
        id:
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        ipv4_list:
          description: 'Ipv4 List: Size(max = 100, error = ESP_IPV4_INVALID: Invalid
            ipv4 list, min = 0) Valid '
          items:
            $ref: '#/components/schemas/IPv4Address'
          type: array
        name:
          description: 'Name: Size(max = 100, error = ESP_OPERATOR_NAME_INVALID: Invalid
            operator name, min = 0) '
          type: string
        operator_id:
          description: 'Operator Id: NotNull Digits(fraction = 0, integer = 20, error
            = ESP_OPERATOR_ID_INVALID: Invalid operator id) '
          type: string
        region:
          description: Region
          type: string
        roles:
          description: 'Roles: Valid Size(max = 7, error = ESP_OPERATOR_ROLE_LIST_INVALID:
            Invalid role list, min = 0) '
          items:
            $ref: '#/components/schemas/AuthRole'
          type: array
        settings:
          description: 'Settings: Size(max = 100000, error = ESP_OPERATOR_INVALID_SETTINGS_SIZE:
            Invalid data size for settings. Maximum of 100KB data size is allowed,
            min = 0) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - client_id
      - operator_id
      - tenant_id
    CustomPermission:
      properties:
        allowed_after_ms:
          description: Allowed After Ms
          format: int64
          type: integer
        allowed_before_ms:
          description: Allowed Before Ms
          format: int64
          type: integer
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        disallow_permission:
          description: Disallow Permission
          type: boolean
        id:
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        region:
          description: Region
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
        value:
          description: 'Value: Pattern(error = INVALID_PERMISSION_VALUE: Permission
            value contains invalid characters. Check data {}, regexp = ^[/0-9a-zA-+_\\[\\]-]{1,500}$)
            NotEmpty '
          type: string
      required:
      - value
      - tenant_id
    CustomRole:
      properties:
        custom_permissions:
          description: Custom Permissions
          items:
            $ref: '#/components/schemas/CustomPermission'
          type: array
        disabled:
          description: Disabled
          type: boolean
        disallow_permissions:
          description: Disallow Permissions
          items:
            $ref: '#/components/schemas/AuthPermission'
          type: array
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: boolean
        name:
          description: 'Name: Pattern(AUTH_ROLE_INVALID, regexp = (guest|system|element|support_iam_admin|support_admin|support_viewonly|support_mfg|support_super|support_root|devops|secops|tenant_iam_admin|tenant_network_admin|tenant_security_admin|tenant_viewonly|tenant_super|tenant_root|esp_iam_admin|esp_machine_admin|esp_admin|esp_user|esp_super|esp_root))
            NotBlank '
          type: string
        permissions:
          description: Permissions
          items:
            $ref: '#/components/schemas/AuthPermission'
          type: array
        roles:
          description: Roles
          items:
            $ref: '#/components/schemas/AuthRole'
          type: array
      required:
      - name
    CustomRoleV2N1:
      properties:
        custom_permissions:
          description: 'Custom Permissions: Size(max = 100, error = AUTH_ROLE_INVALID_CUSTOM_PERMISSIONS_SIZE:
            Custom permissions set is limited to 100, min = 0) '
          items:
            $ref: '#/components/schemas/CustomPermission'
          type: array
        description:
          description: 'Description: Size(max = 1000, error = AUTH_ROLE_INVALID_ROLE_DESCRIPTION:
            Description size is limited to {} length, min = 1) '
          type: string
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        disallow_permissions:
          description: 'Disallow Permissions: Valid Size(max = 100, error = AUTH_ROLE_INVALID_DISALLOW_PERMISSION_LIST_SIZE:
            Disallowed ermissions set is limited to 100, min = 0) '
          items:
            $ref: '#/components/schemas/AuthPermission'
          type: array
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        is_system_owned:
          description: Is System Owned
          type: boolean
        name:
          description: 'Name: Size(max = 256, error = AUTH_ROLE_INVALID_ROLE_NAME:
            Auth role name comprises of lowercase and underscore characters only,
            min = 1) NotEmpty '
          type: string
        permissions:
          description: 'Permissions: Valid Size(max = 100, error = AUTH_ROLE_INVALID_PERMISSION_LIST_SIZE:
            Permissions set is limited to 100, min = 0) '
          items:
            $ref: '#/components/schemas/AuthPermission'
          type: array
        region:
          description: Region
          type: string
        roles:
          description: 'Roles: Valid Size(max = 7, error = AUTH_ROLE_INVALID_ROLE_LIST_SIZE:
            Roles set size is limited to {} length, min = 0) '
          items:
            $ref: '#/components/schemas/AuthRole'
          type: array
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - name
      - tenant_id
    ElementUser:
      properties:
        id:
          description: Id
          type: string
        is_tenant_level:
          description: 'Is Tenant Level: Required(error = IS_TENANT_LEVEL_FLAG_REQUIRED:
            Is tenant level flag required.) '
          type: boolean
        login_id:
          description: 'Login Id: Size(max = 16, error = LOGIN_ID_CONSTRAINT_LENGTH:
            Login Id length should be between 4 and 16., min = 4) Pattern(error =
            INVALID_LOGIN_ID: Invalid Login Id, regexp = ^[a-z][-a-z0-9]*$) Required(error
            = LOGIN_ID_REQUIRED: Login Id required.) ValidateElementUser(groups =
            [classOf[Default]], error = RESERVED_ELEMENT_USER_LOGIN_ID: Element user
            login Id provided is reserved for internal usage. Please provide other
            login Id.) '
          type: string
        role:
          description: 'Role: ValidateEnum(enumClass = classOf[UserRole], error =
            INVALID_USER_ROLE: Invalid User Role., nullAllowed = true) NotNull '
          enum:
          - SUPER
          - READONLY
          - MONITOR
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
        username:
          description: 'Username: Size(max = 255, error = INVALID_USERNAME: Invalid
            username., min = 0) '
          type: string
      required:
      - role
      - is_tenant_level
      - login_id
      - tenant_id
    ElementUserAccess:
      properties:
        element_id:
          description: 'Element Id: NotNull NotEmpty '
          type: string
        id:
          description: Id
          type: string
        role:
          description: 'Role: ValidateEnum(enumClass = classOf[UserRole], error =
            INVALID_ENUM_VALUE: Invalid Enum value., nullAllowed = false) '
          enum:
          - SUPER
          - READONLY
          - MONITOR
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
        user_id:
          description: User Id
          type: string
      required:
      - role
      - element_id
      - tenant_id
    ElementUserCredentials:
      properties:
        id:
          description: Id
          type: string
        is_tenant_level:
          description: Is Tenant Level
          type: boolean
        login_id:
          description: Login Id
          type: string
        password:
          description: 'Password: Password(alphabetReq = true, error = ELEMENTUSER_INVALID_PASSWORD:
            Invalid Password, password should have atleast one alphabet, one numeric
            and a special character. Allowed special characters are ?  = . * ! @ #  %
            ^ & _ -; Password Length should be between 8 to 64., nonAlphaNumericReq
            = true, numberReq = true, xssSafeCharsReq = true) '
          type: string
        role:
          description: Role
          enum:
          - SUPER
          - READONLY
          - MONITOR
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
        username:
          description: Username
          type: string
      required:
      - tenant_id
    Email:
      properties:
        email:
          description: 'Email: Email(EMAIL_INVALID_0001, regexp = .*) Size(max = 1000,
            EMAIL_INVALID_0002, min = 1) '
          type: string
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    Extension:
      properties:
        conf:
          type: object
        disabled:
          description: Disabled
          type: boolean
        entity_id:
          description: 'Entity Id: Pattern(error = INVALID_ENTITY_ID: Invalid entity
            id. Only numbers are allowed., regexp = [0-9]+$) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: NotEmpty(error = EXTENSION_NAME_REQD: Provide valid
            {} attribute) Size(max = 128, error = INVALID_EXTENSION_NAME: Provide
            valid {} attribute. Invalid value {}, min = 0) '
          type: string
        namespace:
          description: 'Namespace: NotEmpty(error = EXTENSION_NAMESPACE_REQD: Provide
            valid {} attribute) Pattern(error = INVALID_EXTENSION_NAMESPACE: Provide
            valid {} attribute. Invalid value {}, regexp = ^[a-z][a-z0-9/]*[a-z0-9]+$) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - conf
      - namespace
      - name
      - tenant_id
    ExtensionQueryFilter:
      properties:
        conf:
          type: object
        disabled:
          description: Disabled
          type: boolean
        id:
          description: Id
          type: string
        name:
          description: 'Name: NotEmpty(error = EXTENSION_NAME_REQD: Provide valid
            {} attribute) Size(max = 128, error = INVALID_EXTENSION_NAME: Provide
            valid {} attribute. Invalid value {}, min = 0) '
          type: string
        namespace:
          description: 'Namespace: NotEmpty(error = EXTENSION_NAMESPACE_REQD: Provide
            valid {} attribute) Pattern(error = INVALID_EXTENSION_NAMESPACE: Provide
            valid {} attribute. Invalid value {}, regexp = ^[a-z][a-z0-9/]*[a-z0-9]+$) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - conf
      - namespace
      - name
      - tenant_id
    IPv4Address:
      properties:
        ipv4:
          description: 'Ipv4: IPv4(INVALID_IPV4_0001, regexp = [/0-9.]*) '
          type: string
    Identity:
      properties:
        email:
          description: 'Email: Email(message = email) MaxLength(message = maxLength,
            value = 1000L) '
          type: string
    Idp:
      properties:
        auto_provision_operators:
          description: Auto Provision Operators
          type: boolean
        auto_provision_roles:
          description: Auto Provision Roles
          type: boolean
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) Size(max = 5000, DISABLED_REASON_INVALID_0001, min = 0) '
          type: string
        id:
          description: Id
          type: string
        idp_domain_admin_email:
          description: 'Idp Domain Admin Email: Length(max = 1024, error = SSO_INVALID_IDP_DOMAIN_ADMIN_EMAIL:
            Provide a valid admin email for IdP domain, min = 1) NotEmpty(error =
            SSO_EMPTY_IDP_DOMAIN_ADMIN_EMAIL: Provide an admin email for IdP) '
          type: string
        idp_domains:
          description: 'Idp Domains: ListString(allowDuplicate = false, allowEmpty
            = true, allowNull = true, length = 128, listMaxSize = 100, error = SSO_INVALID_IDP_EMAIL_DOMAIN:
            Provide valid and unique IdP domain(s), all in lowercase and consist of
            letters and numbers only, noTrim = false, regex = [0-9a-z._-]+, required
            = false) '
          items:
            description: Idp Domains
            type: string
          type: array
        idp_entity_id:
          description: 'Idp Entity Id: Length(max = 2048, error = SSO_INVALID_IDP_ENTITY_ID:
            Invalid size for entity id in metadata, min = 1) NotEmpty(error = SSO_EMPTY_IDP_ENTITY_ID:
            Provide entity id for IdP) '
          type: string
        idp_login_url:
          description: 'Idp Login Url: Length(max = 2048, error = SSO_INVALID_IDP_SSO_URL:
            Invalid size for IdP single sign on Url, min = 1) '
          type: string
        idp_logout_url:
          description: 'Idp Logout Url: Length(max = 2048, error = SSO_INVALID_IDP_LOGOUT_URL:
            Invalid size for logout url, min = 1) '
          type: string
        idp_metadata_b64:
          description: 'Idp Metadata B64: Length(max = 1000000, error = SSO_INVALID_IDP_METADATA_B64:
            Invalid size for IdP metadata, min = 1) '
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) Size(max = 5000, INACTIVE_REASON_INVALID_0001, min = 0) '
          type: string
        role_map:
          type: object
        session_timeout_s:
          description: 'Session Timeout S: Range(max = 2147483646L, error = SSO_INVALID_SESSION_TIMEOUT_SEC:
            Invalid range {validatedValue}. Please use a range between 180 to 2147483646
            inclusive, min = 180L) '
          format: int32
          type: integer
        sp_metadata_b64:
          description: 'Sp Metadata B64: Length(max = 1000000, error = SSO_INVALID_SP_METADATA_B64:
            Invalid size for service provide metadata, min = 1) '
          type: string
        sp_x509_b64:
          description: 'Sp X509 B64: Length(max = 100000, error = SSO_INVALID_SP_X509_B64:
            Invalid size for service provide x509 cert, min = 1) '
          type: string
        sp_x509_serial_no:
          description: 'Sp X509 Serial No: Length(max = 1024, error = SSO_INVALID_SP_X509_SERIAL_NO:
            Invalid size for service provide x509 serial no, min = 1) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - idp_entity_id
      - idp_domain_admin_email
      - tenant_id
    IdpV3N1:
      properties:
        auto_provision_operators:
          description: Auto Provision Operators
          type: boolean
        auto_provision_roles:
          description: Auto Provision Roles
          type: boolean
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) Size(max = 5000, DISABLED_REASON_INVALID_0001, min = 0) '
          type: string
        id:
          description: Id
          type: string
        idp_domain_admin_email:
          description: 'Idp Domain Admin Email: Length(max = 1024, error = SSO_INVALID_IDP_DOMAIN_ADMIN_EMAIL:
            Provide a valid admin email for IdP domain, min = 1) NotEmpty(error =
            SSO_EMPTY_IDP_DOMAIN_ADMIN_EMAIL: Provide an admin email for IdP) '
          type: string
        idp_domains:
          description: 'Idp Domains: ListString(allowDuplicate = false, allowEmpty
            = true, allowNull = true, length = 128, listMaxSize = 100, error = SSO_INVALID_IDP_EMAIL_DOMAIN:
            Provide valid and unique IdP domain(s), all in lowercase and consist of
            letters and numbers only, noTrim = false, regex = [0-9a-z._-]+, required
            = false) '
          items:
            description: Idp Domains
            type: string
          type: array
        idp_entity_id:
          description: 'Idp Entity Id: Length(max = 2048, error = SSO_INVALID_IDP_ENTITY_ID:
            Invalid size for entity id in metadata, min = 1) NotEmpty(error = SSO_EMPTY_IDP_ENTITY_ID:
            Provide entity id for IdP) '
          type: string
        idp_login_url:
          description: 'Idp Login Url: Length(max = 2048, error = SSO_INVALID_IDP_SSO_URL:
            Invalid size for IdP single sign on Url, min = 1) '
          type: string
        idp_logout_url:
          description: 'Idp Logout Url: Length(max = 2048, error = SSO_INVALID_IDP_LOGOUT_URL:
            Invalid size for logout url, min = 1) '
          type: string
        idp_metadata_b64:
          description: 'Idp Metadata B64: Length(max = 1000000, error = SSO_INVALID_IDP_METADATA_B64:
            Invalid size for IdP metadata, min = 1) '
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) Size(max = 5000, INACTIVE_REASON_INVALID_0001, min = 0) '
          type: string
        role_map:
          type: object
        session_timeout_s:
          description: 'Session Timeout S: Range(max = 2147483646L, error = SSO_INVALID_SESSION_TIMEOUT_SEC:
            Invalid range {validatedValue}. Please use a range between 180 to 2147483646
            inclusive, min = 180L) '
          format: int32
          type: integer
        sign_redirect_binding:
          description: Sign Redirect Binding
          type: boolean
        sp_metadata_b64:
          description: 'Sp Metadata B64: Length(max = 1000000, error = SSO_INVALID_SP_METADATA_B64:
            Invalid size for service provide metadata, min = 1) '
          type: string
        sp_x509_b64:
          description: 'Sp X509 B64: Length(max = 100000, error = SSO_INVALID_SP_X509_B64:
            Invalid size for service provide x509 cert, min = 1) '
          type: string
        sp_x509_serial_no:
          description: 'Sp X509 Serial No: Length(max = 1024, error = SSO_INVALID_SP_X509_SERIAL_NO:
            Invalid size for service provide x509 serial no, min = 1) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - idp_entity_id
      - idp_domain_admin_email
      - tenant_id
    IdpV3N2:
      properties:
        auto_provision_operators:
          description: Auto Provision Operators
          type: boolean
        auto_provision_roles:
          description: Auto Provision Roles
          type: boolean
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) Size(max = 5000, DISABLED_REASON_INVALID_0001, min = 0) '
          type: string
        id:
          description: Id
          type: string
        idp_domain_admin_email:
          description: 'Idp Domain Admin Email: Length(max = 1024, error = SSO_INVALID_IDP_DOMAIN_ADMIN_EMAIL:
            Provide a valid admin email for IdP domain, min = 1) NotEmpty(error =
            SSO_EMPTY_IDP_DOMAIN_ADMIN_EMAIL: Provide an admin email for IdP) '
          type: string
        idp_domains:
          description: 'Idp Domains: ListString(allowDuplicate = false, allowEmpty
            = true, allowNull = true, length = 128, listMaxSize = 100, error = SSO_INVALID_IDP_EMAIL_DOMAIN:
            Provide valid and unique IdP domain(s), all in lowercase and consist of
            letters and numbers only, noTrim = false, regex = [0-9a-z._-]+, required
            = false) '
          items:
            description: Idp Domains
            type: string
          type: array
        idp_entity_id:
          description: 'Idp Entity Id: Length(max = 2048, error = SSO_INVALID_IDP_ENTITY_ID:
            Invalid size for entity id in metadata, min = 1) NotEmpty(error = SSO_EMPTY_IDP_ENTITY_ID:
            Provide entity id for IdP) '
          type: string
        idp_login_url:
          description: 'Idp Login Url: Length(max = 2048, error = SSO_INVALID_IDP_SSO_URL:
            Invalid size for IdP single sign on Url, min = 1) '
          type: string
        idp_logout_url:
          description: 'Idp Logout Url: Length(max = 2048, error = SSO_INVALID_IDP_LOGOUT_URL:
            Invalid size for logout url, min = 1) '
          type: string
        idp_metadata_b64:
          description: 'Idp Metadata B64: Length(max = 1000000, error = SSO_INVALID_IDP_METADATA_B64:
            Invalid size for IdP metadata, min = 1) '
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) Size(max = 5000, INACTIVE_REASON_INVALID_0001, min = 0) '
          type: string
        is_hob:
          description: Is Hob
          type: boolean
        role_map:
          type: object
        session_timeout_s:
          description: 'Session Timeout S: Range(max = 2147483646L, error = SSO_INVALID_SESSION_TIMEOUT_SEC:
            Invalid range {validatedValue}. Please use a range between 180 to 2147483646
            inclusive, min = 180L) '
          format: int32
          type: integer
        sign_redirect_binding:
          description: Sign Redirect Binding
          type: boolean
        sp_metadata_b64:
          description: 'Sp Metadata B64: Length(max = 1000000, error = SSO_INVALID_SP_METADATA_B64:
            Invalid size for service provide metadata, min = 1) '
          type: string
        sp_x509_b64:
          description: 'Sp X509 B64: Length(max = 100000, error = SSO_INVALID_SP_X509_B64:
            Invalid size for service provide x509 cert, min = 1) '
          type: string
        sp_x509_serial_no:
          description: 'Sp X509 Serial No: Length(max = 1024, error = SSO_INVALID_SP_X509_SERIAL_NO:
            Invalid size for service provide x509 serial no, min = 1) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - idp_entity_id
      - idp_domain_admin_email
      - tenant_id
    IdpV3N3:
      properties:
        auto_provision_operators:
          description: Auto Provision Operators
          type: boolean
        auto_provision_roles:
          description: Auto Provision Roles
          type: boolean
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) Size(max = 5000, DISABLED_REASON_INVALID_0001, min = 0) '
          type: string
        id:
          description: Id
          type: string
        idp_domain_admin_email:
          description: 'Idp Domain Admin Email: Length(max = 1024, error = SSO_INVALID_IDP_DOMAIN_ADMIN_EMAIL:
            Provide a valid admin email for IdP domain, min = 1) NotEmpty(error =
            SSO_EMPTY_IDP_DOMAIN_ADMIN_EMAIL: Provide an admin email for IdP) '
          type: string
        idp_domains:
          description: 'Idp Domains: ListString(allowDuplicate = false, allowEmpty
            = true, allowNull = true, length = 128, listMaxSize = 100, error = SSO_INVALID_IDP_EMAIL_DOMAIN:
            Provide valid and unique IdP domain(s), all in lowercase and consist of
            letters and numbers only, noTrim = false, regex = [0-9a-z._-]+, required
            = false) '
          items:
            description: Idp Domains
            type: string
          type: array
        idp_entity_id:
          description: 'Idp Entity Id: Length(max = 2048, error = SSO_INVALID_IDP_ENTITY_ID:
            Invalid size for entity id in metadata, min = 1) NotEmpty(error = SSO_EMPTY_IDP_ENTITY_ID:
            Provide entity id for IdP) '
          type: string
        idp_login_url:
          description: 'Idp Login Url: Length(max = 2048, error = SSO_INVALID_IDP_SSO_URL:
            Invalid size for IdP single sign on Url, min = 1) '
          type: string
        idp_logout_url:
          description: 'Idp Logout Url: Length(max = 2048, error = SSO_INVALID_IDP_LOGOUT_URL:
            Invalid size for logout url, min = 1) '
          type: string
        idp_metadata_b64:
          description: 'Idp Metadata B64: Length(max = 1000000, error = SSO_INVALID_IDP_METADATA_B64:
            Invalid size for IdP metadata, min = 1) '
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) Size(max = 5000, INACTIVE_REASON_INVALID_0001, min = 0) '
          type: string
        is_hob:
          description: Is Hob
          type: boolean
        match_email_domain:
          description: Match Email Domain
          type: boolean
        role_map:
          type: object
        session_timeout_s:
          description: 'Session Timeout S: Range(max = 2147483646L, error = SSO_INVALID_SESSION_TIMEOUT_SEC:
            Invalid range {validatedValue}. Please use a range between 180 to 2147483646
            inclusive, min = 180L) '
          format: int32
          type: integer
        sign_redirect_binding:
          description: Sign Redirect Binding
          type: boolean
        sp_metadata_b64:
          description: 'Sp Metadata B64: Length(max = 1000000, error = SSO_INVALID_SP_METADATA_B64:
            Invalid size for service provide metadata, min = 1) '
          type: string
        sp_x509_b64:
          description: 'Sp X509 B64: Length(max = 100000, error = SSO_INVALID_SP_X509_B64:
            Invalid size for service provide x509 cert, min = 1) '
          type: string
        sp_x509_serial_no:
          description: 'Sp X509 Serial No: Length(max = 1024, error = SSO_INVALID_SP_X509_SERIAL_NO:
            Invalid size for service provide x509 serial no, min = 1) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - idp_entity_id
      - idp_domain_admin_email
      - tenant_id
    LinkedAccount:
      properties:
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: Disabled Reason
          type: string
        failed_login_attempts:
          description: Failed Login Attempts
          format: int32
          type: integer
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: Inactive Reason
          type: string
        provider_key:
          description: 'Provider Key: Pattern(error = LINKED_ACCOUNT_PROVIDER_KEY:
            Linked account provider key is invalid, regexp = (password)) '
          type: string
        provider_value:
          description: Provider Value
          type: string
        provider_value_updated_on:
          description: Provider Value Updated On
          format: int64
          type: integer
        region:
          description: Region
          type: string
        tenant_id:
          description: Tenant Id
          type: string
    ListQueryResponse:
      properties:
        count:
          description: 'The actual count

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size is 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query

            '
          type: object
        tenant_id:
          type: string
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count

            '
          format: int32
          type: integer
        description:
          description: 'Description

            '
        id:
          description: 'The ID

            '
          type: string
        tenant_id:
          description: 'The ID of the tenant

            '
          type: string
      type: object
    Login:
      properties:
        email:
          description: 'Email: Email(message = email) MaxLength(message = maxLength,
            value = 1000L) '
          type: string
        logout_others:
          description: Logout Others
          type: boolean
        password:
          description: 'Password: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000L) '
          type: string
        requestId:
          description: 'RequestId: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 200L) '
          type: string
    Operator:
      properties:
        addresses:
          description: 'Addresses: Size(max = 20, error = OPERATOR_INVALID_ADDRESS_LIST_SIZE:
            Provide a valid address list. A maximum of twenty addresses can be specified,
            min = 0) Valid '
          items:
            $ref: '#/components/schemas/Address'
          type: array
        custom_roles:
          description: 'Custom Roles: Size(max = 100, error = OPERATOR_INVALID_CUSTOM_ROLES_LIST_SIZE:
            Custom roles set is limited to {} length, min = 0) '
          items:
            $ref: '#/components/schemas/CustomRole'
          type: array
        disable_idp_login:
          description: Disable Idp Login
          type: boolean
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        email:
          description: 'Email: Email(error = OPERATOR_EMAIL_INVALID: Invalid email
            {validatedValue}. Please use a valid email address, regexp = .*) Size(max
            = 1000, error = OPERATOR_EMAIL_INVALID: Invalid email {validatedValue}.
            Please use a valid email address, min = 1) NotEmpty '
          type: string
        email_validated:
          description: Email Validated
          type: boolean
        enable_session_ip_lock:
          description: Enable Session Ip Lock
          type: boolean
        first_name:
          description: 'First Name: Size(max = 100, error = OPERATOR_FNAME_INVALID:
            Invalid first name {validatedValue}. Please use a first name which is
            100 characters or less in length, min = 0) NotEmpty '
          type: string
        from_esp:
          description: From Esp
          type: boolean
        from_esp_name:
          description: 'From Esp Name: Length(max = 512, error = TENANT_INVALID_NAME:
            Please provide a valid name with a length less than 512 characters, min
            = 0) '
          type: string
        from_esp_tenant_id:
          description: 'From Esp Tenant Id: Pattern(error = TENANT_INVALID_ID: Provide
            a valid tenant id, regexp = ^[a-z0-9]{1,50}$) '
          type: string
        id:
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        ipv4_list:
          description: 'Ipv4 List: Size(max = 100, error = OPERATOR_IPV4_INVALID:
            Invalid ipv4 list, min = 0) Valid '
          items:
            $ref: '#/components/schemas/IPv4Address'
          type: array
        is_locked:
          description: Is Locked
          type: boolean
        is_system_owned:
          description: Is System Owned
          type: boolean
        last_login:
          format: date
          type: string
        last_name:
          description: 'Last Name: Size(max = 100, error = OPERATOR_LNAME_INVALID:
            Invalid last name {validatedValue}. Please use a last name which is 100
            characters or less in length, min = 0) '
          type: string
        linked_accounts:
          description: 'Linked Accounts: Size(max = 20, error = OPERATOR_INVALID_LINKED_ACCOUNTS_SIZE:
            Invalid linked account information. Maximum of 20 and at least 1 linked
            account(s) should be specified, min = 1) NotEmpty '
          items:
            $ref: '#/components/schemas/LinkedAccount'
          type: array
        name:
          description: 'Name: JsonIgnore(value = true) '
          type: string
        phone_numbers:
          description: 'Phone Numbers: Size(max = 20, error = OPERATOR_INVALID_PHONE_LIST_SIZE:
            Invalid phone list size. Maximum of twenty phones can be specified, min
            = 0) Valid '
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        region:
          description: Region
          type: string
        roles:
          description: 'Roles: Valid Size(max = 7, error = OPERATOR_INVALID_ROLE_LIST_SIZE:
            Role list size is invalid. Maximum of seven and at least one role must
            be specified, min = 0) '
          items:
            $ref: '#/components/schemas/AuthRole'
          type: array
        secondary_emails:
          description: 'Secondary Emails: Size(max = 20, error = OPERATOR_EMAIL_LIST_INVALID:
            Invalid email list size {validatedValue}. Please use a valid email list,
            min = 0) Valid '
          items:
            $ref: '#/components/schemas/Email'
          type: array
        settings:
          description: 'Settings: Size(max = 100000, error = OPERATOR_INVALID_SETTINGS_SIZE:
            Invalid data size for settings. Maximum of 100KB data size is allowed,
            min = 0) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - linked_accounts
      - first_name
      - email
      - tenant_id
    OperatorV2N1:
      properties:
        addresses:
          description: 'Addresses: Size(max = 20, error = OPERATOR_INVALID_ADDRESS_LIST_SIZE:
            Provide a valid address list. A maximum of twenty addresses can be specified,
            min = 0) Valid '
          items:
            $ref: '#/components/schemas/Address'
          type: array
        custom_roles:
          description: 'Custom Roles: Size(max = 100, error = OPERATOR_INVALID_CUSTOM_ROLES_LIST_SIZE:
            Custom roles set is limited to {} length, min = 0) '
          items:
            $ref: '#/components/schemas/CustomRoleV2N1'
          type: array
        disable_idp_login:
          description: Disable Idp Login
          type: boolean
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        email:
          description: 'Email: Email(error = OPERATOR_EMAIL_INVALID: Invalid email
            {validatedValue}. Please use a valid email address, regexp = .*) Size(max
            = 1000, error = OPERATOR_EMAIL_INVALID: Invalid email {validatedValue}.
            Please use a valid email address, min = 1) NotEmpty '
          type: string
        email_validated:
          description: Email Validated
          type: boolean
        enable_session_ip_lock:
          description: Enable Session Ip Lock
          type: boolean
        first_name:
          description: 'First Name: Size(max = 100, error = OPERATOR_FNAME_INVALID:
            Invalid first name {validatedValue}. Please use a first name which is
            100 characters or less in length, min = 0) NotEmpty '
          type: string
        from_esp:
          description: From Esp
          type: boolean
        from_esp_name:
          description: 'From Esp Name: Length(max = 512, error = TENANT_INVALID_NAME:
            Please provide a valid name with a length less than 512 characters, min
            = 0) '
          type: string
        from_esp_tenant_id:
          description: 'From Esp Tenant Id: Pattern(error = TENANT_INVALID_ID: Provide
            a valid tenant id, regexp = ^[a-z0-9]{1,50}$) '
          type: string
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        ipv4_list:
          description: 'Ipv4 List: Size(max = 100, error = OPERATOR_IPV4_INVALID:
            Invalid ipv4 list, min = 0) Valid '
          items:
            $ref: '#/components/schemas/IPv4Address'
          type: array
        is_locked:
          description: Is Locked
          type: boolean
        is_system_owned:
          description: Is System Owned
          type: boolean
        last_login:
          format: date
          type: string
        last_name:
          description: 'Last Name: Size(max = 100, error = OPERATOR_LNAME_INVALID:
            Invalid last name {validatedValue}. Please use a last name which is 100
            characters or less in length, min = 0) '
          type: string
        linked_accounts:
          description: 'Linked Accounts: Size(max = 20, error = OPERATOR_INVALID_LINKED_ACCOUNTS_SIZE:
            Invalid linked account information. Maximum of 20 and at least 1 linked
            account(s) should be specified, min = 1) NotEmpty '
          items:
            $ref: '#/components/schemas/LinkedAccount'
          type: array
        name:
          description: 'Name: JsonIgnore(value = true) '
          type: string
        phone_numbers:
          description: 'Phone Numbers: Size(max = 20, error = OPERATOR_INVALID_PHONE_LIST_SIZE:
            Invalid phone list size. Maximum of twenty phones can be specified, min
            = 0) Valid '
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        region:
          description: Region
          type: string
        roles:
          description: 'Roles: Valid Size(max = 7, error = OPERATOR_INVALID_ROLE_LIST_SIZE:
            Role list size is invalid. Maximum of seven and at least one role must
            be specified, min = 0) '
          items:
            $ref: '#/components/schemas/AuthRole'
          type: array
        secondary_emails:
          description: 'Secondary Emails: Size(max = 20, error = OPERATOR_EMAIL_LIST_INVALID:
            Invalid email list size {validatedValue}. Please use a valid email list,
            min = 0) Valid '
          items:
            $ref: '#/components/schemas/Email'
          type: array
        settings:
          description: 'Settings: Size(max = 100000, error = OPERATOR_INVALID_SETTINGS_SIZE:
            Invalid data size for settings. Maximum of 100KB data size is allowed,
            min = 0) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - linked_accounts
      - first_name
      - email
      - tenant_id
    PasswordChange:
      properties:
        oldPassword:
          description: 'OldPassword: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000L) '
          type: string
        password:
          description: 'Password: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000L) Required(message = required) '
          type: string
        repeatPassword:
          description: 'RepeatPassword: MinLength(message = minLength, value = 1L)
            MaxLength(message = maxLength, value = 1000L) Required(message = required) '
          type: string
      required:
      - repeatPassword
      - password
    PasswordPolicy:
      properties:
        enable_failed_login_attempts:
          description: Enable Failed Login Attempts
          type: boolean
        enable_failed_login_time_delay:
          description: Enable Failed Login Time Delay
          type: boolean
        enable_maximum_password_length:
          description: Enable Maximum Password Length
          type: boolean
        enable_minimum_password_length:
          description: Enable Minimum Password Length
          type: boolean
        enable_password_aging:
          description: Enable Password Aging
          type: boolean
        enable_password_identity_difference:
          description: Enable Password Identity Difference
          type: boolean
        enable_password_no_reuse_count:
          description: Enable Password No Reuse Count
          type: boolean
        enable_session_ip_lock:
          description: Enable Session Ip Lock
          type: boolean
        enable_two_lower_case_letters:
          description: Enable Two Lower Case Letters
          type: boolean
        enable_two_numbers:
          description: Enable Two Numbers
          type: boolean
        enable_two_special_characters:
          description: Enable Two Special Characters
          type: boolean
        enable_two_upper_case_letters:
          description: Enable Two Upper Case Letters
          type: boolean
        failed_login_attempts:
          type: integer
        maximum_password_length:
          type: integer
        minimum_password_length:
          type: integer
        password_aging_days:
          type: integer
        password_aging_notification:
          type: integer
        password_no_reuse_count:
          type: integer
        special_characters:
          description: 'Special Characters: JsonIgnore(value = true) '
          type: string
        special_characters_regex:
          description: 'Special Characters Regex: JsonIgnore(value = true) '
          type: string
    PasswordReset:
      properties:
        oldPassword:
          description: 'OldPassword: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000L) '
          type: string
        password:
          description: 'Password: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000L) Required(message = required) '
          type: string
        repeatPassword:
          description: 'RepeatPassword: MinLength(message = minLength, value = 1L)
            MaxLength(message = maxLength, value = 1000L) Required(message = required) '
          type: string
        token:
          description: 'Token: Pattern(message = A valid token is required, value
            = ^[a-zA-Z0-9_-]{1,1000}$) '
          type: string
      required:
      - repeatPassword
      - password
    PhoneNumber:
      properties:
        country_code:
          description: Country Code
          format: int32
          type: integer
        local_extension:
          description: Local Extension
          format: int32
          type: integer
        number:
          description: Number
          format: int64
          type: integer
        types:
          description: Types
          items:
            $ref: '#/components/schemas/Type'
          type: array
    ProfileV2N1:
      properties:
        id:
          description: Id
          type: string
        session_id:
          description: Session Id
          type: string
        tenant_id:
          description: Tenant Id
          type: string
    Protocol:
      properties: {}
    Provider:
      properties:
        canonical_name:
          description: Canonical Name
          type: string
        description:
          description: Description
          type: string
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        id:
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        map_external_group:
          type: object
        name:
          description: Name
          type: string
        protocol:
          $ref: '#/components/schemas/Protocol'
          description: Protocol
        region:
          description: Region
          type: string
        template:
          description: Template
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - tenant_id
    ProviderData:
      properties:
        certificate:
          $ref: '#/components/schemas/CertificateCa'
          description: Certificate
        password_hash:
          description: Password Hash
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
          description: Provider
        salt:
          description: Salt
          type: string
        security:
          description: Security
          type: string
    SamlResponse:
      properties:
        relayState:
          description: 'RelayState: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000000L) '
          type: string
        samlResponse:
          description: 'SamlResponse: Required(message = required) MinLength(message
            = minLength, value = 1L) MaxLength(message = maxLength, value = 1000000L) '
          type: string
      required:
      - samlResponse
    Session:
      properties:
        client_ip:
          description: Client Ip
          type: string
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        expires:
          format: date
          type: string
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        operator_id:
          description: Operator Id
          type: string
        session_key_c:
          description: 'Session Key C: Length(max = 128, , min = 0) '
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
        type:
          description: Type
          type: string
        user_agent:
          $ref: '#/components/schemas/UserAgent'
          description: User Agent
      required:
      - tenant_id
    Signup:
      properties:
        addresses:
          description: Addresses
          items:
            $ref: '#/components/schemas/Address'
          type: array
        custom_roles:
          description: Custom Roles
          items:
            $ref: '#/components/schemas/CustomRole'
          type: array
        email:
          description: 'Email: Email(message = email) MaxLength(message = maxLength,
            value = 1000L) '
          type: string
        enable_session_ip_lock:
          description: Enable Session Ip Lock
          type: boolean
        first_name:
          description: 'First Name: Pattern(message = A valid first name is required,
            value = ^[a-zA-Z0-9\\s_-]{1,100}$) '
          type: string
        ipv4_list:
          description: Ipv4 List
          items:
            $ref: '#/components/schemas/IPv4Address'
          type: array
        last_name:
          description: 'Last Name: Pattern(message = A valid last name is required,
            value = ^[a-zA-Z0-9\\s_-]{0,100}$) '
          type: string
        logout_others:
          description: Logout Others
          type: boolean
        name:
          description: 'Name: Pattern(message = A valid name is required, value =
            ^[ a-zA-Z0-9_-]{0,210}$) '
          type: string
        password:
          description: 'Password: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000L) '
          type: string
        phone_numbers:
          description: Phone Numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        repeatPassword:
          description: 'RepeatPassword: Required(message = required) MinLength(message
            = minLength, value = 1L) MaxLength(message = maxLength, value = 1000L) '
          type: string
        requestId:
          description: 'RequestId: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 200L) '
          type: string
        roles:
          description: Roles
          items:
            $ref: '#/components/schemas/AuthRole'
          type: array
        secondary_emails:
          description: Secondary Emails
          items:
            $ref: '#/components/schemas/Email'
          type: array
      required:
      - repeatPassword
    Tenant:
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: 'Address: Valid '
        canonical_name:
          description: 'Canonical Name: Pattern(error = TENANT_INVALID_CANONICAL_NAME:
            Please provide a valid canonical name with a length less than 128 characters,
            e.g., mydomain.com, regexp = [0-9a-zA-Z\\.\\-_]{1,128}) '
          type: string
        clients:
          description: 'Clients: Valid '
          items:
            description: Clients
            type: string
          type: array
        description:
          description: 'Description: Length(max = 1024, error = TENANT_INVALID_DESCRIPTION:
            Please provide a description with a length less than 1024 characters,
            min = 0) '
          type: string
        disabled:
          description: Disabled
          type: string
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: string
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        ipv4_list:
          description: 'Ipv4 List: Valid '
          items:
            $ref: '#/components/schemas/IPv4Address'
          type: array
        is_esp:
          description: Is Esp
          type: boolean
        is_support:
          description: Is Support
          type: boolean
        name:
          description: 'Name: Length(max = 512, error = TENANT_INVALID_NAME: Please
            provide a valid name with a length less than 512 characters, min = 0) '
          type: string
        operator:
          $ref: '#/components/schemas/Operator'
          description: Operator
        password_policy:
          $ref: '#/components/schemas/PasswordPolicy'
          description: 'Password Policy: Valid '
        phone_numbers:
          description: 'Phone Numbers: Valid '
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        provider_data:
          description: 'Provider Data: Valid '
          items:
            $ref: '#/components/schemas/ProviderData'
          type: array
        region:
          description: Region
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - tenant_id
    TenantCacheQueryFilter:
      properties:
        canonical_name:
          description: Canonical Name
          type: string
        clients:
          description: Clients
          items:
            description: Clients
            type: string
          type: array
        id:
          description: Id
          type: string
        is_esp:
          description: Is Esp
          type: boolean
        name:
          description: Name
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - tenant_id
    TenantV2N1:
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: 'Address: Valid '
        canonical_name:
          description: 'Canonical Name: Pattern(error = TENANT_INVALID_CANONICAL_NAME:
            Please provide a valid canonical name with a length less than 128 characters,
            e.g., mydomain.com, regexp = [0-9a-zA-Z\\.\\-_]{1,128}) '
          type: string
        clients:
          description: 'Clients: Valid '
          items:
            description: Clients
            type: string
          type: array
        description:
          description: 'Description: Length(max = 1024, error = TENANT_INVALID_DESCRIPTION:
            Please provide a description with a length less than 1024 characters,
            min = 0) '
          type: string
        disabled:
          description: Disabled
          type: string
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: string
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        ipv4_list:
          description: 'Ipv4 List: Valid '
          items:
            $ref: '#/components/schemas/IPv4Address'
          type: array
        is_esp:
          description: Is Esp
          type: boolean
        is_support:
          description: Is Support
          type: boolean
        name:
          description: 'Name: Length(max = 512, error = TENANT_INVALID_NAME: Please
            provide a valid name with a length less than 512 characters, min = 0) '
          type: string
        operator:
          $ref: '#/components/schemas/Operator'
          description: Operator
        pan_account_id:
          description: 'Pan Account Id: Length(max = 32, TENANT_INVALID_PAN_CSP_ACCOUNT_ID,
            min = 0) '
          type: string
        pan_tenant_id:
          description: 'Pan Tenant Id: Length(max = 32, TENANT_INVALID_PAN_IT_TENANT_ID,
            min = 0) Digits(fraction = 0, integer = 32, TENANT_INVALID_PAN_IT_TENANT_ID) '
          type: string
        password_policy:
          $ref: '#/components/schemas/PasswordPolicy'
          description: 'Password Policy: Valid '
        phone_numbers:
          description: 'Phone Numbers: Valid '
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        provider_data:
          description: 'Provider Data: Valid '
          items:
            $ref: '#/components/schemas/ProviderData'
          type: array
        region:
          description: Region
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - tenant_id
    TenantV2N2:
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: 'Address: Valid '
        canonical_name:
          description: 'Canonical Name: Pattern(error = TENANT_INVALID_CANONICAL_NAME:
            Please provide a valid canonical name with a length less than 128 characters,
            e.g., mydomain.com, regexp = [0-9a-zA-Z\\.\\-_]{1,128}) '
          type: string
        clients:
          description: 'Clients: Valid '
          items:
            description: Clients
            type: string
          type: array
        description:
          description: 'Description: Length(max = 1024, error = TENANT_INVALID_DESCRIPTION:
            Please provide a description with a length less than 1024 characters,
            min = 0) '
          type: string
        disabled:
          description: Disabled
          type: string
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: string
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        ipv4_list:
          description: 'Ipv4 List: Valid '
          items:
            $ref: '#/components/schemas/IPv4Address'
          type: array
        is_esp:
          description: Is Esp
          type: boolean
        is_support:
          description: Is Support
          type: boolean
        name:
          description: 'Name: Length(max = 512, error = TENANT_INVALID_NAME: Please
            provide a valid name with a length less than 512 characters, min = 0) '
          type: string
        operator:
          $ref: '#/components/schemas/Operator'
          description: Operator
        pan_account_id:
          description: 'Pan Account Id: Length(max = 32, TENANT_INVALID_PAN_CSP_ACCOUNT_ID,
            min = 0) '
          type: string
        pan_tenant_id:
          description: 'Pan Tenant Id: Length(max = 32, TENANT_INVALID_PAN_IT_TENANT_ID,
            min = 0) Digits(fraction = 0, integer = 32, TENANT_INVALID_PAN_IT_TENANT_ID) '
          type: string
        password_policy:
          $ref: '#/components/schemas/PasswordPolicy'
          description: 'Password Policy: Valid '
        phone_numbers:
          description: 'Phone Numbers: Valid '
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        prisma_access_tenant_id:
          description: 'Prisma Access Tenant Id: Length(max = 32, TENANT_INVALID_PRISMA_ACCESS_TENANT_ID,
            min = 0) Digits(fraction = 0, integer = 32, TENANT_INVALID_PRISMA_ACCESS_TENANT_ID) '
          type: string
        provider_data:
          description: 'Provider Data: Valid '
          items:
            $ref: '#/components/schemas/ProviderData'
          type: array
        region:
          description: Region
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - tenant_id
    TenantV2N3:
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: 'Address: Valid '
        canonical_name:
          description: 'Canonical Name: Pattern(error = TENANT_INVALID_CANONICAL_NAME:
            Please provide a valid canonical name with a length less than 128 characters,
            e.g., mydomain.com, regexp = [0-9a-zA-Z\\.\\-_]{1,128}) '
          type: string
        clients:
          description: 'Clients: Valid '
          items:
            description: Clients
            type: string
          type: array
        csp_tenant_id:
          description: 'Csp Tenant Id: Length(max = 32, TENANT_INVALID_CSP_IT_TENANT_ID,
            min = 0) Digits(fraction = 0, integer = 32, TENANT_INVALID_CSP_IT_TENANT_ID) '
          type: string
        description:
          description: 'Description: Length(max = 1024, error = TENANT_INVALID_DESCRIPTION:
            Please provide a description with a length less than 1024 characters,
            min = 0) '
          type: string
        disabled:
          description: Disabled
          type: string
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        inactive:
          description: Inactive
          type: string
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        ipv4_list:
          description: 'Ipv4 List: Valid '
          items:
            $ref: '#/components/schemas/IPv4Address'
          type: array
        is_esp:
          description: Is Esp
          type: boolean
        is_support:
          description: Is Support
          type: boolean
        name:
          description: 'Name: Length(max = 512, error = TENANT_INVALID_NAME: Please
            provide a valid name with a length less than 512 characters, min = 0) '
          type: string
        operator:
          $ref: '#/components/schemas/Operator'
          description: Operator
        pan_account_id:
          description: 'Pan Account Id: Length(max = 32, TENANT_INVALID_PAN_CSP_ACCOUNT_ID,
            min = 0) '
          type: string
        pan_tenant_id:
          description: 'Pan Tenant Id: Length(max = 32, TENANT_INVALID_PAN_IT_TENANT_ID,
            min = 0) Digits(fraction = 0, integer = 32, TENANT_INVALID_PAN_IT_TENANT_ID) '
          type: string
        password_policy:
          $ref: '#/components/schemas/PasswordPolicy'
          description: 'Password Policy: Valid '
        phone_numbers:
          description: 'Phone Numbers: Valid '
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        prisma_access_tenant_id:
          description: 'Prisma Access Tenant Id: Length(max = 32, TENANT_INVALID_PRISMA_ACCESS_TENANT_ID,
            min = 0) Digits(fraction = 0, integer = 32, TENANT_INVALID_PRISMA_ACCESS_TENANT_ID) '
          type: string
        provider_data:
          description: 'Provider Data: Valid '
          items:
            $ref: '#/components/schemas/ProviderData'
          type: array
        region:
          description: Region
          type: string
        telemetry_region:
          description: Telemetry Region
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - tenant_id
    Token:
      properties:
        oldPassword:
          description: 'OldPassword: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000L) '
          type: string
        password:
          description: 'Password: MinLength(message = minLength, value = 1L) MaxLength(message
            = maxLength, value = 1000L) Required(message = required) '
          type: string
        repeatPassword:
          description: 'RepeatPassword: MinLength(message = minLength, value = 1L)
            MaxLength(message = maxLength, value = 1000L) Required(message = required) '
          type: string
        token:
          description: 'Token: Pattern(message = A valid token is required, value
            = ^[a-zA-Z0-9_-]{1,1000}$) '
          type: string
      required:
      - repeatPassword
      - password
    Type:
      properties:
        value:
          description: Value
          type: string
    UserAgent:
      properties:
        name:
          description: Name
          type: string
    UserIdentity:
      properties:
        disabled:
          description: Disabled
          type: boolean
        disabled_reason:
          description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,
            min = 0) '
          type: string
        first_name:
          description: First Name
          type: string
        id:
          type: string
        inactive:
          description: Inactive
          type: boolean
        inactive_reason:
          description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,
            min = 0) '
          type: string
        last_name:
          description: Last Name
          type: string
        middle_name:
          description: Middle Name
          type: string
        region:
          description: Region
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
        user_dn:
          description: User Dn
          type: string
        user_fqn:
          description: User Fqn
          type: string
      required:
      - tenant_id
info:
  contact: {}
  description: List of APIs used to manage the operators, IDPs, users, base roles,
    base permissions,  password change, sign up, and client roles, base roles.
  title: System Administration
  version: Latest
openapi: 3.0.0
paths:
  /v2.0/api/accounts/password/reset:
    post:
      description: Rest operator password
      operationId: post-v2.0-api-accounts-password-reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        description: Password reset details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_PASSWORD_RESET_INVALID_REQUEST
                  - code: OPERATOR_PASSWORD_RESET_INVALID_TOKEN
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Rest operator password (v2.0)
      tags:
      - System Administration
  /v2.0/api/accounts/verify:
    post:
      description: Verify email after signup
      operationId: post-v2.0-api-accounts-verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        description: Verification details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SIGNUP_INVALID_VERIFICATION_REQUEST
                  - code: SIGNUP_OLDPASSWORD_INVALID
                  - code: SIGNUP_VERIFIED_EMAIL_TOKEN
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Verify email after signup (v2.0)
      tags:
      - System Administration
  /v2.0/api/api_versions:
    get:
      description: Get basic set of available API versions
      operationId: get-v2.0-api-api_versions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersions'
          description: Successful Operation
      summary: Get basic set of available API versions (v2.0)
      tags:
      - System Administration
  /v2.0/api/permissions:
    get:
      description: Get list of permitted APIs that the current operator can invoke
      operationId: get-v2.0-api-permissions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResource'
          description: Successful Operation
      summary: Get list of permitted APIs that the current operator can invoke (v2.0)
      tags:
      - System Administration
  /v2.0/api/profile:
    get:
      description: Get current user profile
      operationId: get-v2.0-api-profile
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Successful Operation
      summary: Get current user profile (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{client_id}/logout:
    post:
      description: Logout api for esp client. Reverts back to esp session
      operationId: post-v2.0-api-tenants-client_id-logout
      parameters:
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthResource'
        description: Tenant details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResource'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_OPERATOR_DATA
                  - code: ESP_INVALID_OPERATOR_INACTIVE_ROLES
                  - code: ESP_INVALID_TENANT_DATA
                  - code: ESP_INVALID_TENANT_INACTIVE_CLIENTS
                  - code: ESP_INVALID_TENANT_CLIENT_IP
                  - code: ESP_INVALID_OPERATOR_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Logout api for esp client. Reverts back to esp session (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}:
    get:
      description: Get tenant details for tenant id
      operationId: get-v2.0-api-tenants-tenant_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get tenant details for tenant id (v2.0)
      tags:
      - System Administration
    put:
      description: Update tenant
      operationId: put-v2.0-api-tenants-tenant_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        description: Tenant details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_ETAG
                  - code: TENANT_INVALID_CANONICAL_NAME_CHANGE
                  - code: TENANT_PASSWORD_AGING_PREVENT_LOCKOUT
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update tenant (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/accounts/password/change:
    post:
      description: Allows one to change password
      operationId: post-v2.0-api-tenants-tenant_id-accounts-password-change
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        description: Password change details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ACCOUNT_INVALID_PASSWORD_CHANGE
                  - code: ACCOUNT_INVALID_OLD_PASSWORD
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Allows one to change password (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/api_versions:
    get:
      description: Get API versions for given apiVersions
      operationId: get-v2.0-api-tenants-tenant_id-api_versions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersions'
          description: Successful Operation
      summary: Get API versions for given apiVersions (v2.0)
      tags:
      - System Administration
    put:
      description: Update Api Versions
      operationId: put-v2.0-api-tenants-tenant_id-api_versions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiVersions'
        description: Tenant details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersions'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_ETAG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Api Versions (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/base_permissions:
    get:
      description: Get a list of tenant base permissions
      operationId: get-v2.0-api-tenants-tenant_id-base_permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomPermission'
                type: array
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a list of tenant base permissions (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/base_roles:
    get:
      description: Get a list of tenant base roles
      operationId: get-v2.0-api-tenants-tenant_id-base_roles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/AuthRole'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a list of tenant base roles (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/clients:
    get:
      description: Get esp tenant clients details for tenant id
      operationId: get-v2.0-api-tenants-tenant_id-clients
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Tenant'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get esp tenant clients details for tenant id (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/clients/query:
    post:
      description: Get esp tenant clients details for tenant id
      operationId: post-v2.0-api-tenants-tenant_id-clients-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        description: Tenant details
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/TenantCacheQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get esp tenant clients details for tenant id (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/clients/{client_id}/base_roles:
    get:
      description: Get a list of client base roles
      operationId: get-v2.0-api-tenants-tenant_id-clients-client_id-base_roles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/AuthRole'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_TENANT_ID
                  - code: ESP_CLIENT_ID_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a list of client base roles (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/clients/{client_id}/login:
    post:
      description: Login api for esp client
      operationId: post-v2.0-api-tenants-tenant_id-clients-client_id-login
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        description: Login details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_OPERATOR_DATA
                  - code: ESP_INVALID_OPERATOR_INACTIVE_ROLES
                  - code: ESP_INVALID_TENANT_DATA
                  - code: ESP_INVALID_TENANT_INACTIVE_CLIENTS
                  - code: ESP_INVALID_CLIENT_DATA
                  - code: ESP_INACTIVE_CLIENT
                  - code: ESP_INVALID_TENANT_CLIENT_IP
                  - code: ESP_INVALID_CLIENT_PERMISSION_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Login api for esp client (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/clients/{client_id}/roles:
    get:
      description: Get a list of client custom roles
      operationId: get-v2.0-api-tenants-tenant_id-clients-client_id-roles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/CustomRoleV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_TENANT_ID
                  - code: ESP_CLIENT_ID_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a list of client custom roles (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/clients/{client_id}/roles/{role_id}:
    get:
      description: Get a client custom role
      operationId: get-v2.0-api-tenants-tenant_id-clients-client_id-roles-role_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      - description: Role Id
        in: path
        name: role_id
        required: true
        schema:
          description: Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_TENANT_ID
                  - code: ESP_CLIENT_ID_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a client custom role (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/elementusers:
    get:
      description: Get all element User
      operationId: get-v2.0-api-tenants-tenant_id-elementusers
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ElementUser'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all element User (v2.0)
      tags:
      - System Administration
    post:
      description: Create Element User
      operationId: post-v2.0-api-tenants-tenant_id-elementusers
      parameters:
      - description: tenant_id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementUserCredentials'
        description: Details of the element user to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_USERNAME
                  - code: LOGIN_ID_REQUIRED
                  - code: RESERVED_ELEMENT_USER_LOGIN_ID
                  - code: IS_TENANT_LEVEL_FLAG_REQUIRED
                  - code: INVALID_USER_ROLE
                  - code: LOGIN_ID_CONSTRAINT_LENGTH
                  - code: INVALID_LOGIN_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Element User (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/elementusers/{user_id}:
    delete:
      description: Delete element user
      operationId: delete-v2.0-api-tenants-tenant_id-elementusers-user_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_USER_NOT_FOUND
                  - code: INVALID_ELEMENT_USER_DELETE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete element user (v2.0)
      tags:
      - System Administration
    get:
      description: Get specific element User
      operationId: get-v2.0-api-tenants-tenant_id-elementusers-user_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
      summary: Get specific element User (v2.0)
      tags:
      - System Administration
    put:
      description: Update an existing element user.
      operationId: put-v2.0-api-tenants-tenant_id-elementusers-user_id
      parameters:
      - description: tenant id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: userId
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementUserCredentials'
        description: Details of the element user to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_USERNAME
                  - code: LOGIN_ID_REQUIRED
                  - code: RESERVED_ELEMENT_USER_LOGIN_ID
                  - code: IS_TENANT_LEVEL_FLAG_REQUIRED
                  - code: INVALID_USER_ROLE
                  - code: LOGIN_ID_CONSTRAINT_LENGTH
                  - code: INVALID_LOGIN_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing element user. (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/elementusers/{user_id}/access:
    get:
      description: Get all accesses for a particular user
      operationId: get-v2.0-api-tenants-tenant_id-elementusers-user_id-access
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ElementUserAccess'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all accesses for a particular user (v2.0)
      tags:
      - System Administration
    post:
      description: Grant Specific role to Element user on specific element
      operationId: post-v2.0-api-tenants-tenant_id-elementusers-user_id-access
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: element user id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementUserAccess'
        description: Details of the specific role for element user to be granted
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUserAccess'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_ENUM_VALUE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Grant Specific role to Element user on specific element (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/elementusers/{user_id}/access/{access_id}:
    delete:
      description: Delete element user Access
      operationId: delete-v2.0-api-tenants-tenant_id-elementusers-user_id-access-access_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      - description: Access Id
        in: path
        name: access_id
        required: true
        schema:
          description: Access Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUserAccess'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_USER_NOT_FOUND
                  - code: INVALID_ELEMENT_USER_DELETE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete element user Access (v2.0)
      tags:
      - System Administration
    get:
      description: Get specific element User access
      operationId: get-v2.0-api-tenants-tenant_id-elementusers-user_id-access-access_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      - description: Access Id
        in: path
        name: access_id
        required: true
        schema:
          description: Access Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUserAccess'
          description: Successful Operation
      summary: Get specific element User access (v2.0)
      tags:
      - System Administration
    put:
      description: Update an existing element user access.
      operationId: put-v2.0-api-tenants-tenant_id-elementusers-user_id-access-access_id
      parameters:
      - description: tenant id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: user id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      - description: access  id
        in: path
        name: access_id
        required: true
        schema:
          description: Access Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementUserAccess'
        description: Details of the specific role for element user to be granted
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUserAccess'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_ENUM_VALUE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing element user access. (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/elementusers/{user_id}/password:
    get:
      description: Get element user password
      operationId: get-v2.0-api-tenants-tenant_id-elementusers-user_id-password
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_USER_NOT_FOUND
                  - code: ELEMENTUSER_PASSWORD_REQUIRED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get element user password (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/esp:
    get:
      description: Get esp tenant details for tenant id
      operationId: get-v2.0-api-tenants-tenant_id-esp
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Tenant'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get esp tenant details for tenant id (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/extensions:
    get:
      description: Get all extensions from NB
      operationId: get-v2.0-api-tenants-tenant_id-extensions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/Extension'
                        type: array
                    type: object
                - allOf:
                  - $ref: '#/components/schemas/ListQueryResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/ExtensionQueryFilter'
                        type: array
                    type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: EXTENSION_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all extensions from NB (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/extensions/query:
    post:
      description: Queries db for limit number of tenant extensions that match the
        query params.
      operationId: post-v2.0-api-tenants-tenant_id-extensions-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionQueryFilter'
        description: Tenant details
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ExtensionQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of tenant extensions that match the query
        params. (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/extensions/{extension_id}:
    get:
      description: Get extension from NB
      operationId: get-v2.0-api-tenants-tenant_id-extensions-extension_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Extension Id
        in: path
        name: extension_id
        required: true
        schema:
          description: Extension Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Successful Operation
      summary: Get extension from NB (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/login/password/forgot:
    post:
      description: Forgot password API
      operationId: post-v2.0-api-tenants-tenant_id-login-password-forgot
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identity'
        description: Password forgot fields for a tenant operator
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_FORGOT_PASSWORD_EMAILED
                  - code: OPERATOR_ACCOUNT_UNVERIFIED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Forgot password API (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/operators:
    get:
      description: Get a list of tenant operators
      operationId: get-v2.0-api-tenants-tenant_id-operators
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/OperatorV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get a list of tenant operators (v2.0)
      tags:
      - System Administration
    post:
      description: Create a tenant operator
      operationId: post-v2.0-api-tenants-tenant_id-operators
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorV2N1'
        description: Operator details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: SESSION_SUBJECT_NOT_FOUND
                  - code: OPERATOR_INVALID_OPERATOR_EMAIL
                  - code: OPERATOR_INVALID_SIGNUP_ROLE
                  - code: OPERATOR_INVALID_SUBJECT_TENANT_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a tenant operator (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/operators/{operator_id}:
    delete:
      description: Delete a tenant operator
      operationId: delete-v2.0-api-tenants-tenant_id-operators-operator_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INSUFFICIENT_OPERATOR_PERMISSIONS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete a tenant operator (v2.0)
      tags:
      - System Administration
    get:
      description: Get an Operator
      operationId: get-v2.0-api-tenants-tenant_id-operators-operator_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Get an Operator
      summary: Get an Operator (v2.0)
      tags:
      - System Administration
    put:
      description: Update a tenant operator
      operationId: put-v2.0-api-tenants-tenant_id-operators-operator_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorV2N1'
        description: Operator details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: OPERATOR_INVALID_SIGNUP_ROLE
                  - code: OPERATOR_INVALID_SUBJECT_TENANT_ID
                  - code: OPERATOR_INVALID_OPERATOR_ID
                  - code: OPERATOR_INVALID_OPERATOR_EMAIL
                  - code: OPERATOR_INVALID_ETAG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a tenant operator (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/operators/{operator_id}/authtokens:
    get:
      description: Get a list of auth tokens
      operationId: get-v2.0-api-tenants-tenant_id-operators-operator_id-authtokens
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/AuthToken'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get a list of auth tokens (v2.0)
      tags:
      - System Administration
    post:
      description: Create an auth token
      operationId: post-v2.0-api-tenants-tenant_id-operators-operator_id-authtokens
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        description: Auth token details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TOKEN_INVALID_SESSION_DATA
                  - code: ESP_INVALID_TENANT_DATA
                  - code: TOKEN_INVALID_OPERATOR_ID
                  - code: TOKEN_INVALID_SUBJECT_ID
                  - code: INVALID_EXPIRES_UTC_MS
                  - code: TOKEN_ACTIVE_TOKEN_EXCEEDED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create an auth token (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/operators/{operator_id}/authtokens/{authtoken_id}:
    delete:
      description: Delete an auth token
      operationId: delete-v2.0-api-tenants-tenant_id-operators-operator_id-authtokens-authtoken_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Auth Token Id
        in: path
        name: authtoken_id
        required: true
        schema:
          description: Authtoken Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Successful Operation
      summary: Delete an auth token (v2.0)
      tags:
      - System Administration
    get:
      description: Get an auth token
      operationId: get-v2.0-api-tenants-tenant_id-operators-operator_id-authtokens-authtoken_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Auth Token Id
        in: path
        name: authtoken_id
        required: true
        schema:
          description: Authtoken Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_DATA
                  - code: TOKEN_INVALID_OPERATOR_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get an auth token (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/operators/{operator_id}/clients/permissions:
    get:
      description: Get esp operator permissions assigned under all clients
      operationId: get-v2.0-api-tenants-tenant_id-operators-operator_id-clients-permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ClientPermissions'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get esp operator permissions assigned under all clients (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/operators/{operator_id}/clients/{client_id}/permissions:
    delete:
      description: Delete esp operator permissions assigned under a client
      operationId: delete-v2.0-api-tenants-tenant_id-operators-operator_id-clients-client_id-permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPermissions'
          description: Successful Operation
      summary: Delete esp operator permissions assigned under a client (v2.0)
      tags:
      - System Administration
    get:
      description: Get client permissions
      operationId: get-v2.0-api-tenants-tenant_id-operators-operator_id-clients-client_id-permissions
      parameters:
      - in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPermissions'
          description: Get client permissions
      summary: Get client permissions (v2.0)
      tags:
      - System Administration
    put:
      description: Create or update esp operator permissions assigned under a client
      operationId: put-v2.0-api-tenants-tenant_id-operators-operator_id-clients-client_id-permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPermissions'
        description: Operator details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPermissions'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create or update esp operator permissions assigned under a client (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/operators/{operator_id}/sessions:
    get:
      description: Get all sessions for operator id belonging to a tenant id
      operationId: get-v2.0-api-tenants-tenant_id-operators-operator_id-sessions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Session'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_SUBJECT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all sessions for operator id belonging to a tenant id (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/operators/{operator_id}/sessions/{session_id}:
    delete:
      description: Delete session for tenant_id, operator id, and session id
      operationId: delete-v2.0-api-tenants-tenant_id-operators-operator_id-sessions-session_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Session Id
        in: path
        name: session_id
        required: true
        schema:
          description: Session Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_SUBJECT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete session for tenant_id, operator id, and session id (v2.0)
      tags:
      - System Administration
    get:
      description: Get session for tenant_id, operator id, and sessoin id
      operationId: get-v2.0-api-tenants-tenant_id-operators-operator_id-sessions-session_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Session Id
        in: path
        name: session_id
        required: true
        schema:
          description: Session Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_SUBJECT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get session for tenant_id, operator id, and sessoin id (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/permissions:
    get:
      description: Get a list of custom permissions
      operationId: get-v2.0-api-tenants-tenant_id-permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/CustomPermission'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get a list of custom permissions (v2.0)
      tags:
      - System Administration
    post:
      description: Add a custom permission
      operationId: post-v2.0-api-tenants-tenant_id-permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPermission'
        description: Permission details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermission'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_ID
                  - code: PERMISSION_API_TEST_FAILED
                  - code: PERMISSION_NOT_CUSTOMIZED
                  - code: PERMISSION_AFTER_LARGER_THAN_BEFORE
                  - code: PERMISSION_TENANT_ID_MISMATCH
                  - code: PERMISSION_API_TEST_TENANTID_FAILED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Add a custom permission (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/permissions/{permission_id}:
    delete:
      description: Delete a tenant custom permission
      operationId: delete-v2.0-api-tenants-tenant_id-permissions-permission_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Permission Id
        in: path
        name: permission_id
        required: true
        schema:
          description: Permission Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermission'
          description: Successful Operation
      summary: Delete a tenant custom permission (v2.0)
      tags:
      - System Administration
    get:
      description: Get a tenant custom permission
      operationId: get-v2.0-api-tenants-tenant_id-permissions-permission_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Permission Id
        in: path
        name: permission_id
        required: true
        schema:
          description: Permission Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermission'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a tenant custom permission (v2.0)
      tags:
      - System Administration
    put:
      description: Update a custom permission
      operationId: put-v2.0-api-tenants-tenant_id-permissions-permission_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Permission Id
        in: path
        name: permission_id
        required: true
        schema:
          description: Permission Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPermission'
        description: Permission details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermission'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_ID
                  - code: PERMISSION_API_TEST_FAILED
                  - code: PERMISSION_NOT_CUSTOMIZED
                  - code: PERMISSION_AFTER_LARGER_THAN_BEFORE
                  - code: PERMISSION_TENANT_ID_MISMATCH
                  - code: PERMISSION_API_TEST_TENANTID_FAILED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a custom permission (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/roles:
    get:
      description: Get a list of custom roles
      operationId: get-v2.0-api-tenants-tenant_id-roles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/CustomRoleV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get a list of custom roles (v2.0)
      tags:
      - System Administration
    post:
      description: Add a custom role
      operationId: post-v2.0-api-tenants-tenant_id-roles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRoleV2N1'
        description: Role details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_ID
                  - code: PERMISSION_API_TEST_TENANTID_FAILED
                  - code: AUTH_ROLE_INVALID_ESP_SOLO_ROLE
                  - code: AUTH_ROLE_INVALID_SUPER_ROLE_DATA
                  - code: AUTH_ROLE_INVALID_SUPER_SOLO_ROLE
                  - code: AUTH_ROLE_INVALID_TENANT_ROLE_DATA
                  - code: AUTH_ROLE_INVALID_TENANT_SOLO_ROLE
                  - code: PERMISSIONS_INVALID_DISALLOW_PERMISSION_VALUES
                  - code: PERMISSIONS_INVALID_PERMISSION_IDS
                  - code: PERMISSIONS_INVALID_PERMISSION_VALUES
                  - code: PERMISSIONS_NON_UNIQUE_DISALLOW_PERMISSION_VALUES
                  - code: PERMISSIONS_NON_UNIQUE_PERMISSION_IDS
                  - code: ROLES_NON_UNIQUE_ROLE_IDS
                  - code: ROLES_PERMISSION_OVERLAP_NOT_ALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Add a custom role (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/roles/{role_id}:
    delete:
      description: Delete a custom role
      operationId: delete-v2.0-api-tenants-tenant_id-roles-role_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Role Id
        in: path
        name: role_id
        required: true
        schema:
          description: Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
      summary: Delete a custom role (v2.0)
      tags:
      - System Administration
    get:
      description: Get a custom role
      operationId: get-v2.0-api-tenants-tenant_id-roles-role_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Role Id
        in: path
        name: role_id
        required: true
        schema:
          description: Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_TENANT_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a custom role (v2.0)
      tags:
      - System Administration
    put:
      description: Update a custom role
      operationId: put-v2.0-api-tenants-tenant_id-roles-role_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Role Id
        in: path
        name: role_id
        required: true
        schema:
          description: Role Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRoleV2N1'
        description: Role details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PERMISSION_API_TEST_TENANTID_FAILED
                  - code: AUTH_ROLE_INVALID_ESP_SOLO_ROLE
                  - code: AUTH_ROLE_INVALID_SUPER_ROLE_DATA
                  - code: AUTH_ROLE_INVALID_SUPER_SOLO_ROLE
                  - code: AUTH_ROLE_INVALID_TENANT_ROLE_DATA
                  - code: AUTH_ROLE_INVALID_TENANT_SOLO_ROLE
                  - code: PERMISSIONS_INVALID_DISALLOW_PERMISSION_VALUES
                  - code: PERMISSIONS_INVALID_PERMISSION_IDS
                  - code: PERMISSIONS_INVALID_PERMISSION_VALUES
                  - code: PERMISSIONS_NON_UNIQUE_DISALLOW_PERMISSION_VALUES
                  - code: PERMISSIONS_NON_UNIQUE_PERMISSION_IDS
                  - code: ROLES_NON_UNIQUE_ROLE_IDS
                  - code: ROLES_PERMISSION_OVERLAP_NOT_ALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a custom role (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/saml:
    post:
      description: Create sso session
      operationId: post-v2.0-api-tenants-tenant_id-saml
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlResponse'
        description: SAMResponse
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResource'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create sso session (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/signup:
    post:
      description: Signup new operators
      operationId: post-v2.0-api-tenants-tenant_id-signup
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        description: Signup details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_TENANT_DATA
                  - code: OPERATOR_INVALID_SIGNUP_REQUEST
                  - code: OPERATOR_INVALID_SIGNUP_ROLE
                  - code: OPERATOR_INVALID_SUBJECT_TENANT_ID
                  - code: OPERATOR_INVALID_OPERATOR_EMAIL
                  - code: OPERATOR_SIGNUP_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Signup new operators (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/users:
    get:
      description: Get Users.
      operationId: get-v2.0-api-tenants-tenant_id-users
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/UserIdentity'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Users. (v2.0)
      tags:
      - System Administration
    post:
      description: Create an user identity.
      operationId: post-v2.0-api-tenants-tenant_id-users
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentity'
        description: Create an user identity
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create an user identity. (v2.0)
      tags:
      - System Administration
  /v2.0/api/tenants/{tenant_id}/users/{user_id}:
    delete:
      description: Delete an user identity.
      operationId: delete-v2.0-api-tenants-tenant_id-users-user_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an user identity. (v2.0)
      tags:
      - System Administration
    get:
      description: get an user identity.
      operationId: get-v2.0-api-tenants-tenant_id-users-user_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get an user identity. (v2.0)
      tags:
      - System Administration
    put:
      description: Put an user identity.
      operationId: put-v2.0-api-tenants-tenant_id-users-user_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentity'
        description: Details of the site Network Policy local prefix to be associated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Put an user identity. (v2.0)
      tags:
      - System Administration
  /v2.1/api/profile:
    get:
      description: Get current user profile
      operationId: get-v2.1-api-profile
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileV2N1'
          description: Successful Operation
      summary: Get current user profile (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}:
    get:
      description: Get tenant details for tenant id
      operationId: get-v2.1-api-tenants-tenant_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get tenant details for tenant id (v2.1)
      tags:
      - System Administration
    put:
      description: Update tenant
      operationId: put-v2.1-api-tenants-tenant_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantV2N1'
        description: Tenant details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_ETAG
                  - code: TENANT_INVALID_CANONICAL_NAME_CHANGE
                  - code: TENANT_PASSWORD_AGING_PREVENT_LOCKOUT
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update tenant (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/clients/{client_id}/roles:
    get:
      description: Get a list of client custom roles
      operationId: get-v2.1-api-tenants-tenant_id-clients-client_id-roles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/CustomRoleV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_TENANT_ID
                  - code: ESP_CLIENT_ID_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a list of client custom roles (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/clients/{client_id}/roles/{role_id}:
    get:
      description: Get a client custom role
      operationId: get-v2.1-api-tenants-tenant_id-clients-client_id-roles-role_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      - description: Role Id
        in: path
        name: role_id
        required: true
        schema:
          description: Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_TENANT_ID
                  - code: ESP_CLIENT_ID_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a client custom role (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/elementusers:
    get:
      description: Get all element User
      operationId: get-v2.1-api-tenants-tenant_id-elementusers
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ElementUser'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all element User (v2.1)
      tags:
      - System Administration
    post:
      description: Create Element User
      operationId: post-v2.1-api-tenants-tenant_id-elementusers
      parameters:
      - description: tenant_id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementUserCredentials'
        description: Details of the element user to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_USERNAME
                  - code: LOGIN_ID_REQUIRED
                  - code: RESERVED_ELEMENT_USER_LOGIN_ID
                  - code: IS_TENANT_LEVEL_FLAG_REQUIRED
                  - code: INVALID_USER_ROLE
                  - code: LOGIN_ID_CONSTRAINT_LENGTH
                  - code: INVALID_LOGIN_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Element User (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/elementusers/{user_id}:
    delete:
      description: Delete element user
      operationId: delete-v2.1-api-tenants-tenant_id-elementusers-user_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_USER_NOT_FOUND
                  - code: INVALID_ELEMENT_USER_DELETE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete element user (v2.1)
      tags:
      - System Administration
    get:
      description: Get specific element User
      operationId: get-v2.1-api-tenants-tenant_id-elementusers-user_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
      summary: Get specific element User (v2.1)
      tags:
      - System Administration
    put:
      description: Update an existing element user.
      operationId: put-v2.1-api-tenants-tenant_id-elementusers-user_id
      parameters:
      - description: tenant id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: userId
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementUserCredentials'
        description: Details of the element user to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_USERNAME
                  - code: LOGIN_ID_REQUIRED
                  - code: RESERVED_ELEMENT_USER_LOGIN_ID
                  - code: IS_TENANT_LEVEL_FLAG_REQUIRED
                  - code: INVALID_USER_ROLE
                  - code: LOGIN_ID_CONSTRAINT_LENGTH
                  - code: INVALID_LOGIN_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing element user. (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/elementusers/{user_id}/access:
    get:
      description: Get all accesses for a particular user
      operationId: get-v2.1-api-tenants-tenant_id-elementusers-user_id-access
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ElementUserAccess'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all accesses for a particular user (v2.1)
      tags:
      - System Administration
    post:
      description: Grant Specific role to Element user on specific element
      operationId: post-v2.1-api-tenants-tenant_id-elementusers-user_id-access
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: element user id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementUserAccess'
        description: Details of the specific role for element user to be granted
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUserAccess'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_ENUM_VALUE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Grant Specific role to Element user on specific element (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/elementusers/{user_id}/access/{access_id}:
    delete:
      description: Delete element user Access
      operationId: delete-v2.1-api-tenants-tenant_id-elementusers-user_id-access-access_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      - description: Access Id
        in: path
        name: access_id
        required: true
        schema:
          description: Access Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUserAccess'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_USER_NOT_FOUND
                  - code: INVALID_ELEMENT_USER_DELETE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete element user Access (v2.1)
      tags:
      - System Administration
    get:
      description: Get specific element User access
      operationId: get-v2.1-api-tenants-tenant_id-elementusers-user_id-access-access_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      - description: Access Id
        in: path
        name: access_id
        required: true
        schema:
          description: Access Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUserAccess'
          description: Successful Operation
      summary: Get specific element User access (v2.1)
      tags:
      - System Administration
    put:
      description: Update an existing element user access.
      operationId: put-v2.1-api-tenants-tenant_id-elementusers-user_id-access-access_id
      parameters:
      - description: tenant id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: user id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      - description: access  id
        in: path
        name: access_id
        required: true
        schema:
          description: Access Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementUserAccess'
        description: Details of the specific role for element user to be granted
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUserAccess'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_ENUM_VALUE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing element user access. (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/elementusers/{user_id}/password:
    get:
      description: Get element user password
      operationId: get-v2.1-api-tenants-tenant_id-elementusers-user_id-password
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: User Id
        in: path
        name: user_id
        required: true
        schema:
          description: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementUser'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_USER_NOT_FOUND
                  - code: ELEMENTUSER_PASSWORD_REQUIRED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get element user password (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/operators:
    get:
      description: Get a list of tenant operators
      operationId: get-v2.1-api-tenants-tenant_id-operators
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/OperatorV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get a list of tenant operators (v2.1)
      tags:
      - System Administration
    post:
      description: Create a tenant operator
      operationId: post-v2.1-api-tenants-tenant_id-operators
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorV2N1'
        description: Operator details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: OPERATOR_INVALID_OPERATOR_EMAIL
                  - code: SESSION_SUBJECT_NOT_FOUND
                  - code: OPERATOR_INVALID_SIGNUP_ROLE
                  - code: OPERATOR_INVALID_SUBJECT_TENANT_ID
                  - code: OPERATOR_INVALID_OPERATOR_MULTIPLE_SYSTEM_ROLE
                  - code: OPERATOR_INVALID_OPERATOR_SYSTEM_ROLE
                  - code: OPERATOR_CAN_NOT_ASSIGN_SYSTEM_GENERATED_CUSTOM_ROLE
                  - code: OPERATOR_INVALID_CANNOT_SET_READONLY_FIELDS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a tenant operator (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/operators/{operator_id}:
    delete:
      description: Delete a tenant operator
      operationId: delete-v2.1-api-tenants-tenant_id-operators-operator_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_SIGNUP_ROLE
                  - code: OPERATOR_DELETE_INVALID_ROLE_SYSTEM
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete a tenant operator (v2.1)
      tags:
      - System Administration
    get:
      description: Get a tenant operator
      operationId: get-v2.1-api-tenants-tenant_id-operators-operator_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Successful Operation
      summary: Get a tenant operator (v2.1)
      tags:
      - System Administration
    put:
      description: Update a tenant operator
      operationId: put-v2.1-api-tenants-tenant_id-operators-operator_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorV2N1'
        description: Operator details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: OPERATOR_INVALID_SIGNUP_ROLE
                  - code: OPERATOR_INVALID_SUBJECT_TENANT_ID
                  - code: OPERATOR_INVALID_OPERATOR_ID
                  - code: OPERATOR_INVALID_OPERATOR_EMAIL
                  - code: OPERATOR_INVALID_ETAG
                  - code: OPERATOR_INVALID_OPERATOR_MULTIPLE_SYSTEM_ROLE
                  - code: OPERATOR_INVALID_OPERATOR_SYSTEM_ROLE
                  - code: OPERATOR_CAN_NOT_ASSIGN_SYSTEM_GENERATED_CUSTOM_ROLE
                  - code: OPERATOR_INVALID_CANNOT_SET_READONLY_FIELDS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a tenant operator (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/operators/{operator_id}/authtokens:
    get:
      description: Get a list of auth tokens
      operationId: get-v2.1-api-tenants-tenant_id-operators-operator_id-authtokens
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/AuthTokenV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get a list of auth tokens (v2.1)
      tags:
      - System Administration
    post:
      description: Create an auth token
      operationId: post-v2.1-api-tenants-tenant_id-operators-operator_id-authtokens
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenV2N1'
        description: Auth token details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TOKEN_INVALID_SESSION_DATA
                  - code: ESP_INVALID_TENANT_DATA
                  - code: TOKEN_INVALID_OPERATOR_ID
                  - code: TOKEN_INVALID_SUBJECT_ID
                  - code: INVALID_EXPIRES_UTC_MS
                  - code: TOKEN_ACTIVE_TOKEN_EXCEEDED
                  - code: AUTH_TOKEN_SYSTEM_OPERATIONS_NOT_ALLOWED
                  - code: AUTH_TOKEN_CANNOT_SET_READONLY_FIELDS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create an auth token (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/operators/{operator_id}/authtokens/{authtoken_id}:
    delete:
      description: Delete an auth token
      operationId: delete-v2.1-api-tenants-tenant_id-operators-operator_id-authtokens-authtoken_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Auth Token Id
        in: path
        name: authtoken_id
        required: true
        schema:
          description: Authtoken Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: AUTH_TOKEN_SYSTEM_OPERATIONS_NOT_ALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an auth token (v2.1)
      tags:
      - System Administration
    get:
      description: Get an auth token
      operationId: get-v2.1-api-tenants-tenant_id-operators-operator_id-authtokens-authtoken_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Auth Token Id
        in: path
        name: authtoken_id
        required: true
        schema:
          description: Authtoken Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_DATA
                  - code: TOKEN_INVALID_OPERATOR_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get an auth token (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/operators/{operator_id}/clients/{client_id}/permissions:
    delete:
      description: Delete esp operator permissions assigned under a client
      operationId: delete-v2.1-api-tenants-tenant_id-operators-operator_id-clients-client_id-permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPermissions'
          description: Successful Operation
      summary: Delete esp operator permissions assigned under a client (v2.1)
      tags:
      - System Administration
    get:
      description: Get esp operator permissions assigned under a client
      operationId: get-v2.1-api-tenants-tenant_id-operators-operator_id-clients-client_id-permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPermissions'
          description: Successful Operation
      summary: Get esp operator permissions assigned under a client (v2.1)
      tags:
      - System Administration
    put:
      description: Create or update esp operator permissions assigned under a client
      operationId: put-v2.1-api-tenants-tenant_id-operators-operator_id-clients-client_id-permissions
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Operator Id
        in: path
        name: operator_id
        required: true
        schema:
          description: Operator Id
          type: string
      - description: Client Id
        in: path
        name: client_id
        required: true
        schema:
          description: Client Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPermissions'
        description: Operator details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPermissions'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create or update esp operator permissions assigned under a client (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/roles:
    get:
      description: Get a list of custom roles
      operationId: get-v2.1-api-tenants-tenant_id-roles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/CustomRoleV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get a list of custom roles (v2.1)
      tags:
      - System Administration
    post:
      description: Add a custom role
      operationId: post-v2.1-api-tenants-tenant_id-roles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRoleV2N1'
        description: Role details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ESP_INVALID_TENANT_ID
                  - code: PERMISSION_API_TEST_TENANTID_FAILED
                  - code: AUTH_ROLE_INVALID_ESP_SOLO_ROLE
                  - code: AUTH_ROLE_INVALID_SUPER_ROLE_DATA
                  - code: AUTH_ROLE_INVALID_SUPER_SOLO_ROLE
                  - code: AUTH_ROLE_INVALID_TENANT_ROLE_DATA
                  - code: AUTH_ROLE_INVALID_TENANT_SOLO_ROLE
                  - code: PERMISSIONS_INVALID_DISALLOW_PERMISSION_VALUES
                  - code: PERMISSIONS_INVALID_PERMISSION_IDS
                  - code: PERMISSIONS_INVALID_PERMISSION_VALUES
                  - code: PERMISSIONS_NON_UNIQUE_DISALLOW_PERMISSION_VALUES
                  - code: PERMISSIONS_NON_UNIQUE_PERMISSION_IDS
                  - code: ROLES_NON_UNIQUE_ROLE_IDS
                  - code: ROLES_PERMISSION_OVERLAP_NOT_ALLOWED
                  - code: CUSTOM_ROLE_OPERATIONS_READONLY_FIELDS_NOT_ALLOWED
                  - code: SYSTEM_CREATED_CUSTOM_ROLE_OPERATIONS_NOT_ALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Add a custom role (v2.1)
      tags:
      - System Administration
  /v2.1/api/tenants/{tenant_id}/roles/{role_id}:
    delete:
      description: Delete a custom role
      operationId: delete-v2.1-api-tenants-tenant_id-roles-role_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Role Id
        in: path
        name: role_id
        required: true
        schema:
          description: Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SYSTEM_CREATED_CUSTOM_ROLE_OPERATIONS_NOT_ALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete a custom role (v2.1)
      tags:
      - System Administration
    get:
      description: Get a custom role
      operationId: get-v2.1-api-tenants-tenant_id-roles-role_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Role Id
        in: path
        name: role_id
        required: true
        schema:
          description: Role Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_TENANT_ID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a custom role (v2.1)
      tags:
      - System Administration
    put:
      description: Update a custom role
      operationId: put-v2.1-api-tenants-tenant_id-roles-role_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Role Id
        in: path
        name: role_id
        required: true
        schema:
          description: Role Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRoleV2N1'
        description: Role details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PERMISSION_API_TEST_TENANTID_FAILED
                  - code: AUTH_ROLE_INVALID_ESP_SOLO_ROLE
                  - code: AUTH_ROLE_INVALID_SUPER_ROLE_DATA
                  - code: AUTH_ROLE_INVALID_SUPER_SOLO_ROLE
                  - code: AUTH_ROLE_INVALID_TENANT_ROLE_DATA
                  - code: AUTH_ROLE_INVALID_TENANT_SOLO_ROLE
                  - code: PERMISSIONS_INVALID_DISALLOW_PERMISSION_VALUES
                  - code: PERMISSIONS_INVALID_PERMISSION_IDS
                  - code: PERMISSIONS_INVALID_PERMISSION_VALUES
                  - code: PERMISSIONS_NON_UNIQUE_DISALLOW_PERMISSION_VALUES
                  - code: PERMISSIONS_NON_UNIQUE_PERMISSION_IDS
                  - code: ROLES_NON_UNIQUE_ROLE_IDS
                  - code: ROLES_PERMISSION_OVERLAP_NOT_ALLOWED
                  - code: CUSTOM_ROLE_OPERATIONS_READONLY_FIELDS_NOT_ALLOWED
                  - code: SYSTEM_CREATED_CUSTOM_ROLE_OPERATIONS_NOT_ALLOWED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a custom role (v2.1)
      tags:
      - System Administration
  /v2.2/api/tenants/{tenant_id}:
    get:
      description: Get tenant details for tenant id
      operationId: get-v2.2-api-tenants-tenant_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get tenant details for tenant id (v2.2)
      tags:
      - System Administration
    put:
      description: Update tenant
      operationId: put-v2.2-api-tenants-tenant_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantV2N2'
        description: Tenant details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_ETAG
                  - code: TENANT_INVALID_CANONICAL_NAME_CHANGE
                  - code: TENANT_PASSWORD_AGING_PREVENT_LOCKOUT
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update tenant (v2.2)
      tags:
      - System Administration
  /v2.3/api/tenants/{tenant_id}:
    get:
      description: Get tenant details for tenant id
      operationId: get-v2.3-api-tenants-tenant_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get tenant details for tenant id (v2.3)
      tags:
      - System Administration
    put:
      description: Update tenant
      operationId: put-v2.3-api-tenants-tenant_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantV2N3'
        description: Tenant details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: OPERATOR_INVALID_ETAG
                  - code: TENANT_INVALID_CANONICAL_NAME_CHANGE
                  - code: TENANT_PASSWORD_AGING_PREVENT_LOCKOUT
                  - code: TENANT_INVALID_CLIENT_ID
                  - code: ESP_INVALID_CLIENT_DATA
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update tenant (v2.3)
      tags:
      - System Administration
  /v3.0/api/tenants/{tenant_id}/idps:
    get:
      description: Get all idps
      operationId: get-v3.0-api-tenants-tenant_id-idps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Idp'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all idps (v3.0)
      tags:
      - System Administration
    post:
      description: Create idp
      operationId: post-v3.0-api-tenants-tenant_id-idps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Idp'
        description: Idp details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idp'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create idp (v3.0)
      tags:
      - System Administration
  /v3.0/api/tenants/{tenant_id}/idps/{idp_id}:
    delete:
      description: Delete idp
      operationId: delete-v3.0-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Idp Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idp'
          description: Successful Operation
      summary: Delete idp (v3.0)
      tags:
      - System Administration
    get:
      description: Get idp
      operationId: get-v3.0-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Idp Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idp'
          description: Successful Operation
      summary: Get idp (v3.0)
      tags:
      - System Administration
    put:
      description: Update sso
      operationId: put-v3.0-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Sso Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Idp'
        description: Sso details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idp'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SSO_INVALID_ETAG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update sso (v3.0)
      tags:
      - System Administration
  /v3.1/api/tenants/{tenant_id}/idps:
    get:
      description: Get all idps
      operationId: get-v3.1-api-tenants-tenant_id-idps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/IdpV3N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all idps (v3.1)
      tags:
      - System Administration
    post:
      description: Create idp
      operationId: post-v3.1-api-tenants-tenant_id-idps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdpV3N1'
        description: Idp details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create idp (v3.1)
      tags:
      - System Administration
  /v3.1/api/tenants/{tenant_id}/idps/{idp_id}:
    delete:
      description: Delete idp
      operationId: delete-v3.1-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Idp Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N1'
          description: Successful Operation
      summary: Delete idp (v3.1)
      tags:
      - System Administration
    get:
      description: Get idp
      operationId: get-v3.1-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Idp Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N1'
          description: Successful Operation
      summary: Get idp (v3.1)
      tags:
      - System Administration
    put:
      description: Update sso
      operationId: put-v3.1-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Sso Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdpV3N1'
        description: Sso details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SSO_INVALID_ETAG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update sso (v3.1)
      tags:
      - System Administration
  /v3.2/api/tenants/{tenant_id}/idps:
    get:
      description: Get all idps
      operationId: get-v3.2-api-tenants-tenant_id-idps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/IdpV3N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all idps (v3.2)
      tags:
      - System Administration
    post:
      description: Create idp
      operationId: post-v3.2-api-tenants-tenant_id-idps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdpV3N2'
        description: Idp details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create idp (v3.2)
      tags:
      - System Administration
  /v3.2/api/tenants/{tenant_id}/idps/{idp_id}:
    delete:
      description: Delete idp
      operationId: delete-v3.2-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Idp Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N2'
          description: Successful Operation
      summary: Delete idp (v3.2)
      tags:
      - System Administration
    get:
      description: Get idp
      operationId: get-v3.2-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Idp Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N2'
          description: Successful Operation
      summary: Get idp (v3.2)
      tags:
      - System Administration
    put:
      description: Update sso
      operationId: put-v3.2-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Sso Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdpV3N2'
        description: Sso details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SSO_INVALID_ETAG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update sso (v3.2)
      tags:
      - System Administration
  /v3.3/api/tenants/{tenant_id}/idps:
    get:
      description: Get all idps
      operationId: get-v3.3-api-tenants-tenant_id-idps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/IdpV3N3'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all idps (v3.3)
      tags:
      - System Administration
    post:
      description: Create idp
      operationId: post-v3.3-api-tenants-tenant_id-idps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdpV3N3'
        description: Idp details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create idp (v3.3)
      tags:
      - System Administration
  /v3.3/api/tenants/{tenant_id}/idps/{idp_id}:
    delete:
      description: Delete idp
      operationId: delete-v3.3-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Idp Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N3'
          description: Successful Operation
      summary: Delete idp (v3.3)
      tags:
      - System Administration
    get:
      description: Get idp
      operationId: get-v3.3-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Idp Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N3'
          description: Successful Operation
      summary: Get idp (v3.3)
      tags:
      - System Administration
    put:
      description: Update sso
      operationId: put-v3.3-api-tenants-tenant_id-idps-idp_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Sso Id
        in: path
        name: idp_id
        required: true
        schema:
          description: Idp Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdpV3N3'
        description: Sso details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpV3N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SSO_INVALID_ETAG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update sso (v3.3)
      tags:
      - System Administration
servers:
- url: https://api.us.cloudgenix.com
tags:
- name: System Administration
