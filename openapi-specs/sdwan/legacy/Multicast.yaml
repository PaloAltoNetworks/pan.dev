components:
  schemas:
    Aggregate:
      properties:
        data:
          description: 'The details of the aggregate data.

            '
          items:
            $ref: '#/components/schemas/AggregateData'
          type: array
        field:
          description: Field
          type: string
        name:
          description: 'The name of the query response.

            '
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
        statistic:
          description: 'QoS application aggregate statistics.

            '
          type: string
        unit:
          description: 'The unit.

            '
          type: string
      required:
      - statistic
      - unit
      - name
      - data
    AggregateData:
      properties:
        value:
          description: 'Value of the aggregate data.

            '
          type: number
        view:
          description: "View the aggregate date. \n"
          type: object
      required:
      - value
      - view
    DynamicRp:
      properties:
        groups:
          description: 'The list of multicast group addresses that the RP serves.

            '
          items:
            $ref: '#/components/schemas/Group'
          type: array
        ipv4_address:
          description: 'The multicast group IPv4 addresses to which the RP caters.

            '
          type: string
        type:
          description: "The type of dynamic RP. BSR\u2014Indicates that the RP is\
            \ learnt dynamically via BSM.\n"
          type: string
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    Group:
      properties:
        ipv4_prefix:
          description: 'The IPv4 prefix of the for the multicast.

            '
          type: string
        is_active_rp:
          description: 'The Active RP for the multicast.

            '
          type: boolean
    ListQueryResponse:
      properties:
        count:
          description: 'The count of the query list.

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number of queries.

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted query IDs.

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size = 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query.

            '
          type: object
        tenant_id:
          description: 'The tenant ID.

            '
          type: string
        total_count:
          description: 'Total number of queries.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The number of responses.

            '
          format: int32
          type: integer
        id:
          description: 'The ID of the response.

            '
          type: string
        tenant_id:
          description: 'The ID of the tenant.

            '
          type: string
      type: object
    MulticastDynamicRp:
      properties:
        dynamic_rps:
          description: 'Details of the multicast dynamic RPs. Max size = 16.

            '
          items:
            $ref: '#/components/schemas/DynamicRp'
          type: array
        id:
          description: "The multicast dynamic RP ID.  \n"
          type: string
    MulticastDynamicRpQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of multicast dynamic RPs that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number multicast dynamic RPs deleted for a time frame.

            '
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the multicast dynamic RPs by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    MulticastDynamicRpQueryFilter:
      properties:
        dynamic_rps:
          description: 'Details of the multicast dynamic RPs. Max size = 16.

            '
          items:
            $ref: '#/components/schemas/DynamicRp'
          type: array
        id:
          description: "The multicast dynamic RP ID.  \n"
          type: string
    MulticastGlobalConfig:
      properties:
        id:
          description: 'The ID of the multicast config.

            '
          type: string
        spt_switchover_enabled:
          description: "Indicates that the first multicast packet is received i.e.\
            \ the source address is received by the receiver, the DR at the receiver\u2019\
            s end and the RP choose the optimal path to relay information from the\
            \ source to the receiver.      \n"
          type: boolean
    MulticastGlobalConfigScreen:
      properties:
        id:
          description: 'The ID of the multicast config.

            '
          type: string
        spt_switchover_enabled:
          description: "Indicates that the first multicast packet is received i.e.\
            \ the source address is received by the receiver, the DR at the receiver\u2019\
            s end and the RP choose the optimal path to relay information from the\
            \ source to the receiver.\n"
          type: boolean
    MulticastGlobalConfigScreenV2N1:
      properties:
        bsm_enabled:
          description: 'If enabled, receives and forwards of BSM on multicast enabled
            interfaces. BSM is a protocol by which the device learns RPs dynamically.

            '
          type: boolean
        dr_priority:
          description: 'The probability of a PIM interface elected as a Designated
            Router (DR). For Static RP, the DR Priority advertised in a PIM Hello
            is 1.

            '
          format: int64
          type: integer
        id:
          description: "The ID of the multicast config.    \n"
          type: string
        igmp_protocol_parameters:
          $ref: '#/components/schemas/MulticastIgmpProtocolConfig'
          description: 'The Internet group management protocol (IGMP) version the
            routers regularly send queries to determine which groups are active/inactive
            in an appropriate LAN segment.

            '
        pim_protocol_parameters:
          $ref: '#/components/schemas/MulticastPimProtocolConfig'
          description: 'The parameters of PIM protocol.

            '
        spt_switchover_enabled:
          description: "Indicates that the first multicast packet is received i.e.\
            \ the source address is received by the receiver, the DR at the receiver\u2019\
            s end and the RP choose the optimal path to relay information from the\
            \ source to the receiver. \n"
          type: boolean
    MulticastGlobalConfigV2N1:
      properties:
        bsm_enabled:
          description: 'If enabled, receives and forwards of BSM on multicast enabled
            interfaces. BSM is a protocol by which the device learns RPs dynamically.

            '
          type: boolean
        dr_priority:
          description: 'The probability of a PIM interface elected as a Designated
            Router (DR). For Static RP, the DR Priority advertised in a PIM Hello
            is 1.

            '
          format: int64
          type: integer
        id:
          description: "The ID of the multicast config.    \n"
          type: string
        igmp_protocol_parameters:
          $ref: '#/components/schemas/MulticastIgmpProtocolConfig'
          description: 'The Internet group management protocol (IGMP) version the
            routers regularly send queries to determine which groups are active/inactive
            in an appropriate LAN segment.

            '
        pim_protocol_parameters:
          $ref: '#/components/schemas/MulticastPimProtocolConfig'
          description: 'The parameters of PIM protocol.

            '
        spt_switchover_enabled:
          description: "Indicates that the first multicast packet is received i.e.\
            \ the source address is received by the receiver, the DR at the receiver\u2019\
            s end and the RP choose the optimal path to relay information from the\
            \ source to the receiver.      \n"
          type: boolean
    MulticastIgmpProtocolConfig:
      properties:
        last_member_query_count:
          description: "The number of times the ION device sent IGMP queries to the\
            \ last known active host on the subnet. Default value is 3 secs.     \
            \   \n"
          format: int64
          type: integer
        last_member_query_interval:
          description: 'The time interval for the ION device to respond to the IGMP
            query from the last known active host on the subnet. Default value is
            1 sec.

            '
          format: int64
          type: integer
        query_interval:
          description: 'The time interval between successive IGMP queries. Default
            value is 125 secs.

            '
          format: int64
          type: integer
        query_max_response_time:
          description: 'The maximum response time to the IGMP query. Default value
            is 100 secs.

            '
          format: int64
          type: integer
    MulticastNeighbor:
      properties:
        address:
          description: "The address of the selected interface.            \n"
          type: string
        dr:
          description: 'The neighbor is a designated router.

            '
          type: boolean
        dr_prio:
          description: 'The priority associated with the interface on the device for
            DR election.

            '
          type: string
        expires:
          description: "The time remaining before a neighbor is timed out and the\
            \ next PIM Hello message is received.          \n"
          type: string
        uptime:
          description: 'The time for which the neighbor has been up.

            '
          type: string
    MulticastPeerGroup:
      properties:
        description:
          description: 'The multicast peer group descriptions.

            '
        id:
          description: 'The multicast peer group ID.

            '
          type: string
        name:
          description: 'The name of the multicast peer group. Max limit = 128.

            '
          type: string
        peer_sites:
          description: 'The multicast peer site ID.

            '
          items:
            $ref: '#/components/schemas/MulticastPeerSite'
          type: array
        tags:
          description: 'A information field that can be added to identify the multicast
            peer group. Maximum 10 unique tags of length 128 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - peer_sites
      - name
    MulticastPeerGroupScreen:
      properties:
        description:
          description: 'The multicast peer group descriptions.

            '
        id:
          description: 'The multicast peer group ID.

            '
          type: string
        name:
          description: 'The name of the multicast peer group. Max limit = 128.

            '
          type: string
        peer_sites:
          description: 'The multicast peer site ID.

            '
          items:
            $ref: '#/components/schemas/MulticastPeerSite'
          type: array
        tags:
          description: 'A information field that can be added to identify the multicast
            peer group. Maximum 10 unique tags of length 128 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - peer_sites
      - name
    MulticastPeerGroupScreenV2N1:
      properties:
        description:
          description: 'The description of the multicast peer group. Max size = 256.

            '
        id:
          description: "The ID.             \n"
          type: string
        is_source_site_receiver:
          description: 'True or False - Receive traffic from branch side sources to
            receive multicast traffic from another branch site.

            '
          type: boolean
        name:
          description: 'The name of the multicast peer group.

            '
          type: string
        peer_sites:
          description: 'The peer sites ID.

            '
          items:
            $ref: '#/components/schemas/MulticastPeerSite'
          type: array
        tags:
          description: 'An information field that can be added to identify the multicast
            peer group.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - peer_sites
      - name
    MulticastPeerGroupV2N1:
      properties:
        description:
          description: 'The description of the multicast peer group. Max size = 256.

            '
        id:
          description: "The ID.             \n"
          type: string
        is_source_site_receiver:
          description: 'True or False - Receive traffic from branch side sources to
            receive multicast traffic from another branch site.

            '
          type: boolean
        name:
          description: 'The name of the multicast peer group.

            '
          type: string
        peer_sites:
          description: 'The peer sites ID.

            '
          items:
            $ref: '#/components/schemas/MulticastPeerSite'
          type: array
        tags:
          description: 'An information field that can be added to identify the multicast
            peer group.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - peer_sites
      - name
    MulticastPeerSite:
      properties:
        peer_site_id:
          description: Peer Site Id
          type: string
    MulticastPimProtocolConfig:
      properties:
        hello_hold_time:
          description: "The time interval which a neighbor waits for a Hello message\
            \ from a sender neighbor before pruning the neighbor. Default value is\
            \ 105 secs.        \n"
          format: int64
          type: integer
        hello_interval:
          description: 'The time interval between two PIM Hello packets. Default value
            is 30 secs.

            '
          format: int64
          type: integer
        join_prune_interval:
          description: 'The time interval between two Join/Prune messages sent to
            a neighbor. Default value is 60 secs.

            '
          format: int64
          type: integer
    MulticastProtocolParameter:
      properties:
        dr_priority:
          description: "The priority associated with the interface on the device for\
            \ DR election.           \n"
          format: int64
          type: integer
        id:
          description: 'The ID of the multicast config.

            '
          type: string
        igmp_last_member_query_count:
          description: "The number of times the ION device sent IGMP queries to the\
            \ last known active host on the subnet. Default value is 3 secs.     \
            \     \n"
          format: int64
          type: integer
        igmp_last_member_query_response_interval:
          description: 'The time interval for the ION device to respond to the IGMP
            query from the last known active host on the subnet. Default value is
            1 secs.

            '
          format: int64
          type: integer
        igmp_querier_timeout:
          description: 'The timeout interval to wait before becoming a Querier. Default
            value is 380 secs.

            '
          format: int64
          type: integer
        igmp_query_interval:
          description: "The time interval between successive IGMP queries. Default\
            \ value is 125 secs.       \n"
          format: int64
          type: integer
        igmp_query_response_interval:
          description: 'The maximum response time advertised in the IGMP query. Default
            value is 10 secs.

            '
          format: int64
          type: integer
        pim_hello_hold_time:
          description: "The time interval which a neighbor waits for a Hello message\
            \ from a sender neighbor before pruning the neighbor. Default value is\
            \ 105 secs.      \n"
          format: int64
          type: integer
        pim_hello_interval:
          description: 'The time interval between two PIM Hello packets. Default value
            is 30 secs.

            '
          format: int64
          type: integer
        pim_join_hold_interval:
          description: "The time interval for which a receiver should wait for the\
            \ next Join/Prune message from the neighbor before pruning the neighbor.\
            \ Default value is 210 secs. \n"
          format: int64
          type: integer
        pim_join_prune_interval:
          description: 'The time interval between two Join/Prune messages sent to
            a neighbor. Default value is 60 secs.

            '
          format: int64
          type: integer
        pim_spt_threshold:
          description: 'The cut-over time from Rendezvous Point Tree (RPT) to SPT.
            Default value is 100 secs.

            '
          format: int64
          type: integer
        pim_triggered_hello_delay:
          description: "The value of the Hello timer for delay between triggered Hello\
            \ messages. Default value is 4 secs.       \n"
          format: int64
          type: integer
        pim_ttl_threshold:
          description: 'When packets with a lower TTL than the PIM TTL threshold are
            discarded. Default value is 1 secs.

            '
          format: int64
          type: integer
    MulticastRPConfig:
      properties:
        description:
          description: 'The description of the multicast RP configuration.

            '
        groups:
          description: 'The multicast group address. Max length 1024.

            '
          items:
            $ref: '#/components/schemas/Group'
          type: array
        id:
          description: "The ID of the multicast RP.    \n"
          type: string
        ipv4_address:
          description: 'The address of the IPv4.

            '
          type: string
        name:
          description: 'The resource name. Max length 128.

            '
          type: string
        tags:
          description: "A information field that can be added to identify the event\
            \ multicast RP config. Maximum 10 unique tags of length 1024 each are\
            \ allowed.      \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - groups
      - ipv4_address
      - name
    MulticastRPConfigQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of queries.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of queries deleted for a time frame.

            '
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Group the queries by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    MulticastRPConfigQueryFilter:
      properties:
        description:
          description: 'The description of the multicast RP configuration.

            '
        groups:
          description: 'The multicast group address. Max length 1024.

            '
          items:
            $ref: '#/components/schemas/Group'
          type: array
        id:
          description: "The ID of the multicast RP.    \n"
          type: string
        ipv4_address:
          description: 'The address of the IPv4.

            '
          type: string
        name:
          description: 'The resource name. Max length 128.

            '
          type: string
        tags:
          description: 'A information field that can be added to identify the event
            multicast RP config. Maximum 10 unique tags of length 1024 each are allowed.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - groups
      - ipv4_address
      - name
    MulticastRPConfigScreen:
      properties:
        description:
          description: 'The description of the multicast RP configuration.

            '
        groups:
          description: 'The multicast group address. Max length 1024.

            '
          items:
            $ref: '#/components/schemas/Group'
          type: array
        id:
          description: "The ID of the multicast RP.    \n"
          type: string
        ipv4_address:
          description: 'The address of the IPv4.

            '
          type: string
        name:
          description: 'The resource name. Max length 128.

            '
          type: string
        tags:
          description: "A information field that can be added to identify the event\
            \ multicast RP config. Maximum 10 unique tags of length 1024 each are\
            \ allowed. \n"
          items:
            description: Tags
            type: string
          type: array
      required:
      - groups
      - ipv4_address
      - name
    MulticastRoute:
      properties:
        element_rp:
          description: 'Interface or router configured as an (Rendezvous Point) RP
            in the network.

            '
          type: boolean
        flags:
          description: 'Flags for the multicast route table.

            '
          type: string
        group:
          description: 'The multicast group address.

            '
          type: string
        incoming_interface:
          description: 'The interface on which multicast traffic is received.

            '
          type: string
        outgoing_interfaces:
          description: 'The interfaces on which multicast traffic needs to be replicated.

            '
          items:
            description: Outgoing Interfaces
            type: string
          type: array
        rp_address:
          description: 'he address of the Rendezvous Point (RP) in the network.

            '
          type: string
        source:
          description: 'The source address of multicast traffic in the network.

            '
          type: string
    MulticastRouteTableQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of queries.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of queries deleted for a time frame.

            '
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Group the queries by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: "The total number of query parameters.      \n"
          format: int64
          type: integer
    MulticastRouteTableQueryFilter:
      properties:
        element_id:
          description: 'The element ID.

            '
          type: string
        id:
          description: 'The ID of the multicast config.

            '
          type: string
        mroutes:
          description: 'Indicates how multicast traffic is routed to hosts in the
            network. Multicast routes are required and the number of routes should
            be less than 5K.

            '
          items:
            $ref: '#/components/schemas/MulticastRoute'
          type: array
        site_id:
          description: 'The site ID.

            '
          type: string
      required:
      - mroutes
      - site_id
    MulticastRouteTableRequest:
      properties:
        id:
          description: 'The ID of the multicast config.

            '
          type: string
        mroutes:
          description: 'Indicates how multicast traffic is routed to hosts in the
            network. Multicast routes are required and the number of routes should
            be less than 5K.

            '
          items:
            $ref: '#/components/schemas/MulticastRoute'
          type: array
      required:
      - mroutes
    MulticastSourceSideRp:
      properties:
        id:
          description: 'The multicast source side RP ID.

            '
          type: string
        source_side_rps:
          description: 'The source side RP of multicast traffic in the network.

            '
          items:
            $ref: '#/components/schemas/SourceSideRp'
          type: array
        source_site_id:
          description: 'The source site ID.

            '
          type: string
    MulticastSourceSideRpQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of multicast source side RPs that match
            the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number multicast source side RPs deleted for a time frame.

            '
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the multicast source side RPs by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    MulticastSourceSideRpQueryFilter:
      properties:
        id:
          description: 'The multicast source side RP ID.

            '
          type: string
        source_side_rps:
          description: 'The source side RP of multicast traffic in the network.

            '
          items:
            $ref: '#/components/schemas/SourceSideRp'
          type: array
        source_site_id:
          description: 'The source site ID.

            '
          type: string
    MulticastSourceSiteConfig:
      properties:
        id:
          description: 'The multicast source side RP ID.

            '
          type: string
        site_configs:
          description: 'The multicast source site config list. Max size = 64.

            '
          items:
            $ref: '#/components/schemas/SiteConfig'
          type: array
      required:
      - site_configs
    MulticastSourceSiteConfigScreen:
      properties:
        id:
          description: 'The multicast source side RP ID.

            '
          type: string
        site_configs:
          description: 'The multicast source site config list. Max size = 64.

            '
          items:
            $ref: '#/components/schemas/SiteConfig'
          type: array
      required:
      - site_configs
    MulticastStatusQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of queries.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of queries deleted for a time frame.

            '
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "The multicast ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    MulticastStatusQueryFilter:
      properties:
        address:
          description: "The multicast status interface address.            \n"
          type: string
        element_id:
          description: 'The element ID.

            '
          type: string
        id:
          description: 'The ID of the multicast config.

            '
          type: string
        interface_id:
          description: 'The interface ID on which multicast is configured.

            '
          type: string
        name:
          description: 'The name of the multicast status interface.

            '
          type: string
        pim_neighbors:
          description: "The PIM neighbor\u2019s IP address.          \n"
          items:
            $ref: '#/components/schemas/MulticastNeighbor'
          type: array
        site_id:
          description: 'The site ID.

            '
          type: string
        state:
          description: "The state of the selected interface\u2014up or down.\n"
          type: string
      required:
      - pim_neighbors
      - site_id
      - address
      - state
      - name
    MulticastStatusResponse:
      properties:
        address:
          description: "The multicast status interface address.            \n"
          type: string
        element_id:
          description: 'The element ID.

            '
          type: string
        id:
          description: 'The ID of the multicast config.

            '
          type: string
        interface_id:
          description: 'The interface ID on which multicast is configured.

            '
          type: string
        name:
          description: 'The name of the multicast status interface.

            '
          type: string
        pim_neighbors:
          description: "The PIM neighbor\u2019s IP address.          \n"
          items:
            $ref: '#/components/schemas/MulticastNeighbor'
          type: array
        site_id:
          description: 'The site ID.

            '
          type: string
        state:
          description: "The state of the selected interface\u2014up or down.\n"
          type: string
      required:
      - pim_neighbors
      - site_id
      - address
      - state
      - name
    MulticastWanNeighbor:
      properties:
        remote_site_id:
          description: "The remote site ID.  \n"
          type: string
        state:
          description: State
          type: string
        uptime:
          description: 'Indicates the time for which the neighbor has been up.

            '
          type: string
    MulticastWanStatus:
      properties:
        id:
          description: "The multicast WAN status by ID.  \n"
          type: string
        pim_neighbors:
          description: "The PIM neighbor\u2019s IP address.\n"
          items:
            $ref: '#/components/schemas/MulticastWanNeighbor'
          type: array
    MulticastWanStatusQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of multicast WAN status that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number multicast WAN status deleted for a time frame.

            '
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "List the multicast WAN status by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    MulticastWanStatusQueryFilter:
      properties:
        id:
          description: "The multicast WAN status by ID.  \n"
          type: string
        pim_neighbors:
          description: "The PIM neighbor\u2019s IP address.\n"
          items:
            $ref: '#/components/schemas/MulticastWanNeighbor'
          type: array
    PathGroup:
      properties:
        description:
          description: 'The description of the path group. Max length 256.

            '
        id:
          description: "The ID of the path group.    \n"
          type: string
        name:
          description: 'The name of the path group. Max length 128.

            '
          type: string
        paths:
          description: 'List of paths in the group.

            '
          items:
            $ref: '#/components/schemas/WANPath'
          type: array
    PathGroupQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of queries.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of queries deleted for a time frame.

            '
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "The multicast ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    PathGroupQueryFilter:
      properties:
        description:
          description: 'The description of the path group. Max length 256.

            '
        id:
          description: "The ID of the path group.    \n"
          type: string
        name:
          description: 'The name of the path group. Max length 128.

            '
          type: string
        paths:
          description: 'List of paths in the group.

            '
          items:
            $ref: '#/components/schemas/WANPath'
          type: array
      required:
      - paths
    PathGroupScreen:
      properties:
        description:
          description: 'The description of the path group. Max length 256.

            '
        id:
          description: "The ID of the path group.    \n"
          type: string
        name:
          description: 'The name of the path group. Max length 128.

            '
          type: string
        paths:
          description: 'List of paths in the group.

            '
          items:
            $ref: '#/components/schemas/WANPath'
          type: array
      required:
      - paths
    SiteConfig:
      properties:
        group_ipv4_prefix:
          description: 'The group IPv4 prefix.

            '
          type: string
        source_ipv4_address:
          description: 'The source side IPv4 address.

            '
          type: string
    SourceSideGroup:
      properties:
        ipv4_prefix:
          description: 'The IPv4 prefix of the for the multicast.

            '
          type: string
        source_ipv4_address:
          description: 'The source side IPv4 address.

            '
          type: string
    SourceSideRp:
      properties:
        groups:
          description: 'The list of multicast group addresses that the RP serves.

            '
          items:
            $ref: '#/components/schemas/SourceSideGroup'
          type: array
        ipv4_address:
          description: 'The multicast group IPv4 addresses to which the RP caters.

            '
          type: string
    WANPath:
      properties:
        label:
          description: 'The label to identify the path.

            '
          type: string
        path_type:
          description: "The path type.      \n"
          enum:
          - vpn
          - direct
          - servicelink
          type: string
      required:
      - path_type
info:
  contact: {}
  description: List of APIs used to manage multicast specific configurations.
  title: Multicast
  version: Latest
openapi: 3.0.0
paths:
  /v2.0/api/tenants/{tenant_id}/multicastdynamicrps/query:
    post:
      description: Query all the multicast dynamic RPs.
      operationId: post-v2.0-api-tenants-tenant_id-multicastdynamicrps-query
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastDynamicRpQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastDynamicRpQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_INPUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Multicast Dynamic RPs (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/multicastpeergroups:
    get:
      description: List all the multicast peer groups.
      operationId: get-v2.0-api-tenants-tenant_id-multicastpeergroups
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastPeerGroup'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast Peer Groups (v2.0)
      tags:
      - Multicast
    post:
      description: Create a multicast peer group.
      operationId: post-v2.0-api-tenants-tenant_id-multicastpeergroups
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastPeerGroupScreen'
        description: Details of the multicast peer groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastPeerGroup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: MULTICAST_INVALID_PEER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Multicast Peer Group (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/multicastpeergroups/{peer_group_id}:
    delete:
      description: Delete a multicast peer group.
      operationId: delete-v2.0-api-tenants-tenant_id-multicastpeergroups-peer_group_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The multicast peer group ID.
        in: path
        name: peer_group_id
        required: true
        schema:
          description: Peer Group Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastPeerGroup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: MULTICAST_PEER_GROUP_IN_USE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Multicast Peer Group (v2.0)
      tags:
      - Multicast
    get:
      description: Get a multicast peer group.
      operationId: get-v2.0-api-tenants-tenant_id-multicastpeergroups-peer_group_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The multicast peer group ID.
        in: path
        name: peer_group_id
        required: true
        schema:
          description: Peer Group Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastPeerGroup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_INPUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Multicast Peer Group (v2.0)
      tags:
      - Multicast
    put:
      description: Update a multicast peer group.
      operationId: put-v2.0-api-tenants-tenant_id-multicastpeergroups-peer_group_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The multicast peer group ID.
        in: path
        name: peer_group_id
        required: true
        schema:
          description: Peer Group Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastPeerGroupScreen'
        description: Details of the multicast peer group to be Updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastPeerGroup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: MULTICAST_INVALID_PEER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Multicast Peer Group (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/multicastroutes/query:
    post:
      description: Query the multicast route table.
      operationId: post-v2.0-api-tenants-tenant_id-multicastroutes-query
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastRouteTableQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastRouteTableQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_INPUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Multicast Route Table (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/multicastrps/query:
    post:
      description: Query the multicast (Rendezvous Point) RP configuration.
      operationId: post-v2.0-api-tenants-tenant_id-multicastrps-query
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastRPConfigQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastRPConfigQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_INPUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Multicast RP Config (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/multicaststatus/query:
    post:
      description: Query the multicast status information.
      operationId: post-v2.0-api-tenants-tenant_id-multicaststatus-query
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastStatusQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastStatusQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_INPUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Multicast Status Information (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/multicastwanstatus/query:
    post:
      description: Query all the multicast WAN status.
      operationId: post-v2.0-api-tenants-tenant_id-multicastwanstatus-query
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastWanStatusQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastWanStatusQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_INPUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Multicast WAN Status (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}/multicaststatus:
    get:
      description: List all the multicast status information.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-interfaces-interface_id-multicaststatus
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast interface ID.
        in: path
        name: interface_id
        required: true
        schema:
          description: Interface Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastStatusResponse'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast Status (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastdynamicrps:
    get:
      description: List all the multicast dynamic RPs.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastdynamicrps
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element ID.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastDynamicRp'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast Dynamic RPs (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastdynamicrps/{id}:
    get:
      description: List a specific the multicast dynamic RP.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastdynamicrps-id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element ID.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast dynamic RP ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastDynamicRp'
          description: Successful Operation
      summary: Get Specific Multicast Dynamic RP (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastglobalconfigs:
    get:
      description: List all the multicast configs.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastglobalconfigs
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element ID.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastGlobalConfig'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast Configs (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastglobalconfigs/{config_id}:
    get:
      description: List the existing multicast global configuration.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastglobalconfigs-config_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastGlobalConfig'
          description: Successful Operation
      summary: Get Multicast Config (v2.0)
      tags:
      - Multicast
    put:
      description: Update the existing multicast global configuration.
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastglobalconfigs-config_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastGlobalConfigScreen'
        description: Details of the Multicast config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastGlobalConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Multicast Config (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastprotocolparameters:
    get:
      description: List all the multicast protocol parameters.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastprotocolparameters
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastProtocolParameter'
          description: Successful Operation
      summary: Get Multicast Protocol Parameters (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastroutes:
    get:
      description: List all the multicast routes.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastroutes
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastRouteTableRequest'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast Routes (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastrps:
    get:
      description: List all the multicast RP configs.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastrps
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastRPConfig'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast RP Configs (v2.0)
      tags:
      - Multicast
    post:
      description: API to create multicast rp config
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastrps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastRPConfigScreen'
        description: Details of the multicast RP config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastRPConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: MULTICAST_RPCONFIG_INVALID_ADDRESS
                  - code: MULTICAST_RPCONFIG_OVERLAPPING_ADDRESS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Creates Multicast RP config (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastrps/{config_id}:
    delete:
      description: Delete the existing multicast RP config.
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastrps-config_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastRPConfig'
                      type: array
                  type: object
          description: Successful Operation
      summary: Delete Multicast RP Config (v2.0)
      tags:
      - Multicast
    get:
      description: List the multicast RP config.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastrps-config_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastRPConfig'
          description: Successful Operation
      summary: Get Multicast RP Config (v2.0)
      tags:
      - Multicast
    put:
      description: Updates the existing multicast RP config.
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastrps-config_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastRPConfigScreen'
        description: Details of the Multicast RP config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastRPConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: MULTICAST_RPCONFIG_INVALID_ADDRESS
                  - code: MULTICAST_RPCONFIG_OVERLAPPING_ADDRESS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Multicast RP Config (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastwanstatus:
    get:
      description: List all the multicast WAN status.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastwanstatus
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element ID.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastWanStatus'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast WAN Status (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastwanstatus/{wan_status_id}:
    get:
      description: List a specific the multicast WAN status.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastwanstatus-wan_status_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The element ID.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast WAN status ID.
        in: path
        name: wan_status_id
        required: true
        schema:
          description: Wan Status Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastWanStatus'
          description: Successful Operation
      summary: Get Specific Multicast WAN Status (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/multicastsourcesiderps:
    get:
      description: List the multicast source side RPs.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-multicastsourcesiderps
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID for which you wish to query the source side RPs.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastSourceSideRp'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast Source Side RPs (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/multicastsourcesiderps/query:
    post:
      description: Query the multicast source side RPs.
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-multicastsourcesiderps-query
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID for which you wish to query the source side RPs.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastSourceSideRpQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastSourceSideRpQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_INPUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query Multicast Source Side RPs (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/multicastsourcesiderps/{rp_id}:
    get:
      description: List a specific the multicast source side RP.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-multicastsourcesiderps-rp_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The RP ID.
        in: path
        name: rp_id
        required: true
        schema:
          description: Rp Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastSourceSideRp'
          description: Successful Operation
      summary: Get Multicast Source Side RP (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/multicastsourcesiteconfigs:
    get:
      description: Use the API to get multicast source site configs.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-multicastsourcesiteconfigs
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID from where you wish to get multicast source site
          configs.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastSourceSiteConfig'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast Source Site Configs (v2.0)
      tags:
      - Multicast
    post:
      description: Create a multicast source site config.
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-multicastsourcesiteconfigs
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID where you wish to create multicast source site configs.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastSourceSiteConfigScreen'
        description: Details of the multicast source site config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastSourceSiteConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: DUPLICATE_MULTICAST_SOURCE_SITE_GRP_IPV4_PREFIX
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Multicast Source Site Config (v2.0)
      tags:
      - Multicast
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/multicastsourcesiteconfigs/{config_id}:
    delete:
      description: Delete the multicast source site config.
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-multicastsourcesiteconfigs-config_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The source site config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastSourceSiteConfig'
          description: Successful Operation
        '404':
          description: Not Found
      summary: Delete Multicast Source Site Config (v2.0)
      tags:
      - Multicast
    get:
      description: Get the multicast source site config.
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-multicastsourcesiteconfigs-config_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The source site config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastSourceSiteConfig'
          description: Successful Operation
        '404':
          description: Not Found
      summary: Get Multicast Source Site Config (v2.0)
      tags:
      - Multicast
    put:
      description: Update the multicast source site config.
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-multicastsourcesiteconfigs-config_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The site ID.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: The source site config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastSourceSiteConfigScreen'
        description: Details of the multicast source site config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastSourceSiteConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: DUPLICATE_MULTICAST_SOURCE_SITE_GRP_IPV4_PREFIX
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          description: Not Found
      summary: Update Multicast Source Site Config (v2.0)
      tags:
      - Multicast
  /v2.1/api/tenants/{tenant_id}/multicastpeergroups:
    get:
      description: List all the multicast peer groups.
      operationId: get-v2.1-api-tenants-tenant_id-multicastpeergroups
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastPeerGroupV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Multicast Peer Groups (v2.1)
      tags:
      - Multicast
    post:
      description: Create a multicast peer group.
      operationId: post-v2.1-api-tenants-tenant_id-multicastpeergroups
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastPeerGroupScreenV2N1'
        description: Details of the multicast peer groups to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastPeerGroupV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: MULTICAST_INVALID_PEER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Multicast Peer Group (v2.1)
      tags:
      - Multicast
  /v2.1/api/tenants/{tenant_id}/multicastpeergroups/{peer_group_id}:
    delete:
      description: Delete a multicast peer group.
      operationId: delete-v2.1-api-tenants-tenant_id-multicastpeergroups-peer_group_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The multicast peer group ID.
        in: path
        name: peer_group_id
        required: true
        schema:
          description: Peer Group Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastPeerGroupV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: MULTICAST_PEER_GROUP_IN_USE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          description: Not Found
      summary: Delete Multicast Peer Group (v2.1)
      tags:
      - Multicast
    get:
      description: Get a multicast peer group.
      operationId: get-v2.1-api-tenants-tenant_id-multicastpeergroups-peer_group_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The multicast peer group ID.
        in: path
        name: peer_group_id
        required: true
        schema:
          description: Peer Group Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastPeerGroupV2N1'
          description: Successful Operation
        '404':
          description: Not Found
      summary: Get Multicast Peer Group (v2.1)
      tags:
      - Multicast
    put:
      description: Update a multicast peer group.
      operationId: put-v2.1-api-tenants-tenant_id-multicastpeergroups-peer_group_id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The multicast peer group ID.
        in: path
        name: peer_group_id
        required: true
        schema:
          description: Peer Group Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastPeerGroupScreenV2N1'
        description: Details of the multicast peer group to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastPeerGroupV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: MULTICAST_INVALID_PEER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Multicast Peer Group (v2.1)
      tags:
      - Multicast
  /v2.1/api/tenants/{tenant_id}/pathgroups:
    get:
      description: List all the path groups for a tenant.
      operationId: get-v2.1-api-tenants-tenant_id-pathgroups
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PathGroup'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Path Groups for Tenant (v2.1)
      tags:
      - Multicast
    post:
      description: Create a path group for a tenant.
      operationId: post-v2.1-api-tenants-tenant_id-pathgroups
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathGroupScreen'
        description: Details of the path group to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathGroup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: PATHGROUP_INVALID_DESCRIPTION
                  - code: PATHGROUP_INVALID_NAME
                  - code: PATHGROUP_INVALID_PATHS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Path Group for Tenant (v2.1)
      tags:
      - Multicast
  /v2.1/api/tenants/{tenant_id}/pathgroups/query:
    post:
      description: Queries the DB for limit number of network contexts that match
        query parameters.
      operationId: post-v2.1-api-tenants-tenant_id-pathgroups-query
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathGroupQuery'
        description: Query Details for Path Group
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/PathGroupQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Number of Network Contexts (v2.1)
      tags:
      - Multicast
  /v2.1/api/tenants/{tenant_id}/pathgroups/{path_group_id}:
    delete:
      description: Delete the path group of a tenant.
      operationId: delete-v2.1-api-tenants-tenant_id-pathgroups-path_group_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the path group.
        in: path
        name: path_group_id
        required: true
        schema:
          description: Path Group Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathGroup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATHGROUP_NOT_FOUND
                  - code: PATHGROUP_IN_USE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Path Group of Tenant (v2.1)
      tags:
      - Multicast
    get:
      description: List the path group of a tenant.
      operationId: get-v2.1-api-tenants-tenant_id-pathgroups-path_group_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the path group.
        in: path
        name: path_group_id
        required: true
        schema:
          description: Path Group Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathGroup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATHGROUP_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get Path Group of Tenant (v2.1)
      tags:
      - Multicast
    put:
      description: Update the path group of a tenant.
      operationId: put-v2.1-api-tenants-tenant_id-pathgroups-path_group_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the path group.
        in: path
        name: path_group_id
        required: true
        schema:
          description: Path Group Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathGroupScreen'
        description: Details of the path group to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathGroup'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PATHGROUP_NOT_FOUND
                  - code: PATHGROUP_INVALID_DESCRIPTION
                  - code: PATHGROUP_INVALID_NAME
                  - code: PATHGROUP_INVALID_PATHS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Path Group of Tenant (v2.1)
      tags:
      - Multicast
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastglobalconfigs:
    get:
      description: List all the existing multicast global configs.
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastglobalconfigs
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MulticastGlobalConfigV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all Multicast Configs (v2.1)
      tags:
      - Multicast
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/multicastglobalconfigs/{config_id}:
    get:
      description: List the existing multicast global config.
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastglobalconfigs-config_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastGlobalConfigV2N1'
          description: Successful Operation
      summary: Get Multicast Config (v2.1)
      tags:
      - Multicast
    put:
      description: Update the existing multicast global config.
      operationId: put-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-multicastglobalconfigs-config_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the site.
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: The multicast config ID.
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastGlobalConfigScreenV2N1'
        description: Details of the Multicast config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastGlobalConfigV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_SW_VERSION_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Multicast Config (v2.1)
      tags:
      - Multicast
servers:
- url: https://api.us.cloudgenix.com
tags:
- name: Multicast
