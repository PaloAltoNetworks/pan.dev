components:
  schemas:
    Aggregate:
      properties:
        data:
          description: 'The details of the aggregate data.

            '
          items:
            $ref: '#/components/schemas/AggregateData'
          type: array
        field:
          description: Field
          type: string
        name:
          description: 'The name of the query response.

            '
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
        statistic:
          description: 'QoS application aggregate statistics.

            '
          type: string
        unit:
          description: 'The unit.

            '
          type: string
    AggregateData:
      properties:
        value:
          description: 'Value of the aggregate data.

            '
          type: number
        view:
          description: 'View the aggregate date.

            '
          type: object
    BulkResponse:
      properties:
        count:
          description: 'The total number.

            '
          format: int32
          type: integer
        id:
          description: 'The ID.

            '
          type: string
    Certificate:
      properties:
        algorithm:
          description: 'A time-based algorithm.

            '
          type: string
        ca:
          description: 'CA value. True or False.

            '
          type: boolean
        certificate:
          description: 'The details of the certificate.

            '
          type: string
        certificate_file:
          description: 'The certificate file.

            '
          type: string
        disabled:
          description: 'List the disabled certificates.

            '
          type: boolean
        disabled_reason:
          description: "The reason for disabling the certificate.              \n"
          type: string
        entity_id:
          description: 'The entity ID.

            '
          type: string
        format:
          description: 'The certificate format.

            '
          enum:
          - PEM
          - PKCS12
          type: string
        has_key_file:
          description: Has Key File
          type: boolean
        has_passphrase:
          description: Has Passphrase
          type: boolean
        id:
          description: 'The ID.

            '
          type: string
        inactive:
          description: 'List the inactive certificates.

            '
          type: boolean
        inactive_reason:
          description: 'The reason for the certificate being inactive.

            '
          type: string
        issuer:
          description: 'Details of the certificate issuer.

            '
          type: string
        issuer_hash:
          description: Issuer Hash
          type: string
        issuer_id:
          description: 'The ID of the issuer.

            '
          type: string
        key_file:
          description: Key File
          type: string
        name:
          description: 'Name of the certificate.

            '
          type: string
        not_after:
          description: 'The certificate time frame.

            '
          format: int64
          type: integer
        not_before:
          description: "The certificate time frame.        \n"
          format: int64
          type: integer
        not_valid_after:
          description: "The validity of the certificate.          \n"
          type: string
        not_valid_before:
          description: 'The validity of the certificate.

            '
          type: string
        passphrase:
          description: 'The certificate password.

            '
          type: string
        public_key:
          description: 'The public key.

            '
          type: string
        region:
          description: Region
          type: string
        revocation_date:
          description: 'The certificate revocation date.

            '
          format: int64
          type: integer
        revocation_reason:
          description: 'The certificate revocation reason.

            '
          type: string
        revoked:
          description: 'If certificate is revoked. True or False.

            '
          type: boolean
        serial_no:
          description: 'Serial No: NotNull(message = INVALID_SERIAL_NO) '
          type: string
        subj_descr:
          description: 'The subject description.

            '
          type: string
        subj_serial_no:
          description: "The subject serial number.          \n"
          type: string
        subj_uid:
          description: 'The subject UID.

            '
          type: string
        subject:
          description: 'The subject.

            '
          type: string
        subject_hash:
          description: Subject Hash
          type: string
        tenant_id:
          description: "The ID of the tenant.          \n"
          type: string
        title:
          description: 'The title of the certificate.

            '
          type: string
        used_for:
          description: "The certificate used for value.                \n"
          items:
            description: Used For
            enum:
            - FORWARD_TRUST_CERTIFICATE
            - FORWARD_UNTRUST_CERTIFICATE
            - TRUSTED_ROOT_CA
            type: string
          type: array
      required:
      - format
      - tenant_id
      - subject
      - issuer_id
      - name
      - used_for
      - issuer
      - serial_no
      - entity_id
    CertificateAuthorityConfig:
      properties:
        ca_sign_timeout:
          description: 'The certificate authority signature time out range.

            '
          format: int32
          type: integer
        id:
          description: 'The ID.

            '
          type: string
        manual_renew_trigger_threshold:
          description: 'The threshold for manual trigger when renewing the certificate
            authority.

            '
          format: int32
          type: integer
        renewal_window_from_expiry:
          description: 'The renewal time range from expiry.

            '
          format: int32
          type: integer
        scep_config:
          $ref: '#/components/schemas/ScepConfig'
          description: 'The configuration details.

            '
        tenant_id:
          description: "The ID of the tenant. \n"
          type: string
        type:
          description: 'The certificate authority configuration type.

            '
          enum:
          - LOCAL
          - SCEP
          type: string
      required:
      - ca_sign_timeout
      - manual_renew_trigger_threshold
      - renewal_window_from_expiry
      - type
      - tenant_id
    CertificatePOSTScreen:
      properties:
        certificate_file:
          description: 'The certificate file.

            '
          type: string
        format:
          description: 'The certificate format.

            '
          enum:
          - PEM
          - PKCS12
          type: string
        id:
          description: 'The ID.

            '
          type: string
        key_file:
          description: Key File
          type: string
        name:
          description: 'Name of the certificate.

            '
          type: string
        passphrase:
          description: 'The certificate password.

            '
          type: string
        used_for:
          description: 'The certificate used for value.

            '
          items:
            description: Used For
            enum:
            - FORWARD_TRUST_CERTIFICATE
            - FORWARD_UNTRUST_CERTIFICATE
            - TRUSTED_ROOT_CA
            type: string
          type: array
      required:
      - used_for
      - format
      - name
    CertificatePUTScreen:
      properties:
        algorithm:
          description: 'A time-based algorithm.

            '
          type: string
        ca:
          description: 'CA value. True or False.

            '
          type: boolean
        certificate_file:
          description: 'The certificate file.

            '
          type: string
        format:
          description: 'The certificate format.

            '
          enum:
          - PEM
          - PKCS12
          type: string
        id:
          description: "The ID.          \n"
          type: string
        issuer:
          description: 'Details of the certificate issuer.

            '
          type: string
        issuer_hash:
          description: Issuer Hash
          type: string
        key_file:
          description: Key File
          type: string
        name:
          description: 'Name of the certificate.

            '
          type: string
        not_valid_after:
          description: "The validity of the certificate.          \n"
          type: string
        not_valid_before:
          description: 'The validity of the certificate.

            '
          type: string
        passphrase:
          description: 'The certificate password.

            '
          type: string
        subject:
          description: Subject
          type: string
        subject_hash:
          description: Subject Hash
          type: string
        used_for:
          description: "The certificate used for value.   \n"
          items:
            description: Used For
            enum:
            - FORWARD_TRUST_CERTIFICATE
            - FORWARD_UNTRUST_CERTIFICATE
            - TRUSTED_ROOT_CA
            type: string
          type: array
      required:
      - used_for
      - format
      - name
    ElementImageV2N2:
      properties:
        fips_certification_valid:
          description: 'The valid FIPS certified device images.

            '
          type: boolean
        fips_certified:
          description: 'The FIPS certified device images.

            '
          type: boolean
        id:
          description: "The ID of the device images.\t\n"
          type: string
        model_software_map:
          description: 'The model and bundle name of the model software map.

            '
          items:
            $ref: '#/components/schemas/ModelSoftwareMap'
          type: array
        release_url:
          description: 'The release URL.

            '
          type: string
        state:
          description: "The device connection state.    \n"
          type: string
        version:
          description: "The software version installed. \n"
          type: string
    ElementImageV2N3:
      properties:
        fips_certification_valid:
          description: 'The valid FIPS certified device images.

            '
          type: boolean
        fips_certified:
          description: 'The FIPS certified device images.

            '
          type: boolean
        id:
          description: "The ID of the device images.\t\n"
          type: string
        ml7_version:
          description: "The ml7 version.                \n"
          type: string
        model_software_map:
          description: 'The model and bundle name of the model software map.

            '
          items:
            $ref: '#/components/schemas/ModelSoftwareMap'
          type: array
        release_url:
          description: 'The release URL.

            '
          type: string
        state:
          description: "The device connection state.    \n"
          type: string
        version:
          description: 'The software version installed.

            '
          type: string
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          description: 'The error code.

            '
          type: string
        message:
          description: 'The error message.

            '
          type: string
    ListQueryResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number.

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs.

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size = 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query.

            '
          type: object
        tenant_id:
          description: 'The tenant ID.

            '
          type: string
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count.

            '
          format: int32
          type: integer
        id:
          description: 'The ID.

            '
          type: string
        tenant_id:
          description: 'The tenant ID.

            '
          type: string
      type: object
    MachineSoftware:
      properties:
        id:
          description: 'The device software ID.

            '
          type: string
        scheduled_upgrade:
          description: 'The devices for which software upgrades have been scheduled.
            The list will display a temporary download completed state and then the
            scheduled upgrade.

            '
          type: string
        tenant_id:
          description: 'ID of the tenant.

            '
          type: string
        upgrade_interval:
          description: 'The upgrade interval time limit until an upgrade attempt is
            performed.

            '
          type: integer
        upgrade_version:
          description: "The software version for the upgrade. \n"
          type: string
      required:
      - upgrade_version
      - tenant_id
    MachineSoftwareQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of device upgrade configs that match
            the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of device upgrade configs deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the device upgrade configs for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the device upgrade configs by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    MachineSoftwareState:
      properties:
        current_version:
          description: 'The current version of the device.

            '
          type: string
        download_percent:
          description: 'The download percentage.

            '
          type: integer
        failure_info:
          description: 'The failure information, if there is a failure of any type.

            '
          type: string
        id:
          description: Id
          type: string
        rollback_version:
          description: 'The older software versions to rollback.

            '
          type: string
        status:
          description: 'The status of active and pending device software upgrades.

            '
          type: string
        tenant_id:
          description: "ID of the tenant.              \n"
          type: string
        tentative_version:
          description: 'The tenatative version of the device software.

            '
          type: string
        upgrade_version:
          description: 'The upgrade device software version.

            '
          type: string
      required:
      - tenant_id
    MachineSoftwareStateQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of the device software upgrade status
            that match the query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of device software upgrade statuses deleted for
            a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the device software upgrade statuses for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the device software upgrade statuses by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
    ModelSoftwareMap:
      properties:
        bundle_name:
          description: 'The software bundle name.

            '
          type: string
        model:
          description: 'The software model.

            '
          type: string
    ScepConfig:
      properties:
        challenge_uri:
          description: 'The challenge URI.

            '
          type: string
        enrollment_uri:
          description: 'The enrollment URI.

            '
          type: string
        https:
          description: 'The HTTPS value; True or False.

            '
          type: boolean
        num_challenge_passwords:
          description: 'The numbers challenge password.

            '
          type: integer
        server_certificate:
          description: 'The server certificate.

            '
          type: string
        server_password:
          description: "The server password. \n"
          type: string
        server_primary_address:
          description: 'The server primary address.

            '
          type: string
        server_username:
          description: 'The server user name.

            '
          type: string
    SoftwareDownloadHistoryQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: 'The aggregate number of software downloads that match the
            query parameters.

            '
        dest_page:
          description: 'The destination page.

            '
          format: int32
          type: integer
        getDeleted:
          description: 'The number of software downloads deleted for a time frame.

            '
          type: boolean
        group_by:
          description: 'Group the software downloads for the query.

            '
          items:
            description: Group By
            type: string
          type: array
        id:
          description: "Lists the software downloads by ID.    \n"
          type: string
        last_query_ts:
          description: 'Return the ID of a specified query in the current session.

            '
          format: int64
          type: integer
        limit:
          description: 'The query limit.

            '
          format: int32
          type: integer
        next_query:
          description: 'The  limit.

            '
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: 'Retrieve information from a field.

            '
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: 'List the fields to query.

            '
          type: boolean
        sort_params:
          type: object
        total_count:
          description: 'The total number of query parameters.

            '
          format: int64
          type: integer
info:
  contact: {}
  description: List of APIs used to manage your device software to upgrade, retrieve
    available software images, and upgrade status information.
  title: Software Management
  version: Latest
openapi: 3.0.0
paths:
  /v2.0/api/tenants/{tenant_id}/certificates:
    get:
      description: List all the tenant certificates.
      operationId: get-v2.0-api-tenants-tenant_id-certificates
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Certificate'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all Tenant Certificates (v2.0)
      tags:
      - Software Management
    post:
      description: Create or import a new certificate(s).
      operationId: post-v2.0-api-tenants-tenant_id-certificates
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePOSTScreen'
        description: Details of certificate to be created/imported
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CERTIFICATE_NAME_INVALID
                  - code: CERTIFICATE_KEY_FILE_INVALID
                  - code: CERTIFICATE_FILE_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create or Import New Certificate (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/certificates/revoked:
    get:
      description: Retrieve all revoked CICs for a tenant.
      operationId: get-v2.0-api-tenants-tenant_id-certificates-revoked
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successful Operation
      summary: Get Revoked CICs for a Tenant (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/certificates/{certificate_id}:
    delete:
      description: Delete the certificate of a tenant.
      operationId: delete-v2.0-api-tenants-tenant_id-certificates-certificate_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the certificate.
        in: path
        name: certificate_id
        required: true
        schema:
          description: Certificate Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CERTIFICATE_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Tenant Certificate (v2.0)
      tags:
      - Software Management
    get:
      description: Get a specific certificate of a tenant.
      operationId: get-v2.0-api-tenants-tenant_id-certificates-certificate_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the certificate.
        in: path
        name: certificate_id
        required: true
        schema:
          description: Certificate Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successful Operation
      summary: Get Certificate of Tenant (v2.0)
      tags:
      - Software Management
    put:
      description: Update the certificate of a tenant.
      operationId: put-v2.0-api-tenants-tenant_id-certificates-certificate_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the certificate.
        in: path
        name: certificate_id
        required: true
        schema:
          description: Certificate Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePUTScreen'
        description: Details of certificate to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CERTIFICATE_NOT_FOUND
                  - code: CERTIFICATE_NAME_INVALID
                  - code: CERTIFICATE_KEY_FILE_INVALID
                  - code: CERTIFICATE_FILE_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Certificate of Tenant (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/entities/{element_id}/certificates:
    get:
      description: Retrieve all CICs for a particular element.
      operationId: get-v2.0-api-tenants-tenant_id-entities-element_id-certificates
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: ID of the element.
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successful Operation
      summary: Get CICs for Specific Element (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/externalcaconfigs:
    get:
      description: Retrieve an existing certificate authority configuration using
        tenant ID.
      operationId: get-v2.0-api-tenants-tenant_id-externalcaconfigs
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAuthorityConfig'
          description: Successful Operation
      summary: Get Certificate Authority Configuration (v2.0)
      tags:
      - Software Management
    post:
      description: Create a new certificate authority configuration.
      operationId: post-v2.0-api-tenants-tenant_id-externalcaconfigs
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateAuthorityConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAuthorityConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: NO_SCEP_CONFIG_SUBMITTED
                  - code: NO_SERVER_CERTIFICATE_SUBMITTED
                  - code: REDUNDANT_SCEP_CONFIG_SUBMITTED
                  - code: INVALID_REQUEST_DUPLICATE_KEY
                  - code: CANNOT_PARSE_SERVER_CERTIFICATE
                  - code: CANNOT_ADD_SERVER_CERTIFICATE_TO_KEYSTORE
                  - code: ERROR_SAVING_CERTIFICATE_AUTHORITY
                  - code: ERROR_SAVING_CERTIFICATE_AUTHORITY_CONFIG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Certificate Authority Configuration (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/externalcaconfigs/{id}:
    delete:
      description: Delete an existing certificate authority configuration using tenant
        ID.
      operationId: delete-v2.0-api-tenants-tenant_id-externalcaconfigs-id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The certificate authority configuration ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAuthorityConfig'
          description: Successful Operation
      summary: Delete Certificate Authority Configuration (v2.0)
      tags:
      - Software Management
    get:
      description: Get an existing certificate authority configuration using tenant
        ID.
      operationId: get-v2.0-api-tenants-tenant_id-externalcaconfigs-id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The certificate authority configuration ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAuthorityConfig'
          description: Successful Operation
      summary: Get Certificate Authority Configuration (v2.0)
      tags:
      - Software Management
    put:
      description: Update an existing certificate authority configuration using tenant
        ID.
      operationId: put-v2.0-api-tenants-tenant_id-externalcaconfigs-id
      parameters:
      - description: The tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The certificate authority configuration ID.
        in: path
        name: id
        required: true
        schema:
          description: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateAuthorityConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAuthorityConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: NO_SCEP_CONFIG_SUBMITTED
                  - code: NO_SERVER_CERTIFICATE_SUBMITTED
                  - code: REDUNDANT_SCEP_CONFIG_SUBMITTED
                  - code: CERTIFICATE_AUTHORITY_CONFIG_NOT_FOUND
                  - code: INVALID_ETAG
                  - code: CANNOT_PARSE_SERVER_CERTIFICATE
                  - code: CANNOT_ADD_SERVER_CERTIFICATE_TO_KEYSTORE
                  - code: ERROR_SAVING_CERTIFICATE_AUTHORITY
                  - code: ERROR_SAVING_CERTIFICATE_AUTHORITY_CONFIG
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update Certificate Authority Configuration (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/machine_upgrade/query:
    post:
      description: Query the configuration of the machine upgrade.
      operationId: post-v2.0-api-tenants-tenant_id-machine_upgrade-query
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineSoftwareQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MachineSoftwareQuery'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query Machine Upgrade (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/machines/{machine_id}/software:
    get:
      description: List details of all the machine software.
      operationId: get-v2.0-api-tenants-tenant_id-machines-machine_id-software
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The ID of the device.
        in: path
        name: machine_id
        required: true
        schema:
          description: Machine Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MachineSoftware'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Machine Software (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/machines/{machine_id}/software/{software_id}:
    get:
      description: List details of a specific machine software.
      operationId: get-v2.0-api-tenants-tenant_id-machines-machine_id-software-software_id
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The ID of the device.
        in: path
        name: machine_id
        required: true
        schema:
          description: Machine Id
          type: string
      - description: The ID of the device software.
        in: path
        name: software_id
        required: true
        schema:
          description: Software Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineSoftware'
          description: Successful Operation
      summary: Get Specific Machine Software (v2.0)
      tags:
      - Software Management
    put:
      description: Upgrade the machine software.
      operationId: put-v2.0-api-tenants-tenant_id-machines-machine_id-software-software_id
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The ID of the device.
        in: path
        name: machine_id
        required: true
        schema:
          description: Machine Id
          type: string
      - description: The ID of the device software.
        in: path
        name: software_id
        required: true
        schema:
          description: Software Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineSoftware'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineSoftware'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: MACHINE_UNKNOWN
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: MACHINE_SOFTWARE_CONFIG_VERSION_NOT_FOUND
                  - code: MACHINE_SOFTWARE_CONFIG_ELEMENT_CLAIMED
                  - code: MACHINE_SOFTWARE_CONFIG_VERSION_NOT_ALLOCATED
                  - code: MACHINE_SOFTWARE_CONFIG_VERSION_ALREADY_PRESENT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Upgrade Machine Software (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/machines/{machine_id}/software/{software_id}/status:
    get:
      description: List all statuses of the machine software.4
      operationId: get-v2.0-api-tenants-tenant_id-machines-machine_id-software-software_id-status
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The ID of the device.
        in: path
        name: machine_id
        required: true
        schema:
          description: Machine Id
          type: string
      - description: The ID of the device software.
        in: path
        name: software_id
        required: true
        schema:
          description: Software Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MachineSoftwareState'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Machine Software Status (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/machines/{machine_id}/software/{software_id}/status/{status_id}:
    get:
      description: List the status of the machine software.
      operationId: get-v2.0-api-tenants-tenant_id-machines-machine_id-software-software_id-status-status_id
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The ID of the device.
        in: path
        name: machine_id
        required: true
        schema:
          description: Machine Id
          type: string
      - description: The ID of the device software.
        in: path
        name: software_id
        required: true
        schema:
          description: Software Id
          type: string
      - description: The ID of the device status.
        in: path
        name: status_id
        required: true
        schema:
          description: Status Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineSoftwareState'
          description: Successful Operation
      summary: Get Specific Machine Software Status (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/softwarehistory/query:
    post:
      description: Query the DB for all software downloads done by a tenant.
      operationId: post-v2.0-api-tenants-tenant_id-softwarehistory-query
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareDownloadHistoryQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/SoftwareDownloadHistoryQuery'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query DB for Software Downloads (v2.0)
      tags:
      - Software Management
  /v2.0/api/tenants/{tenant_id}/upgrade_status/query:
    post:
      description: Query the machine upgrade status.
      operationId: post-v2.0-api-tenants-tenant_id-upgrade_status-query
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineSoftwareStateQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/MachineSoftwareStateQuery'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query Machine Upgrade Status (v2.0)
      tags:
      - Software Management
  /v2.2/api/tenants/{tenant_id}/element_images:
    get:
      description: List all the device images.
      operationId: get-v2.2-api-tenants-tenant_id-element_images
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ElementImageV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Machine Images (v2.2)
      tags:
      - Software Management
  /v2.2/api/tenants/{tenant_id}/element_images/{machine_image_id}:
    get:
      description: List all the information about a machine image.
      operationId: get-v2.2-api-tenants-tenant_id-element_images-machine_image_id
      parameters:
      - description: The ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The ID of the device image.
        in: path
        name: machine_image_id
        required: true
        schema:
          description: Machine Image Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementImageV2N2'
          description: Successful Operation
      summary: Get Information about Machine Image (v2.2)
      tags:
      - Software Management
  /v2.3/api/tenants/{tenant_id}/element_images:
    get:
      description: List all the device images.
      operationId: get-v2.3-api-tenants-tenant_id-element_images
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ElementImageV2N3'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get Machine Images (v2.3)
      tags:
      - Software Management
  /v2.3/api/tenants/{tenant_id}/element_images/{machine_image_id}:
    get:
      description: List all the information about a machine image.
      operationId: get-v2.3-api-tenants-tenant_id-element_images-machine_image_id
      parameters:
      - description: ID of the tenant.
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: The ID of the device image.
        in: path
        name: machine_image_id
        required: true
        schema:
          description: Machine Image Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementImageV2N3'
          description: Successful Operation
      summary: Get Information about Machine Image (v2.3)
      tags:
      - Software Management
servers:
- url: https://api.us.cloudgenix.com
tags:
- name: Software Management
