components:
  schemas:
    ASPathRegex:
      properties:
        as_path_regex:
          description: 'As Path Regex: NotNull(ASPATH_ACCESS_LIST_REGEX_MISSING) '
          type: string
        order:
          description: 'Order: Range(max = 65535L, ASPATH_ACCESS_LIST_INVALID_ORDER,
            min = 1L) '
          format: int32
          type: integer
        permit:
          description: Permit
          type: boolean
      required:
      - as_path_regex
    Action:
      properties: {}
    Aggregate:
      properties:
        field:
          description: Field
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
    BGPConfig:
      properties:
        adv_interval:
          description: Adv Interval
          format: int32
          type: integer
        hold_time:
          description: Hold Time
          format: int32
          type: integer
        keepalive_time:
          description: Keepalive Time
          format: int32
          type: integer
        local_as_num:
          description: Local As Num
          type: string
        md5_secret:
          description: Md5 Secret
          type: string
        multi_hop_limit:
          description: Multi Hop Limit
          format: int32
          type: integer
        peer_auth_type:
          description: Peer Auth Type
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: Peer Retry Time
          format: int32
          type: integer
    BGPGlobalConfig:
      properties:
        admin_distance:
          description: 'Admin Distance: Range(max = 255L, error = BGP_CONFIG_INVALID_ADMIN_DISTANCE:
            ADMIN DISTANCE should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        adv_interval:
          description: 'Adv Interval: Range(max = 600L, error = BGP_CONFIG_INVALID_ADV_INTERVAL:
            ADVERTISE INTERVAL should be in the range 0-600, min = 0L) '
          format: int32
          type: integer
        graceful_restart:
          description: Graceful Restart
          type: boolean
        hold_time:
          description: 'Hold Time: Range(max = 600L, error = BGP_CONFIG_INVALID_HOLD_TIME:
            Hold TIME should be in the range 3-600, min = 3L) '
          format: int32
          type: integer
        id:
          description: Id
          type: string
        keepalive_time:
          description: 'Keepalive Time: Range(max = 200L, error = BGP_CONFIG_INVALID_KEEPALIVE_TIME:
            KEEPALIVE TIME should be in the range 1-200, min = 1L) '
          format: int32
          type: integer
        local_as_num:
          description: 'Local As Num: Size(max = 256, LOCAL_AS_NUM_EXCEEDS_LIMIT,
            min = 0) '
          type: string
        maximum_paths:
          description: 'Maximum Paths: Range(max = 255L, error = BGP_CONFIG_INVALID_MAXIMUM_PATHS:
            MAX PATHS should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        md5_secret:
          description: 'Md5 Secret: Size(max = 32, error = BGP_CONFIG_MD5_LENGTH_EXCEEDS:
            MD5 SECRETE length should not exceed 32 characters, min = 0) '
          type: string
        multi_hop_limit:
          description: 'Multi Hop Limit: Range(max = 255L, error = BGP_CONFIG_INVALID_MULTI_HOP_LIMIT:
            MULTI HOP LIMIT should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        peer_retry_time:
          description: 'Peer Retry Time: Range(max = 65535L, error = BGP_CONFIG_INVALID_PEER_RETRY_TIME:
            PEER RETRY TIME should be in the range 0-65535, min = 0L) '
          format: int32
          type: integer
        prefix_adv_type:
          description: Prefix Adv Type
          type: string
        prefixes_to_adv_to_wan:
          description: 'Prefixes To Adv To Wan: ListIPAddress(bcast = DENY, listMaxSize
            = 0, error = BGP_CONFIG_INVALID_PREFIX: IP prefix is not valid OR is not
            within the valid prefix range, required = false, type = APP_GATEWAYCIDR) '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'Router Id: Size(max = 256, ROUTER_ID_EXCEEDS_LIMIT, min =
            0) IPAddress(allowEmpty = true, allowLinkLocal = false, allowNull = true,
            bcast = DENY, defaultRoute = false, dnsCheck = false, BGP_CONFIG_INVALID_ROUTER_ID,
            type = IP) '
          type: string
        stalepath_time:
          description: 'Stalepath Time: Range(max = 3600L, error = BGP_CONFIG_INVALID_STALEPATH_TIME:
            STTALEPATH TIME should be in the range 1-3600, min = 1L) '
          format: int32
          type: integer
    BGPGlobalConfigScreen:
      properties:
        admin_distance:
          description: Admin Distance
          format: int32
          type: integer
        adv_interval:
          description: Adv Interval
          format: int32
          type: integer
        graceful_restart:
          description: Graceful Restart
          type: boolean
        hold_time:
          description: Hold Time
          format: int32
          type: integer
        id:
          description: Id
          type: string
        keepalive_time:
          description: Keepalive Time
          format: int32
          type: integer
        local_as_num:
          description: Local As Num
          type: string
        maximum_paths:
          description: Maximum Paths
          format: int32
          type: integer
        md5_secret:
          description: Md5 Secret
          type: string
        multi_hop_limit:
          description: Multi Hop Limit
          format: int32
          type: integer
        peer_retry_time:
          description: Peer Retry Time
          format: int32
          type: integer
        prefix_adv_type:
          description: Prefix Adv Type
          type: string
        prefixes_to_adv_to_wan:
          description: Prefixes To Adv To Wan
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: Router Id
          type: string
        stalepath_time:
          description: Stalepath Time
          format: int32
          type: integer
    BGPGlobalConfigScreenV2N1:
      properties:
        admin_distance:
          description: Admin Distance
          format: int32
          type: integer
        adv_interval:
          description: Adv Interval
          format: int32
          type: integer
        graceful_restart:
          description: Graceful Restart
          type: boolean
        hold_time:
          description: Hold Time
          format: int32
          type: integer
        id:
          description: Id
          type: string
        keepalive_time:
          description: Keepalive Time
          format: int32
          type: integer
        local_as_num:
          description: Local As Num
          type: string
        maximum_paths:
          description: Maximum Paths
          format: int32
          type: integer
        md5_secret:
          description: Md5 Secret
          type: string
        multi_hop_limit:
          description: Multi Hop Limit
          format: int32
          type: integer
        peer_retry_time:
          description: Peer Retry Time
          format: int32
          type: integer
        prefix_adv_type:
          description: Prefix Adv Type
          type: string
        prefix_adv_type_to_lan:
          description: Prefix Adv Type To Lan
          type: string
        prefixes_to_adv_to_wan:
          description: Prefixes To Adv To Wan
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: Router Id
          type: string
        stalepath_time:
          description: Stalepath Time
          format: int32
          type: integer
    BGPGlobalConfigScreenV2N2:
      properties:
        admin_distance:
          description: 'Admin Distance: Range(max = 255L, error = BGP_CONFIG_INVALID_ADMIN_DISTANCE:
            ADMIN DISTANCE should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        adv_interval:
          description: 'Adv Interval: Range(max = 600L, error = BGP_CONFIG_INVALID_ADV_INTERVAL:
            ADVERTISE INTERVAL should be in the range 0-600, min = 0L) '
          format: int32
          type: integer
        graceful_restart:
          description: Graceful Restart
          type: boolean
        hold_time:
          description: 'Hold Time: Range(max = 600L, error = BGP_CONFIG_INVALID_HOLD_TIME:
            Hold TIME should be in the range 3-600, min = 3L) '
          format: int32
          type: integer
        id:
          description: Id
          type: string
        keepalive_time:
          description: 'Keepalive Time: Range(max = 200L, error = BGP_CONFIG_INVALID_KEEPALIVE_TIME:
            KEEPALIVE TIME should be in the range 1-200, min = 1L) '
          format: int32
          type: integer
        local_as_num:
          description: 'Local As Num: Size(max = 256, LOCAL_AS_NUM_EXCEEDS_LIMIT,
            min = 0) '
          type: string
        maximum_paths:
          description: 'Maximum Paths: Range(max = 255L, error = BGP_CONFIG_INVALID_MAXIMUM_PATHS:
            MAX PATHS should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        md5_secret:
          description: 'Md5 Secret: Size(max = 32, error = BGP_CONFIG_MD5_LENGTH_EXCEEDS:
            MD5 SECRETE length should not exceed 32 characters, min = 0) '
          type: string
        multi_hop_limit:
          description: 'Multi Hop Limit: Range(max = 255L, error = BGP_CONFIG_INVALID_MULTI_HOP_LIMIT:
            MULTI HOP LIMIT should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        peer_auth_type:
          description: Peer Auth Type
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: 'Peer Retry Time: Range(max = 65535L, error = BGP_CONFIG_INVALID_PEER_RETRY_TIME:
            PEER RETRY TIME should be in the range 0-65535, min = 0L) '
          format: int32
          type: integer
        prefix_adv_type:
          description: Prefix Adv Type
          type: string
        prefix_adv_type_to_lan:
          description: Prefix Adv Type To Lan
          type: string
        prefixes_to_adv_to_wan:
          description: 'Prefixes To Adv To Wan: ListIPAddress(bcast = DENY, listMaxSize
            = 0, error = BGP_CONFIG_INVALID_PREFIX: IP prefix is not valid OR is not
            within the valid prefix range, required = false, type = APP_GATEWAYCIDR) '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'Router Id: Size(max = 256, ROUTER_ID_EXCEEDS_LIMIT, min =
            0) IPAddress(allowEmpty = true, allowLinkLocal = false, allowNull = true,
            bcast = DENY, defaultRoute = false, dnsCheck = false, BGP_CONFIG_INVALID_ROUTER_ID,
            type = IP) '
          type: string
        stalepath_time:
          description: 'Stalepath Time: Range(max = 3600L, error = BGP_CONFIG_INVALID_STALEPATH_TIME:
            STTALEPATH TIME should be in the range 1-3600, min = 1L) '
          format: int32
          type: integer
    BGPGlobalConfigV2N1:
      properties:
        admin_distance:
          description: 'Admin Distance: Range(max = 255L, error = BGP_CONFIG_INVALID_ADMIN_DISTANCE:
            ADMIN DISTANCE should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        adv_interval:
          description: 'Adv Interval: Range(max = 600L, error = BGP_CONFIG_INVALID_ADV_INTERVAL:
            ADVERTISE INTERVAL should be in the range 0-600, min = 0L) '
          format: int32
          type: integer
        graceful_restart:
          description: Graceful Restart
          type: boolean
        hold_time:
          description: 'Hold Time: Range(max = 600L, error = BGP_CONFIG_INVALID_HOLD_TIME:
            Hold TIME should be in the range 3-600, min = 3L) '
          format: int32
          type: integer
        id:
          description: Id
          type: string
        keepalive_time:
          description: 'Keepalive Time: Range(max = 200L, error = BGP_CONFIG_INVALID_KEEPALIVE_TIME:
            KEEPALIVE TIME should be in the range 1-200, min = 1L) '
          format: int32
          type: integer
        local_as_num:
          description: 'Local As Num: Size(max = 256, LOCAL_AS_NUM_EXCEEDS_LIMIT,
            min = 0) '
          type: string
        maximum_paths:
          description: 'Maximum Paths: Range(max = 255L, error = BGP_CONFIG_INVALID_MAXIMUM_PATHS:
            MAX PATHS should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        md5_secret:
          description: 'Md5 Secret: Size(max = 32, error = BGP_CONFIG_MD5_LENGTH_EXCEEDS:
            MD5 SECRETE length should not exceed 32 characters, min = 0) '
          type: string
        multi_hop_limit:
          description: 'Multi Hop Limit: Range(max = 255L, error = BGP_CONFIG_INVALID_MULTI_HOP_LIMIT:
            MULTI HOP LIMIT should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        peer_retry_time:
          description: 'Peer Retry Time: Range(max = 65535L, error = BGP_CONFIG_INVALID_PEER_RETRY_TIME:
            PEER RETRY TIME should be in the range 0-65535, min = 0L) '
          format: int32
          type: integer
        prefix_adv_type:
          description: Prefix Adv Type
          type: string
        prefix_adv_type_to_lan:
          description: Prefix Adv Type To Lan
          type: string
        prefixes_to_adv_to_wan:
          description: 'Prefixes To Adv To Wan: ListIPAddress(bcast = DENY, listMaxSize
            = 0, error = BGP_CONFIG_INVALID_PREFIX: IP prefix is not valid OR is not
            within the valid prefix range, required = false, type = APP_GATEWAYCIDR) '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'Router Id: Size(max = 256, ROUTER_ID_EXCEEDS_LIMIT, min =
            0) IPAddress(allowEmpty = true, allowLinkLocal = false, allowNull = true,
            bcast = DENY, defaultRoute = false, dnsCheck = false, BGP_CONFIG_INVALID_ROUTER_ID,
            type = IP) '
          type: string
        stalepath_time:
          description: 'Stalepath Time: Range(max = 3600L, error = BGP_CONFIG_INVALID_STALEPATH_TIME:
            STTALEPATH TIME should be in the range 1-3600, min = 1L) '
          format: int32
          type: integer
    BGPGlobalConfigV2N2:
      properties:
        admin_distance:
          description: 'Admin Distance: Range(max = 255L, error = BGP_CONFIG_INVALID_ADMIN_DISTANCE:
            ADMIN DISTANCE should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        adv_interval:
          description: 'Adv Interval: Range(max = 600L, error = BGP_CONFIG_INVALID_ADV_INTERVAL:
            ADVERTISE INTERVAL should be in the range 0-600, min = 0L) '
          format: int32
          type: integer
        graceful_restart:
          description: Graceful Restart
          type: boolean
        hold_time:
          description: 'Hold Time: Range(max = 600L, error = BGP_CONFIG_INVALID_HOLD_TIME:
            Hold TIME should be in the range 3-600, min = 3L) '
          format: int32
          type: integer
        id:
          description: Id
          type: string
        keepalive_time:
          description: 'Keepalive Time: Range(max = 200L, error = BGP_CONFIG_INVALID_KEEPALIVE_TIME:
            KEEPALIVE TIME should be in the range 1-200, min = 1L) '
          format: int32
          type: integer
        local_as_num:
          description: 'Local As Num: Size(max = 256, LOCAL_AS_NUM_EXCEEDS_LIMIT,
            min = 0) '
          type: string
        maximum_paths:
          description: 'Maximum Paths: Range(max = 255L, error = BGP_CONFIG_INVALID_MAXIMUM_PATHS:
            MAX PATHS should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        md5_secret:
          description: 'Md5 Secret: Size(max = 32, error = BGP_CONFIG_MD5_LENGTH_EXCEEDS:
            MD5 SECRETE length should not exceed 32 characters, min = 0) '
          type: string
        multi_hop_limit:
          description: 'Multi Hop Limit: Range(max = 255L, error = BGP_CONFIG_INVALID_MULTI_HOP_LIMIT:
            MULTI HOP LIMIT should be in the range 1-255, min = 1L) '
          format: int32
          type: integer
        peer_auth_type:
          description: Peer Auth Type
          enum:
          - md5
          - none
          type: string
        peer_retry_time:
          description: 'Peer Retry Time: Range(max = 65535L, error = BGP_CONFIG_INVALID_PEER_RETRY_TIME:
            PEER RETRY TIME should be in the range 0-65535, min = 0L) '
          format: int32
          type: integer
        prefix_adv_type:
          description: Prefix Adv Type
          type: string
        prefix_adv_type_to_lan:
          description: Prefix Adv Type To Lan
          type: string
        prefixes_to_adv_to_wan:
          description: 'Prefixes To Adv To Wan: ListIPAddress(bcast = DENY, listMaxSize
            = 0, error = BGP_CONFIG_INVALID_PREFIX: IP prefix is not valid OR is not
            within the valid prefix range, required = false, type = APP_GATEWAYCIDR) '
          items:
            description: Prefixes To Adv To Wan
            type: string
          type: array
        router_id:
          description: 'Router Id: Size(max = 256, ROUTER_ID_EXCEEDS_LIMIT, min =
            0) IPAddress(allowEmpty = true, allowLinkLocal = false, allowNull = true,
            bcast = DENY, defaultRoute = false, dnsCheck = false, BGP_CONFIG_INVALID_ROUTER_ID,
            type = IP) '
          type: string
        stalepath_time:
          description: 'Stalepath Time: Range(max = 3600L, error = BGP_CONFIG_INVALID_STALEPATH_TIME:
            STTALEPATH TIME should be in the range 1-3600, min = 1L) '
          format: int32
          type: integer
    BGPPeerAdvertisedPrefixes:
      properties:
        advertised_prefix_count:
          description: Advertised Prefix Count
          format: int32
          type: integer
        advertised_prefixes:
          $ref: '#/components/schemas/PrefixSet'
          description: 'Advertised Prefixes: Valid '
        id:
          description: Id
          type: string
    BGPPeerConfig:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'Bgp Config: Valid '
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        peer_ip:
          description: 'Peer Ip: IPAddress(allowEmpty = true, allowLinkLocal = false,
            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,
            error = PEER_CONFIG_INVALID_PEER_IP: Invalid IP address for routing peer.
            Please use a valid IPv4 address., type = IP) Required(message = PEER_IP_ATTR_REQUIRED) '
          type: string
        peer_type:
          description: Peer Type
          type: string
        remote_as_num:
          description: 'Remote As Num: NotEmpty(REQUIRED_REMOTE_AS_NUM) '
          type: string
        route_map_in_id:
          description: Route Map In Id
          type: string
        route_map_out_id:
          description: Route Map Out Id
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'Update Source: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, PEER_CONFIG_INVALID_UPDATE_SOURCE_IP, type = IP) '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerConfigEtag:
      properties:
        id:
          description: Id
          type: string
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - tenant_id
    BGPPeerConfigV2N1:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'Bgp Config: Valid '
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        peer_ip:
          description: 'Peer Ip: IPAddress(allowEmpty = true, allowLinkLocal = false,
            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,
            error = PEER_CONFIG_INVALID_PEER_IP: Invalid IP address for routing peer.
            Please use a valid IPv4 address., type = IP) Required(message = PEER_IP_ATTR_REQUIRED) '
          type: string
        peer_type:
          description: Peer Type
          type: string
        remote_as_num:
          description: 'Remote As Num: NotEmpty(REQUIRED_REMOTE_AS_NUM) '
          type: string
        route_map_in_id:
          description: Route Map In Id
          type: string
        route_map_out_id:
          description: Route Map Out Id
          type: string
        scope:
          description: Scope
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'Update Source: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, PEER_CONFIG_INVALID_UPDATE_SOURCE_IP, type = IP) '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerConfigV2N2:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'Bgp Config: Valid '
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        peer_ip:
          description: 'Peer Ip: IPAddress(allowEmpty = true, allowLinkLocal = false,
            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,
            error = PEER_CONFIG_INVALID_PEER_IP: Invalid IP address for routing peer.
            Please use a valid IPv4 address., type = IP) Required(message = PEER_IP_ATTR_REQUIRED) '
          type: string
        peer_type:
          description: Peer Type
          type: string
        remote_as_num:
          description: 'Remote As Num: NotEmpty(REQUIRED_REMOTE_AS_NUM) '
          type: string
        route_map_in_id:
          description: Route Map In Id
          type: string
        route_map_out_id:
          description: Route Map Out Id
          type: string
        scope:
          description: Scope
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'Update Source: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, PEER_CONFIG_INVALID_UPDATE_SOURCE_IP, type = IP) '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerDiscoveredPrefixes:
      properties:
        discovered_ipv4_prefixes:
          description: 'Discovered Ipv4 Prefixes: Valid '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        discovered_ipv4_prefixes_count:
          description: Discovered Ipv4 Prefixes Count
          format: int32
          type: integer
        id:
          description: Id
          type: string
    BGPPeerOperations:
      properties:
        value:
          description: Value
          type: string
    BGPPeerQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    BGPPeerQueryFilter:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'Bgp Config: Valid '
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        peer_ip:
          description: 'Peer Ip: IPAddress(allowEmpty = true, allowLinkLocal = false,
            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,
            error = PEER_CONFIG_INVALID_PEER_IP: Invalid IP address for routing peer.
            Please use a valid IPv4 address., type = IP) Required(message = PEER_IP_ATTR_REQUIRED) '
          type: string
        peer_type:
          description: Peer Type
          type: string
        remote_as_num:
          description: 'Remote As Num: NotEmpty(REQUIRED_REMOTE_AS_NUM) '
          type: string
        route_map_in_id:
          description: Route Map In Id
          type: string
        route_map_out_id:
          description: Route Map Out Id
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'Update Source: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, PEER_CONFIG_INVALID_UPDATE_SOURCE_IP, type = IP) '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerQueryFilterV2N1:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'Bgp Config: Valid '
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        peer_ip:
          description: 'Peer Ip: IPAddress(allowEmpty = true, allowLinkLocal = false,
            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,
            error = PEER_CONFIG_INVALID_PEER_IP: Invalid IP address for routing peer.
            Please use a valid IPv4 address., type = IP) Required(message = PEER_IP_ATTR_REQUIRED) '
          type: string
        peer_type:
          description: Peer Type
          type: string
        remote_as_num:
          description: 'Remote As Num: NotEmpty(REQUIRED_REMOTE_AS_NUM) '
          type: string
        route_map_in_id:
          description: Route Map In Id
          type: string
        route_map_out_id:
          description: Route Map Out Id
          type: string
        scope:
          description: Scope
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'Update Source: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, PEER_CONFIG_INVALID_UPDATE_SOURCE_IP, type = IP) '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerQueryFilterV2N2:
      properties:
        bgp_config:
          $ref: '#/components/schemas/BGPConfig'
          description: 'Bgp Config: Valid '
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        peer_ip:
          description: 'Peer Ip: IPAddress(allowEmpty = true, allowLinkLocal = false,
            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,
            error = PEER_CONFIG_INVALID_PEER_IP: Invalid IP address for routing peer.
            Please use a valid IPv4 address., type = IP) Required(message = PEER_IP_ATTR_REQUIRED) '
          type: string
        peer_type:
          description: Peer Type
          type: string
        remote_as_num:
          description: 'Remote As Num: NotEmpty(REQUIRED_REMOTE_AS_NUM) '
          type: string
        route_map_in_id:
          description: Route Map In Id
          type: string
        route_map_out_id:
          description: Route Map Out Id
          type: string
        scope:
          description: Scope
          enum:
          - GLOBAL
          - LOCAL
          type: string
        shutdown:
          description: Shutdown
          type: boolean
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        update_source:
          description: 'Update Source: IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, PEER_CONFIG_INVALID_UPDATE_SOURCE_IP, type = IP) '
          type: string
      required:
      - remote_as_num
      - peer_ip
      - name
    BGPPeerReachablePrefixes:
      properties:
        filtered_ipv4_prefixes:
          description: 'Filtered Ipv4 Prefixes: Valid '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        filtered_ipv4_prefixes_count:
          description: Filtered Ipv4 Prefixes Count
          format: int32
          type: integer
        id:
          description: Id
          type: string
        reachable_ipv4_prefixes:
          description: 'Reachable Ipv4 Prefixes: Valid '
          items:
            $ref: '#/components/schemas/PrefixInfo'
          type: array
        reachable_ipv4_prefixes_count:
          description: Reachable Ipv4 Prefixes Count
          format: int32
          type: integer
    BGPPeerStatus:
      properties:
        downtime:
          description: Downtime
          type: string
        id:
          description: Id
          type: string
        state:
          description: State
          type: string
        uptime:
          description: Uptime
          type: string
    BGPPeerStatusV2N1:
      properties:
        direction:
          description: Direction
          type: string
        downtime:
          description: Downtime
          type: string
        id:
          description: Id
          type: string
        state:
          description: State
          type: string
        uptime:
          description: Uptime
          type: string
    Direction:
      properties: {}
    EnterprisePrefixSetN:
      properties:
        id:
          description: Id
          type: string
        ipv4_enterprise_prefixes:
          description: 'Ipv4 Enterprise Prefixes: Valid ListIPAddress(bcast = DENY,
            listMaxSize = 0, EPS_CONFIG_INVALID_PREFIX, required = false, type = PREFIXCIDR_32) '
          items:
            description: Ipv4 Enterprise Prefixes
            type: string
          type: array
        tenant_id:
          description: 'Tenant Id: NotNull Digits(fraction = 0, integer = 20, TENANT_ID_INVALID_0001) '
          type: string
      required:
      - tenant_id
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    ListQueryResponse:
      properties:
        count:
          description: 'The actual count

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size is 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query

            '
          type: object
        tenant_id:
          type: string
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count

            '
          format: int32
          type: integer
        description:
          description: 'Description

            '
        id:
          description: 'The ID

            '
          type: string
        tenant_id:
          description: 'The ID of the tenant

            '
          type: string
      type: object
    LocalNetwork:
      properties:
        prefix_set:
          description: 'Prefix Set: Valid '
          items:
            $ref: '#/components/schemas/Network'
          type: array
        prefix_set_v6:
          description: 'Prefix Set V6: Valid '
          items:
            $ref: '#/components/schemas/NetworkV6'
          type: array
        security_policies:
          description: 'Security Policies: Valid '
          items:
            $ref: '#/components/schemas/SecurityPolicy'
          type: array
        vlan_id:
          description: 'Vlan Id: Min(message = min, value = 0L) Max(message = max,
            value = 4095L) '
          format: int32
          type: integer
    LocalPrefixSet:
      properties:
        local_networks:
          description: 'Local Networks: Valid '
          items:
            $ref: '#/components/schemas/LocalNetwork'
          type: array
    MatchClauses:
      properties:
        as_path_id:
          description: As Path Id
          type: string
        community_list_id:
          description: Community List Id
          type: string
        ip_next_hop_id:
          description: Ip Next Hop Id
          type: string
        ip_prefix_list_id:
          description: Ip Prefix List Id
          type: string
        tag:
          description: 'Tag: Range(max = 65535L, MATCH_TAG_INVALID_TAG, min = 0L) '
          format: int32
          type: integer
    Network:
      properties:
        gateway:
          description: Gateway
          type: string
        ipv4_prefix:
          description: Ipv4 Prefix
          type: string
    NetworkV6:
      properties:
        gateway:
          description: Gateway
          type: string
        ipv6_prefix:
          description: Ipv6 Prefix
          type: string
    NextHop:
      properties:
        admin_distance:
          description: 'Admin Distance: Range(max = 255L, error = STATICROUTE_CONFIG_INVALID_DISTANCE:
            Distance should be between 1 and 255., min = 1L) '
          type: integer
        nexthop_interface_id:
          description: Nexthop Interface Id
          type: string
        nexthop_ip:
          description: Nexthop Ip
          type: string
        self:
          description: Self
          type: boolean
    PrefixInfo:
      properties:
        as_path:
          description: As Path
          items:
            description: As Path
            format: int64
            type: integer
          type: array
        network:
          description: Network
          type: string
        nexthop:
          description: Nexthop
          type: string
    PrefixSet:
      properties:
        ipv4_set:
          description: Ipv4 Set
          items:
            description: Ipv4 Set
            type: string
          type: array
        ipv6_set:
          description: Ipv6 Set
          items:
            description: Ipv6 Set
            type: string
          type: array
    RoutingAccessList:
      properties:
        as_path_regex_list:
          description: 'As Path Regex List: Valid Valid '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    RoutingAccessListQueryFilter:
      properties:
        as_path_regex_list:
          description: 'As Path Regex List: Valid Valid '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListQueryFilterV2N1:
      properties:
        as_path_regex_list:
          description: 'As Path Regex List: Valid Valid '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListScreen:
      properties:
        as_path_regex_list:
          description: 'As Path Regex List: Valid Valid '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListScreenV2N1:
      properties:
        as_path_regex_list:
          description: 'As Path Regex List: Valid Valid '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingAccessListV2N1:
      properties:
        as_path_regex_list:
          description: 'As Path Regex List: Valid Valid '
          items:
            $ref: '#/components/schemas/ASPathRegex'
          type: array
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityList:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        community_list:
          description: 'Community List: Valid '
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityListQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    RoutingCommunityListQueryFilter:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        community_list:
          description: 'Community List: Valid '
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingCommunityListScreen:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        community_list:
          description: 'Community List: Valid '
          items:
            $ref: '#/components/schemas/RoutingIPCommunity'
          type: array
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingIPCommunity:
      properties:
        community_str:
          description: 'Community Str: NotNull(COMMUNITY_STRING_MISSING) Size(max
            = 256, COMMUNITY_STRING_EXCEEDS_LIMIT, min = 0) Pattern(message = INVALID_COMMUNITY_STRING,
            regexp = internet|no-export|no-advertise|local-AS|(0|6553[0-5]|655[0-2][0-9]|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3}):(0|6553[0-5]|655[0-2][0-9]\\d|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3})) '
          type: string
        permit:
          description: Permit
          type: boolean
      required:
      - community_str
    RoutingPrefixFilter:
      properties:
        ge:
          description: 'Ge: Range(max = 32L, error = PREFIX_FILTER_INVALID_OPERATOR_RANGE:
            Value for le or ge operator should be within the range 1-32, min = 0L) '
          format: int32
          type: integer
        le:
          description: 'Le: Range(max = 32L, error = PREFIX_FILTER_INVALID_OPERATOR_RANGE:
            Value for le or ge operator should be within the range 1-32, min = 0L) '
          format: int32
          type: integer
        order:
          description: 'Order: Range(max = 65535L, PREFIX_LIST_INVALID_ORDER, min
            = 1L) '
          format: int32
          type: integer
        permit:
          description: Permit
          type: boolean
        prefix:
          description: 'Prefix: NotNull(PREFIX_LIST_PREFIX_MISSING) IPAddress(allowEmpty
            = true, allowLinkLocal = false, allowNull = true, bcast = DENY, defaultRoute
            = false, dnsCheck = false, error = PREFIXFILTER_INVALID_PREFIX: IP prefix
            is not valid OR not within the valid prefix range., type = PREFIXCIDR_ALL_1) '
          type: string
      required:
      - prefix
    RoutingPrefixList:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        prefix_filter_list:
          description: 'Prefix Filter List: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListQueryFilter:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        prefix_filter_list:
          description: 'Prefix Filter List: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingPrefixListScreen:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        prefix_filter_list:
          description: 'Prefix Filter List: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingPrefixFilter'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMap:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        route_map_entries:
          description: 'Route Map Entries: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntry'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapEntry:
      properties:
        continue_entry:
          description: 'Continue Entry: Pattern(ROUTE_MAP_INVALID_CONTINUE_ORDER,
            regexp = ^(0|[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$) '
          type: string
        match:
          $ref: '#/components/schemas/MatchClauses'
          description: 'Match: Valid '
        order:
          description: 'Order: Range(max = 65535L, ROUTE_MAP_INVALID_ORDER, min =
            1L) '
          format: int32
          type: integer
        permit:
          description: Permit
          type: boolean
        set:
          $ref: '#/components/schemas/SetClauses'
          description: 'Set: Valid '
    RoutingRouteMapEntryV2N1:
      properties:
        continue_entry:
          description: 'Continue Entry: Pattern(ROUTE_MAP_INVALID_CONTINUE_ORDER,
            regexp = ^(0|[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$) '
          type: string
        match:
          $ref: '#/components/schemas/MatchClauses'
          description: 'Match: Valid '
        order:
          description: 'Order: Range(max = 65535L, ROUTE_MAP_INVALID_ORDER, min =
            1L) '
          format: int32
          type: integer
        permit:
          description: Permit
          type: boolean
        set:
          $ref: '#/components/schemas/SetClauses'
          description: 'Set: Valid '
    RoutingRouteMapQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    RoutingRouteMapQueryFilter:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        route_map_entries:
          description: 'Route Map Entries: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntry'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapQueryFilterV2N1:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        route_map_entries:
          description: 'Route Map Entries: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N1'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapScreen:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        route_map_entries:
          description: 'Route Map Entries: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntry'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapScreenV2N1:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        route_map_entries:
          description: 'Route Map Entries: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N1'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    RoutingRouteMapV2N1:
      properties:
        auto_generated:
          description: Auto Generated
          type: boolean
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        route_map_entries:
          description: 'Route Map Entries: Valid Valid '
          items:
            $ref: '#/components/schemas/RoutingRouteMapEntryV2N1'
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - name
    SecurityPolicy:
      properties:
        action:
          $ref: '#/components/schemas/Action'
          description: 'Action: Valid '
        app_ids:
          description: App Ids
          items:
            description: App Ids
            type: string
          type: array
        direction:
          $ref: '#/components/schemas/Direction'
          description: 'Direction: Valid '
    SetClauses:
      properties:
        as_path_prepend:
          description: 'As Path Prepend: Size(max = 256, SET_AS_PATH_PREPEND_EXCEEDS_LIMIT,
            min = 0) Pattern(message = INVALID_AS_PATH_PREPEND, regexp = [0-9,]*) '
          type: string
        community:
          description: 'Community: Pattern(message = INVALID_COMMUNITY_STRING, regexp
            = internet|no-export|no-advertise|local-AS|(0|6553[0-5]|655[0-2][0-9]|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3}):(0|6553[0-5]|655[0-2][0-9]\\d|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3})) '
          type: string
        ip_next_hop:
          description: Ip Next Hop
          type: string
        local_preference:
          description: 'Local Preference: Range(max = 4294967295L, INVALID_LOCAL_PREFERENCE,
            min = 0L) '
          format: int64
          type: integer
        tag:
          description: 'Tag: Range(max = 65535L, SET_TAG_INVALID_TAG, min = 0L) '
          format: int32
          type: integer
        weight:
          description: Weight
          format: int64
          type: integer
    StateNextHop:
      properties:
        nexthop_ip:
          description: Nexthop Ip
          type: string
        reachability_status:
          description: Reachability Status
          type: boolean
    StaticRoute:
      properties:
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_SIZE_EXCEEDED:
            Description size exceeded., min = 0) Valid '
          type: string
        destination_prefix:
          description: 'Destination Prefix: Required(DESTINATION_PREFIX_REQD) '
          type: string
        id:
          description: Id
          type: string
        network_context_id:
          description: Network Context Id
          type: string
        nexthops:
          description: 'Nexthops: Required(message = required) Size(max = 8, NEXTHOPLIST_SIZE_EXCEEDED,
            min = 0) Valid '
          items:
            $ref: '#/components/schemas/NextHop'
          type: array
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - scope
      - nexthops
      - destination_prefix
    StaticRouteStatus:
      properties:
        id:
          description: Id
          type: string
        nexthops:
          description: 'Nexthops: Required(message = required) Size(max = 8, NEXTHOPLIST_SIZE_EXCEEDED,
            min = 0) Valid '
          items:
            $ref: '#/components/schemas/StateNextHop'
          type: array
      required:
      - nexthops
    StaticRouteStatusV2N2:
      properties:
        id:
          description: Id
          type: string
        nexthops:
          description: 'Nexthops: Valid '
          items:
            $ref: '#/components/schemas/StateNextHop'
          type: array
    StaticRouteV2N1:
      properties:
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_SIZE_EXCEEDED:
            Description size exceeded., min = 0) Valid '
          type: string
        destination_prefix:
          description: 'Destination Prefix: Required(DESTINATION_PREFIX_REQD) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of
            the resource exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: Network Context Id
          type: string
        nexthop_reachability_probe:
          description: Nexthop Reachability Probe
          type: boolean
        nexthops:
          description: 'Nexthops: Required(message = required) Size(max = 8, NEXTHOPLIST_SIZE_EXCEEDED,
            min = 0) Valid '
          items:
            $ref: '#/components/schemas/NextHop'
          type: array
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - scope
      - nexthops
      - destination_prefix
    StaticRouteV2N2:
      properties:
        address_family:
          description: 'Address Family: ValidateEnum(enumClass = classOf[IPAddressFamily],
            error = STATICROUTE_CONFIG_ADDRESS_FAMILY_INVALID: Static Route address
            family is invalid., nullAllowed = false) '
          type: string
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_SIZE_EXCEEDED:
            Description size exceeded., min = 0) Valid '
          type: string
        destination_prefix:
          description: 'Destination Prefix: Required(DESTINATION_PREFIX_REQD) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of
            the resource exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: Network Context Id
          type: string
        nexthop_reachability_probe:
          description: Nexthop Reachability Probe
          type: boolean
        nexthops:
          description: 'Nexthops: Required(message = required) Size(max = 8, NEXTHOPLIST_SIZE_EXCEEDED,
            min = 0) Valid '
          items:
            $ref: '#/components/schemas/NextHop'
          type: array
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - address_family
      - scope
      - nexthops
      - destination_prefix
info:
  contact: {}
  description: List of APIs used to configure all routing contructs like, BGP configs,
    static routes, AS paths, and community lists.
  title: Routing
  version: Latest
openapi: 3.0.0
paths:
  /v2.0/api/tenants/{tenant_id}/enterpriseprefixset:
    get:
      description: GET the tenant enterprise prefix set
      operationId: get-v2.0-api-tenants-tenant_id-enterpriseprefixset
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePrefixSetN'
          description: Successful Operation
      summary: GET the tenant enterprise prefix set (v2.0)
      tags:
      - Routing
    put:
      description: Update the tenant enterprise prefix set
      operationId: put-v2.0-api-tenants-tenant_id-enterpriseprefixset
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterprisePrefixSetN'
        description: Enterprise prefix Set
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePrefixSetN'
          description: Successful Operation
      summary: Update the tenant enterprise prefix set (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgpconfigs:
    get:
      description: Get all BGP configs from NB
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPGlobalConfig'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all BGP configs from NB (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgpconfigs/{bgp_config_id}:
    get:
      description: Get BGP config from NB
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP config Id
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfig'
          description: Successful Operation
      summary: Get BGP config from NB (v2.0)
      tags:
      - Routing
    put:
      description: Updates BGP config
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Config Id
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreen'
        description: Details of the bgp config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: BGP_CONFIG_INVALID_MAXIMUM_PATHS
                  - code: BGP_CONFIG_INVALID_ADMIN_DISTANCE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: BGP_CONFIG_INVALID_STALEPATH_TIME
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates BGP config (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers:
    get:
      description: Get all BGP Peer configs from NB
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerConfig'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all BGP Peer configs from NB (v2.0)
      tags:
      - Routing
    post:
      description: Create BGP peer config
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreen'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUM
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: PEER_TYPE_NOT_SUPPORTED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create BGP peer config (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/query:
    post:
      description: Queries db for limit number of BGP peers that match query params.
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of BGP peers that match query params. (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/status:
    get:
      description: Get all BGP Peer status info from NB
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-status
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerStatus'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all BGP Peer status info from NB (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}:
    delete:
      description: Delete BGP Peer config
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete BGP Peer config (v2.0)
      tags:
      - Routing
    get:
      description: Get BGP Peer config
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfig'
          description: Successful Operation
      summary: Get BGP Peer config (v2.0)
      tags:
      - Routing
    put:
      description: Updates BGP Peer config
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreen'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfig'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUM
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates BGP Peer config (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}/operations:
    post:
      description: Reset BGP peer config
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id-operations
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerOperations'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerOperations'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_PEER_CONFIG_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Reset BGP peer config (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/advertisedprefixes:
    get:
      description: Get BGP Peer advertised prefixes
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-config_id-advertisedprefixes
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerAdvertisedPrefixes'
          description: Successful Operation
      summary: Get BGP Peer advertised prefixes (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/discoveredprefixes:
    get:
      description: Get BGP discovered prefix information
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-config_id-discoveredprefixes
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerDiscoveredPrefixes'
          description: Successful Operation
      summary: Get BGP discovered prefix information (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/reachableprefixes:
    get:
      description: Get BGP reachable prefix information
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-config_id-reachableprefixes
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerReachablePrefixes'
          description: Successful Operation
      summary: Get BGP reachable prefix information (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/status:
    get:
      description: Get BGP Peer status info from NB
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-config_id-status
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerStatus'
          description: Successful Operation
      summary: Get BGP Peer status info from NB (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists:
    get:
      description: Get all Access List for Element
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all Access List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create AS-Path Access List
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the as-path access list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create AS-Path Access List (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/query:
    post:
      description: Queries db for limit number of access lists that match query params.
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of access lists that match query params.
        (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/{config_id}:
    delete:
      description: Delete Access List
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Access List Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ACCESS_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ACCESS_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Access List (v2.0)
      tags:
      - Routing
    get:
      description: Get Specific Access List
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
      summary: Get Specific Access List (v2.0)
      tags:
      - Routing
    put:
      description: Updates Access List
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Access List Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the as-path access list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ACCESS_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates Access List (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists:
    get:
      description: Get all Community List for Element
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_ipcommunitylists
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingCommunityList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all Community List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create IP Community List
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_ipcommunitylists
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreen'
        description: Details of the community list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_COMMUNITY_LIST_NAME
                  - code: MAX_LIMIT_FOR_COMMUNITY_LIST_EXCEEDS
                  - code: COMMUNITY_LIST_ALREADY_DEFINED
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create IP Community List (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists/query:
    post:
      description: Queries db for limit number of community lists that match query
        params.
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_ipcommunitylists-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingCommunityListQuery'
        description: Query details for Routing Community
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingCommunityListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of community lists that match query params.
        (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_ipcommunitylists/{config_id}:
    delete:
      description: Delete Community List
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Community List Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: COMMUNITY_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_COMMUNITY_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Community List (v2.0)
      tags:
      - Routing
    get:
      description: Get Specific Community List
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
      summary: Get Specific Community List (v2.0)
      tags:
      - Routing
    put:
      description: Updates Community List
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_ipcommunitylists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Community List Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingCommunityListScreen'
        description: Details of the community list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCommunityList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_COMMUNITY_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_COMMUNITY_LIST_NAME
                  - code: MAX_LIMIT_FOR_COMMUNITY_LIST_EXCEEDS
                  - code: COMMUNITY_LIST_ALREADY_DEFINED
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates Community List (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_prefixlists:
    get:
      description: Get all Prefix List for Element
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_prefixlists
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingPrefixList'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all Prefix List for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create IP Prefix List
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_prefixlists
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPrefixListScreen'
        description: Details of the prefix list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create IP Prefix List (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_prefixlists/query:
    post:
      description: Queries db for limit number of prefix lists that match query params.
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_prefixlists-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingPrefixListQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of prefix lists that match query params.
        (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_prefixlists/{config_id}:
    delete:
      description: Delete Prefix List
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Prefix List Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PREFIX_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_PREFIX_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Prefix List (v2.0)
      tags:
      - Routing
    get:
      description: Get Specific Prefix List
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
      summary: Get Specific Prefix List (v2.0)
      tags:
      - Routing
    put:
      description: Updates Prefix List
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_prefixlists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Prefix List Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPrefixListScreen'
        description: Details of the prefix list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPrefixList'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_PREFIX_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates Prefix List (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_routemaps:
    get:
      description: Get all Route Map for Element
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMap'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all Route Map for Element (v2.0)
      tags:
      - Routing
    post:
      description: Create Route Map
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapScreen'
        description: Details of route map to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Route Map (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_routemaps/query:
    post:
      description: Queries db for limit number of route maps that match query params.
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapQuery'
        description: Query details for route maps
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of route maps that match query params.
        (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_routemaps/{config_id}:
    delete:
      description: Delete Route Map
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Route Map Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ROUTE_MAP_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ROUTE_MAP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Route Map (v2.0)
      tags:
      - Routing
    get:
      description: Get Specific Route Map
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMap'
          description: Successful Operation
      summary: Get Specific Route Map (v2.0)
      tags:
      - Routing
    put:
      description: Updates Route Map
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Route Map Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapScreen'
        description: Details of route map to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMap'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ROUTE_MAP
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates Route Map (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/staticroutes:
    get:
      description: Get static routes
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StaticRoute'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get static routes (v2.0)
      tags:
      - Routing
    post:
      description: Create static route
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRoute'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create static route (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}:
    delete:
      description: Delete static route
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful Operation
      summary: Delete static route (v2.0)
      tags:
      - Routing
    get:
      description: Get static route
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful Operation
      summary: Get static route (v2.0)
      tags:
      - Routing
    put:
      description: Update static route
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRoute'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update static route (v2.0)
      tags:
      - Routing
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/localprefixset:
    get:
      description: GET the site local prefix set
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-localprefixset
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalPrefixSet'
          description: Successful Operation
      summary: GET the site local prefix set (v2.0)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgpconfigs:
    get:
      description: Get all BGP configs from NB
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPGlobalConfigV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all BGP configs from NB (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgpconfigs/{bgp_config_id}:
    get:
      description: Get BGP config from NB
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP config Id
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N1'
          description: Successful Operation
      summary: Get BGP config from NB (v2.1)
      tags:
      - Routing
    put:
      description: Updates BGP config
      operationId: put-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Config Id
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N1'
        description: Details of the bgp config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates BGP config (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers:
    get:
      description: Get all BGP Peer configs from NB
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerConfigEtag'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all BGP Peer configs from NB (v2.1)
      tags:
      - Routing
    post:
      description: Create BGP peer config
      operationId: post-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N1'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUM
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: PEER_TYPE_NOT_SUPPORTED
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create BGP peer config (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/query:
    post:
      description: Queries db for limit number of BGP peers that match query params.
      operationId: post-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of BGP peers that match query params. (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/status:
    get:
      description: Get all BGP Peer status info from NB
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-status
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerStatusV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all BGP Peer status info from NB (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}:
    delete:
      description: Delete BGP Peer config
      operationId: delete-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N1'
          description: Successful Operation
      summary: Delete BGP Peer config (v2.1)
      tags:
      - Routing
    get:
      description: Get BGP Peer config
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N1'
          description: Successful Operation
      summary: Get BGP Peer config (v2.1)
      tags:
      - Routing
    put:
      description: Updates BGP Peer config
      operationId: put-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N1'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUM
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUM
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates BGP Peer config (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{config_id}/status:
    get:
      description: Get BGP Peer status info from NB
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-config_id-status
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerStatusV2N1'
          description: Successful Operation
      summary: Get BGP Peer status info from NB (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists:
    get:
      description: Get all Access List for Element
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListV2N1'
                      type: array
                  type: object
                items:
                  $ref: '#/components/schemas/RoutingAccessListV2N1'
                type: array
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all Access List for Element (v2.1)
      tags:
      - Routing
    post:
      description: Create AS-Path Access List
      operationId: post-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListScreenV2N1'
        description: Details of the as-path access list to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create AS-Path Access List (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/query:
    post:
      description: Queries db for limit number of access lists that match query params.
      operationId: post-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListQuery'
        description: Query details for access lists
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingAccessListQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of access lists that match query params.
        (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_aspathaccesslists/{config_id}:
    delete:
      description: Delete Access List
      operationId: delete-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Access List Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ACCESS_LIST_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ACCESS_LIST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Access List (v2.1)
      tags:
      - Routing
    get:
      description: Get Specific Access List
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
      summary: Get Specific Access List (v2.1)
      tags:
      - Routing
    put:
      description: Updates Access List
      operationId: put-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_aspathaccesslists-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Access List Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingAccessListV2N1'
        description: Details of the access list to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingAccessListV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ACCESS_LIST
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates Access List (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_routemaps:
    get:
      description: Get all Route Map for Element
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get all Route Map for Element (v2.1)
      tags:
      - Routing
    post:
      description: Create Route Map
      operationId: post-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapV2N1'
        description: Details of the route map to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ELEMENT_NOT_FOUND
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: NOT_SUPPORTED_BY_ELEMENT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_SUPPORTED
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_ALLOWED_FOR_EMPTY_COMMUNITY
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create Route Map (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_routemaps/query:
    post:
      description: Queries db for limit number of route maps that match query params.
      operationId: post-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapQuery'
        description: Query details for route maps
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/RoutingRouteMapQueryFilterV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of route maps that match query params.
        (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/routing_routemaps/{config_id}:
    delete:
      description: Delete Route Map
      operationId: delete-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Route Map Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: ROUTE_MAP_IN_USE
                  - code: CANNOT_DELETE_AUTOGENERATED_ROUTE_MAP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete Route Map (v2.1)
      tags:
      - Routing
    get:
      description: Get Specific Route Map
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
          description: Successful Operation
      summary: Get Specific Route Map (v2.1)
      tags:
      - Routing
    put:
      description: Updates Route Map
      operationId: put-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-routing_routemaps-config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Route Map Id
        in: path
        name: config_id
        required: true
        schema:
          description: Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRouteMapV2N1'
        description: Details of the route map to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRouteMapScreenV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: CANNOT_UPDATE_AUTOGENERATED_ROUTE_MAP
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_SUPPORTED
                  - code: ROUTE_MAP_ADDITIVE_COMMUNITY_NOT_ALLOWED_FOR_EMPTY_COMMUNITY
                  - code: INVALID_ROUTE_MAP_NAME
                  - code: MAX_LIMIT_ROUTE_MAP_ENTRIES_EXCEEDS
                  - code: ROUTE_MAP_ENTRY_WITH_SAME_ORDER
                  - code: ROUTE_MAP_ENTRY_INVALID_CONTINUE_ORDER
                  - code: ROUTE_MAP_ENTRY_AS_PATH_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_PREFIX_LIST_NOT_FOUND
                  - code: ROUTE_MAP_ENTRY_COMMUNITY_LIST_NOT_FOUND
                  - code: BGP_CONFIG_INVALID_AS_NUMBER
                  - code: ROUTE_MAP_SET_CLAUSE_INVALID_NEXTHOP_IP
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates Route Map (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/staticroutes:
    get:
      description: Get static routes
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StaticRouteV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get static routes (v2.1)
      tags:
      - Routing
    post:
      description: Create static route
      operationId: post-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N1'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create static route (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}:
    delete:
      description: Delete static route
      operationId: delete-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N1'
          description: Successful Operation
      summary: Delete static route (v2.1)
      tags:
      - Routing
    get:
      description: Get static route
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N1'
          description: Successful Operation
      summary: Get static route (v2.1)
      tags:
      - Routing
    put:
      description: Update static route
      operationId: put-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N1'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update static route (v2.1)
      tags:
      - Routing
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}/status:
    get:
      description: Get static route status
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id-status
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteStatus'
          description: Successful Operation
      summary: Get static route status (v2.1)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/bgppeers/query:
    post:
      description: Queries db for BGP peers that match query params.
      operationId: post-v2.2-api-tenants-tenant_id-bgppeers-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for BGP peers that match query params. (v2.2)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgpconfigs:
    get:
      description: Get all BGP configs from NB
      operationId: get-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPGlobalConfigV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all BGP configs from NB (v2.2)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgpconfigs/{bgp_config_id}:
    get:
      description: Get BGP config from NB
      operationId: get-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP config Id
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N2'
          description: Successful Operation
      summary: Get BGP config from NB (v2.2)
      tags:
      - Routing
    put:
      description: Updates BGP config
      operationId: put-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgpconfigs-bgp_config_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Config Id
        in: path
        name: bgp_config_id
        required: true
        schema:
          description: Bgp Config Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N2'
        description: Details of the bgp config to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPGlobalConfigV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_CONFIG_INVALID_MD5_UNSET_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates BGP config (v2.2)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers:
    get:
      description: Get all BGP Peer configs from NB
      operationId: get-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerConfigV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all BGP Peer configs from NB (v2.2)
      tags:
      - Routing
    post:
      description: Create BGP peer config
      operationId: post-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N2'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: PEER_TYPE_NOT_SUPPORTED
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create BGP peer config (v2.2)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/query:
    post:
      description: Queries db for limit number of BGP peers that match query params.
      operationId: post-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPPeerQuery'
        description: Query Details for BGP Peers
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/BGPPeerQueryFilterV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of BGP peers that match query params. (v2.2)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/bgppeers/{bgp_peer_id}:
    delete:
      description: Delete BGP Peer config
      operationId: delete-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N2'
          description: Successful Operation
      summary: Delete BGP Peer config (v2.2)
      tags:
      - Routing
    get:
      description: Get BGP Peer config
      operationId: get-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N2'
          description: Successful Operation
      summary: Get BGP Peer config (v2.2)
      tags:
      - Routing
    put:
      description: Updates BGP Peer config
      operationId: put-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-bgppeers-bgp_peer_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site Id
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element Id
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: BGP Peer Config Id
        in: path
        name: bgp_peer_id
        required: true
        schema:
          description: Bgp Peer Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPGlobalConfigScreenV2N2'
        description: Details of the BGP peer config to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerConfigV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: PEER_CONFIG_INVALID_PEER_IP
                  - code: BGP_CONFIG_INVALID_REMOTE_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_LOCAL_AS_NUMBER
                  - code: BGP_CONFIG_INVALID_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_HOLD_TIME
                  - code: BGP_CONFIG_INVALID_ADV_INTERVAL
                  - code: BGP_CONFIG_INVALID_PEER_RETRY_TIME
                  - code: BGP_CONFIG_MD5_LENGTH_EXCEEDS
                  - code: BGP_CONFIG_INVALID_MULTI_HOP_LIMIT
                  - code: BGP_CONFIG_INVALID_HOLD_TIME_WITH_RESPECT_TO_KEEPALIVE_TIME
                  - code: BGP_CONFIG_INVALID_PREFIX_ADV_TYPE
                  - code: BGP_CONFIG_INVALID_PREFIX
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: ELEMENT_NOT_ASSIGNED_TO_SITE
                  - code: INVALID_PEER_CONFIG_FOR_SPOKE
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT
                  - code: BGP_PEER_SCOPE_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_PEER_SHUTDOWN_NOT_SUPPORTED_BY_ELEMENT_SW
                  - code: BGP_CONFIG_INVALID_PEER_AUTH_TYPE
                  - code: BGP_CONFIG_INVALID_MD5_UNSET_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Updates BGP Peer config (v2.2)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/staticroutes:
    get:
      description: Get static routes API v2.2
      operationId: get-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StaticRouteV2N2'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get static routes (v2.2)
      tags:
      - Routing
    post:
      description: Create static route API v2.2
      operationId: post-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N2'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX
                  - code: STATICROUTE_CONFIG_ADDRESS_FAMILY_IPV6_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX_IPV6
                  - code: STATICROUTE_CONFIG_NEXTHOPIP_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_DESTINATIONPREFIX_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIP
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_SELF
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_APPLICABLE
                  - code: STATICROUTE_CONFIG_REQUIRED_INTERFACE_FOR_LINK_LOCAL_IPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create static route (v2.2)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}:
    delete:
      description: Delete static route API v2.2
      operationId: delete-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete static route (v2.2)
      tags:
      - Routing
    get:
      description: Get static route API v2.2
      operationId: get-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
      summary: Get static route (v2.2)
      tags:
      - Routing
    put:
      description: Update static route API v2.2
      operationId: put-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteV2N2'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_INPUT
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: STATICROUTE_CONFIG_INVALID_DEVICE
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_DUPLICATE
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX
                  - code: STATICROUTE_CONFIG_ADDRESS_FAMILY_IPV6_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_DESTINATIONPREFIX_IPV6
                  - code: STATICROUTE_CONFIG_NEXTHOPIP_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_DESTINATIONPREFIX_DIFFERENT_FROM_ADDRESSFAMILY_NOT_SUPPORTED
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOPIP
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP_SELF
                  - code: STATICROUTE_NEXTHOP_REACHABILITY_PROBE_NOT_APPLICABLE
                  - code: STATICROUTE_CONFIG_REQUIRED_INTERFACE_FOR_LINK_LOCAL_IPV6
                  - code: STATICROUTE_CONFIG_INVALID_NEXTHOP
                  - code: INTERFACE_NOT_FOUND
                  - code: STATICROUTE_NEXTHOP_CANNOT_SET_NEXTHOP_REACHABILITY_PROBE
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update static route (v2.2)
      tags:
      - Routing
  /v2.2/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/staticroutes/{static_route_id}/status:
    get:
      description: Get static route status API v2.2
      operationId: get-v2.2-api-tenants-tenant_id-sites-site_id-elements-element_id-staticroutes-static_route_id-status
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema:
          description: Element Id
          type: string
      - description: Static Route ID
        in: path
        name: static_route_id
        required: true
        schema:
          description: Static Route Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteStatusV2N2'
          description: Successful Operation
      summary: Get static route status (v2.2)
      tags:
      - Routing
servers:
- url: https://api.us.cloudgenix.com
tags:
- name: Routing
