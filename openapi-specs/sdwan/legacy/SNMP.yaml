components:
  schemas:
    Error:
      properties:
        _error:
          items: {$ref: '#/components/schemas/ErrorResponse'}
          type: array
    ErrorResponse:
      properties:
        code: {type: string}
        message: {type: string}
    ListResponse:
      properties:
        count: {format: int32, type: integer}
        id: {type: string}
        tenant_id: {type: string}
      type: object
    SNMPAgent:
      properties:
        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) ', type: string}
        id: {description: Id, type: string}
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items: {description: Tags, type: string}
          type: array
        v2_config: {$ref: '#/components/schemas/SNMPV2Config', description: 'V2 Config:
            Valid '}
        v3_config: {$ref: '#/components/schemas/SNMPV3Config', description: 'V3 Config:
            Valid '}
    SNMPAgentV2N1:
      properties:
        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) ', type: string}
        id: {description: Id, type: string}
        system_contact: {description: System Contact, type: string}
        system_location: {description: System Location, type: string}
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items: {description: Tags, type: string}
          type: array
        v2_config: {$ref: '#/components/schemas/SNMPV2Config', description: 'V2 Config:
            Valid '}
        v3_config: {$ref: '#/components/schemas/SNMPV3Config', description: 'V3 Config:
            Valid '}
    SNMPTrap:
      properties:
        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) ', type: string}
        enabled: {description: Enabled, type: boolean}
        id: {description: Id, type: string}
        server_ip: {description: 'Server Ip: NotNull(error = SNMPTRAP_CONFIG_SERVER_IP_MISSING:
            SNMP Server ip cannot be null) IPAddress(allowEmpty = true, allowLinkLocal
            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck
            = false, INVALID_IP_ADDRESS_001, type = IP) ', type: string}
        source_interface: {description: Source Interface, type: string}
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items: {description: Tags, type: string}
          type: array
        v2_config: {$ref: '#/components/schemas/SNMPV2Config', description: 'V2 Config:
            Valid '}
        v3_config: {$ref: '#/components/schemas/SNMPV3Config', description: 'V3 Config:
            Valid '}
        version:
          description: 'Version: ValidateEnum(enumClass = classOf[SNMPVersion], error
            = SNMPTRAP_CONFIG_INVALID_VERSION: Unsupported snmp version specified,
            nullAllowed = false) '
          enum: [V2, V3]
          type: string
      required: [version, server_ip]
    SNMPUserAccess:
      properties:
        auth_phrase: {description: 'Auth Phrase: Pattern(error = SNMPCONFIG_UNSUPPORTED_AUTH_PHRASE:
            White spaces not allowed in auth phrase, regexp = ^\\S+$) Size(max = 256,
            error = SNMPCONFIG_INVALID_AUTH_PHRASE_LEN: Auth phrase length should
            be between 8 and 256, min = 8) ', type: string}
        auth_type:
          description: 'Auth Type: ValidateEnum(enumClass = classOf[SNMPAuthType],
            error = SNMPCONFIG_INVALID_AUTH_TYPE: Unsupported snmp auth type specified,
            nullAllowed = false) '
          enum: [NONE, MD5, SHA]
          type: string
        enc_phrase: {description: 'Enc Phrase: Pattern(error = SNMPCONFIG_UNSUPPORTED_ENC_PHRASE:
            White spaces not allowed in enc phrase, regexp = ^\\S+$) Size(max = 256,
            error = SNMPCONFIG_INVALID_ENC_PHRASE_LEN: Enc phrase length should be
            between 8 and 256, min = 8) ', type: string}
        enc_type:
          description: 'Enc Type: ValidateEnum(enumClass = classOf[SNMPEncType], error
            = SNMPCONFIG_INVALID_ENC_TYPE: Unsupported snmp enc type specified, nullAllowed
            = false) '
          enum: [NONE, AES, DES]
          type: string
        engine_id: {description: 'Engine Id: Pattern(error = SNMPCONFIG_UNSUPPORTED_ENGINE_ID:
            hexadecimal value should be in pairs (multiple of two) with minimum length
            10 and maximum length 256 for engine id., regexp = ^((?:0[xX])?(?=.{10,256}$)[0-9a-fA-F]{2}(?:[0-9a-fA-F]{2})*)$) ',
          type: string}
        security_level:
          description: 'Security Level: ValidateEnum(enumClass = classOf[SNMPSecurityLevel],
            error = SNMPCONFIG_INVALID_SECURITY_LEVEL: Unsupported snmp security level
            specified, nullAllowed = false) '
          enum: [NOAUTH, AUTH, PRIVATE]
          type: string
        user_name: {description: 'User Name: NotNull(error = SNMPCONFIG_USER_NAME_MISSING:
            User name cannot be null) Pattern(error = SNMPCONFIG_UNSUPPORTED_USER_NAME:
            White spaces not allowed in user name, regexp = ^\\S+$) Size(max = 256,
            error = SNMPCONFIG_INVALID_USER_NAME_LEN: User name length should be between
            4 and 256, min = 4) ', type: string}
      required: [enc_type, auth_type, security_level, user_name]
    SNMPV2Config:
      properties:
        community: {description: 'Community: Pattern(error = SNMPCONFIG_UNSUPPORTED_COMMUNITY_NAME:
            White spaces not allowed in community name, regexp = ^\\S+$) Size(max
            = 32, error = SNMPCONFIG_COMMUNITY_LEN_EXCEEDS_LIMIT: Community length
            exceeds maximum limit, min = 0) ', type: string}
        enabled: {description: Enabled, type: boolean}
    SNMPV3Config:
      properties:
        user_access: {$ref: '#/components/schemas/SNMPUserAccess', description: 'User
            Access: Valid NotNull(error = SNMPTRAP_CONFIG_USER_ACCESS_MISSING: User
            access config cannot be null for snmp v3 config) '}
      required: [user_access]
info:
  contact: {}
  description: List of APIs used to manage SNMP.
  title: SNMP
  version: Latest
openapi: 3.0.0
paths:
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/snmpagents:
    get:
      description: Get SNMP Agent on an element
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - {$ref: '#/components/schemas/ListResponse'}
                - properties:
                    items:
                      items: {$ref: '#/components/schemas/SNMPAgent'}
                      type: array
                  type: object
          description: Successful Operation
      summary: Get SNMP Agent on an element (v2.0)
      tags: [SNMP]
    post:
      description: Create SNMP Agent
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/SNMPAgent'}
        description: Details of SNMP Agent
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPAgent'}
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}
                  - {code: ELEMENT_NOT_FOUND}
                  - {code: ELEMENT_NOT_BOUND}
                  - {code: SNMPAGENT_CONFIG_MISSING}
                  - {code: SNMPAGENT_CONFIG_DUPLICATE_USERNAMES}
                  - {code: SNMPCONFIG_USER_AUTH_NULL}
                  - {code: SNMPCONFIG_USER_ENC_NULL}
                  - {code: SNMPCONFIG_USER_AUTH_TYPE_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_TYPE_PHRASE_MISSING}
              schema: {$ref: '#/components/schemas/Error'}
          description: Bad Request
      summary: Create SNMP Agent (v2.0)
      tags: [SNMP]
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/snmpagents/{snmpagent_id}:
    delete:
      description: delete SNMP Agent
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents-snmpagent_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmpagent_id
        required: true
        schema: {description: Snmpagent Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPAgent'}
          description: Successful Operation
      summary: delete SNMP Agent (v2.0)
      tags: [SNMP]
    get:
      description: get SNMP Agent
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents-snmpagent_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmpagent_id
        required: true
        schema: {description: Snmpagent Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPAgent'}
          description: Successful Operation
      summary: get SNMP Agent (v2.0)
      tags: [SNMP]
    put:
      description: Update SNMP Agent
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents-snmpagent_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmpagent_id
        required: true
        schema: {description: Snmpagent Id, type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/SNMPAgent'}
        description: Details of SNMP Agent
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPAgent'}
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}
                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}
                  - {code: SNMPAGENT_CONFIG_MISSING}
                  - {code: SNMPAGENT_CONFIG_DUPLICATE_USERNAMES}
                  - {code: SNMPCONFIG_USER_AUTH_NULL}
                  - {code: SNMPCONFIG_USER_ENC_NULL}
                  - {code: SNMPCONFIG_USER_AUTH_TYPE_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_TYPE_PHRASE_MISSING}
              schema: {$ref: '#/components/schemas/Error'}
          description: Bad Request
      summary: Update SNMP Agent (v2.0)
      tags: [SNMP]
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/snmptraps:
    get:
      description: Get All SNMP Trap on an element
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmptraps
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - {$ref: '#/components/schemas/ListResponse'}
                - properties:
                    items:
                      items: {$ref: '#/components/schemas/SNMPTrap'}
                      type: array
                  type: object
          description: Successful Operation
      summary: Get All SNMP Trap on an element (v2.0)
      tags: [SNMP]
    post:
      description: Create SNMP Trap
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmptraps
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/SNMPTrap'}
        description: Details of SNMP Trap
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPTrap'}
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}
                  - {code: ELEMENT_NOT_FOUND}
                  - {code: ELEMENT_NOT_BOUND}
                  - {code: SNMPCONFIG_USER_AUTH_NULL}
                  - {code: SNMPCONFIG_USER_ENC_NULL}
                  - {code: SNMPCONFIG_USER_AUTH_TYPE_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_TYPE_PHRASE_MISSING}
                  - {code: SNMPTRAP_CONFIG_EXCEEDS_LIMIT}
                  - {code: SNMPTRAPCONFIG_V3_CONFIG_MISSING}
                  - {code: SNMPTRAP_CONFIG_REQD_SOURCE_INTERFACE}
              schema: {$ref: '#/components/schemas/Error'}
          description: Bad Request
      summary: Create SNMP Trap (v2.0)
      tags: [SNMP]
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/snmptraps/{snmptrap_id}:
    delete:
      description: delete SNMP Trap
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmptraps-snmptrap_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmptrap_id
        required: true
        schema: {description: Snmptrap Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPTrap'}
          description: Successful Operation
      summary: delete SNMP Trap (v2.0)
      tags: [SNMP]
    get:
      description: Get SNMP trap on an element
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmptraps-snmptrap_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmptrap_id
        required: true
        schema: {description: Snmptrap Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPTrap'}
          description: Successful Operation
      summary: Get SNMP trap on an element (v2.0)
      tags: [SNMP]
    put:
      description: Update SNMP Trap
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-elements-element_id-snmptraps-snmptrap_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmptrap_id
        required: true
        schema: {description: Snmptrap Id, type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/SNMPTrap'}
        description: Details of SNMP Trap
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPTrap'}
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}
                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}
                  - {code: SNMPCONFIG_USER_AUTH_NULL}
                  - {code: SNMPCONFIG_USER_ENC_NULL}
                  - {code: SNMPCONFIG_USER_AUTH_TYPE_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_TYPE_PHRASE_MISSING}
              schema: {$ref: '#/components/schemas/Error'}
          description: Bad Request
      summary: Update SNMP Trap (v2.0)
      tags: [SNMP]
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/snmpagents:
    get:
      description: Get SNMP Agent on an element
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - {$ref: '#/components/schemas/ListResponse'}
                - properties:
                    items:
                      items: {$ref: '#/components/schemas/SNMPAgentV2N1'}
                      type: array
                  type: object
          description: Successful Operation
      summary: Get SNMP Agent on an element (v2.1)
      tags: [SNMP]
    post:
      description: Create SNMP Agent
      operationId: post-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/SNMPAgentV2N1'}
        description: Details of SNMP Agent
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPAgentV2N1'}
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}
                  - {code: ELEMENT_NOT_FOUND}
                  - {code: ELEMENT_NOT_BOUND}
                  - {code: SNMPAGENT_CONFIG_MISSING}
                  - {code: SNMPAGENT_CONFIG_DUPLICATE_USERNAMES}
                  - {code: SNMPCONFIG_USER_AUTH_NULL}
                  - {code: SNMPCONFIG_USER_ENC_NULL}
                  - {code: SNMPCONFIG_USER_AUTH_TYPE_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_TYPE_PHRASE_MISSING}
              schema: {$ref: '#/components/schemas/Error'}
          description: Bad Request
      summary: Create SNMP Agent (v2.1)
      tags: [SNMP]
  /v2.1/api/tenants/{tenant_id}/sites/{site_id}/elements/{element_id}/snmpagents/{snmpagent_id}:
    delete:
      description: delete SNMP Agent
      operationId: delete-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents-snmpagent_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmpagent_id
        required: true
        schema: {description: Snmpagent Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPAgentV2N1'}
          description: Successful Operation
      summary: delete SNMP Agent (v2.1)
      tags: [SNMP]
    get:
      description: get SNMP Agent
      operationId: get-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents-snmpagent_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmpagent_id
        required: true
        schema: {description: Snmpagent Id, type: string}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPAgentV2N1'}
          description: Successful Operation
      summary: get SNMP Agent (v2.1)
      tags: [SNMP]
    put:
      description: Update SNMP Agent
      operationId: put-v2.1-api-tenants-tenant_id-sites-site_id-elements-element_id-snmpagents-snmpagent_id
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        schema: {description: Tenant Id, type: string}
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema: {description: Site Id, type: string}
      - description: Element ID
        in: path
        name: element_id
        required: true
        schema: {description: Element Id, type: string}
      - description: Config ID
        in: path
        name: snmpagent_id
        required: true
        schema: {description: Snmpagent Id, type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/SNMPAgentV2N1'}
        description: Details of SNMP Agent
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SNMPAgentV2N1'}
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}
                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}
                  - {code: SNMPAGENT_CONFIG_MISSING}
                  - {code: SNMPAGENT_CONFIG_DUPLICATE_USERNAMES}
                  - {code: SNMPCONFIG_USER_AUTH_NULL}
                  - {code: SNMPCONFIG_USER_ENC_NULL}
                  - {code: SNMPCONFIG_USER_AUTH_TYPE_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_PHRASE_MISSING}
                  - {code: SNMPCONFIG_USER_ENC_TYPE_PHRASE_MISSING}
              schema: {$ref: '#/components/schemas/Error'}
          description: Bad Request
      summary: Update SNMP Agent (v2.1)
      tags: [SNMP]
tags:
- {name: SNMP}
