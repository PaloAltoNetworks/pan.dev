components:
  schemas:
    Aggregate:
      properties:
        field:
          description: Field
          type: string
        operator:
          description: Operator
          enum:
          - max
          - count
          - min
          - avg
          - sum
          type: string
    BaseCustomDHCPOptions:
      properties:
        option_definition:
          description: 'Custom option definition. Max length supported is 1024.

            '
          type: string
        option_value:
          description: 'Custom option value. Max length supported is 8192.

            '
          type: string
      required:
      - option_value
      - option_definition
    BulkResponse:
      properties:
        count:
          description: "The actual count \n"
          format: int32
          type: integer
        id:
          description: "ID \n"
          type: string
        type:
          description: "Type            \n"
          type: string
    DHCPRelay:
      properties:
        enabled:
          description: Enabled
          type: boolean
        option_82:
          $ref: '#/components/schemas/DHCPRelayOption82'
          description: 'Option_82: Valid '
        server_ips:
          description: 'Server Ips: ListIPAddress(bcast = DENY, listMaxSize = 0, error
            = INTERFACE_CONFIG_INVALID_DHCP_RELAY_LIST: DHCP Servers IP specified
            in the list are invalid, required = true, type = IP) Size(max = 16, error
            = INTERFACE_CONFIG_DHCP_RELAY_LIST_EXCEEDS_LIMIT: DHCP Servers specified
            in the list exceeds maximum limit, min = 0) '
          items:
            description: Server Ips
            type: string
          type: array
        source_interface:
          description: Source Interface
          type: string
    DHCPRelayOption82:
      properties:
        circuit_id:
          description: 'Circuit Id: Size(max = 255, error = DHCPRELAY_CIRCUIT_ID_EXCEEDS_LIMIT:
            Option 82 Circuid ID exceeds maximum length, min = 0) '
          type: string
        enabled:
          description: Enabled
          type: boolean
        reforwarding_policy:
          description: 'Reforwarding Policy: ValidateEnum(enumClass = classOf[DHCPRelayReforwardingPolicy],
            error = INVALID_DHCP_RELAY_REFWDING_POLICY: Option 82 invalid reforwarding
            policy, nullAllowed = false) '
          enum:
          - REPLACE
          - KEEP
          - APPEND
          - DROP
          type: string
        remote_id:
          description: 'Remote Id: Size(max = 255, error = DHCPRELAY_REMOTE_ID_EXCEEDS_LIMIT:
            Option 82 Remote ID exceeds maximum length, min = 0) '
          type: string
      required:
      - reforwarding_policy
    DHCPServer:
      properties:
        broadcast_address:
          description: 'The address of the site.

            '
          type: string
        custom_options:
          description: 'Custom options defined for the DHCP server.

            '
          items:
            $ref: '#/components/schemas/BaseCustomDHCPOptions'
          type: array
        default_lease_time:
          description: 'The lease time each client will get if a user does not request
            a particular lease time.

            '
          format: int64
          type: integer
        description:
          description: 'Description of each instance of the DHCP server, per subnet.

            '
        disabled:
          description: 'Uncheck to enable the configuration.

            '
          type: boolean
        dns_servers:
          description: 'The domain name servers for clients to resolve DNS requests.
            Max number is 3.

            '
          items:
            description: Dns Servers
            type: string
          type: array
        domain_name:
          description: 'The domain name for clients. Max length is 256.

            '
          type: string
        gateway:
          description: 'The default gateway for clients.

            '
          type: string
        id:
          description: 'The DHCP server ID.

            '
          type: string
        ip_ranges:
          description: 'The valid IPv4 address range for defined subnet.

            '
          items:
            $ref: '#/components/schemas/IPRange'
          type: array
        max_lease_time:
          description: 'The maximum lease time the clients can use.

            '
          format: int64
          type: integer
        network_context_id:
          description: "ID of the network context, if configured.             \n"
          type: string
        static_mappings:
          description: 'IP addresses assigned to clients by statically mapping IPs
            to MAC addresses of the clients.

            '
          items:
            $ref: '#/components/schemas/StaticMapping'
          type: array
        subnet:
          description: 'The subnet for which the DHCP server is being configured.

            '
          type: string
        tags:
          description: 'An information field that can be added to identify the DHCP
            server.

            '
          items:
            description: Tags
            type: string
          type: array
      required:
      - ip_ranges
      - subnet
    ESPGroup:
      properties:
        force_encapsulation:
          description: Force Encapsulation
          type: boolean
        lifetime:
          description: 'Lifetime: Range(max = 72L, error = IPSECCONFIG_ESPGROUP_INVALID_LIFETIME:
            Invalid esp lifetime.Should be between 1-72 hours., min = 1L) '
          format: int32
          type: integer
        mode:
          description: 'Mode: ValidateEnum(enumClass = classOf[ESPTunnelMode], error
            = IPSECCONFIG_INVALID_ESPTUNNEL_MODE: Invalid esp tunnel mode.Allowed
            value is tunnel., nullAllowed = false) '
          enum:
          - TUNNEL
          - TRANSPORT
          type: string
        proposals:
          description: 'Proposals: Required(error = IPSECCONFIG_PROPOSALS_REQUIRED:
            Proposal cannot be null.) Size(max = 8, error = IPSECCONFIG_INVALID_PROPOSALS_LIST_LEN:
            Invalid proposals list length.Should be between 1-8., min = 1) Valid '
          items:
            $ref: '#/components/schemas/Proposals'
          type: array
      required:
      - proposals
      - mode
    Error:
      properties:
        _error:
          items:
            $ref: '#/components/schemas/ErrorResponse'
          type: array
    ErrorResponse:
      properties:
        code:
          type: string
        message:
          type: string
    IKEGroup:
      properties:
        aggressive:
          description: Aggressive
          type: boolean
        key_exchange:
          description: 'Key Exchange: ValidateEnum(enumClass = classOf[IKEKeyExchange],
            error = IPSECCONFIG_INVALID_IKEKEY_EXCHANGE: Invalid ike key algorith.Should
            be either ikev1 or ikev2., nullAllowed = false) '
          enum:
          - IKEV1
          - IKEV2
          type: string
        lifetime:
          description: 'Lifetime: Range(max = 72L, error = IPSECCONFIG_INVALID_IKE_LIFETIME:
            Invalid ike lifetime.Should be between 1-72 hours., min = 1L) '
          format: int32
          type: integer
        port:
          description: 'Port: Range(max = 65535L, error = IPSECCONFIG_INVALID_IKE_PORT_RANGE:
            Invalid ike port range.Should be between 1-65535., min = 1L) '
          format: int32
          type: integer
        proposals:
          description: 'Proposals: Required(error = IPSECCONFIG_PROPOSALS_REQUIRED:
            Proposal cannot be null.) Size(max = 8, error = IPSECCONFIG_INVALID_PROPOSALS_LIST_LEN:
            Invalid proposals list length.Should be between 1-8., min = 1) Valid '
          items:
            $ref: '#/components/schemas/Proposals'
          type: array
        reauth:
          description: Reauth
          type: boolean
      required:
      - proposals
      - key_exchange
    IKEV1Params:
      properties:
        xauth_id:
          description: Xauth Id
          type: string
        xauth_secret:
          description: 'Xauth Secret: Length(max = 128, error = IPSECCONFIG_INVALID_XAUTH_SECRET_LEN:
            Invalid extended authentication secret length.Should be between 4-128.,
            min = 4) '
          type: string
        xauth_secret_encrypted:
          description: 'Xauth Secret Encrypted: JsonIgnore(value = true) '
          type: string
        xauth_secret_hash:
          description: 'Xauth Secret Hash: JsonIgnore(value = true) '
          type: string
        xauth_type:
          description: 'Xauth Type: ValidateEnum(enumClass = classOf[IKEXAuthType],
            error = IPSECCONFIG_INVALID_XAUTH_TYPE: Invalid extended authentication
            type specified.Valid type are secret or none., nullAllowed = false) '
          enum:
          - NONE
          - SECRET
          type: string
      required:
      - xauth_type
    IPRange:
      properties:
        end_ip:
          description: "The original end IP address for the defined subnet. \n"
          type: string
        start_ip:
          description: 'The original start IP address for the defined subnet.

            '
          type: string
      required:
      - end_ip
      - start_ip
    IPSECAuthentication:
      properties:
        certificate:
          description: Certificate
          type: string
        ikev1_params:
          $ref: '#/components/schemas/IKEV1Params'
          description: 'Ikev1 Params: Valid '
        local_ca_certificate:
          description: Local Ca Certificate
          type: string
        local_id:
          description: 'Local Id: ValidateEnum(enumClass = classOf[IPSECLocalIdType],
            error = IPSECCONFIG_INVALID_LOCAL_ID_TYPE: Invalid local id type.Should
            be either hostname, dn, local_ip or custom, nullAllowed = false) '
          enum:
          - LOCAL_IP
          - DN
          - HOSTNAME
          - CUSTOM
          type: string
        local_id_custom:
          description: 'Local Id Custom: Length(max = 255, error = IPSECCONFIG_INVALID_LOCAL_ID_LEN:
            Invalid local id len.Should be between 2-255., min = 2) '
          type: string
        passphrase:
          description: Passphrase
          type: string
        passphrase_encrypted:
          description: 'Passphrase Encrypted: JsonIgnore(value = true) '
          type: string
        private_key:
          description: Private Key
          type: string
        private_key_encrypted:
          description: 'Private Key Encrypted: JsonIgnore(value = true) '
          type: string
        remote_ca_certificate:
          description: Remote Ca Certificate
          type: string
        remote_id:
          description: 'Remote Id: Length(max = 255, error = IPSECCONFIG_INVALID_REMOTE_ID_LEN:
            Invalid remote id len.Should be between 2-255., min = 2) '
          type: string
        secret:
          description: Secret
          type: string
        secret_encrypted:
          description: 'Secret Encrypted: JsonIgnore(value = true) '
          type: string
        secret_hash:
          description: 'Secret Hash: JsonIgnore(value = true) '
          type: string
        type:
          description: 'Type: ValidateEnum(enumClass = classOf[IPSECAuthenticationType],
            error = IPSECCONFIG_INVALID_AUTHENTICATION_TYPE: Invalid authentication
            type specified.Valid type are x509, psk or none., nullAllowed = false) '
          enum:
          - NONE
          - PSK
          - X509
          type: string
        x509Objects:
          $ref: '#/components/schemas/X509Objects'
          description: 'X509Objects: JsonIgnore(value = true) '
      required:
      - local_id
      - type
    IPSECProfile:
      properties:
        authentication:
          $ref: '#/components/schemas/IPSECAuthentication'
          description: 'Authentication: Required(error = IPSECCONFIG_AUTHENTICATION_REQUIRED:
            Authentication cannot be null.) Valid '
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        dpd_delay:
          description: 'Dpd Delay: Range(max = 60L, error = IPSECCONFIG_INVALID_DPD_DELAY:
            Invalid dpd delay.Should be between 1-60 seconds., min = 1L) '
          format: int32
          type: integer
        dpd_enable:
          description: Dpd Enable
          type: boolean
        dpd_timeout:
          description: 'Dpd Timeout: Range(max = 300L, error = IPSECCONFIG_INVALID_DPD_TIMEOUT:
            Invalid dpd timeout specified.Should be between 2-300 seconds., min =
            2L) '
          format: int32
          type: integer
        esp_group:
          $ref: '#/components/schemas/ESPGroup'
          description: 'Esp Group: Required(error = IPSECCONFIG_ESPGROUP_REQUIRED:
            ESP Group cannot be null.) Valid '
        id:
          description: Id
          type: string
        ike_group:
          $ref: '#/components/schemas/IKEGroup'
          description: 'Ike Group: Required(error = IPSECCONFIG_IKEGROUP_REQUIRED:
            IKE Group cannot be null.) Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - authentication
      - ike_group
      - esp_group
      - name
    IPSECProfileQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    IPSECProfileQueryFilter:
      properties:
        authentication:
          $ref: '#/components/schemas/IPSECAuthentication'
          description: 'Authentication: Required(error = IPSECCONFIG_AUTHENTICATION_REQUIRED:
            Authentication cannot be null.) Valid '
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        dpd_delay:
          description: 'Dpd Delay: Range(max = 60L, error = IPSECCONFIG_INVALID_DPD_DELAY:
            Invalid dpd delay.Should be between 1-60 seconds., min = 1L) '
          format: int32
          type: integer
        dpd_enable:
          description: Dpd Enable
          type: boolean
        dpd_timeout:
          description: 'Dpd Timeout: Range(max = 300L, error = IPSECCONFIG_INVALID_DPD_TIMEOUT:
            Invalid dpd timeout specified.Should be between 2-300 seconds., min =
            2L) '
          format: int32
          type: integer
        esp_group:
          $ref: '#/components/schemas/ESPGroup'
          description: 'Esp Group: Required(error = IPSECCONFIG_ESPGROUP_REQUIRED:
            ESP Group cannot be null.) Valid '
        id:
          description: Id
          type: string
        ike_group:
          $ref: '#/components/schemas/IKEGroup'
          description: 'Ike Group: Required(error = IPSECCONFIG_IKEGROUP_REQUIRED:
            IKE Group cannot be null.) Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - authentication
      - ike_group
      - esp_group
      - name
    IPSECProfileScreen:
      properties:
        authentication:
          $ref: '#/components/schemas/IPSECAuthentication'
          description: 'Authentication: Required(error = IPSECCONFIG_AUTHENTICATION_REQUIRED:
            Authentication cannot be null.) Valid '
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        dpd_delay:
          description: 'Dpd Delay: Range(max = 60L, error = IPSECCONFIG_INVALID_DPD_DELAY:
            Invalid dpd delay.Should be between 1-60 seconds., min = 1L) '
          format: int32
          type: integer
        dpd_enable:
          description: Dpd Enable
          type: boolean
        dpd_timeout:
          description: 'Dpd Timeout: Range(max = 300L, error = IPSECCONFIG_INVALID_DPD_TIMEOUT:
            Invalid dpd timeout specified.Should be between 2-300 seconds., min =
            2L) '
          format: int32
          type: integer
        esp_group:
          $ref: '#/components/schemas/ESPGroup'
          description: 'Esp Group: Required(error = IPSECCONFIG_ESPGROUP_REQUIRED:
            ESP Group cannot be null.) Valid '
        id:
          description: Id
          type: string
        ike_group:
          $ref: '#/components/schemas/IKEGroup'
          description: 'Ike Group: Required(error = IPSECCONFIG_IKEGROUP_REQUIRED:
            IKE Group cannot be null.) Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - authentication
      - ike_group
      - esp_group
      - name
    LANNetwork:
      properties:
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        security_policy_set:
          $ref: '#/components/schemas/SecurityPolicySet'
          description: Security Policy Set
      required:
      - scope
      - name
    LANNetworkQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    LANNetworkQueryFilter:
      properties:
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        security_policy_set:
          $ref: '#/components/schemas/SecurityPolicySet'
          description: Security Policy Set
      required:
      - scope
      - name
    LANNetworkQueryFilterResponse:
      properties:
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        site_id:
          description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)
            NotNull '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - site_id
      - scope
      - name
    LANNetworkQueryFilterV3N1:
      properties:
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - scope
      - name
    LANNetworkScreen:
      properties:
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        security_policy_set:
          $ref: '#/components/schemas/SecurityPolicySet'
          description: Security Policy Set
      required:
      - scope
      - name
    LANNetworkScreenV3:
      properties:
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
      required:
      - scope
      - name
    LANNetworkScreenV3N1:
      properties:
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - scope
      - name
    LANNetworkV3:
      properties:
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
      required:
      - scope
      - name
    LANNetworkV3N1:
      properties:
        description:
          description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        ipv4_config:
          $ref: '#/components/schemas/LanNetworkIPv4Config'
          description: 'Ipv4 Config: Valid '
        name:
          description: 'Name: Required(error = NAME_REQD: Please provide resource
            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource
            exceeds limit., min = 0) '
          type: string
        network_context_id:
          description: 'Network Context Id: Digits(fraction = 0, integer = 30, error
            = INVALID_NETWORK_CONTEXT_ID: Specified network context is invalid.) '
          type: string
        scope:
          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message
            = Invalid enum string., nullAllowed = false) '
          enum:
          - GLOBAL
          - LOCAL
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - scope
      - name
    LQMConfig:
      properties:
        hub_site_ids:
          description: 'List of DC Site IDs.

            '
          items:
            description: Hub Site Ids
            type: string
          type: array
        inter_packet_gap:
          description: 'Allowed values: 50-300 milliseconds.

            '
          format: int32
          type: integer
        statistic:
          description: 'Statistic: ValidateEnum(enumClass = classOf[LQMStatistic],
            error = WANINTERFACE_LQM_CONFIG_INVALID_STATISTIC: Invalid statistic value.
            Valid values are min, max and avg., nullAllowed = true) '
          enum:
          - min
          - max
          - avg
          type: string
    LanNetworkIPv4Config:
      properties:
        default_routers:
          description: 'Default Routers: ListIPAddress(bcast = DENY, listMaxSize =
            0, error = LAN_CONFIG_INVALID_DEFAULT_ROUTERS: Invalid ip for default
            routers., required = false, type = IPCIDR_32) '
          items:
            description: Default Routers
            type: string
          type: array
        dhcp_relay:
          $ref: '#/components/schemas/DHCPRelay'
          description: Dhcp Relay
        dhcp_server:
          $ref: '#/components/schemas/DHCPServer'
          description: Dhcp Server
        prefixes:
          description: 'Prefixes: ListIPAddress(bcast = DENY, listMaxSize = 0, error
            = LAN_CONFIG_INVALID_PREFIX: Invalid prefix ip., required = false, type
            = PREFIXCIDR_32) '
          items:
            description: Prefixes
            type: string
          type: array
    ListQueryResponse:
      properties:
        count:
          description: 'The actual count

            '
          format: int32
          type: integer
        deleted_count:
          description: 'The deleted number

            '
          format: int64
          type: integer
        deleted_ids:
          description: 'The deleted IDs

            '
          items:
            type: string
          type: array
        description:
          description: 'Description of the query. Max size is 256.

            '
        id:
          description: 'The ID.

            '
          type: string
        next_query:
          description: 'Details of the next query

            '
          type: object
        tenant_id:
          type: string
        total_count:
          description: 'Total number.

            '
          format: int64
          type: integer
      type: object
    ListResponse:
      properties:
        count:
          description: 'The actual count

            '
          format: int32
          type: integer
        description:
          description: 'Description

            '
        id:
          description: 'The ID

            '
          type: string
        tenant_id:
          description: 'The ID of the tenant

            '
          type: string
      type: object
    NetworkContext:
      properties:
        description:
          description: Description
          type: string
        id:
          description: Id
          type: string
        name:
          description: Name
          type: string
    NetworkContextQueryFilter:
      properties:
        description:
          description: 'Description: Size(max = 256, error = NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID:
            Network context config description invalid., min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NETWORK_CONTEXT_CONFIG_NAME_REQD: Network
            context config name required) Size(max = 128, error = NAME_EXCEEDS_LIMIT:
            Name of the resource exceeds limit., min = 0) '
          type: string
      required:
      - name
    NetworkContextScreen:
      properties:
        description:
          description: 'Description: Size(max = 256, error = NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID:
            Network context config description invalid., min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(error = NETWORK_CONTEXT_CONFIG_NAME_REQD: Network
            context config name required) Size(max = 128, error = NAME_EXCEEDS_LIMIT:
            Name of the resource exceeds limit., min = 0) '
          type: string
      required:
      - name
    Proposals:
      properties:
        dh_groups:
          description: 'Dh Groups: ValidateEnum(enumClass = classOf[DHGroups], error
            = IPSECCONFIG_INVALID_DHGROUPS: Invalid DH Group specified., nullAllowed
            = false) '
          enum:
          - NONE
          - MODP768
          - MODP1024
          - MODP1536
          - MODP2048
          - MODP3072
          - MODP4096
          - MODP6144
          - MODP8192
          - MODP1024S160
          - MODP2048S224
          - MODP2048S256
          - ECP192
          - ECP224
          - ECP256
          - ECP384
          - ECP521
          - ECP224BP
          - ECP256BP
          - ECP384BP
          - ECP512BP
          - CURVE25519
          type: string
        encryption:
          description: 'Encryption: ValidateEnum(enumClass = classOf[IPSECEncryption],
            error = IPSECCONFIG_INVALID_ENCRYPTION: Invalid encryption algorithm specified.,
            nullAllowed = false) '
          enum:
          - NONE
          - AES128
          - AES192
          - AES256
          - AES128CTR
          - AES192CTR
          - AES256CTR
          - AES128CCM64
          - AES192CCM64
          - AES256CCM64
          - AES128CCM96
          - AES192CCM96
          - AES256CCM96
          - AES128CCM128
          - AES192CCM128
          - AES256CCM128
          - AES128GCM64
          - AES192GCM64
          - AES256GCM64
          - AES128GCM96
          - AES192GCM96
          - AES256GCM96
          - AES128GCM128
          - AES192GCM128
          - AES256GCM128
          - AES128GMAC
          - AES192GMAC
          - AES256GMAC
          - TRIPLEDES
          - BLOWFISH128
          - BLOWFISH192
          - BLOWFISH256
          - CAMELLIA128
          - CAMELLIA192
          - CAMELLIA256
          - SERPENT128
          - SERPENT192
          - SERPENT256
          - TWOFISH128
          - TWOFISH192
          - TWOFISH256
          type: string
        hash:
          description: 'Hash: ValidateEnum(enumClass = classOf[IPSECHash], error =
            IPSECCONFIG_INVALID_HASH: Invalid hashing algorithm specified., nullAllowed
            = false) '
          enum:
          - MD5
          - SHA1
          - SHA256
          - SHA384
          - SHA512
          - SHA256_96
          - AESXCBC
          - AES128GMAC
          - AES192GMAC
          - AES256GMAC
          type: string
      required:
      - hash
      - encryption
      - dh_groups
    SecurityPolicySet:
      properties:
        description:
          description: 'Description: Size(max = 256, error = SECURITY_POLICYSET_INVALID_DESCRIPTION:
            Security policy set invalid description., min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Size(max = 128, error = SECURITY_POLICYSET_INVALID_NAME:
            Security policy set invalid name., min = 0) Required(error = SECURITY_POLICYSET_NAME_REQUIRED:
            Security policyset name required.) '
          type: string
        policyrule_order:
          description: Policyrule Order
          items:
            description: Policyrule Order
            type: string
          type: array
      required:
      - name
    SiteIPFixPrefixAssociation:
      properties:
        id:
          description: 'The ID of the IPFIX local prefix.

            '
          type: string
        ipv4_prefixes:
          description: 'The individual IP address.

            '
          items:
            description: Ipv4 Prefixes
            type: string
          type: array
        prefix_id:
          description: "The IP Prefix ID that associates with a site.   \n"
          type: string
        tags:
          description: "A information field that can be added to identify the IPFIX\
            \ local prefix. Maximum 10 unique tags of length 1024 each are allowed.\
            \      \n"
          items:
            description: Tags
            type: string
          type: array
    StaticMapping:
      properties:
        ip_address:
          description: 'IP addresses assigned mapped to MAC addresses of the clients.

            '
          type: string
        mac:
          description: "The mac addresses that need to be mapped. \n"
          type: string
        name:
          description: 'The name of the static mapping. Max length supported is 256.

            '
          type: string
      required:
      - ip_address
      - mac
      - name
    VPNLinkConfiguration:
      properties:
        keep_alive_failure_count:
          description: 'The VPN keep alive failure count (must be between 3 and 30).

            '
          type: integer
        keep_alive_interval:
          description: 'The VPN keep alive timeout interval (must be between 100ms-1740,000ms).

            '
          type: integer
      required:
      - keep_alive_failure_count
      - keep_alive_interval
    WANInterfaceLabel:
      properties:
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
    WANInterfaceLabelQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    WANInterfaceLabelQueryFilterV2N4:
      properties:
        bwc_enabled:
          description: Bwc Enabled
          type: boolean
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        lqm_enabled:
          description: Lqm Enabled
          type: boolean
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        use_for_application_reachability_probes:
          description: 'Use For Application Reachability Probes: Valid '
          type: boolean
        use_for_controller_connections:
          description: 'Use For Controller Connections: Valid '
          type: boolean
        use_lqm_for_non_hub_paths:
          description: Use Lqm For Non Hub Paths
          type: boolean
        vpnlink_configuration:
          $ref: '#/components/schemas/VPNLinkConfiguration'
          description: 'Vpnlink Configuration: Valid '
    WANInterfaceLabelScreen:
      properties:
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
    WANInterfaceLabelScreenV2N1:
      properties:
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
    WANInterfaceLabelScreenV2N2:
      properties:
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        vpnlink_configuration:
          $ref: '#/components/schemas/VPNLinkConfiguration'
          description: 'Vpnlink Configuration: Valid '
    WANInterfaceLabelScreenV2N3:
      properties:
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        use_for_application_reachability_probes:
          description: 'Use For Application Reachability Probes: Valid '
          type: boolean
        use_for_controller_connections:
          description: 'Use For Controller Connections: Valid '
          type: boolean
        vpnlink_configuration:
          $ref: '#/components/schemas/VPNLinkConfiguration'
          description: 'Vpnlink Configuration: Valid '
    WANInterfaceLabelScreenV2N4:
      properties:
        bwc_enabled:
          description: Bwc Enabled
          type: boolean
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        lqm_enabled:
          description: Lqm Enabled
          type: boolean
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        use_for_application_reachability_probes:
          description: 'Use For Application Reachability Probes: Valid '
          type: boolean
        use_for_controller_connections:
          description: 'Use For Controller Connections: Valid '
          type: boolean
        use_lqm_for_non_hub_paths:
          description: Use Lqm For Non Hub Paths
          type: boolean
        vpnlink_configuration:
          $ref: '#/components/schemas/VPNLinkConfiguration'
          description: 'Vpnlink Configuration: Valid '
    WANInterfaceLabelV2N1:
      properties:
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
    WANInterfaceLabelV2N2:
      properties:
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        vpnlink_configuration:
          $ref: '#/components/schemas/VPNLinkConfiguration'
          description: 'Vpnlink Configuration: Valid '
    WANInterfaceLabelV2N3:
      properties:
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        use_for_application_reachability_probes:
          description: 'Use For Application Reachability Probes: Valid '
          type: boolean
        use_for_controller_connections:
          description: 'Use For Controller Connections: Valid '
          type: boolean
        vpnlink_configuration:
          $ref: '#/components/schemas/VPNLinkConfiguration'
          description: 'Vpnlink Configuration: Valid '
    WANInterfaceLabelV2N4:
      properties:
        bwc_enabled:
          description: Bwc Enabled
          type: boolean
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label:
          description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp =
            (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) '
          type: string
        lqm_enabled:
          description: Lqm Enabled
          type: boolean
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        use_for_application_reachability_probes:
          description: 'Use For Application Reachability Probes: Valid '
          type: boolean
        use_for_controller_connections:
          description: 'Use For Controller Connections: Valid '
          type: boolean
        use_lqm_for_non_hub_paths:
          description: Use Lqm For Non Hub Paths
          type: boolean
        vpnlink_configuration:
          $ref: '#/components/schemas/VPNLinkConfiguration'
          description: 'Vpnlink Configuration: Valid '
    WANInterfaceQueryFilterV2N4:
      properties:
        bfd_mode:
          description: 'Bfd Mode: ValidateEnum(enumClass = classOf[BfdMode], WAN_CONFIG_INVALID_BFD_MODE,
            nullAllowed = false) '
          enum:
          - aggressive
          - non_aggressive
          type: string
        bw_config_mode:
          description: Bw Config Mode
          enum:
          - auto
          - manual
          - manual_bwm_disabled
          type: string
        bwc_enabled:
          description: Bwc Enabled
          type: boolean
        cost:
          description: Cost
          type: integer
        description:
          description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,
            min = 0) '
          type: string
        id:
          description: Id
          type: string
        label_id:
          description: Label Id
          type: string
        link_bw_down:
          description: Link Bw Down
          format: double
          type: number
        link_bw_up:
          description: Link Bw Up
          format: double
          type: number
        lqm_config:
          $ref: '#/components/schemas/LQMConfig'
          description: 'Lqm Config: Valid '
        lqm_enabled:
          description: Lqm Enabled
          type: boolean
        name:
          description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME, min
            = 0) '
          type: string
        network_id:
          description: Network Id
          type: string
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
      required:
      - bfd_mode
    WANNetwork:
      properties:
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(NAME_REQUIRED) Size(max = 128, WANNETWORK_NAME_INVALID_0001,
            min = 0) '
          type: string
        provider_as_numbers:
          description: 'Provider As Numbers: ListNumber(duplicate = true, max = 65535,
            error = WAN_CONFIG_PROVIDER_AS_OUT_OF_RANGE: AS numbers of the private
            network is not within 1-65535., min = 1) '
          items:
            description: Provider As Numbers
            type: integer
          type: array
        type:
          description: 'Type: Required(error = NETWORK_TYPE_REQUIRED: WAN Network
            type (publicwan | privatewan) is a mandatory attribute.) ValidateEnum(enumClass
            = classOf[WANNetworkType], message = Invalid enum string., nullAllowed
            = false) '
          enum:
          - PUBLIC_WAN
          - PRIVATE_WAN
          type: string
      required:
      - type
      - name
    WANNetworkQuery:
      properties:
        aggregate:
          $ref: '#/components/schemas/Aggregate'
          description: Aggregate
        dest_page:
          description: Dest Page
          format: int32
          type: integer
        getDeleted:
          description: GetDeleted
          type: boolean
        group_by:
          description: Group By
          items:
            description: Group By
            type: string
          type: array
        id:
          description: Id
          type: string
        last_query_ts:
          description: Last Query Ts
          format: int64
          type: integer
        limit:
          description: Limit
          format: int32
          type: integer
        next_query:
          type: object
        query_params:
          type: object
        retrieved_fields:
          description: Retrieved Fields
          items:
            description: Retrieved Fields
            type: string
          type: array
        retrieved_fields_mask:
          description: Retrieved Fields Mask
          type: boolean
        sort_params:
          type: object
        total_count:
          description: Total Count
          format: int64
          type: integer
    WANNetworkScreen:
      properties:
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(NAME_REQUIRED) Size(max = 128, WANNETWORK_NAME_INVALID_0001,
            min = 0) '
          type: string
        provider_as_numbers:
          description: 'Provider As Numbers: ListNumber(duplicate = true, max = 65535,
            error = WAN_CONFIG_PROVIDER_AS_OUT_OF_RANGE: AS numbers of the private
            network is not within 1-65535., min = 1) '
          items:
            description: Provider As Numbers
            type: integer
          type: array
        type:
          description: 'Type: Required(error = NETWORK_TYPE_REQUIRED: WAN Network
            type (publicwan | privatewan) is a mandatory attribute.) ValidateEnum(enumClass
            = classOf[WANNetworkType], message = Invalid enum string., nullAllowed
            = false) '
          enum:
          - PUBLIC_WAN
          - PRIVATE_WAN
          type: string
      required:
      - type
      - name
    WANNetworkScreenV2N1:
      properties:
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(NAME_REQUIRED) Size(max = 128, WANNETWORK_NAME_INVALID_0001,
            min = 0) '
          type: string
        provider_as_numbers:
          description: 'Provider As Numbers: ListNumber(duplicate = true, max = 65535,
            error = WAN_CONFIG_PROVIDER_AS_OUT_OF_RANGE: AS numbers of the private
            network is not within 1-65535., min = 1) '
          items:
            description: Provider As Numbers
            type: integer
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'Type: Required(error = NETWORK_TYPE_REQUIRED: WAN Network
            type (publicwan | privatewan) is a mandatory attribute.) ValidateEnum(enumClass
            = classOf[WANNetworkType], message = Invalid enum string., nullAllowed
            = false) '
          enum:
          - PUBLIC_WAN
          - PRIVATE_WAN
          type: string
      required:
      - type
      - name
    WANNetworkV2N1:
      properties:
        description:
          description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:
            Description length exceeds limit, min = 0) '
          type: string
        id:
          description: Id
          type: string
        name:
          description: 'Name: Required(NAME_REQUIRED) Size(max = 128, WANNETWORK_NAME_INVALID_0001,
            min = 0) '
          type: string
        provider_as_numbers:
          description: 'Provider As Numbers: ListNumber(duplicate = true, max = 65535,
            error = WAN_CONFIG_PROVIDER_AS_OUT_OF_RANGE: AS numbers of the private
            network is not within 1-65535., min = 1) '
          items:
            description: Provider As Numbers
            type: integer
          type: array
        tags:
          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,
            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:
            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,
            regex = [^,\\s]+, required = false) '
          items:
            description: Tags
            type: string
          type: array
        type:
          description: 'Type: Required(error = NETWORK_TYPE_REQUIRED: WAN Network
            type (publicwan | privatewan) is a mandatory attribute.) ValidateEnum(enumClass
            = classOf[WANNetworkType], message = Invalid enum string., nullAllowed
            = false) '
          enum:
          - PUBLIC_WAN
          - PRIVATE_WAN
          type: string
      required:
      - type
      - name
    X509Objects:
      properties:
        certHolder:
          type: object
        certificate:
          description: Certificate
          type: string
        is_local_ca_cert_set:
          description: Is Local Ca Cert Set
          type: boolean
        is_remote_ca_cert_set:
          description: Is Remote Ca Cert Set
          type: boolean
        keyPair:
          type: object
        local_ca_certificate:
          description: Local Ca Certificate
          type: string
        local_ca_certs_set:
          description: Local Ca Certs Set
          items:
            type: object
          type: array
        passphrase:
          description: Passphrase
          type: string
        private_key:
          description: Private Key
          type: string
        remote_ca_certificate:
          description: Remote Ca Certificate
          type: string
        remote_ca_certs_set:
          description: Remote Ca Certs Set
          items:
            type: object
          type: array
info:
  contact: {}
  description: List of APIs used to manage Network constructs in Prisma SD-WAN like
    WAN Networks, LAN Networks, Circuit labels, and Network Contexts. All these are
    used to define a circuit and create policies.
  title: Network Constructs
  version: Latest
openapi: 3.0.0
paths:
  /v2.0/api/tenants/{tenant_id}/ipsecprofiles:
    get:
      description: Get IPSECProfileList
      operationId: get-v2.0-api-tenants-tenant_id-ipsecprofiles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListQueryResponse'
          - properties:
              items:
                items:
                  $ref: '#/components/schemas/IPSECProfile'
                type: array
            type: object
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
      summary: Get IPSECProfileList (v2.0)
      tags:
      - Network Constructs
    post:
      description: Create a new IPSEC Profile
      operationId: post-v2.0-api-tenants-tenant_id-ipsecprofiles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPSECProfileScreen'
        description: Details of the IPSEC profile to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_VALUE
                  - code: IPSECCONFIG_IKEGROUP_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_DELAY
                  - code: IPSECCONFIG_ESPGROUP_REQUIRED
                  - code: IPSECCONFIG_AUTHENTICATION_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_TIMEOUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new IPSEC Profile (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/ipsecprofiles/query:
    post:
      description: Queries db for limit number of tenant level ipsec profiles that
        match query params.
      operationId: post-v2.0-api-tenants-tenant_id-ipsecprofiles-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPSECProfileQuery'
        description: Query Details for IPSECProfile
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/SiteIPFixPrefixAssociation'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of tenant level ipsec profiles that match
        query params. (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/ipsecprofiles/{profile_id}:
    delete:
      description: Delete a IPSEC Profile
      operationId: delete-v2.0-api-tenants-tenant_id-ipsecprofiles-profile_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: IPSECProfile Id
        in: path
        name: profile_id
        required: true
        schema:
          description: Profile Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_VALUE
                  - code: IPSECCONFIG_IKEGROUP_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_DELAY
                  - code: IPSECCONFIG_ESPGROUP_REQUIRED
                  - code: IPSECCONFIG_AUTHENTICATION_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_TIMEOUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete a IPSEC Profile (v2.0)
      tags:
      - Network Constructs
    get:
      description: Get a IPSECProfile
      operationId: get-v2.0-api-tenants-tenant_id-ipsecprofiles-profile_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: IPSECProfile Id
        in: path
        name: profile_id
        required: true
        schema:
          description: Profile Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
      summary: Get a IPSECProfile (v2.0)
      tags:
      - Network Constructs
    put:
      description: Update a IPSECProfile
      operationId: put-v2.0-api-tenants-tenant_id-ipsecprofiles-profile_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: IPSECProfile Id
        in: path
        name: profile_id
        required: true
        schema:
          description: Profile Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPSECProfileScreen'
        description: Details of the IPSEC profile to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_VALUE
                  - code: IPSECCONFIG_IKEGROUP_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_DELAY
                  - code: IPSECCONFIG_ESPGROUP_REQUIRED
                  - code: IPSECCONFIG_AUTHENTICATION_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_TIMEOUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a IPSECProfile (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/networkcontexts:
    get:
      description: Get LAN segments
      operationId: get-v2.0-api-tenants-tenant_id-networkcontexts
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/NetworkContext'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get LAN segments (v2.0)
      tags:
      - Network Constructs
    post:
      description: Create a new LAN segment
      operationId: post-v2.0-api-tenants-tenant_id-networkcontexts
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkContext'
        description: Details of the lan segment model to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkContext'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID
                  - code: NAME_EXCEEDS_LIMIT
                  - code: NETWORK_CONTEXT_CONFIG_NAME_REQD
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new LAN segment (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/networkcontexts/query:
    post:
      description: Queries db for limit number of network contexts that match query
        params.
      operationId: post-v2.0-api-tenants-tenant_id-networkcontexts-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkContext'
        description: Details of the query for lan segment
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/NetworkContextQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of network contexts that match query params.
        (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/networkcontexts/{network_context_id}:
    delete:
      description: Delete LAN segment
      operationId: delete-v2.0-api-tenants-tenant_id-networkcontexts-network_context_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Context ID
        in: path
        name: network_context_id
        required: true
        schema:
          description: Network Context Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkContext'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID
                  - code: NAME_EXCEEDS_LIMIT
                  - code: NETWORK_CONTEXT_CONFIG_NAME_REQD
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete LAN segment (v2.0)
      tags:
      - Network Constructs
    get:
      description: Get LAN segment
      operationId: get-v2.0-api-tenants-tenant_id-networkcontexts-network_context_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Context ID
        in: path
        name: network_context_id
        required: true
        schema:
          description: Network Context Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkContext'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_LAN_SEGMENTID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get LAN segment (v2.0)
      tags:
      - Network Constructs
    put:
      description: Update LAN segment
      operationId: put-v2.0-api-tenants-tenant_id-networkcontexts-network_context_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Context ID
        in: path
        name: network_context_id
        required: true
        schema:
          description: Network Context Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkContextScreen'
        description: Details of lan segment to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkContext'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID
                  - code: NAME_EXCEEDS_LIMIT
                  - code: NETWORK_CONTEXT_CONFIG_NAME_REQD
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update LAN segment (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks:
    get:
      description: Get LAN networks
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - $ref: '#/components/schemas/BulkResponse'
          description: Successful Operation
      summary: Get LAN networks (v2.0)
      tags:
      - Network Constructs
    post:
      description: Create a new LAN
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkScreen'
        description: Details of the network to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetwork'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_INPUT
                  - code: NO_LAN_NET_PREFIX
                  - code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED
                  - code: INVALID_NETWORK_CONTEXT
                  - code: INVALID_IPV4_PREFIX
                  - code: SAME_IPV4_PREFIX
                  - code: INVALID_IPADDRESS
                  - code: DEFAULT_ROUTER_PREFIX_MISMATCH
                  - code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS
                  - code: INVALID_APP_ID
                  - code: LAN_NETWORK_ADD_FAILURE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new LAN (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/query:
    post:
      description: Query LAN networks that match query params
      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks-query
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/LANNetworkQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query LAN networks that match query params (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/{lannetwork_id}:
    delete:
      description: Delete an existing LAN
      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetwork'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: LAN_NETWORK_IN_USE
                  - code: LANNETWORK_IS_USED_IN_SECURITY_ZONES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an existing LAN (v2.0)
      tags:
      - Network Constructs
    get:
      description: Get LAN network
      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetwork'
          description: Successful Operation
      summary: Get LAN network (v2.0)
      tags:
      - Network Constructs
    put:
      description: Update an existing LAN
      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkScreen'
        description: Details of the network to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetwork'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: INVALID_JSON_INPUT
                  - code: NO_LAN_NET_PREFIX
                  - code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED
                  - code: INVALID_NETWORK_CONTEXT
                  - code: INVALID_IPV4_PREFIX
                  - code: SAME_IPV4_PREFIX
                  - code: INVALID_IPADDRESS
                  - code: DEFAULT_ROUTER_PREFIX_MISMATCH
                  - code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS
                  - code: INVALID_APP_ID
                  - code: OVERLAPPING_LAN_NET_PREFIXES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing LAN (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/waninterfacelabels:
    get:
      description: Get WAN interface labels for a tenant
      operationId: get-v2.0-api-tenants-tenant_id-waninterfacelabels
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabel'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get WAN interface labels for a tenant (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/waninterfacelabels/query:
    post:
      description: Query db for WAN interface labels that match query parameters
      operationId: post-v2.0-api-tenants-tenant_id-waninterfacelabels-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelQuery'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query db for WAN interface labels that match query parameters (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:
    get:
      description: Get a specific WAN interface label
      operationId: get-v2.0-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabel'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a specific WAN interface label (v2.0)
      tags:
      - Network Constructs
    put:
      description: Update specific WAN interface label
      operationId: put-v2.0-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelScreen'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabel'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: WAN_INTERFACE_LABEL_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update specific WAN interface label (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/wannetworks:
    get:
      description: Get all tenant WAN networks
      operationId: get-v2.0-api-tenants-tenant_id-wannetworks
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANNetwork'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all tenant WAN networks (v2.0)
      tags:
      - Network Constructs
    post:
      description: Create a new WAN
      operationId: post-v2.0-api-tenants-tenant_id-wannetworks
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANNetworkScreen'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANNetwork'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_INPUT
                  - code: EXTRA_PROVIDER_ASNUM
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new WAN (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/wannetworks/query:
    post:
      description: Query db for WAN networks that match query parameters
      operationId: post-v2.0-api-tenants-tenant_id-wannetworks-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANNetworkQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANNetworkQuery'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SITE_WAN_NETWORK_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query db for WAN networks that match query parameters (v2.0)
      tags:
      - Network Constructs
  /v2.0/api/tenants/{tenant_id}/wannetworks/{wan_network_id}:
    delete:
      description: Delete an existing WAN
      operationId: delete-v2.0-api-tenants-tenant_id-wannetworks-wan_network_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Id
        in: path
        name: wan_network_id
        required: true
        schema:
          description: Wan Network Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANNetwork'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SITE_WAN_NETWORK_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an existing WAN (v2.0)
      tags:
      - Network Constructs
    get:
      description: Get an existing WAN
      operationId: get-v2.0-api-tenants-tenant_id-wannetworks-wan_network_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Id
        in: path
        name: wan_network_id
        required: true
        schema:
          description: Wan Network Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANNetwork'
          description: Successful Operation
      summary: Get an existing WAN (v2.0)
      tags:
      - Network Constructs
    put:
      description: Update an existing WAN
      operationId: put-v2.0-api-tenants-tenant_id-wannetworks-wan_network_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Id
        in: path
        name: wan_network_id
        required: true
        schema:
          description: Wan Network Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANNetworkScreen'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANNetwork'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_INPUT
                  - code: EXTRA_PROVIDER_ASNUM
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing WAN (v2.0)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/ipsecprofiles:
    get:
      description: Get IPSECProfileList
      operationId: get-v2.1-api-tenants-tenant_id-ipsecprofiles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/IPSECProfile'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get IPSECProfileList (v2.1)
      tags:
      - Network Constructs
    post:
      description: Create a new IPSEC Profile
      operationId: post-v2.1-api-tenants-tenant_id-ipsecprofiles
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPSECProfileScreen'
        description: Details of the IPSEC profile to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_VALUE
                  - code: IPSECCONFIG_INVALID_ENCODED_AUTH_SECRET
                  - code: IPSECCONFIG_IKEGROUP_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_DELAY
                  - code: IPSECCONFIG_ESPGROUP_REQUIRED
                  - code: IPSECCONFIG_AUTHENTICATION_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_TIMEOUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new IPSEC Profile (v2.1)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/ipsecprofiles/query:
    post:
      description: Queries db for limit number of tenant level ipsec profiles that
        match query params.
      operationId: post-v2.1-api-tenants-tenant_id-ipsecprofiles-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPSECProfileQueryFilter'
        description: Query Details for IPSECProfile
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/IPSECProfileQueryFilter'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_QUERY_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Queries db for limit number of tenant level ipsec profiles that match
        query params. (v2.1)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/ipsecprofiles/{profile_id}:
    delete:
      description: Delete a IPSEC Profile
      operationId: delete-v2.1-api-tenants-tenant_id-ipsecprofiles-profile_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: IPSECProfile Id
        in: path
        name: profile_id
        required: true
        schema:
          description: Profile Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_VALUE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete a IPSEC Profile (v2.1)
      tags:
      - Network Constructs
    get:
      description: Get a IPSECProfile
      operationId: get-v2.1-api-tenants-tenant_id-ipsecprofiles-profile_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: IPSECProfile Id
        in: path
        name: profile_id
        required: true
        schema:
          description: Profile Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
      summary: Get a IPSECProfile (v2.1)
      tags:
      - Network Constructs
    put:
      description: Update a IPSECProfile
      operationId: put-v2.1-api-tenants-tenant_id-ipsecprofiles-profile_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: IPSECProfile Id
        in: path
        name: profile_id
        required: true
        schema:
          description: Profile Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPSECProfileScreen'
        description: Details of the IPSEC profile to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSECProfile'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_VALUE
                  - code: IPSECCONFIG_INVALID_ENCODED_AUTH_SECRET
                  - code: IPSECCONFIG_IKEGROUP_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_DELAY
                  - code: IPSECCONFIG_ESPGROUP_REQUIRED
                  - code: IPSECCONFIG_AUTHENTICATION_REQUIRED
                  - code: IPSECCONFIG_INVALID_DPD_TIMEOUT
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update a IPSECProfile (v2.1)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/waninterfacelabels:
    get:
      description: Get WAN interface labels for a tenant
      operationId: get-v2.1-api-tenants-tenant_id-waninterfacelabels
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelV2N1'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get WAN interface labels for a tenant (v2.1)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/waninterfacelabels/query:
    post:
      description: Query db for WAN interface labels that match query parameters
      operationId: post-v2.1-api-tenants-tenant_id-waninterfacelabels-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelQuery'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query db for WAN interface labels that match query parameters (v2.1)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:
    get:
      description: Get a specific WAN interface label
      operationId: get-v2.1-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabelV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a specific WAN interface label (v2.1)
      tags:
      - Network Constructs
    put:
      description: Update specific WAN interface label
      operationId: put-v2.1-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelScreenV2N1'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabelV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: WAN_INTERFACE_LABEL_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update specific WAN interface label (v2.1)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/wannetworks:
    get:
      description: Get all tenant WAN networks
      operationId: get-v2.1-api-tenants-tenant_id-wannetworks
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANNetworkV2N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get all tenant WAN networks (v2.1)
      tags:
      - Network Constructs
    post:
      description: Create a new WAN
      operationId: post-v2.1-api-tenants-tenant_id-wannetworks
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANNetworkScreenV2N1'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANNetworkV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_INPUT
                  - code: EXTRA_PROVIDER_ASNUM
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new WAN (v2.1)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/wannetworks/query:
    post:
      description: Query db for WAN networks that match query parameters
      operationId: post-v2.1-api-tenants-tenant_id-wannetworks-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANNetworkQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANNetworkQuery'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SITE_WAN_NETWORK_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query db for WAN networks that match query parameters (v2.1)
      tags:
      - Network Constructs
  /v2.1/api/tenants/{tenant_id}/wannetworks/{wan_network_id}:
    delete:
      description: Delete an existing WAN
      operationId: delete-v2.1-api-tenants-tenant_id-wannetworks-wan_network_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Id
        in: path
        name: wan_network_id
        required: true
        schema:
          description: Wan Network Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANNetworkV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: SITE_WAN_NETWORK_EXISTS
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an existing WAN (v2.1)
      tags:
      - Network Constructs
    get:
      description: Get an existing WAN
      operationId: get-v2.1-api-tenants-tenant_id-wannetworks-wan_network_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Id
        in: path
        name: wan_network_id
        required: true
        schema:
          description: Wan Network Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANNetworkV2N1'
          description: Successful Operation
      summary: Get an existing WAN (v2.1)
      tags:
      - Network Constructs
    put:
      description: Update an existing WAN
      operationId: put-v2.1-api-tenants-tenant_id-wannetworks-wan_network_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Network Id
        in: path
        name: wan_network_id
        required: true
        schema:
          description: Wan Network Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANNetworkScreenV2N1'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANNetworkV2N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_INPUT
                  - code: EXTRA_PROVIDER_ASNUM
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing WAN (v2.1)
      tags:
      - Network Constructs
  /v2.2/api/tenants/{tenant_id}/waninterfacelabels:
    get:
      description: Get WAN interface labels for a tenant
      operationId: get-v2.2-api-tenants-tenant_id-waninterfacelabels
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelV2N2'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get WAN interface labels for a tenant (v2.2)
      tags:
      - Network Constructs
  /v2.2/api/tenants/{tenant_id}/waninterfacelabels/query:
    post:
      description: Query db for site WAN interfaces that match query parameters
      operationId: post-v2.2-api-tenants-tenant_id-waninterfacelabels-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelQuery'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query db for site WAN interfaces that match query parameters (v2.2)
      tags:
      - Network Constructs
  /v2.2/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:
    get:
      description: Get a specific WAN interface label
      operationId: get-v2.2-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabelV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a specific WAN interface label (v2.2)
      tags:
      - Network Constructs
    put:
      description: Update specific WAN interface label
      operationId: put-v2.2-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelScreenV2N2'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabelV2N2'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_INTERVAL
                  - code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_FAILURE_COUNT
                  - code: VPNLINK_CONFIG_REQUIRED
                  - code: WAN_INTERFACE_LABEL_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update specific WAN interface label (v2.2)
      tags:
      - Network Constructs
  /v2.3/api/tenants/{tenant_id}/waninterfacelabels:
    get:
      description: Get WAN interface labels for a tenant
      operationId: get-v2.3-api-tenants-tenant_id-waninterfacelabels
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelV2N3'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get WAN interface labels for a tenant (v2.3)
      tags:
      - Network Constructs
  /v2.3/api/tenants/{tenant_id}/waninterfacelabels/query:
    post:
      description: Query db for site WAN interfaces that match query parameters
      operationId: post-v2.3-api-tenants-tenant_id-waninterfacelabels-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelQuery'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query db for site WAN interfaces that match query parameters (v2.3)
      tags:
      - Network Constructs
  /v2.3/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:
    get:
      description: Get a specific WAN interface label
      operationId: get-v2.3-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabelV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a specific WAN interface label (v2.3)
      tags:
      - Network Constructs
    put:
      description: Update specific WAN interface label
      operationId: put-v2.3-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelScreenV2N3'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabelV2N3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_INTERVAL
                  - code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_FAILURE_COUNT
                  - code: VPNLINK_CONFIG_REQUIRED
                  - code: WAN_INTERFACE_LABEL_MISMATCH
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update specific WAN interface label (v2.3)
      tags:
      - Network Constructs
  /v2.4/api/tenants/{tenant_id}/waninterfacelabels:
    get:
      description: Get WAN interface labels for a tenant
      operationId: get-v2.4-api-tenants-tenant_id-waninterfacelabels
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelV2N4'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get WAN interface labels for a tenant (v2.4)
      tags:
      - Network Constructs
  /v2.4/api/tenants/{tenant_id}/waninterfacelabels/query:
    post:
      description: Query db for site WAN interfaces that match query parameters
      operationId: post-v2.4-api-tenants-tenant_id-waninterfacelabels-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceQueryFilterV2N4'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/WANInterfaceLabelQueryFilterV2N4'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query db for site WAN interfaces that match query parameters (v2.4)
      tags:
      - Network Constructs
  /v2.4/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:
    get:
      description: Get a specific WAN interface label
      operationId: get-v2.4-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabelV2N4'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Get a specific WAN interface label (v2.4)
      tags:
      - Network Constructs
    put:
      description: Update specific WAN interface label
      operationId: put-v2.4-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: Label Id
        in: path
        name: wantinterface_label_id
        required: true
        schema:
          description: Wantinterface Label Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANInterfaceLabelScreenV2N4'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANInterfaceLabelV2N4'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: WAN_INTERFACE_LABEL_NOT_FOUND
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_INTERVAL
                  - code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_FAILURE_COUNT
                  - code: VPNLINK_CONFIG_REQUIRED
                  - code: WAN_INTERFACE_LABEL_MISMATCH
                  - code: WANINTERFACE_LABEL_USE_FOR_NON_HUB_PATHS_INVALID
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update specific WAN interface label (v2.4)
      tags:
      - Network Constructs
  /v3.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks:
    get:
      description: Get LAN networks
      operationId: get-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/LANNetworkV3'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get LAN networks (v3.0)
      tags:
      - Network Constructs
    post:
      description: Create a new LAN
      operationId: post-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkScreenV3'
        description: Details of the network to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetworkV3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_INPUT
                  - code: NO_LAN_NET_PREFIX
                  - code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
                  - code: INVALID_IPV4_PREFIX
                  - code: SAME_IPV4_PREFIX
                  - code: INVALID_IPADDRESS
                  - code: DEFAULT_ROUTER_PREFIX_MISMATCH
                  - code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS
                  - code: LAN_NETWORK_ADD_FAILURE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new LAN (v3.0)
      tags:
      - Network Constructs
  /v3.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/query:
    post:
      description: Query LAN networks that match query params
      operationId: post-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks-query
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/LANNetworkV3'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query LAN networks that match query params (v3.0)
      tags:
      - Network Constructs
  /v3.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/{lannetwork_id}:
    delete:
      description: Delete an existing LAN
      operationId: delete-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetworkV3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: LAN_NETWORK_IN_USE
                  - code: LANNETWORK_IS_USED_IN_SECURITY_ZONES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an existing LAN (v3.0)
      tags:
      - Network Constructs
    get:
      description: Get LAN network
      operationId: get-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetworkV3'
          description: Successful Operation
      summary: Get LAN network (v3.0)
      tags:
      - Network Constructs
    put:
      description: Update an existing LAN
      operationId: put-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkScreenV3'
        description: Details of the network to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetworkV3'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: INVALID_JSON_INPUT
                  - code: NO_LAN_NET_PREFIX
                  - code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED
                  - code: INVALID_NETWORK_CONTEXT
                  - code: INVALID_IPV4_PREFIX
                  - code: SAME_IPV4_PREFIX
                  - code: INVALID_IPADDRESS
                  - code: DEFAULT_ROUTER_PREFIX_MISMATCH
                  - code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
                  - code: OVERLAPPING_LAN_NET_PREFIXES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing LAN (v3.0)
      tags:
      - Network Constructs
  /v3.1/api/tenants/{tenant_id}/lannetworks/query:
    post:
      description: Query db for Site LAN networks that match query parameters
      operationId: post-v3.1-api-tenants-tenant_id-lannetworks-query
      parameters:
      - description: Tenant Id
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/LANNetworkQueryFilterResponse'
                      type: array
                  type: object
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: BAD_REQUEST
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Query db for Site LAN networks that match query parameters (v3.1)
      tags:
      - Network Constructs
  /v3.1/api/tenants/{tenant_id}/sites/{site_id}/lannetworks:
    get:
      description: Get LAN networks
      operationId: get-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/LANNetworkV3N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Get LAN networks (v3.1)
      tags:
      - Network Constructs
    post:
      description: Create a new LAN
      operationId: post-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkScreenV3N1'
        description: Details of the network to be created
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetworkV3N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_INPUT
                  - code: NO_LAN_NET_PREFIX
                  - code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED
                  - code: INVALID_NETWORK_CONTEXT
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
                  - code: INVALID_IPV4_PREFIX
                  - code: SAME_IPV4_PREFIX
                  - code: INVALID_IPADDRESS
                  - code: DEFAULT_ROUTER_PREFIX_MISMATCH
                  - code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS
                  - code: LAN_NETWORK_ADD_FAILURE
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new LAN (v3.1)
      tags:
      - Network Constructs
  /v3.1/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/query:
    post:
      description: Query LAN networks that match query params
      operationId: post-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks-query
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListQueryResponse'
                - properties:
                    items:
                      items:
                        $ref: '#/components/schemas/LANNetworkQueryFilterV3N1'
                      type: array
                  type: object
          description: Successful Operation
      summary: Query LAN networks that match query params (v3.1)
      tags:
      - Network Constructs
  /v3.1/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/{lannetwork_id}:
    delete:
      description: Delete an existing LAN
      operationId: delete-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetworkV3N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: LAN_NETWORK_IN_USE
                  - code: LANNETWORK_IS_USED_IN_SECURITY_ZONES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Delete an existing LAN (v3.1)
      tags:
      - Network Constructs
    get:
      description: Get LAN network
      operationId: get-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetworkV3N1'
          description: Successful Operation
      summary: Get LAN network (v3.1)
      tags:
      - Network Constructs
    put:
      description: Update an existing LAN
      operationId: put-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id
      parameters:
      - description: tenant ID
        in: path
        name: tenant_id
        required: true
        schema:
          description: Tenant Id
          type: string
      - description: site ID
        in: path
        name: site_id
        required: true
        schema:
          description: Site Id
          type: string
      - description: LAN network ID
        in: path
        name: lannetwork_id
        required: true
        schema:
          description: Lannetwork Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LANNetworkScreenV3N1'
        description: Details of the network to be updated
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LANNetworkV3N1'
          description: Successful Operation
        '400':
          content:
            application/json:
              example:
                value:
                  _error:
                  - code: INVALID_JSON_EXTRA_ATTRIBUTE
                  - code: INVALID_JSON_COMMON_ATTR_MISMATCH
                  - code: INVALID_JSON_INPUT
                  - code: NO_LAN_NET_PREFIX
                  - code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED
                  - code: INVALID_NETWORK_CONTEXT
                  - code: INVALID_IPV4_PREFIX
                  - code: SAME_IPV4_PREFIX
                  - code: INVALID_IPADDRESS
                  - code: DEFAULT_ROUTER_PREFIX_MISMATCH
                  - code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS
                  - code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE
                  - code: OVERLAPPING_LAN_NET_PREFIXES
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Update an existing LAN (v3.1)
      tags:
      - Network Constructs
servers:
- url: https://api.us.cloudgenix.com
tags:
- name: Network Constructs
