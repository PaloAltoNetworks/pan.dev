name: "Spring Deploy Preview"

on:
  pull_request_target:
    branches: [ master ]

jobs:

  get_branch:
      name: Extract branch name
      id: get_branch
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / -)"

  analyze:
    if: github.repository_owner	== 'csestito'
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    strategy:
      fail-fast: true
      matrix:
        language: [ 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  build:
    name: Build
    needs: analyze
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --prefer-offline

      - name: Build site
        run: yarn build
      
      - uses: actions/upload-artifact@v2
        with:
          name: build-dir
          path: build/

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: build-dir
          path: build/

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - id: 'deploy'
        name: Deploy to App Engine
        uses: google-github-actions/deploy-appengine@v0.8.0
        with:
          deliverables: 'app.yaml'
          promote: false
          version: stage-${{ steps.get_branch.outputs.branch }}

      - id: 'test'
        run: 'curl "${{ steps.deploy.outputs.url }}"'


