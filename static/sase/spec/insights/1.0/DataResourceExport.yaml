components:
  schemas:
    DataResourceQuery:
      description: Data resource query request
      properties:
        addOnFilter:
          allOf:
          - $ref: '#/components/schemas/FilterCondition'
          - description: Add on data Filter Condition. (The existing property will
              be replaced)
        computeDataRowsProcessed:
          description: Flag to indicate total rows processed for query
          type: boolean
        count:
          default: 10000
          description: Maximum number of records
          example: 3000
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        filter:
          allOf:
          - $ref: '#/components/schemas/FilterCondition'
          - description: Filter Condition
        histogram:
          allOf:
          - $ref: '#/components/schemas/HistogramCondition'
          - description: Histogram Condition
        includeRecordNumber:
          description: Flag to indicate add row number to response
          type: boolean
        properties:
          allOf:
          - $ref: '#/components/schemas/ListQueryProperty'
          - description: Resource properties
            example:
            - property: property1
            - function: sum
              property: property2
              sort:
                order: desc
                sequence: 1
            - alias: average_property3
              function: avg
              property: property3
      required:
      - properties
      - filter
      type: object
    DataResponse:
      description: Resource Request response
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/ListMapStringObject'
          - description: Response Data
            example:
            - average_property3: 10.75
              property1: value1
              property2: 10
            - average_property3: 20.99
              property1: value2
              property2: 25
        header:
          allOf:
          - $ref: '#/components/schemas/MapStringObject'
          - description: Response header
            example:
              createdAt: Fri Jan  1 00:00:00 PST 2021
              name: Response Name
              requestId: 123e4567-e89b-12d3-a456-426614174000
      required:
      - header
      - data
      type: object
    FilterCondition:
      properties:
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - default: AND
            description: Query operator
            example: AND
        rules:
          $ref: '#/components/schemas/ListQueryRule'
      type: object
    Function:
      enum:
      - ceil
      - floor
      - round
      - trunc
      type: string
    HistogramCondition:
      properties:
        alias:
          description: Property Alias
          example: property1_alias
          type: string
        enableEmptyInterval:
          description: Enable filling empty record for intervals with no data
          example: true
          type: boolean
        property:
          description: Property
          example: property1
          type: string
        range:
          allOf:
          - $ref: '#/components/schemas/Range'
          - description: Histogram Range
            example: hour
        sort:
          allOf:
          - $ref: '#/components/schemas/SortCondition'
          - description: Sort Condition (optional)
            example:
              order: desc
              sequence: 1
        value:
          description: Histogram range value (only 1 is supported)
          example: 1
          format: int32
          type: integer
      required:
      - property
      - range
      type: object
    ListMapStringObject:
      items:
        $ref: '#/components/schemas/MapStringObject'
      type: array
    ListObject:
      items: {}
      type: array
    ListQueryProperty:
      items:
        $ref: '#/components/schemas/QueryProperty'
      type: array
    ListQueryRule:
      items:
        $ref: '#/components/schemas/QueryRule'
      type: array
    ListString:
      items:
        type: string
      type: array
    MapStringObject:
      properties:
        empty:
          type: boolean
      type: object
    NumberFormat:
      properties:
        function:
          $ref: '#/components/schemas/Function'
        value:
          format: int32
          type: integer
      type: object
    Operator:
      enum:
      - AND
      - OR
      type: string
    Order:
      enum:
      - asc
      - desc
      type: string
    QueryProperty:
      properties:
        alias:
          description: Property Alias (Name to include in response)
          example: my_property1_name
          type: string
        format:
          allOf:
          - $ref: '#/components/schemas/NumberFormat'
          - description: Number Format function (optional)
            example:
              function: round
              value: 1
        function:
          allOf:
          - $ref: '#/components/schemas/Function'
          - description: Aggregation function (Applicable only to metric properties)
            example: count
        property:
          description: Property
          example: property1
          type: string
        sort:
          allOf:
          - $ref: '#/components/schemas/SortCondition'
          - description: Sort Condition (optional)
            example:
              order: desc
              sequence: 1
      required:
      - property
      type: object
    QueryRule:
      properties:
        escapeValue:
          description: Enable character escaping for value
          example: true
          type: boolean
        format:
          allOf:
          - $ref: '#/components/schemas/NumberFormat'
          - description: Number Format function (optional)
            example:
              function: round
              value: 1
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: Operator
            example: in
        property:
          description: Resource Property
          example: property1
          type: string
        subQuery:
          allOf:
          - $ref: '#/components/schemas/SubQuery'
          - description: Subquery (optional)
            example:
              type: local
              value: sub_query1
        values:
          allOf:
          - $ref: '#/components/schemas/ListObject'
          - description: Operator
            example:
            - value1
            - value2
      required:
      - property
      - operator
      - values
      - escapeValue
      type: object
    Range:
      enum:
      - day
      - hour
      - minute
      - month
      - week
      - year
      type: string
    SortCondition:
      properties:
        order:
          $ref: '#/components/schemas/Order'
        sequence:
          format: int32
          type: integer
      type: object
    SubQuery:
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/SubQueryType'
      type: object
    SubQueryType:
      enum:
      - local
      - pre_defined
      type: string
info:
  contact: {}
  description: 'Export data resources.

    '
  title: Data Resource Export
  version: '1.0'
openapi: 3.0.3
paths:
  /api/sase/v1.0/resource/tenant/{tenant_id}/download:
    post:
      description: 'Download a CSV file containing the results of a request for custom
        resources.

        The query for this information is created using Export Custom Resource.

        '
      operationId: post-api-sase-v1.0-resource-tenant-tenant_id-download
      parameters:
      - description: Unique tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          type: string
      - description: Sub-tenant ID. This parameter is required only if a sub-tenant
          is configured.
        in: header
        name: Prisma-SubTenant
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: '


          The JSON request object

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: List of data objects
        '400':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Resource property 'property1' is not valid
                  errorCode: DATA10002
                  message: Invalid Resource property name
                  values:
                  - property1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Invalid Resource Query request responses


            1. Invalid Resource property name (Error code: DATA10002)

            2. Invalid Resource request parameter (Error code: DATA10003)

            3. The resource or property is not licensed (Error code: DATA10004)


            '
        '403':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Permission Denied
                  errorCode: REST10003
                  message: Permission Denied
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Permission response


            1. Permission Denied (Error code: REST10003)


            '
        '404':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Resource not found
                  errorCode: REST10002
                  message: Resource not found
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Resource not available response


            1. Resource not found (Error code: REST10002)


            '
        '500':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Failed to process request
                  errorCode: REST10001
                  message: Unexpected server error
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Unexpected server error response


            1. Unexpected server error (Error code: REST10001)


            '
      summary: Download custom resource
      tags:
      - DataResourceExport
  /api/sase/v1.0/resource/tenant/{tenant_id}/download/status:
    post:
      description: 'Retrieve the status of a custom resource request job.

        '
      operationId: post-api-sase-v1.0-resource-tenant-tenant_id-download-status
      parameters:
      - description: Unique tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          type: string
      - description: Sub-tenant ID. This parameter is required only if a sub-tenant
          is configured.
        in: header
        name: Prisma-SubTenant
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: '


          The JSON request object

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: List of data objects
        '400':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Resource property 'property1' is not valid
                  errorCode: DATA10002
                  message: Invalid Resource property name
                  values:
                  - property1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Invalid Resource Query request responses


            1. Invalid Resource property name (Error code: DATA10002)

            2. Invalid Resource request parameter (Error code: DATA10003)

            3. The resource or property is not licensed (Error code: DATA10004)


            '
        '403':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Permission Denied
                  errorCode: REST10003
                  message: Permission Denied
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Permission response


            1. Permission Denied (Error code: REST10003)


            '
        '404':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Resource not found
                  errorCode: REST10002
                  message: Resource not found
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Resource not available response


            1. Resource not found (Error code: REST10002)


            '
        '500':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Failed to process request
                  errorCode: REST10001
                  message: Unexpected server error
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Unexpected server error response


            1. Unexpected server error (Error code: REST10001)


            '
      summary: Custom resource request status
      tags:
      - DataResourceExport
  /api/sase/v1.0/resource/tenant/{tenant_id}/export/schedule/custom/query/{feature_name}/{resource_name}:
    post:
      description: "Creates a job that retrieves custom resource information. The\
        \ results of this job will differ \ndepending on the feature and resource\
        \ name that you provide. \nThe following feature/resource name combinations\
        \ are supported:\n\n* mobileusers/mu_concurrent_connected_status\n\n  Provides\
        \ data on connected mobile users.\n\n* locations/location_mobilegateways_status\n\
        \n  Provides data on mobile users service availability.\n"
      operationId: post-api-sase-v1.0-resource-tenant-tenant_id-export-schedule-custom-query-feature_name-resource_name
      parameters:
      - description: Name of the custom feature for which you want to select information.
        in: path
        name: feature_name
        required: true
        schema:
          type: string
      - description: Name of the custom resource for which you want to select information.
        in: path
        name: resource_name
        required: true
        schema:
          type: string
      - description: Unique tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          type: string
      - description: Sub-tenant ID. This parameter is required only if a sub-tenant
          is configured.
        in: header
        name: Prisma-SubTenant
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataResourceQuery'
        description: '


          The JSON request object

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: List of data objects
        '400':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Resource property 'property1' is not valid
                  errorCode: DATA10002
                  message: Invalid Resource property name
                  values:
                  - property1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Invalid Resource Query request responses


            1. Invalid Resource property name (Error code: DATA10002)

            2. Invalid Resource request parameter (Error code: DATA10003)

            3. The resource or property is not licensed (Error code: DATA10004)


            '
        '403':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Permission Denied
                  errorCode: REST10003
                  message: Permission Denied
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Permission response


            1. Permission Denied (Error code: REST10003)


            '
        '404':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Resource not found
                  errorCode: REST10002
                  message: Resource not found
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Resource not available response


            1. Resource not found (Error code: REST10002)


            '
        '500':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Failed to process request
                  errorCode: REST10001
                  message: Unexpected server error
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Unexpected server error response


            1. Unexpected server error (Error code: REST10001)


            '
      summary: Export custom resource
      tags:
      - DataResourceExport
  /api/sase/v1.0/resource/tenant/{tenant_id}/export/schedule/query/{resource_name}:
    post:
      description: 'Export a general resource. The result of this job is a CSV file
        that identifies all of the resource''s properties.

        '
      operationId: post-api-sase-v1.0-resource-tenant-tenant_id-export-schedule-query-resource_name
      parameters:
      - description: Name of the custom resource for which you want to select information.
        in: path
        name: resource_name
        required: true
        schema:
          type: string
      - description: Unique tenant ID.
        in: path
        name: tenant_id
        required: true
        schema:
          type: string
      - description: Sub-tenant ID. This parameter is required only if a sub-tenant
          is configured.
        in: header
        name: Prisma-SubTenant
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataResourceQuery'
        description: 'The JSON object used to query the resource. The query consists
          of four parts, show below.


          1. Properties - Data fields to include in the query output.

          2. Query - Filter conditions to apply to the query.

          3. Sort - Sort order for the the data.

          4. Count - Maximum number of records to retrieve.

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Content as attachment
        '400':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Resource property 'property1' is not valid
                  errorCode: DATA10002
                  message: Invalid Resource property name
                  values:
                  - property1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Invalid Resource Query request responses


            1. Invalid Resource property name (Error code: DATA10002)

            2. Invalid Resource request parameter (Error code: DATA10003)

            3. The resource or property is not licensed (Error code: DATA10004)


            '
        '403':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Permission Denied
                  errorCode: REST10003
                  message: Permission Denied
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Permission response


            1. Permission Denied (Error code: REST10003)


            '
        '404':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Resource not found
                  errorCode: REST10002
                  message: Resource not found
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Resource not available response


            1. Resource not found (Error code: REST10002)


            '
        '500':
          content:
            application/json:
              schema:
                description: Error Response
                example:
                  details: Failed to process request
                  errorCode: REST10001
                  message: Unexpected server error
                  values:
                  - value1
                properties:
                  details:
                    description: Error details
                    example: Input value 'property1' is not valid
                    type: string
                  errorCode:
                    description: Error code
                    example: REST10001
                    type: string
                  message:
                    description: Error Message
                    example: Invalid input
                    type: string
                  values:
                    allOf:
                    - $ref: '#/components/schemas/ListString'
                    - description: Values in error details. Used to construct error
                        in different language
                      example:
                      - property1
                required:
                - errorCode
                - message
                - details
                - values
                type: object
          description: '

            Unexpected server error response


            1. Unexpected server error (Error code: REST10001)


            '
      summary: Export general resource
      tags:
      - DataResourceExport
servers:
- url: https://pa-us.api.prismaaccess.com
tags:
- name: DataResourceExport
