components:
  schemas:
    role_create:
      title: Root Type for role
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: 'The role name.

            '
        label:
          type: string
          description: 'The text displayed in the user interface for this role.

            '
        permissions:
          type: array
          items:
            type: string
          description: 'The permissions granted to this role.

            '
      example:
        name: superuser
        label: Superuser
        description: Full access to all functions.
        permissions:
        - prisma_access.config.get
        - iam.service_account.create
        - iam.access_policy.create
        - '...'
    _pagination:
      required:
      - count
      - items
      type: object
      properties:
        count:
          description: Total count of the items
          type: integer
    role:
      title: Root Type for role
      type: object
      properties:
        name:
          type: string
          description: 'The role name.

            '
        label:
          type: string
          description: 'The text displayed in the user interface for this role.

            '
        permissions:
          type: array
          items:
            type: string
          description: 'The permissions granted to this role.

            '
      example:
        name: super_user
        label: Superuser
        permissions:
        - prisma_access.config.get
        - iam.service_account.create
        - iam.access_policy.create
  responses:
    roles_list:
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/_pagination'
            - example:
                count: 1
                items:
                - name: superuser
                  label: Superuser
                  description: Full access to all functions.
                  permissions:
                  - prisma_access.config.get
                  - iam.service_account.create
                  - iam.access_policy.create
                  - '...'
            - type: object
              properties:
                items:
                  type: array
                  items:
                    allOf:
                    - $ref: '#/components/schemas/role'
      description: Successful response.
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
openapi: 3.0.2
paths:
  /iam/v1/roles:
    get:
      tags:
      - Roles
      responses:
        '200':
          $ref: '#/components/responses/roles_list'
      operationId: getroles
      summary: List all roles
      description: 'Retrieve a list of all roles.

        '
      security:
      - Bearer: []
  /iam/v1/roles/{name}:
    get:
      tags:
      - Roles
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role_create'
          description: Successful response - returns a single `role`.
      operationId: getrole
      summary: List a specific role
      description: 'Get a specified role.

        '
      parameters:
      - name: name
        description: Role Name
        schema:
          type: string
        in: path
        required: true
      security:
      - Bearer: []
info:
  title: Roles
  version: '1.0'
  description: 'Roles description.

    '
  contact: {}
tags:
- name: Roles
