parameters:
- description: The customer ID to which the API call is directed
  in: query
  name: customerid
  required: true
  schema:
    type: string
- description: A field that specifies the alert type as policy_alert
  in: query
  name: type
  required: false
  schema:
    type: string
- description: A filter to retrieve only active alerts (resolved=no, the default) or resolved alerts (resolved=yes)
  in: query
  name: resolved
  required: false
  schema:
    type: string
- description: In addition to the <b>pagelength</b> parameter, offset gets items on subsequent pages. For example, if the page length of your first request is 100, you get the first 100 alerts. To get the next 100, add offset=100 to your second request. This skips the first 100 alerts and gets the next 100 starting from 101.
  in: query
  name: offset
  required: false
  schema:
    type: integer
- description: The number of items in one response; that is, in one page. The default page length for alerts is 1000 and the maximum is 1000. Setting a shorter length improves response times.
  in: query
  name: pagelength
  required: false
  schema:
    type: integer
- description: The start of a time range for alerts to retrieve. For example, <b>stime=2021-10-6T07:00Z</b>. (Itâ€™s unnecessary to set <b>etime=now</b> or <b>etime</b>=\<time\> because it is always treated as <b>now</b>.)
  in: query
  name: stime
  required: false
- description: "The direction in which returned alerts are organized: ascending order <b>asc</b> (oldest to newest) or descending order <b>desc</b> (newest to oldest, the default)"
  in: query
  name: sortdirection
  required: false
  schema:
    type: string
- description: The device attribute to use for sorting. <b>date</b> and <b>severityNumber</b> are supported as the following value and the value types are <b>string</b> and <b>integer</b> respectively. The default way to sort alerts is by date in descending order.
  in: query
  name: sortfield
  required: false
  schema:
    type: string
- description: Optional field setting the start of a time range for retrieving alerts that have been created in DB or updated.
  in: query
  name: updatedCreatedAfter
  required: false
  schema:
    type: string
    format: date-time
responses:
  '200':
    description: Successful Response (We only show some important fields here.)
    content:
      application/json:
        schema:
          $ref: '../../components/schemas.yaml#/schemas/IoTSecurityAlertResponse'
        examples:
          securityAlertsResponseExample:
            $ref: '../../components/examples.yaml#/examples/SecurityAlertResponseExample'
  '4XX':
    description: Client Error Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas.yaml#/schemas/ErrorResponse'
        examples:
          Bad Request:
            $ref: '../../components/examples.yaml#/examples/BadRequestResponseExample'
          Forbidden access:
            $ref: '../../components/examples.yaml#/examples/UnauthorizedResponseExample'
          Too many requests:
            $ref: '../../components/examples.yaml#/examples/RateLimitResponseExample'
  '5XX':
    description: Server Error Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas.yaml#/schemas/ErrorResponse'
        examples:
          securityAlertsResponseExample:
            $ref: '../../components/examples.yaml#/examples/ServerErrorResponseExample'