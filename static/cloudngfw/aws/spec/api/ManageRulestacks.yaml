components:
  schemas:
    CreateRuleStackRequest:
      additionalProperties: false
      properties:
        RuleStackEntry: {$ref: '#/components/schemas/CreateRuleStackRequest.RuleStackCreateType',
          description: 'Describe whether the rulestack is local or global.

            '}
        RuleStackName: {description: 'Name of the rulestack.

            ', maxLength: 128, minLength: 1, pattern: '^[a-zA-Z0-9-]+$', title: Rulestackname,
          type: string}
      required: [RuleStackName]
      title: CreateRuleStackRequest
      type: object
    CreateRuleStackRequest.RuleStackCreateType:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', maxLength: 12, pattern: '^$|^[0-9]+$', title: Accountid, type: string}
        Description: {description: 'Description of the rulestack.

            ', maxLength: 512, title: Description, type: string}
        Profiles: {$ref: '#/components/schemas/CreateRuleStackRequest.RuleStackProfiles',
          description: 'Rulestack profile.

            '}
        Scope:
          description: 'The scope of the rulestack.

            '
          enum: [Global, Local]
          title: Scope
          type: string
      title: RuleStackCreateType
      type: object
    CreateRuleStackRequest.RuleStackProfiles:
      additionalProperties: false
      properties:
        AntiSpywareProfile:
          default: BestPractice
          description: 'Anti-spyware security profile.

            '
          enum: [custom, BestPractice]
          title: Antispywareprofile
          type: string
        AntiVirusProfile:
          default: BestPractice
          description: 'Anti-virus security profile.

            '
          enum: [custom, BestPractice]
          title: Antivirusprofile
          type: string
        FileBlockingProfile:
          default: BestPractice
          description: 'File blocking security profile.

            '
          enum: [custom, BestPractice]
          title: Fileblockingprofile
          type: string
        OutboundTrustCertificate: {description: 'Outbound trust certificate profile.

            ', title: Outboundtrustcertificate, type: string}
        OutboundUnTrustCertificate: {description: 'Outbound untrust certificate profile.

            ', title: Outbounduntrustcertificate, type: string}
        URLFilteringProfile:
          default: None
          description: 'URL filtering security profile.

            '
          enum: [custom, BestPractice, None]
          title: Urlfilteringprofile
          type: string
        VulnerabilityProfile:
          default: BestPractice
          description: 'Vulnerability security profile.

            '
          enum: [custom, BestPractice]
          title: Vulnerabilityprofile
          type: string
      title: RuleStackProfiles
      type: object
    CreateRuleStackResponse:
      additionalProperties: false
      properties:
        Response: {$ref: '#/components/schemas/CreateRuleStackResponse.ResponseData'}
        ResponseStatus: {$ref: '#/components/schemas/CreateRuleStackResponse.Result'}
      title: CreateRuleStackResponse
      type: object
    CreateRuleStackResponse.ResponseData:
      additionalProperties: false
      properties:
        RuleStackEntry: {$ref: '#/components/schemas/CreateRuleStackResponse.RuleStack',
          description: 'Describe whether the rulestack is local or global.

            '}
        RuleStackName: {description: 'Name of the rulestack.

            ', title: Rulestackname, type: string}
      title: ResponseData
      type: object
    CreateRuleStackResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: "Default value of a successful response\
            \ is 0. Any other number indicates an error code.  \n\n400\u2014HTTP bad\
            \ request\n* InvalidOperationException\u2014Operation failed because it\
            \ is not valid. For example, when you delete an NGFW or rulestack in use.\n\
            * InvalidRequestException\u2014Operation failed due to invalid request.\
            \ For example, unsupported parameter name or value in the request.\n*\
            \ LimitExceededException\u2014Operation failed due to violation in limit\
            \ settings.\n* ThrottlingException\u2014Operation failed due to throttling\
            \ limitations.   \n\n500\u2014Bad request \n* InternalServerError\u2014\
            Your request is valid but Cloud NGFW could not perform the operation due\
            \ to a system issue.\n* InsufficientCapacityException\u2014AWS currently\
            \ does not have enough capacity to fulfill your request.\n", title: Errorcode,
          type: integer}
        Reason: {description: 'The error description.

            ', title: Reason, type: string}
      title: Result
      type: object
    CreateRuleStackResponse.RuleStack:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', maxLength: 12, pattern: '^$|^[0-9]+$', title: Accountid, type: string}
        Description: {description: 'Description of the rulestack.

            ', maxLength: 512, title: Description, type: string}
        Profiles: {$ref: '#/components/schemas/CreateRuleStackResponse.RuleStackProfiles',
          description: 'Rulestack profile.

            '}
        Scope:
          description: 'The scope of the rulestack.

            '
          enum: [Global, Local]
          title: Scope
          type: string
        UpdateToken: {title: Updatetoken, type: string}
      title: RuleStack
      type: object
    CreateRuleStackResponse.RuleStackProfiles:
      additionalProperties: false
      properties:
        AntiSpywareProfile:
          default: BestPractice
          description: 'Anti-spyware security profile.

            '
          enum: [custom, BestPractice]
          title: Antispywareprofile
          type: string
        AntiVirusProfile:
          default: BestPractice
          description: 'Anti-virus security profile.

            '
          enum: [custom, BestPractice]
          title: Antivirusprofile
          type: string
        FileBlockingProfile:
          default: BestPractice
          description: 'File blocking security profile.

            '
          enum: [custom, BestPractice]
          title: Fileblockingprofile
          type: string
        OutboundTrustCertificate: {description: 'Outbound trust certificate profile.

            ', title: Outboundtrustcertificate, type: string}
        OutboundUnTrustCertificate: {description: 'Outbound untrust certificate profile.

            ', title: Outbounduntrustcertificate, type: string}
        URLFilteringProfile:
          default: None
          description: 'URL filtering security profile.

            '
          enum: [custom, BestPractice, None]
          title: Urlfilteringprofile
          type: string
        VulnerabilityProfile:
          default: BestPractice
          description: 'Vulnerability security profile.

            '
          enum: [custom, BestPractice]
          title: Vulnerabilityprofile
          type: string
      title: RuleStackProfiles
      type: object
    DeleteRuleStackRequest:
      additionalProperties: false
      properties: {}
      title: DeleteRuleStackRequest
      type: object
    DeleteRuleStackResponse:
      additionalProperties: false
      properties:
        Response: {$ref: '#/components/schemas/DeleteRuleStackResponse.ResponseData'}
        ResponseStatus: {$ref: '#/components/schemas/DeleteRuleStackResponse.Result'}
      title: DeleteRuleStackResponse
      type: object
    DeleteRuleStackResponse.ResponseData:
      additionalProperties: false
      properties:
        RuleStackEntry: {$ref: '#/components/schemas/DeleteRuleStackResponse.RuleStackCreateType',
          description: 'Describe whether the rulestack is local or global.

            '}
        RuleStackName: {description: 'Name of the rulestack.

            ', title: Rulestackname, type: string}
      title: ResponseData
      type: object
    DeleteRuleStackResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: "Default value of a successful response\
            \ is 0. Any other number indicates an error code.  \n\n400\u2014HTTP bad\
            \ request\n* InvalidOperationException\u2014Operation failed because it\
            \ is not valid. For example, when you delete an NGFW or rulestack in use.\n\
            * InvalidRequestException\u2014Operation failed due to invalid request.\
            \ For example, unsupported parameter name or value in the request.\n*\
            \ LimitExceededException\u2014Operation failed due to violation in limit\
            \ settings.\n* ThrottlingException\u2014Operation failed due to throttling\
            \ limitations.   \n\n500\u2014Bad request \n* InternalServerError\u2014\
            Your request is valid but Cloud NGFW could not perform the operation due\
            \ to a system issue.\n* InsufficientCapacityException\u2014AWS currently\
            \ does not have enough capacity to fulfill your request.\n", title: Errorcode,
          type: integer}
        Reason: {description: 'The error description.

            ', title: Reason, type: string}
      title: Result
      type: object
    DeleteRuleStackResponse.RuleStackCreateType:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', maxLength: 12, pattern: '^$|^[0-9]+$', title: Accountid, type: string}
        Description: {description: 'Description of the rulestack.

            ', maxLength: 512, title: Description, type: string}
        Profiles: {$ref: '#/components/schemas/DeleteRuleStackResponse.RuleStackProfiles',
          description: 'Rulestack profile.

            '}
        Scope:
          description: 'The scope of the rulestack.

            '
          enum: [Global, Local]
          title: Scope
          type: string
      title: RuleStackCreateType
      type: object
    DeleteRuleStackResponse.RuleStackProfiles:
      additionalProperties: false
      properties:
        AntiSpywareProfile:
          default: BestPractice
          description: 'Anti-spyware security profile.

            '
          enum: [custom, BestPractice]
          title: Antispywareprofile
          type: string
        AntiVirusProfile:
          default: BestPractice
          description: 'Anti-virus security profile.

            '
          enum: [custom, BestPractice]
          title: Antivirusprofile
          type: string
        FileBlockingProfile:
          default: BestPractice
          description: 'File blocking security profile.

            '
          enum: [custom, BestPractice]
          title: Fileblockingprofile
          type: string
        OutboundTrustCertificate: {description: 'Outbound trust certificate profile.

            ', title: Outboundtrustcertificate, type: string}
        OutboundUnTrustCertificate: {description: 'Outbound untrust certificate profile.

            ', title: Outbounduntrustcertificate, type: string}
        URLFilteringProfile:
          default: None
          description: 'URL filtering security profile.

            '
          enum: [custom, BestPractice, None]
          title: Urlfilteringprofile
          type: string
        VulnerabilityProfile:
          default: BestPractice
          description: 'Vulnerability security profile.

            '
          enum: [custom, BestPractice]
          title: Vulnerabilityprofile
          type: string
      title: RuleStackProfiles
      type: object
    DescribeRuleStackRequest:
      additionalProperties: false
      properties:
        Candidate: {default: true, description: 'Rulestack candidate.

            ', title: Candidate, type: boolean}
        MaxResults: {description: 'The maximum number of rulestacks that you want
            NGFW to return for this request.

            ', exclusiveMaximum: 101, exclusiveMinimum: 0, title: Maxresults, type: integer}
        Running: {default: false, description: 'Rulestacks in run state.

            ', title: Running, type: boolean}
      title: DescribeRuleStackRequest
      type: object
    DescribeRuleStackResponse:
      additionalProperties: false
      properties:
        Response: {$ref: '#/components/schemas/DescribeRuleStackResponse.ResponseData'}
        ResponseStatus: {$ref: '#/components/schemas/DescribeRuleStackResponse.Result'}
      title: DescribeRuleStackResponse
      type: object
    DescribeRuleStackResponse.ResponseData:
      additionalProperties: false
      properties:
        RuleStackCandidate: {$ref: '#/components/schemas/DescribeRuleStackResponse.RuleStack',
          description: 'Rulestack candidate.

            '}
        RuleStackName: {description: 'Name of the rulestack.

            ', title: Rulestackname, type: string}
        RuleStackRunning: {$ref: '#/components/schemas/DescribeRuleStackResponse.RuleStack',
          description: 'Rulestacks in run state.

            '}
        RuleStackState: {description: 'State of rulestack.

            ', title: Rulestackstate, type: string}
        Tags:
          description: 'The tags associated with the rulestack.

            '
          items: {$ref: '#/components/schemas/DescribeRuleStackResponse.TagEntry'}
          title: Tags
          type: array
      title: ResponseData
      type: object
    DescribeRuleStackResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: "Default value of a successful response\
            \ is 0. Any other number indicates an error code.  \n\n400\u2014HTTP bad\
            \ request\n* InvalidRequestException\u2014Operation failed due to invalid\
            \ request. For example, unsupported parameter name or value in the request.\n\
            * LimitExceededException\u2014Operation failed due to violation in limit\
            \ settings.\n* ThrottlingException\u2014Operation failed due to throttling\
            \ limitations.   \n\n500\u2014Bad request \n* InternalServerError\u2014\
            Your request is valid but Cloud NGFW could not perform the operation due\
            \ to a system issue.\n", title: Errorcode, type: integer}
        Reason: {description: 'The error description.

            ', title: Reason, type: string}
      title: Result
      type: object
    DescribeRuleStackResponse.RuleStack:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', maxLength: 12, pattern: '^$|^[0-9]+$', title: Accountid, type: string}
        Description: {description: 'Description of the rulestack.

            ', maxLength: 512, title: Description, type: string}
        Profiles: {$ref: '#/components/schemas/DescribeRuleStackResponse.RuleStackProfiles',
          description: 'Rulestack profile.

            '}
        Scope:
          description: 'The scope of the rulestack.

            '
          enum: [Global, Local]
          title: Scope
          type: string
        UpdateToken: {description: 'Refresh token

            ', title: Updatetoken, type: string}
      title: RuleStack
      type: object
    DescribeRuleStackResponse.RuleStackProfiles:
      additionalProperties: false
      properties:
        AntiSpywareProfile:
          default: BestPractice
          description: 'Anti-spyware security profile.

            '
          enum: [custom, BestPractice]
          title: Antispywareprofile
          type: string
        AntiVirusProfile:
          default: BestPractice
          description: 'Anti-virus security profile.

            '
          enum: [custom, BestPractice]
          title: Antivirusprofile
          type: string
        FileBlockingProfile:
          default: BestPractice
          description: 'File blocking security profile.

            '
          enum: [custom, BestPractice]
          title: Fileblockingprofile
          type: string
        OutboundTrustCertificate: {description: 'Outbound trust certificate profile.

            ', title: Outboundtrustcertificate, type: string}
        OutboundUnTrustCertificate: {description: 'Outbound untrust certificate profile.

            ', title: Outbounduntrustcertificate, type: string}
        URLFilteringProfile:
          default: None
          description: 'URL filtering security profile.

            '
          enum: [custom, BestPractice, None]
          title: Urlfilteringprofile
          type: string
        VulnerabilityProfile:
          default: BestPractice
          description: 'Vulnerability security profile.

            '
          enum: [custom, BestPractice]
          title: Vulnerabilityprofile
          type: string
      title: RuleStackProfiles
      type: object
    DescribeRuleStackResponse.TagEntry:
      additionalProperties: false
      properties:
        Key: {description: 'A unique identifier in the key-value pair. The constant
            that defines the data set.

            .

            ', maxLength: 128, minLength: 1, pattern: ^.*$, title: Key, type: string}
        Value: {description: 'The variable that belongs to the data set.

            ', maxLength: 256, minLength: 1, pattern: ^.*$, title: Value, type: string}
      required: [Key, Value]
      title: TagEntry
      type: object
    ListRuleStacksRequest:
      additionalProperties: false
      properties:
        Candidate: {default: true, description: 'Rulestack candidate.

            ', title: Candidate, type: boolean}
        MaxResults: {default: 1024, description: 'The maximum number of rulestacks
            that you want NGFW to return for this request.

            ', maximum: 1024, minimum: 1, title: Maxresults, type: integer}
        NextToken: {description: 'If the number of rulestacks available for retrieval
            exceeds the maximum you requested, NGFW returns a NextToken value in response.
            To retrieve the next batch of rulestacks, use this token in your next
            request.

            ', title: Nexttoken, type: string}
        Running: {default: false, description: 'Rulestacks in run state.

            ', title: Running, type: boolean}
        Scope:
          default: All
          description: 'The scope of the rulestack.

            '
          enum: [Global, Local, All]
          title: Scope
          type: string
        TagKey: {description: 'A unique identifier in the key-value pair. The constant
            that defines the data set.

            ', title: Tagkey, type: string}
        TagValue: {description: 'The variable that belongs to the data set.

            ', title: Tagvalue, type: string}
        Uncommitted: {default: false, description: 'Uncommitted rulestacks.

            ', title: Uncommitted, type: boolean}
      title: ListRuleStacksRequest
      type: object
    ListRuleStacksResponse:
      additionalProperties: false
      properties:
        Response: {$ref: '#/components/schemas/ListRuleStacksResponse.ResponseData'}
        ResponseStatus: {$ref: '#/components/schemas/ListRuleStacksResponse.Result'}
      title: ListRuleStacksResponse
      type: object
    ListRuleStacksResponse.ResponseData:
      additionalProperties: false
      properties:
        NextToken: {description: 'If the number of rulestacks available for retrieval
            exceeds the maximum you requested, NGFW returns a NextToken value in response.
            To retrieve the next batch of rulestacks, use this token in your next
            request.

            ', title: Nexttoken, type: string}
        RuleStackCandidate:
          description: 'Rulestack candidate.

            '
          items: {type: string}
          title: Rulestackcandidate
          type: array
        RuleStackRunning:
          description: 'Rulestacks in run state.

            '
          items: {type: string}
          title: Rulestackrunning
          type: array
        RuleStackUncommitted:
          description: 'Uncommitted rulestacks.

            '
          items: {$ref: '#/components/schemas/ListRuleStacksResponse.RuleStackOperation'}
          title: Rulestackuncommitted
          type: array
      title: ResponseData
      type: object
    ListRuleStacksResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: "Default value of a successful response\
            \ is 0. Any other number indicates an error code.  \n\n400\u2014HTTP bad\
            \ request\n* InvalidOperationException\u2014Operation failed because it\
            \ is not valid. For example, when you delete an NGFW or rulestack in use.\n\
            * InvalidRequestException\u2014Operation failed due to invalid request.\
            \ For example, unsupported parameter name or value in the request.\n*\
            \ LimitExceededException\u2014Operation failed due to violation in limit\
            \ settings.\n* ThrottlingException\u2014Operation failed due to throttling\
            \ limitations.   \n\n500\u2014Bad request \n* InternalServerError\u2014\
            Your request is valid but Cloud NGFW could not perform the operation due\
            \ to a system issue.\n* InsufficientCapacityException\u2014AWS currently\
            \ does not have enough capacity to fulfill your request.\n", title: Errorcode,
          type: integer}
        Reason: {description: 'The error description.

            ', title: Reason, type: string}
      title: Result
      type: object
    ListRuleStacksResponse.RuleStackOperation:
      additionalProperties: false
      properties:
        Operation:
          description: 'Rulestacks operation.

            '
          enum: [add, delete, update]
          title: Operation
          type: string
        RuleStackName: {description: 'Name of the rulestack.

            ', title: Rulestackname, type: string}
      required: [RuleStackName]
      title: RuleStackOperation
      type: object
    UpdateRuleStackRequest:
      additionalProperties: false
      properties:
        RuleStackEntry: {$ref: '#/components/schemas/UpdateRuleStackRequest.RuleStack',
          description: 'Scope of the rulestack.

            '}
      title: UpdateRuleStackRequest
      type: object
    UpdateRuleStackRequest.RuleStack:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', maxLength: 12, pattern: '^$|^[0-9]+$', title: Accountid, type: string}
        Description: {description: 'Description of the rulestack.

            ', maxLength: 512, title: Description, type: string}
        Profiles: {$ref: '#/components/schemas/UpdateRuleStackRequest.RuleStackProfiles',
          description: 'Rulestack profile.

            '}
        Scope:
          description: 'The scope of the rulestack.

            '
          enum: [Global, Local]
          title: Scope
          type: string
        UpdateToken: {description: 'Refresh token

            ', title: Updatetoken, type: string}
      title: RuleStack
      type: object
    UpdateRuleStackRequest.RuleStackProfiles:
      additionalProperties: false
      properties:
        AntiSpywareProfile:
          default: BestPractice
          description: 'Anti-spyware security profile.

            '
          enum: [custom, BestPractice]
          title: Antispywareprofile
          type: string
        AntiVirusProfile:
          default: BestPractice
          description: 'Anti-virus security profile.

            '
          enum: [custom, BestPractice]
          title: Antivirusprofile
          type: string
        FileBlockingProfile:
          default: BestPractice
          description: 'File blocking security profile.

            '
          enum: [custom, BestPractice]
          title: Fileblockingprofile
          type: string
        OutboundTrustCertificate: {description: 'Outbound trust certificate profile.

            ', title: Outboundtrustcertificate, type: string}
        OutboundUnTrustCertificate: {description: 'Outbound untrust certificate profile.

            ', title: Outbounduntrustcertificate, type: string}
        URLFilteringProfile:
          default: None
          description: 'URL filtering security profile.

            '
          enum: [custom, BestPractice, None]
          title: Urlfilteringprofile
          type: string
        VulnerabilityProfile:
          default: BestPractice
          description: 'Vulnerability security profile.

            '
          enum: [custom, BestPractice]
          title: Vulnerabilityprofile
          type: string
      title: RuleStackProfiles
      type: object
    UpdateRuleStackResponse:
      additionalProperties: false
      properties:
        Response: {$ref: '#/components/schemas/UpdateRuleStackResponse.ResponseData'}
        ResponseStatus: {$ref: '#/components/schemas/UpdateRuleStackResponse.Result'}
      title: UpdateRuleStackResponse
      type: object
    UpdateRuleStackResponse.ResponseData:
      additionalProperties: false
      properties:
        RuleStackEntry: {$ref: '#/components/schemas/UpdateRuleStackResponse.RuleStack',
          description: 'Describe whether the rulestack is local or global.

            '}
        RuleStackName: {description: 'Name of the rulestack.

            ', title: Rulestackname, type: string}
      title: ResponseData
      type: object
    UpdateRuleStackResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: "Default value of a successful response\
            \ is 0. Any other number indicates an error code.  \n\n400\u2014HTTP bad\
            \ request\n* InvalidRequestException\u2014Operation failed due to invalid\
            \ request. For example, unsupported parameter name or value in the request.\n\
            * LimitExceededException\u2014Operation failed due to violation in limit\
            \ settings.\n* ThrottlingException\u2014Operation failed due to throttling\
            \ limitations.   \n\n500\u2014Bad request \n* InternalServerError\u2014\
            Your request is valid but Cloud NGFW could not perform the operation due\
            \ to a system issue.\n", title: Errorcode, type: integer}
        Reason: {description: 'The error description.

            ', title: Reason, type: string}
      title: Result
      type: object
    UpdateRuleStackResponse.RuleStack:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', maxLength: 12, pattern: '^$|^[0-9]+$', title: Accountid, type: string}
        Description: {description: 'Description of the rulestack.

            ', maxLength: 512, title: Description, type: string}
        Profiles: {$ref: '#/components/schemas/UpdateRuleStackResponse.RuleStackProfiles',
          description: 'Rulestack profile.

            '}
        Scope:
          description: 'The scope of the rulestack.

            '
          enum: [Global, Local]
          title: Scope
          type: string
        UpdateToken: {description: 'Refresh token.

            ', title: Updatetoken, type: string}
      title: RuleStack
      type: object
    UpdateRuleStackResponse.RuleStackProfiles:
      additionalProperties: false
      properties:
        AntiSpywareProfile:
          default: BestPractice
          description: 'Anti-spyware security profile.

            '
          enum: [custom, BestPractice]
          title: Antispywareprofile
          type: string
        AntiVirusProfile:
          default: BestPractice
          description: 'Anti-virus security profile.

            '
          enum: [custom, BestPractice]
          title: Antivirusprofile
          type: string
        FileBlockingProfile:
          default: BestPractice
          description: 'File blocking security profile.

            '
          enum: [custom, BestPractice]
          title: Fileblockingprofile
          type: string
        OutboundTrustCertificate: {description: 'Outbound trust certificate profile.

            ', title: Outboundtrustcertificate, type: string}
        OutboundUnTrustCertificate: {description: 'Outbound untrust certificate profile.

            ', title: Outbounduntrustcertificate, type: string}
        URLFilteringProfile:
          default: None
          description: 'URL filtering security profile.

            '
          enum: [custom, BestPractice, None]
          title: Urlfilteringprofile
          type: string
        VulnerabilityProfile:
          default: BestPractice
          description: 'Vulnerability security profile.

            '
          enum: [custom, BestPractice]
          title: Vulnerabilityprofile
          type: string
      title: RuleStackProfiles
      type: object
info:
  contact: {}
  description: "Rulestacks defines access control (App-ID, URL Filtering) and threat\
    \ prevention behavior of Cloud NGFW resources. A rulestack includes a set of security\
    \ rules, associated objects, and profiles.\n\nA Cloud NGFW resource uses your\
    \ rulestack definitions to protect the traffic by a two-step process. First, it\
    \ enforces your rules on the to allow or deny your traffic. Second, it performs\
    \ content inspection on the allowed traffic based on what you specify on the Security\
    \ Profiles. \n\n### Permission Policies\n\n| Action                         |\
    \ Local Firewall Administrator  | Local Rulestack Administrator | Global Rulestack\
    \ Administrator |\n| ------------------------------ | :---------------------------:\
    \ | :---------------------------: | :----------------------------: |\n| Create\
    \ a Rulestack             | &#9744;                       | **&#9745;**      \
    \             | **&#9745;**                    | \n| Delete a Rulestack      \
    \       | &#9744;                       | **&#9745;**                   | **&#9745;**\
    \                    |                        \n| Describe a Rulestack       \
    \    | **&#9745;**                   | **&#9745;**                   | **&#9745;**\
    \                    |  \n| List Rulestacks                | **&#9745;**     \
    \              | **&#9745;**                   | **&#9745;**                 \
    \   |\n| Update a Rulestack             | &#9744;                       | **&#9745;**\
    \                   | **&#9745;**                    |\n"
  title: Manage Rulestacks
  version: 1.0.0
openapi: 3.0.3
paths:
  /v1/config/rulestacks:
    get:
      description: "Retrieve the metadata of the specified rulestack.  \n\nYou can\
        \ also query rulestacks based on the tags using this command, `/v1/config/rulestacks?tags=<string>`.\
        \   \nThis command lists the rulestacks where the tag name starts with the\
        \ string.  \n\n>DynamoDB supports this command, and should be implemented\
        \ as a library.\n"
      operationId: get-v1-config-rulestacks
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ListRuleStacksRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ListRuleStacksResponse'}
          description: OK
      summary: List RuleStack
      tags: [ManageRulestacks]
    post:
      description: 'Create a global or local rulestack. Global role affects only Global
        rulestacks and Local role affects only local rulestacks.

        '
      operationId: post-v1-config-rulestacks
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateRuleStackRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateRuleStackResponse'}
          description: OK
      summary: Create a RuleStack
      tags: [ManageRulestacks]
  /v1/config/rulestacks/{rulestackname}:
    delete:
      description: 'Delete a specific rulestack.

        '
      operationId: delete-v1-config-rulestacks-rulestackname
      parameters:
      - description: 'The name of the rulestack.

          '
        in: path
        name: rulestackname
        required: true
        schema: {type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteRuleStackRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteRuleStackResponse'}
          description: OK
      summary: Delete a RuleStack
      tags: [ManageRulestacks]
    get:
      description: 'Returns the data of the specific rulestack.

        '
      operationId: get-v1-config-rulestacks-rulestackname
      parameters:
      - description: 'The name of the rulestack.

          '
        in: path
        name: rulestackname
        required: true
        schema: {type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeRuleStackRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeRuleStackResponse'}
          description: OK
      summary: Describe a RuleStack
      tags: [ManageRulestacks]
    put:
      description: "Modify the rulestack.  \n\n>**Note:** You cannot update the scope\
        \ of the rulestack.\n"
      operationId: put-v1-config-rulestacks-rulestackname
      parameters:
      - description: 'The name of the rulestack.

          '
        in: path
        name: rulestackname
        required: true
        schema: {type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateRuleStackRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateRuleStackResponse'}
          description: OK
      summary: Update a RuleStack
      tags: [ManageRulestacks]
servers:
- {url: 'https://api.us-east-1.aws.cloudngfw.paloaltonetworks.com'}
tags:
- {name: ManageRulestacks}
