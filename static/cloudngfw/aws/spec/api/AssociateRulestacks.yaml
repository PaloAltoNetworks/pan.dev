components:
  schemas:
    AssociateGlobalRuleStackRequest:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the global rulestack account.

            ', title: Accountid, type: string}
        RuleStackName: {description: "Name of the global rulestack you want to associate\
            \ to NGFW. \n", maxLength: 128, minLength: 1, pattern: '^[a-zA-Z0-9-]+$',
          title: Rulestackname, type: string}
        UpdateToken: {description: "Refresh token. \n", title: Updatetoken, type: string}
      required: [RuleStackName, AccountId]
      title: AssociateGlobalRuleStackRequest
      type: object
    AssociateGlobalRuleStackResponse:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the global rulestack account.

            ', title: Accountid, type: string}
        FirewallName: {description: "Name of the NGFW, unique in a region for each\
            \ customer. \n", title: Firewallname, type: string}
        ResponseStatus: {$ref: '#/components/schemas/AssociateGlobalRuleStackResponse.Result',
          description: 'The API call response status.

            '}
        RuleStackName: {description: "Name of the global rulestack you want to associate\
            \ to NGFW. \n", title: Rulestackname, type: string}
        UpdateToken: {description: 'Refresh token.

            ', title: Updatetoken, type: string}
      title: AssociateGlobalRuleStackResponse
      type: object
    AssociateGlobalRuleStackResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: "Default value of a successful response\
            \ is 0. Any other number indicates an error code.  \n\n400\u2014HTTP bad\
            \ request\n* InvalidOperationException\u2014Operation failed because it\
            \ is not valid. For example, when you delete an NGFW or rulestack in use.\n\
            * InvalidRequestException\u2014Operation failed due to invalid request.\
            \ For example, unsupported parameter name or value in the request.\n*\
            \ LimitExceededException\u2014Operation failed due to violation in limit\
            \ settings.\n* ResourceNotFoundException\u2014Unable to locate a resource\
            \ using the parameters you provided.\n* ThrottlingException\u2014Operation\
            \ failed due to throttling limitations.   \n\n500\u2014Bad request \n\
            * InternalServerError\u2014Your request is valid but Cloud NGFW could\
            \ not perform the operation due to a system issue.\n", title: Errorcode,
          type: integer}
        Reason: {description: 'The error description

            ', title: Reason, type: string}
      title: Result
      type: object
    AssociateRuleStackRequest:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the local rulestack account.

            ', title: Accountid, type: string}
        RuleStackName: {description: "Name of the local rulestack you want to associate\
            \ to NGFW. \n", maxLength: 128, minLength: 1, pattern: '^[a-zA-Z0-9-]+$',
          title: Rulestackname, type: string}
        UpdateToken: {description: 'Refresh token.

            ', title: Updatetoken, type: string}
      required: [RuleStackName, AccountId]
      title: AssociateRuleStackRequest
      type: object
    AssociateRuleStackResponse:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the local rulestack account.

            ', title: Accountid, type: string}
        FirewallName: {description: "Name of the NGFW, unique in a region for each\
            \ customer. \n", title: Firewallname, type: string}
        ResponseStatus: {$ref: '#/components/schemas/AssociateRuleStackResponse.Result',
          description: 'The API call response status.

            '}
        RuleStackName: {description: "Name of the local rulestack you want to associate\
            \ to NGFW. \n", title: Rulestackname, type: string}
        UpdateToken: {description: 'Refresh token.

            ', title: Updatetoken, type: string}
      title: AssociateRuleStackResponse
      type: object
    AssociateRuleStackResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: "Default value of a successful response\
            \ is 0. Any other number indicates an error code.  \n\n400\u2014HTTP bad\
            \ request\n* InvalidOperationException\u2014Operation failed because it\
            \ is not valid. For example, when you delete an NGFW or rulestack in use.\n\
            * InvalidRequestException\u2014Operation failed due to invalid request.\
            \ For example, unsupported parameter name or value in the request.\n*\
            \ LimitExceededException\u2014Operation failed due to violation in limit\
            \ settings.\n* ResourceNotFoundException\u2014Unable to locate a resource\
            \ using the parameters you provided.\n* ThrottlingException\u2014Operation\
            \ failed due to throttling limitations.   \n\n500\u2014Bad request \n\
            * InternalServerError\u2014Your request is valid but Cloud NGFW could\
            \ not perform the operation due to a system issue.\n", title: Errorcode,
          type: integer}
        Reason: {description: 'The error description.

            ', title: Reason, type: string}
      title: Result
      type: object
info:
  contact: {}
  description: "There are two types of rulestacks:\n- **Local rulestack**-Consists\
    \ of local rules and manages them. A local account administrator can associate\
    \ local rulestacks to NGFW in their AWS account.\n- **Global rulestack**-The AWS\
    \ Firewall Manager administrator can author a Firewall Manager Service (FMS) policy\
    \ and associate a global rulestack with it. AWS Firewall Manager manages the global\
    \ rulestack across all these NGFWs in different AWS accounts of an AWS Organization.\
    \  \n\nA global rulestack configures pre-rules and post-rules on each NGFW. The\
    \ AWS Firewall Manager administrator can author a FMS policy and associate a global\
    \ rulestack with it. AWS Firewall Manager manages the global rulestack across\
    \ all these NGFWs in different AWS accounts in the AWS Organization. A global\
    \ rulestack configures pre-rules and post-rules on each NGFW.  \n\n>**Note:**\
    \ For FMS policy, there is no local firewall administrator. The local rulestack\
    \ administrator associates the local rulestacks to NGFW. If the FMS service handshake\
    \ is successful, any local firewall administrator call must be disabled, and the\
    \ local rulestack administrator can associate the local rulestack to NGFW.\n\n\
    >**Note:** The maximum local and global rulestacks you can create per subscription\
    \ is 10.  \n"
  title: Associate Rulestacks to NGFW
  version: 1.0.0
openapi: 3.0.3
paths:
  /v1/config/ngfirewalls/{ngfirewallname}/globalrulestack:
    put:
      description: 'Associate a global rulestack to an NGFW.

        '
      operationId: put-v1-config-ngfirewalls-ngfirewallname-globalrulestack
      parameters:
      - description: 'The name of the NGFW to which you want to associate the global
          rulestack.

          '
        in: path
        name: ngfirewallname
        required: true
        schema: {type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AssociateGlobalRuleStackRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AssociateGlobalRuleStackResponse'}
          description: OK
      summary: Associate a GlobalRuleStack
      tags: [AssociateRulestacks]
  /v1/config/ngfirewalls/{ngfirewallname}/rulestack:
    put:
      description: 'Associate a local rulestack to an NGFW.

        '
      operationId: put-v1-config-ngfirewalls-ngfirewallname-rulestack
      parameters:
      - description: 'The name of the NGFW to which you want to associate the local
          rulestack.

          '
        in: path
        name: ngfirewallname
        required: true
        schema: {type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AssociateRuleStackRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AssociateRuleStackResponse'}
          description: OK
      summary: Associate a RuleStack
      tags: [AssociateRulestacks]
servers:
- {url: 'https://api.us-east-1.aws.cloudngfw.paloaltonetworks.com'}
tags:
- {name: AssociateRulestacks}
