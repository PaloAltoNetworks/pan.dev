components:
  schemas:
    ReadFWResourceLogProfileRequest:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', title: Accountid, type: string}
      required: [AccountId]
      title: ReadFWResourceLogProfileRequest
      type: object
    ReadFWResourceLogProfileResponse:
      additionalProperties: false
      properties:
        Response: {$ref: '#/components/schemas/ReadFWResourceLogProfileResponse.ResponseData'}
        ResponseStatus: {$ref: '#/components/schemas/ReadFWResourceLogProfileResponse.Result'}
      title: ReadFWResourceLogProfileResponse
      type: object
    ReadFWResourceLogProfileResponse.LogProfileConfig:
      additionalProperties: false
      properties:
        LogDestination: {description: "The log destination details. Valid values are\
            \ names of:  \n* CloudWatch log group\u2014`LogDestination`:`panw-log-group`\n\
            * Kinesis Data Firehose delivery stream\u2014`LogDestination`:`panw-delivery-stream`\n\
            * Amazon S3 bucket\u2014`LogDestination`:`PANW-BUCKET`\n", title: Logdestination,
          type: string}
        LogDestinationType: {description: 'Specifies the type of log destination.
            The valid values are `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.

            ', title: Logdestinationtype, type: string}
        LogType: {description: 'Specifies the type of logs. The valid values are `TRAFFIC`,
            `THREAT`, `DESCRYPTION`.

            ', title: Logtype, type: string}
      required: [LogDestination, LogDestinationType, LogType]
      title: LogProfileConfig
      type: object
    ReadFWResourceLogProfileResponse.ResponseData:
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', title: Accountid, type: string}
        CloudWatchMetricNamespace: {description: 'The CloudWatch metrics container.

            ', title: Cloudwatchmetricnamespace, type: string}
        FirewallName: {description: 'Name of the NGFW.

            ', title: Firewallname, type: string}
        LogDestinationConfigs:
          description: 'Logging configuration of the NGFW.

            '
          items: {$ref: '#/components/schemas/ReadFWResourceLogProfileResponse.LogProfileConfig'}
          title: Logdestinationconfigs
          type: array
      title: ResponseData
      type: object
    ReadFWResourceLogProfileResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: "Default value of a successful response\
            \ is 0. Any other number indicates an error code.  \n", title: Errorcode,
          type: integer}
        Reason: {description: 'The error description.

            ', title: Reason, type: string}
      title: Result
      type: object
    UpdateFWResourceLogProfileRequest:
      additionalProperties: false
      properties:
        AccountId: {description: 'The unique ID of the account.

            ', title: Accountid, type: string}
        LogDestinationConfigs:
          description: 'Logging configuration of the NGFW.

            '
          items: {$ref: '#/components/schemas/UpdateFWResourceLogProfileRequest.LogProfileConfig'}
          title: Logdestinationconfigs
          type: array
      required: [LogDestinationConfigs]
      title: UpdateFWResourceLogProfileRequest
      type: object
    UpdateFWResourceLogProfileRequest.LogProfileConfig:
      additionalProperties: false
      properties:
        LogDestination: {description: "The log destination details. Valid values are\
            \ names of:  \n* CloudWatch log group\u2014`LogDestination`:`panw-log-group`\n\
            * Kinesis Data Firehose delivery stream\u2014`LogDestination`:`panw-delivery-stream`\n\
            * Amazon S3 bucket\u2014`LogDestination`:`PANW-BUCKET`\n", title: Logdestination,
          type: string}
        LogDestinationType: {description: 'Specifies the type of log destination.
            The valid values are `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.

            ', title: Logdestinationtype, type: string}
        LogType: {description: 'Specifies the type of logs. The valid values are `TRAFFIC`,
            `THREAT`, `DESCRYPTION`.

            ', title: Logtype, type: string}
      required: [LogDestination, LogDestinationType, LogType]
      title: LogProfileConfig
      type: object
    UpdateFWResourceLogProfileResponse:
      additionalProperties: false
      properties:
        Response: {$ref: '#/components/schemas/UpdateFWResourceLogProfileResponse.ResponseData'}
        ResponseStatus: {$ref: '#/components/schemas/UpdateFWResourceLogProfileResponse.Result'}
      title: UpdateFWResourceLogProfileResponse
      type: object
    UpdateFWResourceLogProfileResponse.LogProfileConfig:
      additionalProperties: false
      properties:
        LogDestination: {description: "The log destination details. Valid values are\
            \ names of:  \n* CloudWatch log group\u2014`LogDestination`:`panw-log-group`\n\
            * Kinesis Data Firehose delivery stream\u2014`LogDestination`:`panw-delivery-stream`\n\
            * Amazon S3 bucket\u2014`LogDestination`:`PANW-BUCKET`\n", title: Logdestination,
          type: string}
        LogDestinationType: {description: 'Specifies the type of log destination.
            The valid values are `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.

            ', title: Logdestinationtype, type: string}
        LogType: {description: 'Specifies the type of logs. The valid values are `TRAFFIC`,
            `THREAT`, `DESCRYPTION`.

            ', title: Logtype, type: string}
      required: [LogDestination, LogDestinationType, LogType]
      title: LogProfileConfig
      type: object
    UpdateFWResourceLogProfileResponse.ResponseData:
      properties:
        FirewallName: {description: 'Name of the NGFW.

            ', title: Firewallname, type: string}
        LogDestinationConfigs:
          description: 'Logging configuration of the NGFW.

            '
          items: {$ref: '#/components/schemas/UpdateFWResourceLogProfileResponse.LogProfileConfig'}
          title: Logdestinationconfigs
          type: array
      title: ResponseData
      type: object
    UpdateFWResourceLogProfileResponse.Result:
      additionalProperties: false
      properties:
        ErrorCode: {default: 0, description: 'Default value of a successful response
            is 0. Any other number indicates an error code.

            ', title: Errorcode, type: integer}
        Reason: {description: 'The error description.

            ', title: Reason, type: string}
      title: Result
      type: object
info:
  contact: {}
  description: "Log entries contain properties, activities, or behaviors associated\
    \ with the logged event, such as the application type or the IP address of an\
    \ attacker.  \n\nCloud NGFW can captures threat, traffic, and decryption profiles.\
    \ For more information, see [Configure logging for Cloud NGFW on AWS](https://docs.paloaltonetworks.com/cloud-ngfw/aws/cloud-ngfw-on-aws/create-cloud-ngfw-instances-and-endpoints/configure-logging-for-the-cloud-ngfw-on-aws).\n"
  title: Manage Log Profiles
  version: 1.0.0
openapi: 3.0.3
paths:
  /v1/config/ngfirewalls/{ngfirewallname}/logprofile:
    get:
      description: 'Return the logging configuration information of a specified NGFW.

        '
      operationId: get-v1-config-ngfirewalls-ngfirewallname-logprofile
      parameters:
      - description: 'The name of the NGFW.

          '
        in: path
        name: ngfirewallname
        required: true
        schema: {type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadFWResourceLogProfileRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadFWResourceLogProfileResponse'}
          description: OK
      summary: Read logprofile config of a firewall
      tags: [ManageLogProfiles]
    put:
      description: "Set the logging configuration of a specified NGFW.  \n"
      operationId: put-v1-config-ngfirewalls-ngfirewallname-logprofile
      parameters:
      - description: 'The name of the NGFW.

          '
        in: path
        name: ngfirewallname
        required: true
        schema: {type: string}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateFWResourceLogProfileRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateFWResourceLogProfileResponse'}
          description: OK
      summary: Update logprofile config of a firewall
      tags: [ManageLogProfiles]
servers:
- {url: 'https://api.us-east-1.aws.cloudngfw.paloaltonetworks.com'}
tags:
- {name: ManageLogProfiles}
